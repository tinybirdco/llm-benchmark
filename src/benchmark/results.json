[
  {
    "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.522083401,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 3.593,
      "requestId": "01JTFWST9X85ZWRV9GJAKCP65Z",
      "length": 517
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.605,
      "totalDuration": 2.496,
      "tokens": {
        "promptTokens": 4833,
        "completionTokens": 51,
        "totalTokens": 4884
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.522083401,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 3.593,
          "requestId": "01JTFWST9X85ZWRV9GJAKCP65Z",
          "length": 517
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.605,
          "totalDuration": 2.496,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 51,
            "totalTokens": 4884
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.182746725,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 2.232,
      "requestId": "01JTFWT1WSDZCME376JM8YB18C",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.106,
      "totalDuration": 1.691,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 51,
        "totalTokens": 4870
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.182746725,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 2.232,
          "requestId": "01JTFWT1WSDZCME376JM8YB18C",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.106,
          "totalDuration": 1.691,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 51,
            "totalTokens": 4870
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    CASE \n        WHEN push_size = 0 THEN '0'\n        WHEN push_size <= 10 THEN '1-10'\n        WHEN push_size <= 100 THEN '11-100'\n        WHEN push_size <= 1000 THEN '101-1000'\n        WHEN push_size <= 10000 THEN '1001-10000'\n        WHEN push_size <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY \n    CASE \n        WHEN push_size = 0 THEN '0'\n        WHEN push_size <= 10 THEN '1-10'\n        WHEN push_size <= 100 THEN '11-100'\n        WHEN push_size <= 1000 THEN '101-1000'\n        WHEN push_size <= 10000 THEN '1001-10000'\n        WHEN push_size <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END\nORDER BY star_range\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "star_range": "0",
          "repo_count": 16475278
        }
      ],
      "meta": [
        {
          "name": "star_range",
          "type": "String"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.03869491,
        "rows_read": 232190399,
        "bytes_read": 1625133330
      },
      "executionTime": 3.088,
      "requestId": "01JTFWTQ75FFDY2SJN3Y2DXQYK",
      "length": 42
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END\nORDER BY star_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN toUInt32(action) = 0 THEN '0'\n        WHEN toUInt32(action) <= 10 THEN '1-10'\n        WHEN toUInt32(action) <= 100 THEN '11-100'\n        WHEN toUInt32(action) <= 1000 THEN '101-1000'\n        WHEN toUInt32(action) <= 10000 THEN '1001-10000'\n        WHEN toUInt32(action) <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY star_range\nORDER BY star_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.653,
      "totalDuration": 4.253,
      "tokens": {
        "promptTokens": 5459,
        "completionTokens": 317,
        "totalTokens": 5776
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END\nORDER BY star_range\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTFWTB6WJ6NVWEGD8J0MHRYF",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT multiIf(stars = 0, '0', stars <= 10, '1-10', stars <= 100, '11-100', stars <= 1000, '101-1000', stars <= 10000, '1001-10000', stars <= 100000, '10001-100000', '100000+') AS star_range, countDistinct(repo_name) AS repo_count FROM github_llm_bench.github_events AS github_events WHERE event_type = 'WatchEvent' GROUP BY multiIf(stars = 0, '0', stars <= 10, '1-10', stars <= 100, '11-100', stars <= 1000, '101-1000', s",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.442,
          "totalDuration": 4.826,
          "tokens": {
            "promptTokens": 4836,
            "completionTokens": 293,
            "totalTokens": 5129
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    CASE \n        WHEN toUInt32(action) = 0 THEN '0'\n        WHEN toUInt32(action) <= 10 THEN '1-10'\n        WHEN toUInt32(action) <= 100 THEN '11-100'\n        WHEN toUInt32(action) <= 1000 THEN '101-1000'\n        WHEN toUInt32(action) <= 10000 THEN '1001-10000'\n        WHEN toUInt32(action) <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY star_range\nORDER BY star_range\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.035,
          "requestId": "01JTFWTGJ27XSAT1STAKXK16BJ",
          "error": "{\"error\": \"[Error] Cannot parse string 'started' as UInt32: syntax error at begin of string. Note: there are toUInt32OrZero and toUInt32OrNull functions, which returns zero/NULL instead of throwing exception.: while executing 'FUNCTION toUInt32(__table1.action :: 0) -> toUInt32(__table1.action) LowCardinality(UInt32) : 15'. (CANNOT_PARSE_TEXT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END\nORDER BY star_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.675,
          "totalDuration": 2.957,
          "tokens": {
            "promptTokens": 5188,
            "completionTokens": 213,
            "totalTokens": 5401
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    CASE \n        WHEN push_size = 0 THEN '0'\n        WHEN push_size <= 10 THEN '1-10'\n        WHEN push_size <= 100 THEN '11-100'\n        WHEN push_size <= 1000 THEN '101-1000'\n        WHEN push_size <= 10000 THEN '1001-10000'\n        WHEN push_size <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY \n    CASE \n        WHEN push_size = 0 THEN '0'\n        WHEN push_size <= 10 THEN '1-10'\n        WHEN push_size <= 100 THEN '11-100'\n        WHEN push_size <= 1000 THEN '101-1000'\n        WHEN push_size <= 10000 THEN '1001-10000'\n        WHEN push_size <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END\nORDER BY star_range\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "star_range": "0",
              "repo_count": 16475278
            }
          ],
          "meta": [
            {
              "name": "star_range",
              "type": "String"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.03869491,
            "rows_read": 232190399,
            "bytes_read": 1625133330
          },
          "executionTime": 3.088,
          "requestId": "01JTFWTQ75FFDY2SJN3Y2DXQYK",
          "length": 42
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars <= 10 THEN '1-10'\n        WHEN stars <= 100 THEN '11-100'\n        WHEN stars <= 1000 THEN '101-1000'\n        WHEN stars <= 10000 THEN '1001-10000'\n        WHEN stars <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END\nORDER BY star_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN toUInt32(action) = 0 THEN '0'\n        WHEN toUInt32(action) <= 10 THEN '1-10'\n        WHEN toUInt32(action) <= 100 THEN '11-100'\n        WHEN toUInt32(action) <= 1000 THEN '101-1000'\n        WHEN toUInt32(action) <= 10000 THEN '1001-10000'\n        WHEN toUInt32(action) <= 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY star_range\nORDER BY star_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.653,
          "totalDuration": 4.253,
          "tokens": {
            "promptTokens": 5459,
            "completionTokens": 317,
            "totalTokens": 5776
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  COUNT(DISTINCT repo_name) as total_repos\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_repos": 165611259
        }
      ],
      "meta": [
        {
          "name": "total_repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.354304323,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.373,
      "requestId": "01JTFWTXXSBF51YV9MA1EQ6SMW",
      "length": 27
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.636,
      "totalDuration": 1.306,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 29,
        "totalTokens": 4848
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  COUNT(DISTINCT repo_name) as total_repos\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_repos": 165611259
            }
          ],
          "meta": [
            {
              "name": "total_repos",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.354304323,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.373,
          "requestId": "01JTFWTXXSBF51YV9MA1EQ6SMW",
          "length": 27
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.636,
          "totalDuration": 1.306,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 29,
            "totalTokens": 4848
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    toYear(created_at) as year,\n    repo_name,\n    count(*) as events_count\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY year, repo_name\nHAVING events_count >= 1000\nORDER BY year ASC, events_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo_name": "direwolf-github/my-app",
          "events_count": 659546
        },
        {
          "year": 2015,
          "repo_name": "KenanSulayman/heartbeat",
          "events_count": 510424
        },
        {
          "year": 2015,
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "events_count": 310733
        },
        {
          "year": 2015,
          "repo_name": "sakai-mirror/melete",
          "events_count": 256758
        },
        {
          "year": 2015,
          "repo_name": "Door43/d43-en",
          "events_count": 226907
        },
        {
          "year": 2015,
          "repo_name": "apache/spark",
          "events_count": 223230
        },
        {
          "year": 2015,
          "repo_name": "CodePipeline-Test/feature-tests",
          "events_count": 189974
        },
        {
          "year": 2015,
          "repo_name": "dchekhonin/testDM",
          "events_count": 151983
        },
        {
          "year": 2015,
          "repo_name": "docker/docker",
          "events_count": 132956
        },
        {
          "year": 2015,
          "repo_name": "kubernetes/kubernetes",
          "events_count": 129690
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "events_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 63.445759004,
        "rows_read": 2843662884,
        "bytes_read": 17048892505
      },
      "executionTime": 63.494,
      "requestId": "01JTFWVX3955KMY78V63EWAPZ1",
      "length": 719
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 3.779,
      "totalDuration": 5.017,
      "tokens": {
        "promptTokens": 4827,
        "completionTokens": 85,
        "totalTokens": 4912
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    toYear(created_at) as year,\n    repo_name,\n    count(*) as events_count\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY year, repo_name\nHAVING events_count >= 1000\nORDER BY year ASC, events_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2015,
              "repo_name": "direwolf-github/my-app",
              "events_count": 659546
            },
            {
              "year": 2015,
              "repo_name": "KenanSulayman/heartbeat",
              "events_count": 510424
            },
            {
              "year": 2015,
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "events_count": 310733
            },
            {
              "year": 2015,
              "repo_name": "sakai-mirror/melete",
              "events_count": 256758
            },
            {
              "year": 2015,
              "repo_name": "Door43/d43-en",
              "events_count": 226907
            },
            {
              "year": 2015,
              "repo_name": "apache/spark",
              "events_count": 223230
            },
            {
              "year": 2015,
              "repo_name": "CodePipeline-Test/feature-tests",
              "events_count": 189974
            },
            {
              "year": 2015,
              "repo_name": "dchekhonin/testDM",
              "events_count": 151983
            },
            {
              "year": 2015,
              "repo_name": "docker/docker",
              "events_count": 132956
            },
            {
              "year": 2015,
              "repo_name": "kubernetes/kubernetes",
              "events_count": 129690
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "events_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 63.445759004,
            "rows_read": 2843662884,
            "bytes_read": 17048892505
          },
          "executionTime": 63.494,
          "requestId": "01JTFWVX3955KMY78V63EWAPZ1",
          "length": 719
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 3.779,
          "totalDuration": 5.017,
          "tokens": {
            "promptTokens": 4827,
            "completionTokens": 85,
            "totalTokens": 4912
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    toStartOfDay(created_at) as day,\n    countState(actor_login) as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nGROUP BY day\nORDER BY day DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day": "2020-12-06 00:00:00",
          "stars": "�\u0005"
        },
        {
          "day": "2020-12-05 00:00:00",
          "stars": "�\u0006"
        },
        {
          "day": "2020-12-04 00:00:00",
          "stars": "�\t"
        },
        {
          "day": "2020-12-03 00:00:00",
          "stars": "�\t"
        },
        {
          "day": "2020-12-02 00:00:00",
          "stars": "�\t"
        },
        {
          "day": "2020-12-01 00:00:00",
          "stars": "�\t"
        },
        {
          "day": "2020-11-30 00:00:00",
          "stars": "�\t"
        },
        {
          "day": "2020-11-29 00:00:00",
          "stars": "�\u0006"
        },
        {
          "day": "2020-11-28 00:00:00",
          "stars": "�\u0006"
        },
        {
          "day": "2020-11-27 00:00:00",
          "stars": "�\b"
        }
      ],
      "meta": [
        {
          "name": "day",
          "type": "DateTime"
        },
        {
          "name": "stars",
          "type": "AggregateFunction(count, String)"
        }
      ],
      "statistics": {
        "elapsed": 2.386729842,
        "rows_read": 232190399,
        "bytes_read": 1857523192
      },
      "executionTime": 2.405,
      "requestId": "01JTFWY4F3HHFJEGCAD8J1FBSF",
      "length": 457
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 5.854,
      "totalDuration": 7.114,
      "tokens": {
        "promptTokens": 4823,
        "completionTokens": 71,
        "totalTokens": 4894
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    toStartOfDay(created_at) as day,\n    countState(actor_login) as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nGROUP BY day\nORDER BY day DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day": "2020-12-06 00:00:00",
              "stars": "�\u0005"
            },
            {
              "day": "2020-12-05 00:00:00",
              "stars": "�\u0006"
            },
            {
              "day": "2020-12-04 00:00:00",
              "stars": "�\t"
            },
            {
              "day": "2020-12-03 00:00:00",
              "stars": "�\t"
            },
            {
              "day": "2020-12-02 00:00:00",
              "stars": "�\t"
            },
            {
              "day": "2020-12-01 00:00:00",
              "stars": "�\t"
            },
            {
              "day": "2020-11-30 00:00:00",
              "stars": "�\t"
            },
            {
              "day": "2020-11-29 00:00:00",
              "stars": "�\u0006"
            },
            {
              "day": "2020-11-28 00:00:00",
              "stars": "�\u0006"
            },
            {
              "day": "2020-11-27 00:00:00",
              "stars": "�\b"
            }
          ],
          "meta": [
            {
              "name": "day",
              "type": "DateTime"
            },
            {
              "name": "stars",
              "type": "AggregateFunction(count, String)"
            }
          ],
          "statistics": {
            "elapsed": 2.386729842,
            "rows_read": 232190399,
            "bytes_read": 1857523192
          },
          "executionTime": 2.405,
          "requestId": "01JTFWY4F3HHFJEGCAD8J1FBSF",
          "length": 457
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 5.854,
          "totalDuration": 7.114,
          "tokens": {
            "promptTokens": 4823,
            "completionTokens": 71,
            "totalTokens": 4894
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "stars_given": 232492
        },
        {
          "actor_login": "salifm",
          "stars_given": 202534
        },
        {
          "actor_login": "x0rzkov",
          "stars_given": 73531
        },
        {
          "actor_login": "fly51fly",
          "stars_given": 57756
        },
        {
          "actor_login": "PCOffline",
          "stars_given": 56725
        },
        {
          "actor_login": "baslr",
          "stars_given": 50363
        },
        {
          "actor_login": "gkze",
          "stars_given": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "stars_given": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "stars_given": 44715
        },
        {
          "actor_login": "mcanthony",
          "stars_given": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_given",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.561811248,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 5.606,
      "requestId": "01JTFWYBF9JY03HJERRCJTNXHV",
      "length": 470
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.392,
      "totalDuration": 2.242,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 65,
        "totalTokens": 4887
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "stars_given": 232492
            },
            {
              "actor_login": "salifm",
              "stars_given": 202534
            },
            {
              "actor_login": "x0rzkov",
              "stars_given": 73531
            },
            {
              "actor_login": "fly51fly",
              "stars_given": 57756
            },
            {
              "actor_login": "PCOffline",
              "stars_given": 56725
            },
            {
              "actor_login": "baslr",
              "stars_given": 50363
            },
            {
              "actor_login": "gkze",
              "stars_given": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "stars_given": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "stars_given": 44715
            },
            {
              "actor_login": "mcanthony",
              "stars_given": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_given",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.561811248,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 5.606,
          "requestId": "01JTFWYBF9JY03HJERRCJTNXHV",
          "length": 470
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.392,
          "totalDuration": 2.242,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 65,
            "totalTokens": 4887
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = 'freecodecamp/freecodecamp'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.745646637,
        "rows_read": 232317017,
        "bytes_read": 696924366
      },
      "executionTime": 1.765,
      "requestId": "01JTFWYNK9H7X9T6408S9ZE4D6",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.754,
      "totalDuration": 2.283,
      "tokens": {
        "promptTokens": 4842,
        "completionTokens": 116,
        "totalTokens": 4958
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = 'freecodecamp/freecodecamp'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.745646637,
            "rows_read": 232317017,
            "bytes_read": 696924366
          },
          "executionTime": 1.765,
          "requestId": "01JTFWYNK9H7X9T6408S9ZE4D6",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.754,
          "totalDuration": 2.283,
          "tokens": {
            "promptTokens": 4842,
            "completionTokens": 116,
            "totalTokens": 4958
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as stars_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE actor_login = 'javisantana'\n        AND event_type = 'WatchEvent'\n    )\n    AND actor_login != 'javisantana'\nGROUP BY actor_login\nORDER BY stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "baslr",
          "stars_count": 1214
        },
        {
          "actor_login": "Sinsoft",
          "stars_count": 43
        },
        {
          "actor_login": "fang130tao",
          "stars_count": 36
        },
        {
          "actor_login": "sjonnet19",
          "stars_count": 36
        },
        {
          "actor_login": "ogoudron",
          "stars_count": 33
        },
        {
          "actor_login": "willmcgugan",
          "stars_count": 31
        },
        {
          "actor_login": "cleonildo",
          "stars_count": 30
        },
        {
          "actor_login": "xavierdutreilh",
          "stars_count": 25
        },
        {
          "actor_login": "lengyunliu",
          "stars_count": 21
        },
        {
          "actor_login": "exitNA",
          "stars_count": 21
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.610998707,
        "rows_read": 235571088,
        "bytes_read": 478067227
      },
      "executionTime": 1.631,
      "requestId": "01JTFWYW00S34E2VZ2Q3X5J1QD",
      "length": 452
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.342,
      "totalDuration": 2.284,
      "tokens": {
        "promptTokens": 4827,
        "completionTokens": 126,
        "totalTokens": 4953
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as stars_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE actor_login = 'javisantana'\n        AND event_type = 'WatchEvent'\n    )\n    AND actor_login != 'javisantana'\nGROUP BY actor_login\nORDER BY stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "baslr",
              "stars_count": 1214
            },
            {
              "actor_login": "Sinsoft",
              "stars_count": 43
            },
            {
              "actor_login": "fang130tao",
              "stars_count": 36
            },
            {
              "actor_login": "sjonnet19",
              "stars_count": 36
            },
            {
              "actor_login": "ogoudron",
              "stars_count": 33
            },
            {
              "actor_login": "willmcgugan",
              "stars_count": 31
            },
            {
              "actor_login": "cleonildo",
              "stars_count": 30
            },
            {
              "actor_login": "xavierdutreilh",
              "stars_count": 25
            },
            {
              "actor_login": "lengyunliu",
              "stars_count": 21
            },
            {
              "actor_login": "exitNA",
              "stars_count": 21
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.610998707,
            "rows_read": 235571088,
            "bytes_read": 478067227
          },
          "executionTime": 1.631,
          "requestId": "01JTFWYW00S34E2VZ2Q3X5J1QD",
          "length": 452
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.342,
          "totalDuration": 2.284,
          "tokens": {
            "promptTokens": 4827,
            "completionTokens": 126,
            "totalTokens": 4953
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    repo_name,\n    count(*) as contributions\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freeCodeCamp/freeCodeCamp'\n    GROUP BY actor_login\n    ORDER BY count(*) DESC\n    LIMIT 10\n)\nAND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY actor_login, repo_name\nORDER BY actor_login, contributions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Codewars",
          "contributions": 491
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/MyFreeCodeCamp",
          "contributions": 377
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/FreeCodeCamp",
          "contributions": 275
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/CodeAcademy",
          "contributions": 211
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "contributions": 202
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Leetcode",
          "contributions": 141
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Complete-NodeJS-Developer-Course",
          "contributions": 99
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/HackerRank",
          "contributions": 75
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/JavaScript-and-jQuery",
          "contributions": 61
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Ziplines-shared",
          "contributions": 54
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 7.684409943,
        "rows_read": 3127516010,
        "bytes_read": 6287151277
      },
      "executionTime": 7.734,
      "requestId": "01JTFWZ5FVK0782HT4MVS40JD1",
      "length": 911
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 3.734,
      "totalDuration": 5.563,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 137,
        "totalTokens": 4967
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    repo_name,\n    count(*) as contributions\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freeCodeCamp/freeCodeCamp'\n    GROUP BY actor_login\n    ORDER BY count(*) DESC\n    LIMIT 10\n)\nAND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY actor_login, repo_name\nORDER BY actor_login, contributions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Codewars",
              "contributions": 491
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/MyFreeCodeCamp",
              "contributions": 377
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/FreeCodeCamp",
              "contributions": 275
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/CodeAcademy",
              "contributions": 211
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "contributions": 202
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Leetcode",
              "contributions": 141
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Complete-NodeJS-Developer-Course",
              "contributions": 99
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/HackerRank",
              "contributions": 75
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/JavaScript-and-jQuery",
              "contributions": 61
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Ziplines-shared",
              "contributions": 54
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 7.684409943,
            "rows_read": 3127516010,
            "bytes_read": 6287151277
          },
          "executionTime": 7.734,
          "requestId": "01JTFWZ5FVK0782HT4MVS40JD1",
          "length": 911
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 3.734,
          "totalDuration": 5.563,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 137,
            "totalTokens": 4967
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    groupArray(10)(DISTINCT repo_name) AS other_repos,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent'\n        AND repo_name = 'freeCodeCamp/freeCodeCamp'\n    )\nGROUP BY actor_login\nORDER BY repo_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot-preview[bot]",
          "other_repos": [
            "data61/blocklib",
            "project-ncl/repour",
            "a-usov/gutennis-netlify",
            "python-gino/gino-tornado",
            "romainromss/todolist",
            "pivotal/skenario",
            "jean9696/gatsby-typescript-template",
            "camptocamp/es-ooms-exporter",
            "SuperPi-Home/client",
            "AmanoTeam/EduuRobot"
          ],
          "repo_count": 10594
        },
        {
          "actor_login": "dandv",
          "other_repos": [
            "alannsp/5-stars-rating-widget-using-CSS",
            "Polymer/app-drawer-template",
            "peerlibrary/meteor-pdf.js",
            "eslint/eslint",
            "jim618/multibit",
            "RolandBanguiran/highstock-zoom-out-selection",
            "davidd8/meteor-external-file-loader",
            "leonidkozhukh/LigerTail",
            "mafintosh/mongojs",
            "PharbersDeveloper/pharbers-design"
          ],
          "repo_count": 1812
        },
        {
          "actor_login": "gromovadarya90",
          "other_repos": [
            "leisurelicht/wtfpython-cn",
            "emberjs/ember.js",
            "FriendsOfPHP/PHP-CS-Fixer",
            "google-research/bert",
            "Tencent/rapidjson",
            "alibaba/tengine",
            "vsouza/awesome-ios",
            "forezp/SpringCloudLearning",
            "jobbole/awesome-java-cn",
            "addyosmani/backbone-fundamentals"
          ],
          "repo_count": 701
        },
        {
          "actor_login": "matkoniecz",
          "other_repos": [
            "pelias/pelias",
            "thearn/examgen",
            "Pale-Moon-Addons-Team/adblock-latitude",
            "whosonfirst-data/whosonfirst-data",
            "OpenOrienteering/mapper",
            "jamesmilanhiggins/Google-Flights",
            "backup/backup",
            "simonpoole/OpeningHoursParser",
            "Jungle-Bus/transport_mapcss",
            "simonpoole/OpeningHoursFragment"
          ],
          "repo_count": 511
        },
        {
          "actor_login": "steelbrain",
          "other_repos": [
            "Aluxian/WhatsApp-Desktop",
            "AtomLinter/linter-tslint",
            "steelbrain/pundle",
            "mishoo/UglifyJS2",
            "eslint/eslint",
            "steelbrain/websocket-promise",
            "tristen/hoverintent",
            "steelbrain/fs",
            "facebook/hhvm",
            "steelbrain/Happy-DB"
          ],
          "repo_count": 423
        },
        {
          "actor_login": "tommygebru",
          "other_repos": [
            "ppinedag07/Capstone",
            "ctgrahame/tea-cozy",
            "Jianavel/Colmar-Project",
            "SebaMG/prj-rev-bwfs-dasmoto",
            "Shealav/Capstone-Colmar",
            "tommygebru/review-dasmotos",
            "WalrusPrince16/ColmarAcademy",
            "mxjack/prj-rev-bwfs-dasmoto",
            "Jennyp717/prj-rev-bwfs-dasmoto",
            "hagecreative/ColmarAcademy"
          ],
          "repo_count": 359
        },
        {
          "actor_login": "eddiejaoude",
          "other_repos": [
            "WeRockTech/ethicsandtech.github.io",
            "cnak/transform-dashboard",
            "eddiejaoude/eecrm",
            "kiwitcms/kiwitcms.github.io",
            "juriansluiman/SlmQueueDoctrine",
            "codemortals/code-parody",
            "TransformCore/elasticsearch-sandbox",
            "SamsungInternet/samsunginternet.github.io",
            "yalematta/yalematta",
            "codemortals/codemortals.github.io"
          ],
          "repo_count": 344
        },
        {
          "actor_login": "danielo515",
          "other_repos": [
            "hapijs/lab",
            "microsoft/vscode-pull-request-github",
            "Andarist/pipeline.macro",
            "xinthink/action-telegram",
            "conventional-changelog/conventional-changelog",
            "aviaryan/Clipjump",
            "github-tools/github",
            "senecajs/seneca-joi",
            "cg-cnu/vscode-remind-me",
            "Zaid-Ajaj/fsharp-weekly"
          ],
          "repo_count": 336
        },
        {
          "actor_login": "xgqfrms",
          "other_repos": [
            "xgqfrms/learn-javascript-with-mdn",
            "tj/vscode-snippets",
            "xgqfrms/hui-templates",
            "xgqfrms/you-do-not-know-github",
            "xgqfrms/wkwebview-jsbridge",
            "numbbbbb/the-swift-programming-language-in-chinese",
            "babel/babel",
            "xgqfrms/svg-tutorials",
            "facebook/react",
            "nodejs/node"
          ],
          "repo_count": 262
        },
        {
          "actor_login": "TheJaredWilcurt",
          "other_repos": [
            "Axel--/Naut-for-reddit",
            "sass/sassc",
            "sequelize/sequelize",
            "nwjs/nw.js",
            "babel/babel",
            "red-perfume/red-perfume.github.io",
            "NodeOS/NodeOS",
            "Mango/ocssipital",
            "cerebral/webpackbin",
            "SassConf/sassconf.github.io"
          ],
          "repo_count": 247
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "other_repos",
          "type": "Array(String)"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.461902854,
        "rows_read": 111610728,
        "bytes_read": 468485830
      },
      "executionTime": 0.484,
      "requestId": "01JTFWZJE902RM4G4EMM52R5MY",
      "length": 3266
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.029,
      "totalDuration": 3.051,
      "tokens": {
        "promptTokens": 4833,
        "completionTokens": 138,
        "totalTokens": 4971
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    groupArray(10)(DISTINCT repo_name) AS other_repos,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent'\n        AND repo_name = 'freeCodeCamp/freeCodeCamp'\n    )\nGROUP BY actor_login\nORDER BY repo_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot-preview[bot]",
              "other_repos": [
                "data61/blocklib",
                "project-ncl/repour",
                "a-usov/gutennis-netlify",
                "python-gino/gino-tornado",
                "romainromss/todolist",
                "pivotal/skenario",
                "jean9696/gatsby-typescript-template",
                "camptocamp/es-ooms-exporter",
                "SuperPi-Home/client",
                "AmanoTeam/EduuRobot"
              ],
              "repo_count": 10594
            },
            {
              "actor_login": "dandv",
              "other_repos": [
                "alannsp/5-stars-rating-widget-using-CSS",
                "Polymer/app-drawer-template",
                "peerlibrary/meteor-pdf.js",
                "eslint/eslint",
                "jim618/multibit",
                "RolandBanguiran/highstock-zoom-out-selection",
                "davidd8/meteor-external-file-loader",
                "leonidkozhukh/LigerTail",
                "mafintosh/mongojs",
                "PharbersDeveloper/pharbers-design"
              ],
              "repo_count": 1812
            },
            {
              "actor_login": "gromovadarya90",
              "other_repos": [
                "leisurelicht/wtfpython-cn",
                "emberjs/ember.js",
                "FriendsOfPHP/PHP-CS-Fixer",
                "google-research/bert",
                "Tencent/rapidjson",
                "alibaba/tengine",
                "vsouza/awesome-ios",
                "forezp/SpringCloudLearning",
                "jobbole/awesome-java-cn",
                "addyosmani/backbone-fundamentals"
              ],
              "repo_count": 701
            },
            {
              "actor_login": "matkoniecz",
              "other_repos": [
                "pelias/pelias",
                "thearn/examgen",
                "Pale-Moon-Addons-Team/adblock-latitude",
                "whosonfirst-data/whosonfirst-data",
                "OpenOrienteering/mapper",
                "jamesmilanhiggins/Google-Flights",
                "backup/backup",
                "simonpoole/OpeningHoursParser",
                "Jungle-Bus/transport_mapcss",
                "simonpoole/OpeningHoursFragment"
              ],
              "repo_count": 511
            },
            {
              "actor_login": "steelbrain",
              "other_repos": [
                "Aluxian/WhatsApp-Desktop",
                "AtomLinter/linter-tslint",
                "steelbrain/pundle",
                "mishoo/UglifyJS2",
                "eslint/eslint",
                "steelbrain/websocket-promise",
                "tristen/hoverintent",
                "steelbrain/fs",
                "facebook/hhvm",
                "steelbrain/Happy-DB"
              ],
              "repo_count": 423
            },
            {
              "actor_login": "tommygebru",
              "other_repos": [
                "ppinedag07/Capstone",
                "ctgrahame/tea-cozy",
                "Jianavel/Colmar-Project",
                "SebaMG/prj-rev-bwfs-dasmoto",
                "Shealav/Capstone-Colmar",
                "tommygebru/review-dasmotos",
                "WalrusPrince16/ColmarAcademy",
                "mxjack/prj-rev-bwfs-dasmoto",
                "Jennyp717/prj-rev-bwfs-dasmoto",
                "hagecreative/ColmarAcademy"
              ],
              "repo_count": 359
            },
            {
              "actor_login": "eddiejaoude",
              "other_repos": [
                "WeRockTech/ethicsandtech.github.io",
                "cnak/transform-dashboard",
                "eddiejaoude/eecrm",
                "kiwitcms/kiwitcms.github.io",
                "juriansluiman/SlmQueueDoctrine",
                "codemortals/code-parody",
                "TransformCore/elasticsearch-sandbox",
                "SamsungInternet/samsunginternet.github.io",
                "yalematta/yalematta",
                "codemortals/codemortals.github.io"
              ],
              "repo_count": 344
            },
            {
              "actor_login": "danielo515",
              "other_repos": [
                "hapijs/lab",
                "microsoft/vscode-pull-request-github",
                "Andarist/pipeline.macro",
                "xinthink/action-telegram",
                "conventional-changelog/conventional-changelog",
                "aviaryan/Clipjump",
                "github-tools/github",
                "senecajs/seneca-joi",
                "cg-cnu/vscode-remind-me",
                "Zaid-Ajaj/fsharp-weekly"
              ],
              "repo_count": 336
            },
            {
              "actor_login": "xgqfrms",
              "other_repos": [
                "xgqfrms/learn-javascript-with-mdn",
                "tj/vscode-snippets",
                "xgqfrms/hui-templates",
                "xgqfrms/you-do-not-know-github",
                "xgqfrms/wkwebview-jsbridge",
                "numbbbbb/the-swift-programming-language-in-chinese",
                "babel/babel",
                "xgqfrms/svg-tutorials",
                "facebook/react",
                "nodejs/node"
              ],
              "repo_count": 262
            },
            {
              "actor_login": "TheJaredWilcurt",
              "other_repos": [
                "Axel--/Naut-for-reddit",
                "sass/sassc",
                "sequelize/sequelize",
                "nwjs/nw.js",
                "babel/babel",
                "red-perfume/red-perfume.github.io",
                "NodeOS/NodeOS",
                "Mango/ocssipital",
                "cerebral/webpackbin",
                "SassConf/sassconf.github.io"
              ],
              "repo_count": 247
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "other_repos",
              "type": "Array(String)"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.461902854,
            "rows_read": 111610728,
            "bytes_read": 468485830
          },
          "executionTime": 0.484,
          "requestId": "01JTFWZJE902RM4G4EMM52R5MY",
          "length": 3266
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.029,
          "totalDuration": 3.051,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 138,
            "totalTokens": 4971
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 DAY\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003340762,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.023,
      "requestId": "01JTFWZQ1TDD4FQN0C73MS2CY7",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.704,
      "totalDuration": 1.737,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 69,
        "totalTokens": 4894
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 DAY\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003340762,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.023,
          "requestId": "01JTFWZQ1TDD4FQN0C73MS2CY7",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.704,
          "totalDuration": 1.737,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 69,
            "totalTokens": 4894
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2019) as stars_2019,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2020) as stars_2020,\n    round((stars_2020 - stars_2019) / stars_2019 * 100, 2) as growth_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) \n    AND event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2019 >= 100\nORDER BY growth_percentage DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Light-City/CPlusPlusThings",
          "stars_2019": 106,
          "stars_2020": 8782,
          "growth_percentage": 8184.91
        },
        {
          "repo_name": "DoctorWkt/acwj",
          "stars_2019": 122,
          "stars_2020": 4593,
          "growth_percentage": 3664.75
        },
        {
          "repo_name": "geektutu/7days-golang",
          "stars_2019": 164,
          "stars_2020": 5621,
          "growth_percentage": 3327.44
        },
        {
          "repo_name": "meilisearch/MeiliSearch",
          "stars_2019": 321,
          "stars_2020": 10081,
          "growth_percentage": 3040.5
        },
        {
          "repo_name": "miragejs/miragejs",
          "stars_2019": 107,
          "stars_2020": 3334,
          "growth_percentage": 3015.89
        },
        {
          "repo_name": "rxi/lite",
          "stars_2019": 144,
          "stars_2020": 4193,
          "growth_percentage": 2811.81
        },
        {
          "repo_name": "plotly/falcon",
          "stars_2019": 139,
          "stars_2020": 3904,
          "growth_percentage": 2708.63
        },
        {
          "repo_name": "jindaxiang/akshare",
          "stars_2019": 106,
          "stars_2020": 2568,
          "growth_percentage": 2322.64
        },
        {
          "repo_name": "creativetimofficial/tailwind-starter-kit",
          "stars_2019": 120,
          "stars_2020": 2577,
          "growth_percentage": 2047.5
        },
        {
          "repo_name": "twbs/icons",
          "stars_2019": 179,
          "stars_2020": 3808,
          "growth_percentage": 2027.37
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_2019",
          "type": "UInt64"
        },
        {
          "name": "stars_2020",
          "type": "UInt64"
        },
        {
          "name": "growth_percentage",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.668886563,
        "rows_read": 91998350,
        "bytes_read": 643906549
      },
      "executionTime": 0.691,
      "requestId": "01JTFWZWSFDHCZJMMB0H4N9DEC",
      "length": 990
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.933,
      "totalDuration": 3.353,
      "tokens": {
        "promptTokens": 4833,
        "completionTokens": 183,
        "totalTokens": 5016
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2019) as stars_2019,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2020) as stars_2020,\n    round((stars_2020 - stars_2019) / stars_2019 * 100, 2) as growth_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) \n    AND event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2019 >= 100\nORDER BY growth_percentage DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Light-City/CPlusPlusThings",
              "stars_2019": 106,
              "stars_2020": 8782,
              "growth_percentage": 8184.91
            },
            {
              "repo_name": "DoctorWkt/acwj",
              "stars_2019": 122,
              "stars_2020": 4593,
              "growth_percentage": 3664.75
            },
            {
              "repo_name": "geektutu/7days-golang",
              "stars_2019": 164,
              "stars_2020": 5621,
              "growth_percentage": 3327.44
            },
            {
              "repo_name": "meilisearch/MeiliSearch",
              "stars_2019": 321,
              "stars_2020": 10081,
              "growth_percentage": 3040.5
            },
            {
              "repo_name": "miragejs/miragejs",
              "stars_2019": 107,
              "stars_2020": 3334,
              "growth_percentage": 3015.89
            },
            {
              "repo_name": "rxi/lite",
              "stars_2019": 144,
              "stars_2020": 4193,
              "growth_percentage": 2811.81
            },
            {
              "repo_name": "plotly/falcon",
              "stars_2019": 139,
              "stars_2020": 3904,
              "growth_percentage": 2708.63
            },
            {
              "repo_name": "jindaxiang/akshare",
              "stars_2019": 106,
              "stars_2020": 2568,
              "growth_percentage": 2322.64
            },
            {
              "repo_name": "creativetimofficial/tailwind-starter-kit",
              "stars_2019": 120,
              "stars_2020": 2577,
              "growth_percentage": 2047.5
            },
            {
              "repo_name": "twbs/icons",
              "stars_2019": 179,
              "stars_2020": 3808,
              "growth_percentage": 2027.37
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_2019",
              "type": "UInt64"
            },
            {
              "name": "stars_2020",
              "type": "UInt64"
            },
            {
              "name": "growth_percentage",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.668886563,
            "rows_read": 91998350,
            "bytes_read": 643906549
          },
          "executionTime": 0.691,
          "requestId": "01JTFWZWSFDHCZJMMB0H4N9DEC",
          "length": 990
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.933,
          "totalDuration": 3.353,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 183,
            "totalTokens": 5016
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'PushEvent' AND toYear(created_at) = 2019) as pushes_2019,\n    countIf(event_type = 'PushEvent' AND toYear(created_at) = 2020) as pushes_2020,\n    round((pushes_2020 - pushes_2019) / pushes_2019 * 100, 2) as push_decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) \n    AND event_type = 'PushEvent'\nGROUP BY repo_name\nHAVING pushes_2019 >= 100\n    AND push_decline_percentage < 0\nORDER BY push_decline_percentage ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "bkkoech/cs141_Spring19",
          "pushes_2019": 134,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "RitaKelliher/javascript-intro-to-looping-bootcamp-prep-000",
          "pushes_2019": 115,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "unique995/insist",
          "pushes_2019": 147,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "kakarotto67/mlmc",
          "pushes_2019": 104,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "nutes-uepb/haniot-android-app",
          "pushes_2019": 167,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "Chris-Hesterman/testLori",
          "pushes_2019": 278,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "neminigame/NEMiniGame",
          "pushes_2019": 112,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "A-Glazer/collections_practice_vol_2-online-web-prework",
          "pushes_2019": 204,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "0dvictor/openj9",
          "pushes_2019": 190,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        },
        {
          "repo_name": "DanSanz/dsc-enterprise-hsbc-machine-learning-with-spark-hsbc-ds-081319",
          "pushes_2019": 147,
          "pushes_2020": 0,
          "push_decline_percentage": -100
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes_2019",
          "type": "UInt64"
        },
        {
          "name": "pushes_2020",
          "type": "UInt64"
        },
        {
          "name": "push_decline_percentage",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 4.45063857,
        "rows_read": 716542169,
        "bytes_read": 5011301367
      },
      "executionTime": 4.503,
      "requestId": "01JTFX05XYJMPRTT7W09FMNM9T",
      "length": 1146
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 3.462,
      "totalDuration": 6.14,
      "tokens": {
        "promptTokens": 4833,
        "completionTokens": 205,
        "totalTokens": 5038
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'PushEvent' AND toYear(created_at) = 2019) as pushes_2019,\n    countIf(event_type = 'PushEvent' AND toYear(created_at) = 2020) as pushes_2020,\n    round((pushes_2020 - pushes_2019) / pushes_2019 * 100, 2) as push_decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) \n    AND event_type = 'PushEvent'\nGROUP BY repo_name\nHAVING pushes_2019 >= 100\n    AND push_decline_percentage < 0\nORDER BY push_decline_percentage ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "bkkoech/cs141_Spring19",
              "pushes_2019": 134,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "RitaKelliher/javascript-intro-to-looping-bootcamp-prep-000",
              "pushes_2019": 115,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "unique995/insist",
              "pushes_2019": 147,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "kakarotto67/mlmc",
              "pushes_2019": 104,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "nutes-uepb/haniot-android-app",
              "pushes_2019": 167,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "Chris-Hesterman/testLori",
              "pushes_2019": 278,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "neminigame/NEMiniGame",
              "pushes_2019": 112,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "A-Glazer/collections_practice_vol_2-online-web-prework",
              "pushes_2019": 204,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "0dvictor/openj9",
              "pushes_2019": 190,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            },
            {
              "repo_name": "DanSanz/dsc-enterprise-hsbc-machine-learning-with-spark-hsbc-ds-081319",
              "pushes_2019": 147,
              "pushes_2020": 0,
              "push_decline_percentage": -100
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes_2019",
              "type": "UInt64"
            },
            {
              "name": "pushes_2020",
              "type": "UInt64"
            },
            {
              "name": "push_decline_percentage",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 4.45063857,
            "rows_read": 716542169,
            "bytes_read": 5011301367
          },
          "executionTime": 4.503,
          "requestId": "01JTFX05XYJMPRTT7W09FMNM9T",
          "length": 1146
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 3.462,
          "totalDuration": 6.14,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 205,
            "totalTokens": 5038
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_events,\n    stddevPop(daily_events) / avg(daily_events) as variation_coefficient\nFROM (\n    SELECT \n        repo_name,\n        toDate(created_at) as event_date,\n        COUNT(*) as daily_events\n    FROM github_events\n    WHERE created_at >= now() - INTERVAL 1 YEAR\n    GROUP BY repo_name, event_date\n    HAVING daily_events > 10\n)\nGROUP BY repo_name\nHAVING total_events > 1000\nORDER BY variation_coefficient ASC, total_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        },
        {
          "name": "variation_coefficient",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.00457326,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.022,
      "requestId": "01JTFX0J74N7EWWT5WGMA23BST",
      "length": 2
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 3.444,
      "totalDuration": 5.598,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 160,
        "totalTokens": 4985
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_events,\n    stddevPop(daily_events) / avg(daily_events) as variation_coefficient\nFROM (\n    SELECT \n        repo_name,\n        toDate(created_at) as event_date,\n        COUNT(*) as daily_events\n    FROM github_events\n    WHERE created_at >= now() - INTERVAL 1 YEAR\n    GROUP BY repo_name, event_date\n    HAVING daily_events > 10\n)\nGROUP BY repo_name\nHAVING total_events > 1000\nORDER BY variation_coefficient ASC, total_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            },
            {
              "name": "variation_coefficient",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.00457326,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.022,
          "requestId": "01JTFX0J74N7EWWT5WGMA23BST",
          "length": 2
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 3.444,
          "totalDuration": 5.598,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 160,
            "totalTokens": 4985
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    toDayOfWeek(created_at) as day_of_week,\n    count() as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003323944,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.022,
      "requestId": "01JTFX0PVN5T610EPWFGSQ9PF4",
      "length": 2
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.833,
      "totalDuration": 2.229,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 88,
        "totalTokens": 4913
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    toDayOfWeek(created_at) as day_of_week,\n    count() as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003323944,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.022,
          "requestId": "01JTFX0PVN5T610EPWFGSQ9PF4",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.833,
          "totalDuration": 2.229,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 88,
            "totalTokens": 4913
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 34099240
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.811492414,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.856,
      "requestId": "01JTFX0TWKPTVVXTPFG76TZP8V",
      "length": 26
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.999,
      "totalDuration": 1.579,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 29,
        "totalTokens": 4848
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 34099240
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.811492414,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.856,
          "requestId": "01JTFX0TWKPTVVXTPFG76TZP8V",
          "length": 26
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.999,
          "totalDuration": 1.579,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 29,
            "totalTokens": 4848
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 10131322
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.121957449,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 5.165,
      "requestId": "01JTFX1HS78XKJRVHBYT1TPGFN",
      "length": 26
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.092,
      "totalDuration": 2.086,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 50,
        "totalTokens": 4872
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 10131322
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.121957449,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 5.165,
          "requestId": "01JTFX1HS78XKJRVHBYT1TPGFN",
          "length": 26
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.092,
          "totalDuration": 2.086,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 50,
            "totalTokens": 4872
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 18808891
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.734289251,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.794,
      "requestId": "01JTFX1TSB1PV5M93C947Q0JYW",
      "length": 26
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.949,
      "totalDuration": 1.537,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 41,
        "totalTokens": 4862
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 18808891
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.734289251,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.794,
          "requestId": "01JTFX1TSB1PV5M93C947Q0JYW",
          "length": 26
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.949,
          "totalDuration": 1.537,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 41,
            "totalTokens": 4862
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 6418718
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.247100696,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.266,
      "requestId": "01JTFX247KMAM12NT73F2YAZY2",
      "length": 25
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.48,
      "totalDuration": 2.415,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 51,
        "totalTokens": 4873
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 6418718
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.247100696,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.266,
          "requestId": "01JTFX247KMAM12NT73F2YAZY2",
          "length": 25
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.48,
          "totalDuration": 2.415,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 51,
            "totalTokens": 4873
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars": 127332
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars": 116642
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 115419
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 110521
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 106673
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 101015
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 97585
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 91891
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 84730
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars": 82794
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.899838184,
        "rows_read": 446952570,
        "bytes_read": 1804735431
      },
      "executionTime": 8.945,
      "requestId": "01JTFX2AQ4ASAZBSW98TF7PQBV",
      "length": 523
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.43,
      "totalDuration": 2.85,
      "tokens": {
        "promptTokens": 4839,
        "completionTokens": 96,
        "totalTokens": 4935
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars": 127332
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars": 116642
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 115419
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 110521
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 106673
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 101015
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 97585
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 91891
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 84730
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars": 82794
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.899838184,
            "rows_read": 446952570,
            "bytes_read": 1804735431
          },
          "executionTime": 8.945,
          "requestId": "01JTFX2AQ4ASAZBSW98TF7PQBV",
          "length": 523
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.43,
          "totalDuration": 2.85,
          "tokens": {
            "promptTokens": 4839,
            "completionTokens": 96,
            "totalTokens": 4935
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY actor_login\nHAVING total_prs >= 10\nORDER BY total_prs DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "total_prs": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "total_prs": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "total_prs": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "total_prs": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "total_prs": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "total_prs": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "total_prs": 642504
        },
        {
          "actor_login": "snyk-bot",
          "total_prs": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "total_prs": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "total_prs": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_prs",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.302293278,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.321,
      "requestId": "01JTFX2RTAVKBPV470AN8BGMDV",
      "length": 529
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.069,
      "totalDuration": 3.015,
      "tokens": {
        "promptTokens": 4828,
        "completionTokens": 69,
        "totalTokens": 4897
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY actor_login\nHAVING total_prs >= 10\nORDER BY total_prs DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "total_prs": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "total_prs": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "total_prs": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "total_prs": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "total_prs": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "total_prs": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "total_prs": 642504
            },
            {
              "actor_login": "snyk-bot",
              "total_prs": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "total_prs": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "total_prs": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_prs",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.302293278,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.321,
          "requestId": "01JTFX2RTAVKBPV470AN8BGMDV",
          "length": 529
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.069,
          "totalDuration": 3.015,
          "tokens": {
            "promptTokens": 4828,
            "completionTokens": 69,
            "totalTokens": 4897
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY total_pull_requests DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "total_pull_requests": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_pull_requests": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "total_pull_requests": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "total_pull_requests": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "total_pull_requests": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "total_pull_requests": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "total_pull_requests": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "total_pull_requests": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "total_pull_requests": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "total_pull_requests": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_pull_requests",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.747779639,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.767,
      "requestId": "01JTFX2XWCQ53AYCGDNMWBFWC1",
      "length": 716
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.196,
      "totalDuration": 1.366,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 61,
        "totalTokens": 4886
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY total_pull_requests DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "total_pull_requests": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_pull_requests": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "total_pull_requests": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "total_pull_requests": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "total_pull_requests": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "total_pull_requests": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "total_pull_requests": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "total_pull_requests": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "total_pull_requests": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "total_pull_requests": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_pull_requests",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.747779639,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.767,
          "requestId": "01JTFX2XWCQ53AYCGDNMWBFWC1",
          "length": 716
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.196,
          "totalDuration": 1.366,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 61,
            "totalTokens": 4886
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY unique_contributors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "unique_contributors": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "unique_contributors": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "unique_contributors": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "unique_contributors": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "unique_contributors": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "unique_contributors": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "unique_contributors": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "unique_contributors": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "unique_contributors": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "unique_contributors": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "unique_contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.945635477,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 3,
      "requestId": "01JTFX33TXW9Y09EGS62AHPKR6",
      "length": 730
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.908,
      "totalDuration": 1.803,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 61,
        "totalTokens": 4887
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY unique_contributors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "unique_contributors": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "unique_contributors": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "unique_contributors": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "unique_contributors": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "unique_contributors": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "unique_contributors": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "unique_contributors": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "unique_contributors": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "unique_contributors": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "unique_contributors": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "unique_contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.945635477,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 3,
          "requestId": "01JTFX33TXW9Y09EGS62AHPKR6",
          "length": 730
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.908,
          "totalDuration": 1.803,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 61,
            "totalTokens": 4887
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY total_issues DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "total_issues": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "total_issues": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "total_issues": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "total_issues": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "total_issues": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "total_issues": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "total_issues": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "total_issues": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "total_issues": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "total_issues": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.524793583,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.55,
      "requestId": "01JTFX3ASZ2HZ1JK9SY2FT4QAT",
      "length": 583
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.907,
      "totalDuration": 1.658,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 57,
        "totalTokens": 4881
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY total_issues DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "total_issues": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "total_issues": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "total_issues": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "total_issues": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "total_issues": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "total_issues": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "total_issues": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "total_issues": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "total_issues": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "total_issues": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.524793583,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.55,
          "requestId": "01JTFX3ASZ2HZ1JK9SY2FT4QAT",
          "length": 583
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.907,
          "totalDuration": 1.658,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 57,
            "totalTokens": 4881
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%' AND actor_login NOT LIKE '%bot%') as human_issues,\n    countIf(event_type = 'IssuesEvent' AND (actor_login LIKE '%[bot]%' OR actor_login LIKE '%bot%')) as bot_issues,\n    count() FILTER (WHERE event_type = 'WatchEvent') as stars\nFROM github_events\nWHERE created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING stars >= 1000\nORDER BY human_issues DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "human_issues",
          "type": "UInt64"
        },
        {
          "name": "bot_issues",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004550596,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.023,
      "requestId": "01JTFX3H4ZF7Q55V2QMR5NARN5",
      "length": 2
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.568,
      "totalDuration": 3.445,
      "tokens": {
        "promptTokens": 4842,
        "completionTokens": 170,
        "totalTokens": 5012
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%' AND actor_login NOT LIKE '%bot%') as human_issues,\n    countIf(event_type = 'IssuesEvent' AND (actor_login LIKE '%[bot]%' OR actor_login LIKE '%bot%')) as bot_issues,\n    count() FILTER (WHERE event_type = 'WatchEvent') as stars\nFROM github_events\nWHERE created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING stars >= 1000\nORDER BY human_issues DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "human_issues",
              "type": "UInt64"
            },
            {
              "name": "bot_issues",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.004550596,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.023,
          "requestId": "01JTFX3H4ZF7Q55V2QMR5NARN5",
          "length": 2
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.568,
          "totalDuration": 3.445,
          "tokens": {
            "promptTokens": 4842,
            "completionTokens": 170,
            "totalTokens": 5012
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%' AND actor_login NOT LIKE '%bot%') as human_issues,\n    countIf(event_type = 'IssuesEvent' AND (actor_login LIKE '%[bot]%' OR actor_login LIKE '%bot%')) as bot_issues,\n    uniq(actor_login) as unique_issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nHAVING human_issues + bot_issues >= 1000\nORDER BY unique_issue_authors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "human_issues": 124157,
          "bot_issues": 8455,
          "unique_issue_authors": 27150
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "human_issues": 87105,
          "bot_issues": 32,
          "unique_issue_authors": 21207
        },
        {
          "repo_name": "microsoft/vscode",
          "human_issues": 60373,
          "bot_issues": 13314,
          "unique_issue_authors": 19561
        },
        {
          "repo_name": "flutter/flutter",
          "human_issues": 87443,
          "bot_issues": 2071,
          "unique_issue_authors": 16772
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "human_issues": 54400,
          "bot_issues": 1225,
          "unique_issue_authors": 16690
        },
        {
          "repo_name": "ansible/ansible",
          "human_issues": 50662,
          "bot_issues": 5123,
          "unique_issue_authors": 13096
        },
        {
          "repo_name": "996icu/996.ICU",
          "human_issues": 26561,
          "bot_issues": 2276,
          "unique_issue_authors": 12826
        },
        {
          "repo_name": "FortAwesome/Font-Awesome",
          "human_issues": 28180,
          "bot_issues": 30,
          "unique_issue_authors": 12784
        },
        {
          "repo_name": "facebook/react-native",
          "human_issues": 33497,
          "bot_issues": 7164,
          "unique_issue_authors": 11953
        },
        {
          "repo_name": "npm/npm",
          "human_issues": 24634,
          "bot_issues": 3406,
          "unique_issue_authors": 11469
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "human_issues",
          "type": "UInt64"
        },
        {
          "name": "bot_issues",
          "type": "UInt64"
        },
        {
          "name": "unique_issue_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.232906573,
        "rows_read": 111439849,
        "bytes_read": 556565135
      },
      "executionTime": 1.256,
      "requestId": "01JTFX3PZ4WW982RVTTMM72PTC",
      "length": 1022
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.165,
      "totalDuration": 3.432,
      "tokens": {
        "promptTokens": 4849,
        "completionTokens": 170,
        "totalTokens": 5019
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%' AND actor_login NOT LIKE '%bot%') as human_issues,\n    countIf(event_type = 'IssuesEvent' AND (actor_login LIKE '%[bot]%' OR actor_login LIKE '%bot%')) as bot_issues,\n    uniq(actor_login) as unique_issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nHAVING human_issues + bot_issues >= 1000\nORDER BY unique_issue_authors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Microsoft/vscode",
              "human_issues": 124157,
              "bot_issues": 8455,
              "unique_issue_authors": 27150
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "human_issues": 87105,
              "bot_issues": 32,
              "unique_issue_authors": 21207
            },
            {
              "repo_name": "microsoft/vscode",
              "human_issues": 60373,
              "bot_issues": 13314,
              "unique_issue_authors": 19561
            },
            {
              "repo_name": "flutter/flutter",
              "human_issues": 87443,
              "bot_issues": 2071,
              "unique_issue_authors": 16772
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "human_issues": 54400,
              "bot_issues": 1225,
              "unique_issue_authors": 16690
            },
            {
              "repo_name": "ansible/ansible",
              "human_issues": 50662,
              "bot_issues": 5123,
              "unique_issue_authors": 13096
            },
            {
              "repo_name": "996icu/996.ICU",
              "human_issues": 26561,
              "bot_issues": 2276,
              "unique_issue_authors": 12826
            },
            {
              "repo_name": "FortAwesome/Font-Awesome",
              "human_issues": 28180,
              "bot_issues": 30,
              "unique_issue_authors": 12784
            },
            {
              "repo_name": "facebook/react-native",
              "human_issues": 33497,
              "bot_issues": 7164,
              "unique_issue_authors": 11953
            },
            {
              "repo_name": "npm/npm",
              "human_issues": 24634,
              "bot_issues": 3406,
              "unique_issue_authors": 11469
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "human_issues",
              "type": "UInt64"
            },
            {
              "name": "bot_issues",
              "type": "UInt64"
            },
            {
              "name": "unique_issue_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.232906573,
            "rows_read": 111439849,
            "bytes_read": 556565135
          },
          "executionTime": 1.256,
          "requestId": "01JTFX3PZ4WW982RVTTMM72PTC",
          "length": 1022
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.165,
          "totalDuration": 3.432,
          "tokens": {
            "promptTokens": 4849,
            "completionTokens": 170,
            "totalTokens": 5019
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(DISTINCT member_login) as push_access_members\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY push_access_members DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "push_access_members": 10144
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "push_access_members": 3157
        },
        {
          "repo_name": "/",
          "push_access_members": 2402
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "push_access_members": 1580
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "push_access_members": 1298
        },
        {
          "repo_name": "predixdesignsystem/px-simple-line-chart",
          "push_access_members": 975
        },
        {
          "repo_name": "predixdesignsystem/px-modal",
          "push_access_members": 975
        },
        {
          "repo_name": "predixdesignsystem/px-demo-data",
          "push_access_members": 967
        },
        {
          "repo_name": "predixdesignsystem/px-deck-selector",
          "push_access_members": 963
        },
        {
          "repo_name": "predixdesignsystem/px-simple-horizontal-bar-chart",
          "push_access_members": 959
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_members",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.644756287,
        "rows_read": 14435721,
        "bytes_read": 71847147
      },
      "executionTime": 0.67,
      "requestId": "01JTFX3WE1KA1F6RVW0FBEQSD4",
      "length": 753
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.487,
      "totalDuration": 1.839,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 65,
        "totalTokens": 4891
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT member_login) as push_access_members\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY push_access_members DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "push_access_members": 10144
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "push_access_members": 3157
            },
            {
              "repo_name": "/",
              "push_access_members": 2402
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "push_access_members": 1580
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "push_access_members": 1298
            },
            {
              "repo_name": "predixdesignsystem/px-simple-line-chart",
              "push_access_members": 975
            },
            {
              "repo_name": "predixdesignsystem/px-modal",
              "push_access_members": 975
            },
            {
              "repo_name": "predixdesignsystem/px-demo-data",
              "push_access_members": 967
            },
            {
              "repo_name": "predixdesignsystem/px-deck-selector",
              "push_access_members": 963
            },
            {
              "repo_name": "predixdesignsystem/px-simple-horizontal-bar-chart",
              "push_access_members": 959
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_members",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.644756287,
            "rows_read": 14435721,
            "bytes_read": 71847147
          },
          "executionTime": 0.67,
          "requestId": "01JTFX3WE1KA1F6RVW0FBEQSD4",
          "length": 753
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.487,
          "totalDuration": 1.839,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 65,
            "totalTokens": 4891
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND base_ref = 'main'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_users_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.281727729,
        "rows_read": 1601472977,
        "bytes_read": 4478338888
      },
      "executionTime": 0.301,
      "requestId": "01JTFX414EVJFDWM09CZW2Z9WF",
      "length": 2
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.61,
      "totalDuration": 1.642,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 76,
        "totalTokens": 4906
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND base_ref = 'main'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_users_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.281727729,
            "rows_read": 1601472977,
            "bytes_read": 4478338888
          },
          "executionTime": 0.301,
          "requestId": "01JTFX414EVJFDWM09CZW2Z9WF",
          "length": 2
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.61,
          "totalDuration": 1.642,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 76,
            "totalTokens": 4906
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as push_contributors\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY repo_name \n        HAVING COUNT(*) > 99\n    )\nGROUP BY repo_name\nORDER BY push_contributors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "push_contributors": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "push_contributors": 7869
        },
        {
          "repo_name": "llvm/llvm-project",
          "push_contributors": 826
        },
        {
          "repo_name": "lifo/docrails",
          "push_contributors": 592
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "push_contributors": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "push_contributors": 461
        },
        {
          "repo_name": "Automattic/wp-calypso",
          "push_contributors": 432
        },
        {
          "repo_name": "tencentyun/qcloud-documents",
          "push_contributors": 429
        },
        {
          "repo_name": "CocoaPods/Specs",
          "push_contributors": 375
        },
        {
          "repo_name": "DataDog/documentation",
          "push_contributors": 339
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 7.365428508,
        "rows_read": 1536349523,
        "bytes_read": 6978461009
      },
      "executionTime": 7.438,
      "requestId": "01JTFX4678MT3GBRFG5F74TV4H",
      "length": 626
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.671,
      "totalDuration": 2.355,
      "tokens": {
        "promptTokens": 4844,
        "completionTokens": 118,
        "totalTokens": 4962
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as push_contributors\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY repo_name \n        HAVING COUNT(*) > 99\n    )\nGROUP BY repo_name\nORDER BY push_contributors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "push_contributors": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "push_contributors": 7869
            },
            {
              "repo_name": "llvm/llvm-project",
              "push_contributors": 826
            },
            {
              "repo_name": "lifo/docrails",
              "push_contributors": 592
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "push_contributors": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "push_contributors": 461
            },
            {
              "repo_name": "Automattic/wp-calypso",
              "push_contributors": 432
            },
            {
              "repo_name": "tencentyun/qcloud-documents",
              "push_contributors": 429
            },
            {
              "repo_name": "CocoaPods/Specs",
              "push_contributors": 375
            },
            {
              "repo_name": "DataDog/documentation",
              "push_contributors": 339
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 7.365428508,
            "rows_read": 1536349523,
            "bytes_read": 6978461009
          },
          "executionTime": 7.438,
          "requestId": "01JTFX4678MT3GBRFG5F74TV4H",
          "length": 626
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.671,
          "totalDuration": 2.355,
          "tokens": {
            "promptTokens": 4844,
            "completionTokens": 118,
            "totalTokens": 4962
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as accepted_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\n    AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "accepted_invitations": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "accepted_invitations": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "accepted_invitations": 3161
        },
        {
          "repo_name": "/",
          "accepted_invitations": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "accepted_invitations": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "accepted_invitations": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "accepted_invitations": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "accepted_invitations": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "accepted_invitations": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "accepted_invitations": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "accepted_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.455388753,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.474,
      "requestId": "01JTFX4HRSBCZCC1601C8NBYDQ",
      "length": 752
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.949,
      "totalDuration": 1.935,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 67,
        "totalTokens": 4893
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as accepted_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\n    AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "accepted_invitations": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "accepted_invitations": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "accepted_invitations": 3161
            },
            {
              "repo_name": "/",
              "accepted_invitations": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "accepted_invitations": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "accepted_invitations": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "accepted_invitations": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "accepted_invitations": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "accepted_invitations": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "accepted_invitations": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "accepted_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.455388753,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.474,
          "requestId": "01JTFX4HRSBCZCC1601C8NBYDQ",
          "length": 752
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.949,
          "totalDuration": 1.935,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 67,
            "totalTokens": 4893
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.843849205,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.864,
      "requestId": "01JTFX4PB9P5YW42GR7NRPCWVZ",
      "length": 592
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.537,
      "totalDuration": 1.713,
      "tokens": {
        "promptTokens": 4820,
        "completionTokens": 55,
        "totalTokens": 4875
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.843849205,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.864,
          "requestId": "01JTFX4PB9P5YW42GR7NRPCWVZ",
          "length": 592
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.537,
          "totalDuration": 1.713,
          "tokens": {
            "promptTokens": 4820,
            "completionTokens": 55,
            "totalTokens": 4875
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') as stars,\n    countIf(event_type = 'ForkEvent') as forks,\n    CAST(countIf(event_type = 'WatchEvent') AS Float64) / nullIf(countIf(event_type = 'ForkEvent'), 0) as star_fork_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "stars": 8190,
          "forks": 1,
          "star_fork_ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "stars": 6042,
          "forks": 1,
          "star_fork_ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "stars": 3069,
          "forks": 1,
          "star_fork_ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "stars": 2288,
          "forks": 1,
          "star_fork_ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "stars": 2088,
          "forks": 1,
          "star_fork_ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "stars": 1822,
          "forks": 1,
          "star_fork_ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "stars": 1801,
          "forks": 1,
          "star_fork_ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "stars": 1795,
          "forks": 1,
          "star_fork_ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "stars": 1759,
          "forks": 1,
          "star_fork_ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "stars": 1752,
          "forks": 1,
          "star_fork_ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "star_fork_ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 2.058612764,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.08,
      "requestId": "01JTFX4WK51RAHY3EFH6QEC4T1",
      "length": 852
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.192,
      "totalDuration": 3.029,
      "tokens": {
        "promptTokens": 4827,
        "completionTokens": 152,
        "totalTokens": 4979
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') as stars,\n    countIf(event_type = 'ForkEvent') as forks,\n    CAST(countIf(event_type = 'WatchEvent') AS Float64) / nullIf(countIf(event_type = 'ForkEvent'), 0) as star_fork_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "stars": 8190,
              "forks": 1,
              "star_fork_ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "stars": 6042,
              "forks": 1,
              "star_fork_ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "stars": 3069,
              "forks": 1,
              "star_fork_ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "stars": 2288,
              "forks": 1,
              "star_fork_ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "stars": 2088,
              "forks": 1,
              "star_fork_ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "stars": 1822,
              "forks": 1,
              "star_fork_ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "stars": 1801,
              "forks": 1,
              "star_fork_ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "stars": 1795,
              "forks": 1,
              "star_fork_ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "stars": 1759,
              "forks": 1,
              "star_fork_ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "stars": 1752,
              "forks": 1,
              "star_fork_ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "star_fork_ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 2.058612764,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.08,
          "requestId": "01JTFX4WK51RAHY3EFH6QEC4T1",
          "length": 852
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.192,
          "totalDuration": 3.029,
          "tokens": {
            "promptTokens": 4827,
            "completionTokens": 152,
            "totalTokens": 4979
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') as fork_count,\n    countIf(event_type = 'WatchEvent') as star_count,\n    fork_count + star_count as total_interactions\nFROM github_events\nWHERE created_at >= now() - INTERVAL 30 DAY\nGROUP BY repo_name\nHAVING fork_count > 0 OR star_count > 0\nORDER BY total_interactions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        },
        {
          "name": "total_interactions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004406408,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.022,
      "requestId": "01JTFX53JN0TQX15NZN4V89ZM6",
      "length": 2
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.585,
      "totalDuration": 2.57,
      "tokens": {
        "promptTokens": 4832,
        "completionTokens": 123,
        "totalTokens": 4955
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') as fork_count,\n    countIf(event_type = 'WatchEvent') as star_count,\n    fork_count + star_count as total_interactions\nFROM github_events\nWHERE created_at >= now() - INTERVAL 30 DAY\nGROUP BY repo_name\nHAVING fork_count > 0 OR star_count > 0\nORDER BY total_interactions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            },
            {
              "name": "total_interactions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.004406408,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.022,
          "requestId": "01JTFX53JN0TQX15NZN4V89ZM6",
          "length": 2
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.585,
          "totalDuration": 2.57,
          "tokens": {
            "promptTokens": 4832,
            "completionTokens": 123,
            "totalTokens": 4955
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') as fork_count,\n    countIf(event_type = 'WatchEvent') as star_count\nFROM github_events\nWHERE created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING fork_count > star_count\nORDER BY fork_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003675158,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.021,
      "requestId": "01JTFX58GYBMGXSZ9HF5P60YZK",
      "length": 2
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.13,
      "totalDuration": 2.541,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 102,
        "totalTokens": 4928
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') as fork_count,\n    countIf(event_type = 'WatchEvent') as star_count\nFROM github_events\nWHERE created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING fork_count > star_count\nORDER BY fork_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003675158,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.021,
          "requestId": "01JTFX58GYBMGXSZ9HF5P60YZK",
          "length": 2
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.13,
          "totalDuration": 2.541,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 102,
            "totalTokens": 4928
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    countIf(event_type = 'WatchEvent') as stars,\n    countIf(event_type = 'ForkEvent') as forks,\n    CAST(countIf(event_type = 'WatchEvent') AS Float64) / countIf(event_type = 'ForkEvent') as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars": 232118474,
          "forks": 84709181,
          "stars_to_forks_ratio": 2.7401808311663407
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars_to_forks_ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.103121434,
        "rows_read": 317036398,
        "bytes_read": 317036398
      },
      "executionTime": 0.122,
      "requestId": "01JTFX5HM41MWWXT72YCQRCKV2",
      "length": 80
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "I previously asked: \"overall proportion between stars and forks\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    COUNT(*) FILTER (WHERE event_type = 'WatchEvent') as stars,\n    COUNT(*) FILTER (WHERE event_type = 'ForkEvent') as forks,\n    CAST(COUNT(*) FILTER (WHERE event_type = 'WatchEvent') AS Float64) / COUNT(*) FILTER (WHERE event_type = 'ForkEvent') as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.66,
      "totalDuration": 1.922,
      "tokens": {
        "promptTokens": 5009,
        "completionTokens": 119,
        "totalTokens": 5128
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    COUNT(*) FILTER (WHERE event_type = 'WatchEvent') as stars,\n    COUNT(*) FILTER (WHERE event_type = 'ForkEvent') as forks,\n    CAST(COUNT(*) FILTER (WHERE event_type = 'WatchEvent') AS Float64) / COUNT(*) FILTER (WHERE event_type = 'ForkEvent') as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTFX5D9B3M94Z6MSKXNQGHRR",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.827,
          "totalDuration": 2.354,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 131,
            "totalTokens": 4950
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    countIf(event_type = 'WatchEvent') as stars,\n    countIf(event_type = 'ForkEvent') as forks,\n    CAST(countIf(event_type = 'WatchEvent') AS Float64) / countIf(event_type = 'ForkEvent') as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars": 232118474,
              "forks": 84709181,
              "stars_to_forks_ratio": 2.7401808311663407
            }
          ],
          "meta": [
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars_to_forks_ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.103121434,
            "rows_read": 317036398,
            "bytes_read": 317036398
          },
          "executionTime": 0.122,
          "requestId": "01JTFX5HM41MWWXT72YCQRCKV2",
          "length": 80
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "I previously asked: \"overall proportion between stars and forks\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    COUNT(*) FILTER (WHERE event_type = 'WatchEvent') as stars,\n    COUNT(*) FILTER (WHERE event_type = 'ForkEvent') as forks,\n    CAST(COUNT(*) FILTER (WHERE event_type = 'WatchEvent') AS Float64) / COUNT(*) FILTER (WHERE event_type = 'ForkEvent') as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.66,
          "totalDuration": 1.922,
          "tokens": {
            "promptTokens": 5009,
            "completionTokens": 119,
            "totalTokens": 5128
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  COUNT(*) as total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_issues": 66329076
        }
      ],
      "meta": [
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.05283676,
        "rows_read": 111439849,
        "bytes_read": 222792497
      },
      "executionTime": 0.071,
      "requestId": "01JTFX5NQZKQQMTT25B0SXTX28",
      "length": 27
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.397,
      "totalDuration": 1.596,
      "tokens": {
        "promptTokens": 4818,
        "completionTokens": 46,
        "totalTokens": 4864
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  COUNT(*) as total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_issues": 66329076
            }
          ],
          "meta": [
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.05283676,
            "rows_read": 111439849,
            "bytes_read": 222792497
          },
          "executionTime": 0.071,
          "requestId": "01JTFX5NQZKQQMTT25B0SXTX28",
          "length": 27
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.397,
          "totalDuration": 1.596,
          "tokens": {
            "promptTokens": 4818,
            "completionTokens": 46,
            "totalTokens": 4864
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(comment_id) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY total_comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "total_comments": 1450081
        },
        {
          "repo_name": "apache/spark",
          "total_comments": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "total_comments": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "total_comments": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "total_comments": 477302
        },
        {
          "repo_name": "openshift/origin",
          "total_comments": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "total_comments": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "total_comments": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "total_comments": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "total_comments": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.806515317,
        "rows_read": 218620144,
        "bytes_read": 2403486015
      },
      "executionTime": 0.826,
      "requestId": "01JTFX5T0F3Y4GWVC7PPWPTFP0",
      "length": 589
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.945,
      "totalDuration": 1.797,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 62,
        "totalTokens": 4883
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(comment_id) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY total_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "total_comments": 1450081
            },
            {
              "repo_name": "apache/spark",
              "total_comments": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "total_comments": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "total_comments": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "total_comments": 477302
            },
            {
              "repo_name": "openshift/origin",
              "total_comments": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "total_comments": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "total_comments": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "total_comments": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "total_comments": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.806515317,
            "rows_read": 218620144,
            "bytes_read": 2403486015
          },
          "executionTime": 0.826,
          "requestId": "01JTFX5T0F3Y4GWVC7PPWPTFP0",
          "length": 589
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.945,
          "totalDuration": 1.797,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 62,
            "totalTokens": 4883
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') as issue_comments,\n    countIf(event_type = 'IssuesEvent') as issues,\n    CAST(countIf(event_type = 'IssueCommentEvent') AS Float64) / nullIf(countIf(event_type = 'IssuesEvent'), 0) as comment_issue_ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY comment_issue_ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments": 477302,
          "issues": 2,
          "comment_issue_ratio": 238651
        },
        {
          "repo_name": "sauron-demo/sauron",
          "issue_comments": 132338,
          "issues": 2,
          "comment_issue_ratio": 66169
        },
        {
          "repo_name": "apache/flink",
          "issue_comments": 58428,
          "issues": 1,
          "comment_issue_ratio": 58428
        },
        {
          "repo_name": "jbosstm/narayana",
          "issue_comments": 27020,
          "issues": 1,
          "comment_issue_ratio": 27020
        },
        {
          "repo_name": "php/php-src",
          "issue_comments": 25578,
          "issues": 1,
          "comment_issue_ratio": 25578
        },
        {
          "repo_name": "jenkinsci/jenkins",
          "issue_comments": 25431,
          "issues": 1,
          "comment_issue_ratio": 25431
        },
        {
          "repo_name": "apple/swift",
          "issue_comments": 175983,
          "issues": 7,
          "comment_issue_ratio": 25140.428571428572
        },
        {
          "repo_name": "dolphin-emu/dolphin",
          "issue_comments": 37761,
          "issues": 2,
          "comment_issue_ratio": 18880.5
        },
        {
          "repo_name": "liferay/com-liferay-commerce",
          "issue_comments": 15010,
          "issues": 1,
          "comment_issue_ratio": 15010
        },
        {
          "repo_name": "python/cpython",
          "issue_comments": 70575,
          "issues": 7,
          "comment_issue_ratio": 10082.142857142857
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "comment_issue_ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 1.213203548,
        "rows_read": 329902046,
        "bytes_read": 989046767
      },
      "executionTime": 1.233,
      "requestId": "01JTFX64QCQRAR3W6X71XYBHST",
      "length": 999
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 5.56,
      "totalDuration": 7.643,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 164,
        "totalTokens": 4988
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') as issue_comments,\n    countIf(event_type = 'IssuesEvent') as issues,\n    CAST(countIf(event_type = 'IssueCommentEvent') AS Float64) / nullIf(countIf(event_type = 'IssuesEvent'), 0) as comment_issue_ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY comment_issue_ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments": 477302,
              "issues": 2,
              "comment_issue_ratio": 238651
            },
            {
              "repo_name": "sauron-demo/sauron",
              "issue_comments": 132338,
              "issues": 2,
              "comment_issue_ratio": 66169
            },
            {
              "repo_name": "apache/flink",
              "issue_comments": 58428,
              "issues": 1,
              "comment_issue_ratio": 58428
            },
            {
              "repo_name": "jbosstm/narayana",
              "issue_comments": 27020,
              "issues": 1,
              "comment_issue_ratio": 27020
            },
            {
              "repo_name": "php/php-src",
              "issue_comments": 25578,
              "issues": 1,
              "comment_issue_ratio": 25578
            },
            {
              "repo_name": "jenkinsci/jenkins",
              "issue_comments": 25431,
              "issues": 1,
              "comment_issue_ratio": 25431
            },
            {
              "repo_name": "apple/swift",
              "issue_comments": 175983,
              "issues": 7,
              "comment_issue_ratio": 25140.428571428572
            },
            {
              "repo_name": "dolphin-emu/dolphin",
              "issue_comments": 37761,
              "issues": 2,
              "comment_issue_ratio": 18880.5
            },
            {
              "repo_name": "liferay/com-liferay-commerce",
              "issue_comments": 15010,
              "issues": 1,
              "comment_issue_ratio": 15010
            },
            {
              "repo_name": "python/cpython",
              "issue_comments": 70575,
              "issues": 7,
              "comment_issue_ratio": 10082.142857142857
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            },
            {
              "name": "issues",
              "type": "UInt64"
            },
            {
              "name": "comment_issue_ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 1.213203548,
            "rows_read": 329902046,
            "bytes_read": 989046767
          },
          "executionTime": 1.233,
          "requestId": "01JTFX64QCQRAR3W6X71XYBHST",
          "length": 999
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 5.56,
          "totalDuration": 7.643,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 164,
            "totalTokens": 4988
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as total_issue_events\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND created_at >= now() - INTERVAL 30 DAY\nGROUP BY repo_name\nORDER BY total_issue_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_issue_events",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003194566,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.022,
      "requestId": "01JTFX6EX8F33PYZYK82TBVNWV",
      "length": 2
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 5.56,
      "totalDuration": 6.69,
      "tokens": {
        "promptTokens": 4823,
        "completionTokens": 77,
        "totalTokens": 4900
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as total_issue_events\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND created_at >= now() - INTERVAL 30 DAY\nGROUP BY repo_name\nORDER BY total_issue_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_issue_events",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003194566,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.022,
          "requestId": "01JTFX6EX8F33PYZYK82TBVNWV",
          "length": 2
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 5.56,
          "totalDuration": 6.69,
          "tokens": {
            "promptTokens": 4823,
            "completionTokens": 77,
            "totalTokens": 4900
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArray(10)(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND toLower(toString(title)) LIKE '%epic%'\n    AND toLower(toString(title)) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTFX6X7ZPHP7DA44V032TZ85",
      "error": "{\"error\": \"DB::Exception: Unknown function toLower. Maybe you meant: ['lower','power','toHour']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArray(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArrayArray(10)(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND lower(title) LIKE '%epic%'\n    AND lower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.889,
      "totalDuration": 2.152,
      "tokens": {
        "promptTokens": 5166,
        "completionTokens": 116,
        "totalTokens": 5282
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArray(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTFX6KGW33GKZ549DHE7VNHE",
          "error": "{\"error\": \"DB::Exception: Unknown function toLower. Maybe you meant: ['lower','power','toHour']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.226,
          "totalDuration": 2.202,
          "tokens": {
            "promptTokens": 4828,
            "completionTokens": 110,
            "totalTokens": 4938
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArrayArray(10)(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND lower(title) LIKE '%epic%'\n    AND lower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTFX6RNX0P8MWW9TD5KCQ7HQ",
          "error": "{\"error\": \"[Error] Illegal type Int32 of argument for aggregate function with Array suffix. Must be array. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArray(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.45,
          "totalDuration": 2.764,
          "tokens": {
            "promptTokens": 4997,
            "completionTokens": 111,
            "totalTokens": 5108
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArray(10)(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND toLower(toString(title)) LIKE '%epic%'\n    AND toLower(toString(title)) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTFX6X7ZPHP7DA44V032TZ85",
          "error": "{\"error\": \"DB::Exception: Unknown function toLower. Maybe you meant: ['lower','power','toHour']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArray(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) as epic_bug_count,\n    groupArrayArray(10)(number) as issue_numbers\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND lower(title) LIKE '%epic%'\n    AND lower(title) LIKE '%bug%'\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.889,
          "totalDuration": 2.152,
          "tokens": {
            "promptTokens": 5166,
            "completionTokens": 116,
            "totalTokens": 5282
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    number as issue_number,\n    title,\n    count(DISTINCT actor_login) as unique_commenters,\n    count(*) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND title IS NOT NULL\n    AND title ILIKE '%epic%'\n    AND title ILIKE '%bug%'\n    AND number > 100\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name, number, title\nHAVING unique_commenters >= 5\nORDER BY total_comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "unique_commenters",
          "type": "UInt64"
        },
        {
          "name": "total_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004546318,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.024,
      "requestId": "01JTFX78NX454S9P7CZAN1DPSS",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    number as issue_number,\n    title,\n    count(DISTINCT actor_login) as unique_commenters,\n    count(*) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\n    AND number > {{Int32(issue_number_threshold, 100)}}\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name, number, title\nHAVING unique_commenters >= {{Int32(min_commenters, 5)}}\nORDER BY total_comments DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.864,
      "totalDuration": 2.556,
      "tokens": {
        "promptTokens": 5079,
        "completionTokens": 154,
        "totalTokens": 5233
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    number as issue_number,\n    title,\n    count(DISTINCT actor_login) as unique_commenters,\n    count(*) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\n    AND number > {{Int32(issue_number_threshold, 100)}}\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name, number, title\nHAVING unique_commenters >= {{Int32(min_commenters, 5)}}\nORDER BY total_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTFX73QDKYPS66VKATM4ZG1M",
          "error": "{\"error\": \"DB::Exception: Unknown function toLower. Maybe you meant: ['lower','power','toHour']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.386,
          "totalDuration": 4.12,
          "tokens": {
            "promptTokens": 4842,
            "completionTokens": 178,
            "totalTokens": 5020
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    number as issue_number,\n    title,\n    count(DISTINCT actor_login) as unique_commenters,\n    count(*) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND title IS NOT NULL\n    AND title ILIKE '%epic%'\n    AND title ILIKE '%bug%'\n    AND number > 100\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name, number, title\nHAVING unique_commenters >= 5\nORDER BY total_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "unique_commenters",
              "type": "UInt64"
            },
            {
              "name": "total_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.004546318,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.024,
          "requestId": "01JTFX78NX454S9P7CZAN1DPSS",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    number as issue_number,\n    title,\n    count(DISTINCT actor_login) as unique_commenters,\n    count(*) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND toLower(title) LIKE '%epic%'\n    AND toLower(title) LIKE '%bug%'\n    AND number > {{Int32(issue_number_threshold, 100)}}\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name, number, title\nHAVING unique_commenters >= {{Int32(min_commenters, 5)}}\nORDER BY total_comments DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.864,
          "totalDuration": 2.556,
          "tokens": {
            "promptTokens": 5079,
            "completionTokens": 154,
            "totalTokens": 5233
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    number as issue_number,\n    title,\n    comments as comment_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name, number, title, comments\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "PennyDreadfulMTG/perf-reports",
          "issue_number": 42826,
          "title": "Error running task ['run.py', 'scraper', 'all']",
          "comment_count": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "issue_number": 31,
          "title": "StripeController#events (NoMethodError) \"undefined method `email' for nil:NilClass\"",
          "comment_count": 2500
        },
        {
          "repo_name": "cxflowtestuser/VB_3845",
          "issue_number": 7,
          "title": "CX SQL_Injection @ VB_3845_112_lines/encode.frm [master]",
          "comment_count": 2500
        },
        {
          "repo_name": "ros-infrastructure/roswiki",
          "issue_number": 139,
          "title": "Request to be added to ROS wiki whitelist",
          "comment_count": 2500
        },
        {
          "repo_name": "OpenKore/openkore",
          "issue_number": 628,
          "title": "~~",
          "comment_count": 2500
        },
        {
          "repo_name": "PennyDreadfulMTG/perf-reports",
          "issue_number": 50472,
          "title": "500 error at /report/",
          "comment_count": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "issue_number": 29,
          "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
          "comment_count": 2500
        },
        {
          "repo_name": "openshift/origin",
          "issue_number": 18826,
          "title": "[infra] openshift-origin-bot synchronization issues",
          "comment_count": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "issue_number": 25,
          "title": "StripeController#events (NoMethodError) \"undefined method `subscription_id=' for nil:NilClass\"",
          "comment_count": 2500
        },
        {
          "repo_name": "oskosk/node-wms-client",
          "issue_number": 2,
          "title": "Lint all the things",
          "comment_count": 2500
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 16.95092673,
        "rows_read": 111439849,
        "bytes_read": 6314315175
      },
      "executionTime": 16.994,
      "requestId": "01JTFX7D1MX87Z0D25YPJW9H4A",
      "length": 1415
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.827,
      "totalDuration": 1.924,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 71,
        "totalTokens": 4893
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    number as issue_number,\n    title,\n    comments as comment_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name, number, title, comments\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "PennyDreadfulMTG/perf-reports",
              "issue_number": 42826,
              "title": "Error running task ['run.py', 'scraper', 'all']",
              "comment_count": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "issue_number": 31,
              "title": "StripeController#events (NoMethodError) \"undefined method `email' for nil:NilClass\"",
              "comment_count": 2500
            },
            {
              "repo_name": "cxflowtestuser/VB_3845",
              "issue_number": 7,
              "title": "CX SQL_Injection @ VB_3845_112_lines/encode.frm [master]",
              "comment_count": 2500
            },
            {
              "repo_name": "ros-infrastructure/roswiki",
              "issue_number": 139,
              "title": "Request to be added to ROS wiki whitelist",
              "comment_count": 2500
            },
            {
              "repo_name": "OpenKore/openkore",
              "issue_number": 628,
              "title": "~~",
              "comment_count": 2500
            },
            {
              "repo_name": "PennyDreadfulMTG/perf-reports",
              "issue_number": 50472,
              "title": "500 error at /report/",
              "comment_count": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "issue_number": 29,
              "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
              "comment_count": 2500
            },
            {
              "repo_name": "openshift/origin",
              "issue_number": 18826,
              "title": "[infra] openshift-origin-bot synchronization issues",
              "comment_count": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "issue_number": 25,
              "title": "StripeController#events (NoMethodError) \"undefined method `subscription_id=' for nil:NilClass\"",
              "comment_count": 2500
            },
            {
              "repo_name": "oskosk/node-wms-client",
              "issue_number": 2,
              "title": "Lint all the things",
              "comment_count": 2500
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 16.95092673,
            "rows_read": 111439849,
            "bytes_read": 6314315175
          },
          "executionTime": 16.994,
          "requestId": "01JTFX7D1MX87Z0D25YPJW9H4A",
          "length": 1415
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.827,
          "totalDuration": 1.924,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 71,
            "totalTokens": 4893
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(*) as commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "commit_comments_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "commit_comments_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "commit_comments_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "commit_comments_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "commit_comments_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "commit_comments_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "commit_comments_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "commit_comments_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "commit_comments_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "commit_comments_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.113482926,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.133,
      "requestId": "01JTFX81MJJNJ876AYTGEJC9DC",
      "length": 659
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.77,
      "totalDuration": 1.615,
      "tokens": {
        "promptTokens": 4823,
        "completionTokens": 62,
        "totalTokens": 4885
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(*) as commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "commit_comments_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "commit_comments_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "commit_comments_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "commit_comments_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "commit_comments_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "commit_comments_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "commit_comments_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "commit_comments_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "commit_comments_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "commit_comments_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.113482926,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.133,
          "requestId": "01JTFX81MJJNJ876AYTGEJC9DC",
          "length": 659
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.77,
          "totalDuration": 1.615,
          "tokens": {
            "promptTokens": 4823,
            "completionTokens": 62,
            "totalTokens": 4885
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    repo_name,\n    created_at,\n    additions + deletions as total_changes,\n    additions,\n    deletions,\n    changed_files\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND push_size > 0\nORDER BY total_changes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "",
          "repo_name": "/",
          "created_at": "2011-02-23 05:44:09",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "Derianor",
          "repo_name": "/",
          "created_at": "2011-02-23 05:44:19",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "techmik",
          "repo_name": "/",
          "created_at": "2011-02-23 05:44:37",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "yikulju",
          "repo_name": "/",
          "created_at": "2011-02-23 05:44:54",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "TheArmoryWars",
          "repo_name": "/",
          "created_at": "2011-02-23 05:44:59",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "bjustas",
          "repo_name": "/",
          "created_at": "2011-02-23 05:57:19",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "minggo",
          "repo_name": "/",
          "created_at": "2011-02-23 05:46:12",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "techmik",
          "repo_name": "/",
          "created_at": "2011-02-23 05:47:29",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "iamjpg",
          "repo_name": "/",
          "created_at": "2011-02-23 05:45:07",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        },
        {
          "actor_login": "rwest",
          "repo_name": "/",
          "created_at": "2011-02-23 05:57:19",
          "total_changes": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "total_changes",
          "type": "UInt64"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 5.155340018,
        "rows_read": 1601472977,
        "bytes_read": 39075361058
      },
      "executionTime": 5.198,
      "requestId": "01JTFX86ANANRF5N4Z1EAR2ZKZ",
      "length": 1407
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.833,
      "totalDuration": 2.147,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 87,
        "totalTokens": 4908
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    repo_name,\n    created_at,\n    additions + deletions as total_changes,\n    additions,\n    deletions,\n    changed_files\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND push_size > 0\nORDER BY total_changes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "",
              "repo_name": "/",
              "created_at": "2011-02-23 05:44:09",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "Derianor",
              "repo_name": "/",
              "created_at": "2011-02-23 05:44:19",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "techmik",
              "repo_name": "/",
              "created_at": "2011-02-23 05:44:37",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "yikulju",
              "repo_name": "/",
              "created_at": "2011-02-23 05:44:54",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "TheArmoryWars",
              "repo_name": "/",
              "created_at": "2011-02-23 05:44:59",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "bjustas",
              "repo_name": "/",
              "created_at": "2011-02-23 05:57:19",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "minggo",
              "repo_name": "/",
              "created_at": "2011-02-23 05:46:12",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "techmik",
              "repo_name": "/",
              "created_at": "2011-02-23 05:47:29",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "iamjpg",
              "repo_name": "/",
              "created_at": "2011-02-23 05:45:07",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            },
            {
              "actor_login": "rwest",
              "repo_name": "/",
              "created_at": "2011-02-23 05:57:19",
              "total_changes": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "total_changes",
              "type": "UInt64"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 5.155340018,
            "rows_read": 1601472977,
            "bytes_read": 39075361058
          },
          "executionTime": 5.198,
          "requestId": "01JTFX86ANANRF5N4Z1EAR2ZKZ",
          "length": 1407
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.833,
          "totalDuration": 2.147,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 87,
            "totalTokens": 4908
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    pr.repo_name,\n    pr.number as pr_number,\n    pr.title as pr_title,\n    countIf(review_state = 'changes_requested') as changes_requested_count,\n    count() as total_reviews,\n    round(countIf(review_state = 'changes_requested') / count() * 100, 2) as changes_requested_percentage,\n    max(pr.created_at) as pr_created_at\nFROM github_events pr\nWHERE event_type = 'PullRequestReviewEvent'\n    AND review_state = 'changes_requested'\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY pr.repo_name, pr.number, pr.title\nHAVING total_reviews >= 5\nORDER BY changes_requested_percentage DESC, total_reviews DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_number",
          "type": "Int32"
        },
        {
          "name": "pr_title",
          "type": "Nullable(String)"
        },
        {
          "name": "changes_requested_count",
          "type": "UInt64"
        },
        {
          "name": "total_reviews",
          "type": "UInt64"
        },
        {
          "name": "changes_requested_percentage",
          "type": "Float64"
        },
        {
          "name": "pr_created_at",
          "type": "DateTime"
        }
      ],
      "statistics": {
        "elapsed": 0.004661782,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.022,
      "requestId": "01JTFX8HKS665PJZGGPR9CNV88",
      "length": 2
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.734,
      "totalDuration": 3.877,
      "tokens": {
        "promptTokens": 4820,
        "completionTokens": 212,
        "totalTokens": 5032
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    pr.repo_name,\n    pr.number as pr_number,\n    pr.title as pr_title,\n    countIf(review_state = 'changes_requested') as changes_requested_count,\n    count() as total_reviews,\n    round(countIf(review_state = 'changes_requested') / count() * 100, 2) as changes_requested_percentage,\n    max(pr.created_at) as pr_created_at\nFROM github_events pr\nWHERE event_type = 'PullRequestReviewEvent'\n    AND review_state = 'changes_requested'\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY pr.repo_name, pr.number, pr.title\nHAVING total_reviews >= 5\nORDER BY changes_requested_percentage DESC, total_reviews DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_number",
              "type": "Int32"
            },
            {
              "name": "pr_title",
              "type": "Nullable(String)"
            },
            {
              "name": "changes_requested_count",
              "type": "UInt64"
            },
            {
              "name": "total_reviews",
              "type": "UInt64"
            },
            {
              "name": "changes_requested_percentage",
              "type": "Float64"
            },
            {
              "name": "pr_created_at",
              "type": "DateTime"
            }
          ],
          "statistics": {
            "elapsed": 0.004661782,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.022,
          "requestId": "01JTFX8HKS665PJZGGPR9CNV88",
          "length": 2
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.734,
          "totalDuration": 3.877,
          "tokens": {
            "promptTokens": 4820,
            "completionTokens": 212,
            "totalTokens": 5032
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY total_pushes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "total_pushes": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "total_pushes": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "total_pushes": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "total_pushes": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "total_pushes": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "total_pushes": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "total_pushes": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "total_pushes": 3139278
        },
        {
          "actor_login": "newstools",
          "total_pushes": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "total_pushes": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.785998892,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.832,
      "requestId": "01JTFX8T7ZA6Z5N5864FKCHZN5",
      "length": 552
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 5.457,
      "totalDuration": 6.288,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 58,
        "totalTokens": 4880
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY total_pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "total_pushes": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "total_pushes": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "total_pushes": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "total_pushes": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "total_pushes": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "total_pushes": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "total_pushes": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "total_pushes": 3139278
            },
            {
              "actor_login": "newstools",
              "total_pushes": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "total_pushes": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.785998892,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.832,
          "requestId": "01JTFX8T7ZA6Z5N5864FKCHZN5",
          "length": 552
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 5.457,
          "totalDuration": 6.288,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 58,
            "totalTokens": 4880
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= 5\nORDER BY total_pushes DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.021,
      "requestId": "01JTFX9FW30BDMEX0V25Z9HNE3",
      "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
      "length": 2
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND action = 'started'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY count() DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        GROUP BY actor_login \n        HAVING count() >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY actor_login \n        HAVING count() >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.354,
      "totalDuration": 3.766,
      "tokens": {
        "promptTokens": 5593,
        "completionTokens": 307,
        "totalTokens": 5900
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND action = 'started'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTFX93PPK6S5WJDGRYZK8H7N",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.673,
          "totalDuration": 4.378,
          "tokens": {
            "promptTokens": 4876,
            "completionTokens": 311,
            "totalTokens": 5187
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY count() DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        GROUP BY actor_login \n        HAVING count() >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY actor_login \n        HAVING count() >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.022,
          "requestId": "01JTFX99QHWW693HFJQZT4F8SK",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND action = 'started'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.816,
          "totalDuration": 3.646,
          "tokens": {
            "promptTokens": 5245,
            "completionTokens": 290,
            "totalTokens": 5535
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= 5\nORDER BY total_pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTFX9FW30BDMEX0V25Z9HNE3",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND action = 'started'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login,\n    COUNT(*) as total_pushes,\n    COUNT(DISTINCT repo_name) as total_repos,\n    argMax(repo_name, COUNT(*)) as favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND actor_login NOT LIKE '%[bot]'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY count() DESC \n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        GROUP BY actor_login \n        HAVING count() >= 2\n    )\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY actor_login \n        HAVING count() >= 2\n    )\nGROUP BY actor_login\nHAVING total_repos >= 5\nORDER BY total_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.354,
          "totalDuration": 3.766,
          "tokens": {
            "promptTokens": 5593,
            "completionTokens": 307,
            "totalTokens": 5900
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.244925699,
        "rows_read": 232190399,
        "bytes_read": 928496724
      },
      "executionTime": 1.264,
      "requestId": "01JTFX9KYDDY3ARP3KG1QPM747",
      "length": 517
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.714,
      "totalDuration": 1.649,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 60,
        "totalTokens": 4882
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND action = 'started'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.244925699,
            "rows_read": 232190399,
            "bytes_read": 928496724
          },
          "executionTime": 1.264,
          "requestId": "01JTFX9KYDDY3ARP3KG1QPM747",
          "length": 517
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.714,
          "totalDuration": 1.649,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 60,
            "totalTokens": 4882
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    splitByChar('/', repo_name)[1] as organization,\n    count(DISTINCT repo_name) as number_of_repos\nFROM github_events\nWHERE organization != ''\nGROUP BY organization\nORDER BY number_of_repos DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "organization": "direwolf-github",
          "number_of_repos": 1476731
        },
        {
          "organization": "Likj128",
          "number_of_repos": 409130
        },
        {
          "organization": "circle-test-organization",
          "number_of_repos": 340186
        },
        {
          "organization": "learn-co-students",
          "number_of_repos": 325329
        },
        {
          "organization": "botcopado",
          "number_of_repos": 136118
        },
        {
          "organization": "idsqat1",
          "number_of_repos": 130217
        },
        {
          "organization": "dvcsconnectortest",
          "number_of_repos": 128338
        },
        {
          "organization": "mathias7777",
          "number_of_repos": 128099
        },
        {
          "organization": "autotester-one",
          "number_of_repos": 125910
        },
        {
          "organization": "isisliu",
          "number_of_repos": 121787
        }
      ],
      "meta": [
        {
          "name": "organization",
          "type": "String"
        },
        {
          "name": "number_of_repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 49.819728782,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 49.866,
      "requestId": "01JTFX9SHBDZPYPG5AQS2903SF",
      "length": 580
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.919,
      "totalDuration": 1.935,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 66,
        "totalTokens": 4888
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] as organization,\n    count(DISTINCT repo_name) as number_of_repos\nFROM github_events\nWHERE organization != ''\nGROUP BY organization\nORDER BY number_of_repos DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "organization": "direwolf-github",
              "number_of_repos": 1476731
            },
            {
              "organization": "Likj128",
              "number_of_repos": 409130
            },
            {
              "organization": "circle-test-organization",
              "number_of_repos": 340186
            },
            {
              "organization": "learn-co-students",
              "number_of_repos": 325329
            },
            {
              "organization": "botcopado",
              "number_of_repos": 136118
            },
            {
              "organization": "idsqat1",
              "number_of_repos": 130217
            },
            {
              "organization": "dvcsconnectortest",
              "number_of_repos": 128338
            },
            {
              "organization": "mathias7777",
              "number_of_repos": 128099
            },
            {
              "organization": "autotester-one",
              "number_of_repos": 125910
            },
            {
              "organization": "isisliu",
              "number_of_repos": 121787
            }
          ],
          "meta": [
            {
              "name": "organization",
              "type": "String"
            },
            {
              "name": "number_of_repos",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 49.819728782,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 49.866,
          "requestId": "01JTFX9SHBDZPYPG5AQS2903SF",
          "length": 580
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.919,
          "totalDuration": 1.935,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 66,
            "totalTokens": 4888
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as community_size\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "community_size": 736368
        },
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 279405
        },
        {
          "repo_name": "jtleek/datasharing",
          "community_size": 264395
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 259323
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 223352
        },
        {
          "repo_name": "facebook/react",
          "community_size": 211153
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 205351
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 203955
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "community_size": 193542
        },
        {
          "repo_name": "github/gitignore",
          "community_size": 182330
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 96.149225033,
        "rows_read": 3124889133,
        "bytes_read": 12479247115
      },
      "executionTime": 96.193,
      "requestId": "01JTFXBED8B9FA96S1J6YVXES9",
      "length": 562
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.9,
      "totalDuration": 1.775,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 56,
        "totalTokens": 4878
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as community_size\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "community_size": 736368
            },
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 279405
            },
            {
              "repo_name": "jtleek/datasharing",
              "community_size": 264395
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 259323
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 223352
            },
            {
              "repo_name": "facebook/react",
              "community_size": 211153
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 205351
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 203955
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "community_size": 193542
            },
            {
              "repo_name": "github/gitignore",
              "community_size": 182330
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 96.149225033,
            "rows_read": 3124889133,
            "bytes_read": 12479247115
          },
          "executionTime": 96.193,
          "requestId": "01JTFXBED8B9FA96S1J6YVXES9",
          "length": 562
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.9,
          "totalDuration": 1.775,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 56,
            "totalTokens": 4878
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    SUM(additions) as total_additions,\n    SUM(deletions) as total_deletions,\n    SUM(additions + deletions) as total_changes\nFROM github_events\nWHERE additions > 0 OR deletions > 0\nGROUP BY repo_name\nORDER BY total_changes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "fakegit/cdnjs",
          "total_additions": 6222756523,
          "total_deletions": 971500,
          "total_changes": 6223728023
        },
        {
          "repo_name": "Qwerty0x64/cdnjs",
          "total_additions": 5706948901,
          "total_deletions": 702152,
          "total_changes": 5707651053
        },
        {
          "repo_name": "srz-zumix/iutest-ci-results",
          "total_additions": 3176317839,
          "total_deletions": 1006504276,
          "total_changes": 4182822115
        },
        {
          "repo_name": "ikingye/cdnjs",
          "total_additions": 1999629310,
          "total_deletions": 234869,
          "total_changes": 1999864179
        },
        {
          "repo_name": "Azure/azure-powershell",
          "total_additions": 714587109,
          "total_deletions": 567893162,
          "total_changes": 1282480271
        },
        {
          "repo_name": "tomekw/whatever",
          "total_additions": 323298837,
          "total_deletions": 943026794,
          "total_changes": 1266325631
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_additions": 434066544,
          "total_deletions": 766055610,
          "total_changes": 1200122154
        },
        {
          "repo_name": "robertoDiaz/liferay-portal",
          "total_additions": 551152902,
          "total_deletions": 414840747,
          "total_changes": 965993649
        },
        {
          "repo_name": "silky/whatever",
          "total_additions": 2397,
          "total_deletions": 941459364,
          "total_changes": 941461761
        },
        {
          "repo_name": "viliml/whatever",
          "total_additions": 10,
          "total_deletions": 941451334,
          "total_changes": 941451344
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        },
        {
          "name": "total_changes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.213643656,
        "rows_read": 3124889133,
        "bytes_read": 25430047860
      },
      "executionTime": 2.259,
      "requestId": "01JTFXEH0FJZE5HKKQ0H40JE5R",
      "length": 1179
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.182,
      "totalDuration": 2.268,
      "tokens": {
        "promptTokens": 4840,
        "completionTokens": 88,
        "totalTokens": 4928
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    SUM(additions) as total_additions,\n    SUM(deletions) as total_deletions,\n    SUM(additions + deletions) as total_changes\nFROM github_events\nWHERE additions > 0 OR deletions > 0\nGROUP BY repo_name\nORDER BY total_changes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "fakegit/cdnjs",
              "total_additions": 6222756523,
              "total_deletions": 971500,
              "total_changes": 6223728023
            },
            {
              "repo_name": "Qwerty0x64/cdnjs",
              "total_additions": 5706948901,
              "total_deletions": 702152,
              "total_changes": 5707651053
            },
            {
              "repo_name": "srz-zumix/iutest-ci-results",
              "total_additions": 3176317839,
              "total_deletions": 1006504276,
              "total_changes": 4182822115
            },
            {
              "repo_name": "ikingye/cdnjs",
              "total_additions": 1999629310,
              "total_deletions": 234869,
              "total_changes": 1999864179
            },
            {
              "repo_name": "Azure/azure-powershell",
              "total_additions": 714587109,
              "total_deletions": 567893162,
              "total_changes": 1282480271
            },
            {
              "repo_name": "tomekw/whatever",
              "total_additions": 323298837,
              "total_deletions": 943026794,
              "total_changes": 1266325631
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_additions": 434066544,
              "total_deletions": 766055610,
              "total_changes": 1200122154
            },
            {
              "repo_name": "robertoDiaz/liferay-portal",
              "total_additions": 551152902,
              "total_deletions": 414840747,
              "total_changes": 965993649
            },
            {
              "repo_name": "silky/whatever",
              "total_additions": 2397,
              "total_deletions": 941459364,
              "total_changes": 941461761
            },
            {
              "repo_name": "viliml/whatever",
              "total_additions": 10,
              "total_deletions": 941451334,
              "total_changes": 941451344
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            },
            {
              "name": "total_changes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.213643656,
            "rows_read": 3124889133,
            "bytes_read": 25430047860
          },
          "executionTime": 2.259,
          "requestId": "01JTFXEH0FJZE5HKKQ0H40JE5R",
          "length": 1179
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.182,
          "totalDuration": 2.268,
          "tokens": {
            "promptTokens": 4840,
            "completionTokens": 88,
            "totalTokens": 4928
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "push_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "push_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "push_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "push_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "push_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "push_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "push_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "push_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "push_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "push_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 40.421347774,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 40.44,
      "requestId": "01JTFXEQ2GRVZCQ9JZNKR2YB16",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.839,
      "totalDuration": 1.47,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 56,
        "totalTokens": 4880
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "push_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "push_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "push_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "push_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "push_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "push_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "push_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "push_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "push_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "push_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 40.421347774,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 40.44,
          "requestId": "01JTFXEQ2GRVZCQ9JZNKR2YB16",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.839,
          "totalDuration": 1.47,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 56,
            "totalTokens": 4880
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_reviews\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY actor_login\nORDER BY total_reviews DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "github-learning-lab[bot]",
          "total_reviews": 104542
        },
        {
          "actor_login": "github-actions[bot]",
          "total_reviews": 89676
        },
        {
          "actor_login": "bot-monkey-2",
          "total_reviews": 31702
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "total_reviews": 29429
        },
        {
          "actor_login": "foreign-sub",
          "total_reviews": 17630
        },
        {
          "actor_login": "renovate-approve[bot]",
          "total_reviews": 16563
        },
        {
          "actor_login": "kodiakhq[bot]",
          "total_reviews": 10876
        },
        {
          "actor_login": "Katsuno0814",
          "total_reviews": 6966
        },
        {
          "actor_login": "BrewTestBot",
          "total_reviews": 6718
        },
        {
          "actor_login": "accesslint[bot]",
          "total_reviews": 6668
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_reviews",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.04813166,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.067,
      "requestId": "01JTFXG2NBCBDHY1DXP7F3JA2Y",
      "length": 567
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.988,
      "totalDuration": 1.692,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 59,
        "totalTokens": 4881
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_reviews\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY actor_login\nORDER BY total_reviews DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "github-learning-lab[bot]",
              "total_reviews": 104542
            },
            {
              "actor_login": "github-actions[bot]",
              "total_reviews": 89676
            },
            {
              "actor_login": "bot-monkey-2",
              "total_reviews": 31702
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "total_reviews": 29429
            },
            {
              "actor_login": "foreign-sub",
              "total_reviews": 17630
            },
            {
              "actor_login": "renovate-approve[bot]",
              "total_reviews": 16563
            },
            {
              "actor_login": "kodiakhq[bot]",
              "total_reviews": 10876
            },
            {
              "actor_login": "Katsuno0814",
              "total_reviews": 6966
            },
            {
              "actor_login": "BrewTestBot",
              "total_reviews": 6718
            },
            {
              "actor_login": "accesslint[bot]",
              "total_reviews": 6668
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_reviews",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.04813166,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.067,
          "requestId": "01JTFXG2NBCBDHY1DXP7F3JA2Y",
          "length": 567
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.988,
          "totalDuration": 1.692,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 59,
            "totalTokens": 4881
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    arrayJoin(labels) as label,\n    count() as count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND labels != []\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "dependencies",
          "count": 9458518
        },
        {
          "label": "enhancement",
          "count": 6805408
        },
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": ":arrow_heading_down: pull",
          "count": 4124651
        },
        {
          "label": "question",
          "count": 934878
        },
        {
          "label": "help wanted",
          "count": 757775
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "cla: yes",
          "count": 653842
        },
        {
          "label": "documentation",
          "count": 512616
        },
        {
          "label": "javascript",
          "count": 507441
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.976283985,
        "rows_read": 326129279,
        "bytes_read": 3089508231
      },
      "executionTime": 0.996,
      "requestId": "01JTFXG72ZPS2XJ6N9A3TT3DZK",
      "length": 393
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.798,
      "totalDuration": 1.963,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 67,
        "totalTokens": 4891
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    arrayJoin(labels) as label,\n    count() as count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND labels != []\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "dependencies",
              "count": 9458518
            },
            {
              "label": "enhancement",
              "count": 6805408
            },
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": ":arrow_heading_down: pull",
              "count": 4124651
            },
            {
              "label": "question",
              "count": 934878
            },
            {
              "label": "help wanted",
              "count": 757775
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "cla: yes",
              "count": 653842
            },
            {
              "label": "documentation",
              "count": 512616
            },
            {
              "label": "javascript",
              "count": 507441
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.976283985,
            "rows_read": 326129279,
            "bytes_read": 3089508231
          },
          "executionTime": 0.996,
          "requestId": "01JTFXG72ZPS2XJ6N9A3TT3DZK",
          "length": 393
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.798,
          "totalDuration": 1.963,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 67,
            "totalTokens": 4891
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    arrayJoin(labels) as label,\n    count(*) as count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND (lower(arrayJoin(labels)) LIKE '%bug%' OR lower(arrayJoin(labels)) LIKE '%feature%')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "Bug",
          "count": 501959
        },
        {
          "label": "kind/bug",
          "count": 164302
        },
        {
          "label": "Feature",
          "count": 159482
        },
        {
          "label": "feature request",
          "count": 139669
        },
        {
          "label": "type: bug",
          "count": 138342
        },
        {
          "label": "Type: Bug",
          "count": 116961
        },
        {
          "label": "new feature",
          "count": 76433
        },
        {
          "label": "type:bug",
          "count": 66866
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.972465231,
        "rows_read": 326129279,
        "bytes_read": 3089461446
      },
      "executionTime": 0.991,
      "requestId": "01JTFXGCN4TEFVM195DZZJSD8E",
      "length": 360
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.84,
      "totalDuration": 2.203,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 95,
        "totalTokens": 4925
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    arrayJoin(labels) as label,\n    count(*) as count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND (lower(arrayJoin(labels)) LIKE '%bug%' OR lower(arrayJoin(labels)) LIKE '%feature%')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "Bug",
              "count": 501959
            },
            {
              "label": "kind/bug",
              "count": 164302
            },
            {
              "label": "Feature",
              "count": 159482
            },
            {
              "label": "feature request",
              "count": 139669
            },
            {
              "label": "type: bug",
              "count": 138342
            },
            {
              "label": "Type: Bug",
              "count": 116961
            },
            {
              "label": "new feature",
              "count": 76433
            },
            {
              "label": "type:bug",
              "count": 66866
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.972465231,
            "rows_read": 326129279,
            "bytes_read": 3089461446
          },
          "executionTime": 0.991,
          "requestId": "01JTFXGCN4TEFVM195DZZJSD8E",
          "length": 360
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.84,
          "totalDuration": 2.203,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 95,
            "totalTokens": 4925
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT DISTINCT repo_name, CHAR_LENGTH(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nORDER BY name_length DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 17.406,
      "requestId": "01JTFXHQHV5DZVZJYX3TQ302YY",
      "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
      "length": 2
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 longest repository names\"\n\nYou generated this SQL query:\n```sql\nSELECT DISTINCT repo_name\nFROM github_events\nORDER BY length(repo_name) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT DISTINCT repo_name, CHARACTER_LENGTH(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nORDER BY name_length DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.283,
      "totalDuration": 1.363,
      "tokens": {
        "promptTokens": 5013,
        "completionTokens": 48,
        "totalTokens": 5061
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT DISTINCT repo_name\nFROM github_events\nORDER BY length(repo_name) DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 13.671,
          "requestId": "01JTFXGHGYQCFPSBSRRSNDRM03",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.451,
          "totalDuration": 1.467,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 30,
            "totalTokens": 4849
          }
        },
        "error": null
      },
      {
        "sql": "SELECT DISTINCT repo_name, CHARACTER_LENGTH(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nORDER BY name_length DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 17.455,
          "requestId": "01JTFXH2QPZ446MFQMJ9ZAA5Y3",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 longest repository names\"\n\nYou generated this SQL query:\n```sql\nSELECT DISTINCT repo_name\nFROM github_events\nORDER BY length(repo_name) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.839,
          "totalDuration": 1.477,
          "tokens": {
            "promptTokens": 4908,
            "completionTokens": 47,
            "totalTokens": 4955
          }
        },
        "error": null
      },
      {
        "sql": "SELECT DISTINCT repo_name, CHAR_LENGTH(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nORDER BY name_length DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 17.406,
          "requestId": "01JTFXHQHV5DZVZJYX3TQ302YY",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 longest repository names\"\n\nYou generated this SQL query:\n```sql\nSELECT DISTINCT repo_name\nFROM github_events\nORDER BY length(repo_name) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nSELECT DISTINCT repo_name, CHARACTER_LENGTH(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nORDER BY name_length DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.283,
          "totalDuration": 1.363,
          "tokens": {
            "promptTokens": 5013,
            "completionTokens": 48,
            "totalTokens": 5061
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    length(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY name_length ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "name_length": 1
        },
        {
          "repo_name": "/c",
          "name_length": 2
        },
        {
          "repo_name": "/z",
          "name_length": 2
        },
        {
          "repo_name": "/n",
          "name_length": 2
        },
        {
          "repo_name": "/h",
          "name_length": 2
        },
        {
          "repo_name": "/-",
          "name_length": 2
        },
        {
          "repo_name": "/a",
          "name_length": 2
        },
        {
          "repo_name": "/x",
          "name_length": 2
        },
        {
          "repo_name": "/av",
          "name_length": 3
        },
        {
          "repo_name": "/pr",
          "name_length": 3
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 41.693805456,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 41.745,
      "requestId": "01JTFXJCTNA9ZYRJMWHENR8ZFR",
      "length": 352
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.158,
      "totalDuration": 1.847,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 55,
        "totalTokens": 4874
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    length(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY name_length ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "name_length": 1
            },
            {
              "repo_name": "/c",
              "name_length": 2
            },
            {
              "repo_name": "/z",
              "name_length": 2
            },
            {
              "repo_name": "/n",
              "name_length": 2
            },
            {
              "repo_name": "/h",
              "name_length": 2
            },
            {
              "repo_name": "/-",
              "name_length": 2
            },
            {
              "repo_name": "/a",
              "name_length": 2
            },
            {
              "repo_name": "/x",
              "name_length": 2
            },
            {
              "repo_name": "/av",
              "name_length": 3
            },
            {
              "repo_name": "/pr",
              "name_length": 3
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 41.693805456,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 41.745,
          "requestId": "01JTFXJCTNA9ZYRJMWHENR8ZFR",
          "length": 352
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.158,
          "totalDuration": 1.847,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 55,
            "totalTokens": 4874
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() as comment_count\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'CommitCommentEvent', 'PullRequestReviewCommentEvent')\n    AND body ILIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 11811
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 6775
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 1555
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 671
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 485
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 443
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "comment_count": 380
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 276
        },
        {
          "repo_name": "bugron/TestPrBot",
          "comment_count": 249
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 215
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 12.929701007,
        "rows_read": 284616113,
        "bytes_read": 102862593718
      },
      "executionTime": 12.983,
      "requestId": "01JTFXKTVJ3NR1EWS7F4J03RBN",
      "length": 606
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.558,
      "totalDuration": 2.882,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 90,
        "totalTokens": 4915
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() as comment_count\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'CommitCommentEvent', 'PullRequestReviewCommentEvent')\n    AND body ILIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 11811
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 6775
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 1555
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 671
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 485
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 443
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "comment_count": 380
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 276
            },
            {
              "repo_name": "bugron/TestPrBot",
              "comment_count": 249
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 215
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 12.929701007,
            "rows_read": 284616113,
            "bytes_read": 102862593718
          },
          "executionTime": 12.983,
          "requestId": "01JTFXKTVJ3NR1EWS7F4J03RBN",
          "length": 606
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.558,
          "totalDuration": 2.882,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 90,
            "totalTokens": 4915
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(*) as comment_count,\n    countIf(event_type = 'WatchEvent') as stars\nFROM github_events\nWHERE body LIKE '%freecodecamp%'\n    AND event_type IN ('IssueCommentEvent', 'CommitCommentEvent', 'PullRequestReviewCommentEvent')\nGROUP BY repo_name\nHAVING comment_count > 0\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "graasp/graasp-app-code",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "karma-runner/karma",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "strongloop/loopback",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "FreeCodeCampOKC/fccokc_web",
          "comment_count": 2,
          "stars": 0
        },
        {
          "repo_name": "racket/racket-ci",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "IvoPereiraRuntime/Onboarding",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "zhuyujiess/daily-note",
          "comment_count": 2,
          "stars": 0
        },
        {
          "repo_name": "WICG/cq-usecases",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "meanjs/mean",
          "comment_count": 1,
          "stars": 0
        },
        {
          "repo_name": "CMSgov/eAPD",
          "comment_count": 1,
          "stars": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 10.504582732,
        "rows_read": 284616113,
        "bytes_read": 102596357965
      },
      "executionTime": 10.553,
      "requestId": "01JTFXMCD4Q4ZTJD2S1S6ND75G",
      "length": 639
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 0.92,
      "totalDuration": 2.492,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 116,
        "totalTokens": 4946
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(*) as comment_count,\n    countIf(event_type = 'WatchEvent') as stars\nFROM github_events\nWHERE body LIKE '%freecodecamp%'\n    AND event_type IN ('IssueCommentEvent', 'CommitCommentEvent', 'PullRequestReviewCommentEvent')\nGROUP BY repo_name\nHAVING comment_count > 0\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "graasp/graasp-app-code",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "karma-runner/karma",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "strongloop/loopback",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "FreeCodeCampOKC/fccokc_web",
              "comment_count": 2,
              "stars": 0
            },
            {
              "repo_name": "racket/racket-ci",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "IvoPereiraRuntime/Onboarding",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "zhuyujiess/daily-note",
              "comment_count": 2,
              "stars": 0
            },
            {
              "repo_name": "WICG/cq-usecases",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "meanjs/mean",
              "comment_count": 1,
              "stars": 0
            },
            {
              "repo_name": "CMSgov/eAPD",
              "comment_count": 1,
              "stars": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 10.504582732,
            "rows_read": 284616113,
            "bytes_read": 102596357965
          },
          "executionTime": 10.553,
          "requestId": "01JTFXMCD4Q4ZTJD2S1S6ND75G",
          "length": 639
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 0.92,
          "totalDuration": 2.492,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 116,
            "totalTokens": 4946
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    body,\n    repo_name,\n    created_at,\n    comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND body IS NOT NULL\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 8.219420438,
        "rows_read": 218620144,
        "bytes_read": 94274021322
      },
      "executionTime": 8.264,
      "requestId": "01JTFXMV15KRMQKKDJ4X827AJ5",
      "length": 1901
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "claude-3.5-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.433,
      "totalDuration": 1.925,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 68,
        "totalTokens": 4889
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    body,\n    repo_name,\n    created_at,\n    comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND body IS NOT NULL\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 8.219420438,
            "rows_read": 218620144,
            "bytes_read": 94274021322
          },
          "executionTime": 8.264,
          "requestId": "01JTFXMV15KRMQKKDJ4X827AJ5",
          "length": 1901
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "claude-3.5-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.433,
          "totalDuration": 1.925,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 68,
            "totalTokens": 4889
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "star_count": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "star_count": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "star_count": 199731
        },
        {
          "repo_name": "facebook/react",
          "star_count": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "star_count": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "star_count": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "star_count": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "star_count": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "star_count": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "star_count": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.225049839,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.245,
      "requestId": "01JTFXN7SGDY3HPSR2XBNPKBRD",
      "length": 567
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.095,
      "totalDuration": 2.32,
      "tokens": {
        "promptTokens": 4833,
        "completionTokens": 56,
        "totalTokens": 4889
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "star_count": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "star_count": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "star_count": 199731
            },
            {
              "repo_name": "facebook/react",
              "star_count": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "star_count": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "star_count": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "star_count": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "star_count": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "star_count": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "star_count": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.225049839,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.245,
          "requestId": "01JTFXN7SGDY3HPSR2XBNPKBRD",
          "length": 567
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.095,
          "totalDuration": 2.32,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 56,
            "totalTokens": 4889
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.198181024,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.217,
      "requestId": "01JTFXNF96CG1P89EFPZMJW8M7",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 3.841,
      "totalDuration": 3.923,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 52,
        "totalTokens": 4871
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.198181024,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.217,
          "requestId": "01JTFXNF96CG1P89EFPZMJW8M7",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 3.841,
          "totalDuration": 3.923,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 52,
            "totalTokens": 4871
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    CASE \n        WHEN event_type = 'WatchEvent' THEN \n            CASE \n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 1 AND 10\n                ) THEN '1-10'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 11 AND 100\n                ) THEN '11-100'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 101 AND 1000\n                ) THEN '101-1000'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 1001 AND 10000\n                ) THEN '1001-10000'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 10001 AND 100000\n                ) THEN '10001-100000'\n                ELSE '100000+'\n            END\n    END AS star_range,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY star_range\nORDER BY star_range\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "star_range": "1-10",
          "repo_count": 15141280
        },
        {
          "star_range": "100000+",
          "repo_count": 20
        },
        {
          "star_range": "10001-100000",
          "repo_count": 1847
        },
        {
          "star_range": "1001-10000",
          "repo_count": 28914
        },
        {
          "star_range": "101-1000",
          "repo_count": 210041
        },
        {
          "star_range": "11-100",
          "repo_count": 1093176
        }
      ],
      "meta": [
        {
          "name": "star_range",
          "type": "Nullable(String)"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 17.10709167,
        "rows_read": 1393142394,
        "bytes_read": 4178230404
      },
      "executionTime": 17.158,
      "requestId": "01JTFXP0P8QNDCZCEZSFVMN4KR",
      "length": 272
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars BETWEEN 1 AND 10 THEN '1-10'\n        WHEN stars BETWEEN 11 AND 100 THEN '11-100'\n        WHEN stars BETWEEN 101 AND 1000 THEN '101-1000'\n        WHEN stars BETWEEN 1001 AND 10000 THEN '1001-10000'\n        WHEN stars BETWEEN 10001 AND 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nGROUP BY star_range\nORDER BY \n    CASE star_range\n        WHEN '0' THEN 0\n        WHEN '1-10' THEN 1\n        WHEN '11-100' THEN 2\n        WHEN '101-1000' THEN 3\n        WHEN '1001-10000' THEN 4\n        WHEN '10001-100000' THEN 5\n        ELSE 6\n    END\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.178,
      "totalDuration": 6.699,
      "tokens": {
        "promptTokens": 5182,
        "completionTokens": 485,
        "totalTokens": 5667
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars BETWEEN 1 AND 10 THEN '1-10'\n        WHEN stars BETWEEN 11 AND 100 THEN '11-100'\n        WHEN stars BETWEEN 101 AND 1000 THEN '101-1000'\n        WHEN stars BETWEEN 1001 AND 10000 THEN '1001-10000'\n        WHEN stars BETWEEN 10001 AND 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nGROUP BY star_range\nORDER BY \n    CASE star_range\n        WHEN '0' THEN 0\n        WHEN '1-10' THEN 1\n        WHEN '11-100' THEN 2\n        WHEN '101-1000' THEN 3\n        WHEN '1001-10000' THEN 4\n        WHEN '10001-100000' THEN 5\n        ELSE 6\n    END\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTFXNQN895400M94VNCRHBK9",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT multiIf(stars = 0, '0', (stars >= 1) AND (stars <= 10), '1-10', (stars >= 11) AND (stars <= 100), '11-100', (stars >= 101) AND (stars <= 1000), '101-1000', (stars >= 1001) AND (stars <= 10000), '1001-10000', (stars >= 10001) AND (stars <= 100000), '10001-100000', '100000+') AS star_range, COUNTDistinct(repo_name) AS repo_count FROM github_llm_bench.github_events AS github_events GROUP BY star_range ORDER BY case",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.576,
          "totalDuration": 4.857,
          "tokens": {
            "promptTokens": 4836,
            "completionTokens": 287,
            "totalTokens": 5123
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    CASE \n        WHEN event_type = 'WatchEvent' THEN \n            CASE \n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 1 AND 10\n                ) THEN '1-10'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 11 AND 100\n                ) THEN '11-100'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 101 AND 1000\n                ) THEN '101-1000'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 1001 AND 10000\n                ) THEN '1001-10000'\n                WHEN repo_name IN (\n                    SELECT repo_name \n                    FROM github_events \n                    WHERE event_type = 'WatchEvent' \n                    GROUP BY repo_name \n                    HAVING COUNT(*) BETWEEN 10001 AND 100000\n                ) THEN '10001-100000'\n                ELSE '100000+'\n            END\n    END AS star_range,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY star_range\nORDER BY star_range\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "star_range": "1-10",
              "repo_count": 15141280
            },
            {
              "star_range": "100000+",
              "repo_count": 20
            },
            {
              "star_range": "10001-100000",
              "repo_count": 1847
            },
            {
              "star_range": "1001-10000",
              "repo_count": 28914
            },
            {
              "star_range": "101-1000",
              "repo_count": 210041
            },
            {
              "star_range": "11-100",
              "repo_count": 1093176
            }
          ],
          "meta": [
            {
              "name": "star_range",
              "type": "Nullable(String)"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 17.10709167,
            "rows_read": 1393142394,
            "bytes_read": 4178230404
          },
          "executionTime": 17.158,
          "requestId": "01JTFXP0P8QNDCZCEZSFVMN4KR",
          "length": 272
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    CASE \n        WHEN stars = 0 THEN '0'\n        WHEN stars BETWEEN 1 AND 10 THEN '1-10'\n        WHEN stars BETWEEN 11 AND 100 THEN '11-100'\n        WHEN stars BETWEEN 101 AND 1000 THEN '101-1000'\n        WHEN stars BETWEEN 1001 AND 10000 THEN '1001-10000'\n        WHEN stars BETWEEN 10001 AND 100000 THEN '10001-100000'\n        ELSE '100000+'\n    END AS star_range,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nGROUP BY star_range\nORDER BY \n    CASE star_range\n        WHEN '0' THEN 0\n        WHEN '1-10' THEN 1\n        WHEN '11-100' THEN 2\n        WHEN '101-1000' THEN 3\n        WHEN '1001-10000' THEN 4\n        WHEN '10001-100000' THEN 5\n        ELSE 6\n    END\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.178,
          "totalDuration": 6.699,
          "tokens": {
            "promptTokens": 5182,
            "completionTokens": 485,
            "totalTokens": 5667
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_repositories": 165611259
        }
      ],
      "meta": [
        {
          "name": "total_repositories",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.291924094,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.335,
      "requestId": "01JTFXPNPXGCTPXB2CHSEVPSFY",
      "length": 34
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.159,
      "totalDuration": 1.869,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 27,
        "totalTokens": 4846
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_repositories": 165611259
            }
          ],
          "meta": [
            {
              "name": "total_repositories",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.291924094,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.335,
          "requestId": "01JTFXPNPXGCTPXB2CHSEVPSFY",
          "length": 34
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.159,
          "totalDuration": 1.869,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 27,
            "totalTokens": 4846
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01' AND created_at < '2024-01-01'\nGROUP BY year, repo_name\nORDER BY year, event_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo_name": "direwolf-github/my-app",
          "event_count": 659546
        },
        {
          "year": 2015,
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 510424
        },
        {
          "year": 2015,
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "event_count": 310733
        },
        {
          "year": 2015,
          "repo_name": "sakai-mirror/melete",
          "event_count": 256758
        },
        {
          "year": 2015,
          "repo_name": "Door43/d43-en",
          "event_count": 226907
        },
        {
          "year": 2015,
          "repo_name": "apache/spark",
          "event_count": 223230
        },
        {
          "year": 2015,
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 189974
        },
        {
          "year": 2015,
          "repo_name": "dchekhonin/testDM",
          "event_count": 151983
        },
        {
          "year": 2015,
          "repo_name": "docker/docker",
          "event_count": 132956
        },
        {
          "year": 2015,
          "repo_name": "kubernetes/kubernetes",
          "event_count": 129690
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 63.74096429,
        "rows_read": 2843662884,
        "bytes_read": 17048892505
      },
      "executionTime": 63.791,
      "requestId": "01JTFXQJZ9A34MRJ89RCH7EK6A",
      "length": 709
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.533,
      "totalDuration": 3.12,
      "tokens": {
        "promptTokens": 4827,
        "completionTokens": 86,
        "totalTokens": 4913
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01' AND created_at < '2024-01-01'\nGROUP BY year, repo_name\nORDER BY year, event_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2015,
              "repo_name": "direwolf-github/my-app",
              "event_count": 659546
            },
            {
              "year": 2015,
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 510424
            },
            {
              "year": 2015,
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "event_count": 310733
            },
            {
              "year": 2015,
              "repo_name": "sakai-mirror/melete",
              "event_count": 256758
            },
            {
              "year": 2015,
              "repo_name": "Door43/d43-en",
              "event_count": 226907
            },
            {
              "year": 2015,
              "repo_name": "apache/spark",
              "event_count": 223230
            },
            {
              "year": 2015,
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 189974
            },
            {
              "year": 2015,
              "repo_name": "dchekhonin/testDM",
              "event_count": 151983
            },
            {
              "year": 2015,
              "repo_name": "docker/docker",
              "event_count": 132956
            },
            {
              "year": 2015,
              "repo_name": "kubernetes/kubernetes",
              "event_count": 129690
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 63.74096429,
            "rows_read": 2843662884,
            "bytes_read": 17048892505
          },
          "executionTime": 63.791,
          "requestId": "01JTFXQJZ9A34MRJ89RCH7EK6A",
          "length": 709
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.533,
          "totalDuration": 3.12,
          "tokens": {
            "promptTokens": 4827,
            "completionTokens": 86,
            "totalTokens": 4913
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    toStartOfMonth(created_at) AS month,\n    countIf(event_type = 'WatchEvent') AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY month\nORDER BY month ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "month": "2011-02-01",
          "stars_count": 70433
        },
        {
          "month": "2011-03-01",
          "stars_count": 144981
        },
        {
          "month": "2011-04-01",
          "stars_count": 151883
        },
        {
          "month": "2011-05-01",
          "stars_count": 158780
        },
        {
          "month": "2011-06-01",
          "stars_count": 154525
        },
        {
          "month": "2011-07-01",
          "stars_count": 167971
        },
        {
          "month": "2011-08-01",
          "stars_count": 187851
        },
        {
          "month": "2011-09-01",
          "stars_count": 200671
        },
        {
          "month": "2011-10-01",
          "stars_count": 195250
        },
        {
          "month": "2011-11-01",
          "stars_count": 187448
        }
      ],
      "meta": [
        {
          "name": "month",
          "type": "Date"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.255886326,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.274,
      "requestId": "01JTFXSPAY5SNTJ0ENFR71QB97",
      "length": 440
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.121,
      "totalDuration": 2.716,
      "tokens": {
        "promptTokens": 4823,
        "completionTokens": 71,
        "totalTokens": 4894
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    toStartOfMonth(created_at) AS month,\n    countIf(event_type = 'WatchEvent') AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY month\nORDER BY month ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "month": "2011-02-01",
              "stars_count": 70433
            },
            {
              "month": "2011-03-01",
              "stars_count": 144981
            },
            {
              "month": "2011-04-01",
              "stars_count": 151883
            },
            {
              "month": "2011-05-01",
              "stars_count": 158780
            },
            {
              "month": "2011-06-01",
              "stars_count": 154525
            },
            {
              "month": "2011-07-01",
              "stars_count": 167971
            },
            {
              "month": "2011-08-01",
              "stars_count": 187851
            },
            {
              "month": "2011-09-01",
              "stars_count": 200671
            },
            {
              "month": "2011-10-01",
              "stars_count": 195250
            },
            {
              "month": "2011-11-01",
              "stars_count": 187448
            }
          ],
          "meta": [
            {
              "name": "month",
              "type": "Date"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.255886326,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.274,
          "requestId": "01JTFXSPAY5SNTJ0ENFR71QB97",
          "length": 440
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.121,
          "totalDuration": 2.716,
          "tokens": {
            "promptTokens": 4823,
            "completionTokens": 71,
            "totalTokens": 4894
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "star_count": 232492
        },
        {
          "actor_login": "salifm",
          "star_count": 202534
        },
        {
          "actor_login": "x0rzkov",
          "star_count": 73531
        },
        {
          "actor_login": "fly51fly",
          "star_count": 57756
        },
        {
          "actor_login": "PCOffline",
          "star_count": 56725
        },
        {
          "actor_login": "baslr",
          "star_count": 50363
        },
        {
          "actor_login": "gkze",
          "star_count": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "star_count": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "star_count": 44715
        },
        {
          "actor_login": "mcanthony",
          "star_count": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.465911026,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 5.513,
      "requestId": "01JTFXSV65DREHR5HPBBWYRJ61",
      "length": 460
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.013,
      "totalDuration": 2.165,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 56,
        "totalTokens": 4878
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "star_count": 232492
            },
            {
              "actor_login": "salifm",
              "star_count": 202534
            },
            {
              "actor_login": "x0rzkov",
              "star_count": 73531
            },
            {
              "actor_login": "fly51fly",
              "star_count": 57756
            },
            {
              "actor_login": "PCOffline",
              "star_count": 56725
            },
            {
              "actor_login": "baslr",
              "star_count": 50363
            },
            {
              "actor_login": "gkze",
              "star_count": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "star_count": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "star_count": 44715
            },
            {
              "actor_login": "mcanthony",
              "star_count": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.465911026,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 5.513,
          "requestId": "01JTFXSV65DREHR5HPBBWYRJ61",
          "length": 460
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.013,
          "totalDuration": 2.165,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 56,
            "totalTokens": 4878
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = 'freecodecamp/freecodecamp'\n    )\n    AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.699071509,
        "rows_read": 232317017,
        "bytes_read": 696925709
      },
      "executionTime": 1.717,
      "requestId": "01JTFXT5ZK270YK4KZ8MQMQSPR",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.928,
      "totalDuration": 3.067,
      "tokens": {
        "promptTokens": 4842,
        "completionTokens": 137,
        "totalTokens": 4979
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = 'freecodecamp/freecodecamp'\n    )\n    AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.699071509,
            "rows_read": 232317017,
            "bytes_read": 696925709
          },
          "executionTime": 1.717,
          "requestId": "01JTFXT5ZK270YK4KZ8MQMQSPR",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.928,
          "totalDuration": 3.067,
          "tokens": {
            "promptTokens": 4842,
            "completionTokens": 137,
            "totalTokens": 4979
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) as star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' AND \n    repo_name LIKE '%javisantana/%'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "netconstructor",
          "star_count": 7
        },
        {
          "actor_login": "javierhonduco",
          "star_count": 3
        },
        {
          "actor_login": "fpedrera",
          "star_count": 3
        },
        {
          "actor_login": "alexeypetrushin",
          "star_count": 2
        },
        {
          "actor_login": "canwe",
          "star_count": 2
        },
        {
          "actor_login": "alperdincer",
          "star_count": 2
        },
        {
          "actor_login": "pcruzf",
          "star_count": 2
        },
        {
          "actor_login": "raul",
          "star_count": 2
        },
        {
          "actor_login": "javierarce",
          "star_count": 2
        },
        {
          "actor_login": "Sumbera",
          "star_count": 2
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.317726562,
        "rows_read": 232190399,
        "bytes_read": 696217192
      },
      "executionTime": 0.336,
      "requestId": "01JTFXTHYPHTCGBSW4ZHR30ZSH",
      "length": 434
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 6.675,
      "totalDuration": 8.036,
      "tokens": {
        "promptTokens": 4827,
        "completionTokens": 75,
        "totalTokens": 4902
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' AND \n    repo_name LIKE '%javisantana/%'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "netconstructor",
              "star_count": 7
            },
            {
              "actor_login": "javierhonduco",
              "star_count": 3
            },
            {
              "actor_login": "fpedrera",
              "star_count": 3
            },
            {
              "actor_login": "alexeypetrushin",
              "star_count": 2
            },
            {
              "actor_login": "canwe",
              "star_count": 2
            },
            {
              "actor_login": "alperdincer",
              "star_count": 2
            },
            {
              "actor_login": "pcruzf",
              "star_count": 2
            },
            {
              "actor_login": "raul",
              "star_count": 2
            },
            {
              "actor_login": "javierarce",
              "star_count": 2
            },
            {
              "actor_login": "Sumbera",
              "star_count": 2
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.317726562,
            "rows_read": 232190399,
            "bytes_read": 696217192
          },
          "executionTime": 0.336,
          "requestId": "01JTFXTHYPHTCGBSW4ZHR30ZSH",
          "length": 434
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 6.675,
          "totalDuration": 8.036,
          "tokens": {
            "promptTokens": 4827,
            "completionTokens": 75,
            "totalTokens": 4902
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    repo_name,\n    COUNT(*) AS contribution_count\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freeCodeCamp/freeCodeCamp'\n    GROUP BY actor_login\n    ORDER BY COUNT(*) DESC\n    LIMIT 10\n)\nAND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY actor_login, repo_name\nORDER BY actor_login, contribution_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Codewars",
          "contribution_count": 491
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/MyFreeCodeCamp",
          "contribution_count": 377
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/FreeCodeCamp",
          "contribution_count": 275
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/CodeAcademy",
          "contribution_count": 211
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "contribution_count": 202
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Leetcode",
          "contribution_count": 141
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Complete-NodeJS-Developer-Course",
          "contribution_count": 99
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/HackerRank",
          "contribution_count": 75
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/JavaScript-and-jQuery",
          "contribution_count": 61
        },
        {
          "actor_login": "Manish-Giri",
          "repo_name": "Manish-Giri/Ziplines-shared",
          "contribution_count": 54
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contribution_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 7.735106999,
        "rows_read": 3127516010,
        "bytes_read": 6287151277
      },
      "executionTime": 7.78,
      "requestId": "01JTFXTRDH7GAE95DG9ED49DG8",
      "length": 961
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.072,
      "totalDuration": 3.758,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 141,
        "totalTokens": 4971
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    repo_name,\n    COUNT(*) AS contribution_count\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freeCodeCamp/freeCodeCamp'\n    GROUP BY actor_login\n    ORDER BY COUNT(*) DESC\n    LIMIT 10\n)\nAND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY actor_login, repo_name\nORDER BY actor_login, contribution_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Codewars",
              "contribution_count": 491
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/MyFreeCodeCamp",
              "contribution_count": 377
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/FreeCodeCamp",
              "contribution_count": 275
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/CodeAcademy",
              "contribution_count": 211
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "contribution_count": 202
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Leetcode",
              "contribution_count": 141
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Complete-NodeJS-Developer-Course",
              "contribution_count": 99
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/HackerRank",
              "contribution_count": 75
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/JavaScript-and-jQuery",
              "contribution_count": 61
            },
            {
              "actor_login": "Manish-Giri",
              "repo_name": "Manish-Giri/Ziplines-shared",
              "contribution_count": 54
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contribution_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 7.735106999,
            "rows_read": 3127516010,
            "bytes_read": 6287151277
          },
          "executionTime": 7.78,
          "requestId": "01JTFXTRDH7GAE95DG9ED49DG8",
          "length": 961
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.072,
          "totalDuration": 3.758,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 141,
            "totalTokens": 4971
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' AND\n    actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'IssuesEvent' AND\n            repo_name = 'freecodecamp/freecodecamp'\n        GROUP BY actor_login\n    )\n    AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY actor_login, repo_name\nORDER BY actor_login, issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.340594436,
        "rows_read": 111599101,
        "bytes_read": 334204260
      },
      "executionTime": 0.36,
      "requestId": "01JTFXV639C121ZSGCDM38DNH4",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.341,
      "totalDuration": 3.748,
      "tokens": {
        "promptTokens": 4833,
        "completionTokens": 159,
        "totalTokens": 4992
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' AND\n    actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'IssuesEvent' AND\n            repo_name = 'freecodecamp/freecodecamp'\n        GROUP BY actor_login\n    )\n    AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY actor_login, repo_name\nORDER BY actor_login, issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.340594436,
            "rows_read": 111599101,
            "bytes_read": 334204260
          },
          "executionTime": 0.36,
          "requestId": "01JTFXV639C121ZSGCDM38DNH4",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.341,
          "totalDuration": 3.748,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 159,
            "totalTokens": 4992
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 DAY\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003013126,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.021,
      "requestId": "01JTFXVBEV8PGSEE45M6NCTC7V",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.263,
      "totalDuration": 2.628,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 73,
        "totalTokens": 4898
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 DAY\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003013126,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.021,
          "requestId": "01JTFXVBEV8PGSEE45M6NCTC7V",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.263,
          "totalDuration": 2.628,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 73,
            "totalTokens": 4898
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END)) AS absolute_growth,\n    ROUND((COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END)) / COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) * 100, 2) AS percentage_growth\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020)\nGROUP BY repo_name\nHAVING events_2019 > 100\nORDER BY percentage_growth DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "coringao/blastem",
          "events_2019": 150,
          "events_2020": 279807,
          "absolute_growth": 279657,
          "percentage_growth": 186438
        },
        {
          "repo_name": "CLSPhila/DocketScraperAPI",
          "events_2019": 770,
          "events_2020": 878775,
          "absolute_growth": 878005,
          "percentage_growth": 114026.62
        },
        {
          "repo_name": "asmodehn/aiokraken",
          "events_2019": 464,
          "events_2020": 163386,
          "absolute_growth": 162922,
          "percentage_growth": 35112.5
        },
        {
          "repo_name": "eugenelabzov/mp3lib",
          "events_2019": 150,
          "events_2020": 40343,
          "absolute_growth": 40193,
          "percentage_growth": 26795.33
        },
        {
          "repo_name": "lannonbr/LC-Heatmap",
          "events_2019": 180,
          "events_2020": 41601,
          "absolute_growth": 41421,
          "percentage_growth": 23011.67
        },
        {
          "repo_name": "willmcgugan/rich",
          "events_2019": 102,
          "events_2020": 20791,
          "absolute_growth": 20689,
          "percentage_growth": 20283.33
        },
        {
          "repo_name": "57r4n63r/archlinux-repository",
          "events_2019": 136,
          "events_2020": 27068,
          "absolute_growth": 26932,
          "percentage_growth": 19802.94
        },
        {
          "repo_name": "BarthJr/eventex",
          "events_2019": 638,
          "events_2020": 126770,
          "absolute_growth": 126132,
          "percentage_growth": 19769.91
        },
        {
          "repo_name": "getselfstudy/builder-course-5e04d15a34d8ce0009845bc5",
          "events_2019": 143,
          "events_2020": 26541,
          "absolute_growth": 26398,
          "percentage_growth": 18460.14
        },
        {
          "repo_name": "JetBrains/MPS",
          "events_2019": 1051,
          "events_2020": 192938,
          "absolute_growth": 191887,
          "percentage_growth": 18257.56
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "events_2019",
          "type": "UInt64"
        },
        {
          "name": "events_2020",
          "type": "UInt64"
        },
        {
          "name": "absolute_growth",
          "type": "Int64"
        },
        {
          "name": "percentage_growth",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 27.042499845,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 27.09,
      "requestId": "01JTFXVRHP6FQTEREKRTFACF69",
      "length": 1312
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (events_2020 - events_2019) AS absolute_growth,\n    ROUND((events_2020 - events_2019) / events_2019 * 100, 2) AS percentage_growth\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) AND\n    events_2019 > 0\nGROUP BY repo_name\nHAVING events_2019 > 100\nORDER BY percentage_growth DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.057,
      "totalDuration": 4.339,
      "tokens": {
        "promptTokens": 5088,
        "completionTokens": 282,
        "totalTokens": 5370
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (events_2020 - events_2019) AS absolute_growth,\n    ROUND((events_2020 - events_2019) / events_2019 * 100, 2) AS percentage_growth\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) AND\n    events_2019 > 0\nGROUP BY repo_name\nHAVING events_2019 > 100\nORDER BY percentage_growth DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTFXVHTE10B3QJXR7K0BE35K",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(multiIf(toYear(created_at) = 2019, 1, NULL)) AS events_2019 is found in WHERE in query. (ILLEGAL_AGGREGATION) (version 24.8.14.2 (official build))\\\\n'' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.173,
          "totalDuration": 3.991,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 196,
            "totalTokens": 5029
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END)) AS absolute_growth,\n    ROUND((COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END)) / COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) * 100, 2) AS percentage_growth\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020)\nGROUP BY repo_name\nHAVING events_2019 > 100\nORDER BY percentage_growth DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "coringao/blastem",
              "events_2019": 150,
              "events_2020": 279807,
              "absolute_growth": 279657,
              "percentage_growth": 186438
            },
            {
              "repo_name": "CLSPhila/DocketScraperAPI",
              "events_2019": 770,
              "events_2020": 878775,
              "absolute_growth": 878005,
              "percentage_growth": 114026.62
            },
            {
              "repo_name": "asmodehn/aiokraken",
              "events_2019": 464,
              "events_2020": 163386,
              "absolute_growth": 162922,
              "percentage_growth": 35112.5
            },
            {
              "repo_name": "eugenelabzov/mp3lib",
              "events_2019": 150,
              "events_2020": 40343,
              "absolute_growth": 40193,
              "percentage_growth": 26795.33
            },
            {
              "repo_name": "lannonbr/LC-Heatmap",
              "events_2019": 180,
              "events_2020": 41601,
              "absolute_growth": 41421,
              "percentage_growth": 23011.67
            },
            {
              "repo_name": "willmcgugan/rich",
              "events_2019": 102,
              "events_2020": 20791,
              "absolute_growth": 20689,
              "percentage_growth": 20283.33
            },
            {
              "repo_name": "57r4n63r/archlinux-repository",
              "events_2019": 136,
              "events_2020": 27068,
              "absolute_growth": 26932,
              "percentage_growth": 19802.94
            },
            {
              "repo_name": "BarthJr/eventex",
              "events_2019": 638,
              "events_2020": 126770,
              "absolute_growth": 126132,
              "percentage_growth": 19769.91
            },
            {
              "repo_name": "getselfstudy/builder-course-5e04d15a34d8ce0009845bc5",
              "events_2019": 143,
              "events_2020": 26541,
              "absolute_growth": 26398,
              "percentage_growth": 18460.14
            },
            {
              "repo_name": "JetBrains/MPS",
              "events_2019": 1051,
              "events_2020": 192938,
              "absolute_growth": 191887,
              "percentage_growth": 18257.56
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "events_2019",
              "type": "UInt64"
            },
            {
              "name": "events_2020",
              "type": "UInt64"
            },
            {
              "name": "absolute_growth",
              "type": "Int64"
            },
            {
              "name": "percentage_growth",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 27.042499845,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 27.09,
          "requestId": "01JTFXVRHP6FQTEREKRTFACF69",
          "length": 1312
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (events_2020 - events_2019) AS absolute_growth,\n    ROUND((events_2020 - events_2019) / events_2019 * 100, 2) AS percentage_growth\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) AND\n    events_2019 > 0\nGROUP BY repo_name\nHAVING events_2019 > 100\nORDER BY percentage_growth DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.057,
          "totalDuration": 4.339,
          "tokens": {
            "promptTokens": 5088,
            "completionTokens": 282,
            "totalTokens": 5370
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END)) AS event_decline,\n    ROUND((COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END)) / COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) * 100, 2) AS decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020)\nGROUP BY repo_name\nHAVING \n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) > 1000 AND\n    (COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END)) > 0\nORDER BY decline_percentage DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "AlexBykovski/autoparus",
          "events_2019": 1680,
          "events_2020": 0,
          "event_decline": 1680,
          "decline_percentage": 100
        },
        {
          "repo_name": "blainejohnson/blainejohnson.github.io",
          "events_2019": 5387,
          "events_2020": 0,
          "event_decline": 5387,
          "decline_percentage": 100
        },
        {
          "repo_name": "montanadevelopment/android_device_motorola_montana",
          "events_2019": 1929,
          "events_2020": 0,
          "event_decline": 1929,
          "decline_percentage": 100
        },
        {
          "repo_name": "DenisKolodin/yew",
          "events_2019": 3099,
          "events_2020": 0,
          "event_decline": 3099,
          "decline_percentage": 100
        },
        {
          "repo_name": "ambroisealten/back_end",
          "events_2019": 1252,
          "events_2020": 0,
          "event_decline": 1252,
          "decline_percentage": 100
        },
        {
          "repo_name": "mulesoft/docs-release-notes",
          "events_2019": 4750,
          "events_2020": 0,
          "event_decline": 4750,
          "decline_percentage": 100
        },
        {
          "repo_name": "buildpack/lifecycle",
          "events_2019": 1499,
          "events_2020": 0,
          "event_decline": 1499,
          "decline_percentage": 100
        },
        {
          "repo_name": "Andres20141684/eventrinet-frontend",
          "events_2019": 1145,
          "events_2020": 0,
          "event_decline": 1145,
          "decline_percentage": 100
        },
        {
          "repo_name": "InfoSec812/nexus-kubernetes-openshift",
          "events_2019": 1884,
          "events_2020": 0,
          "event_decline": 1884,
          "decline_percentage": 100
        },
        {
          "repo_name": "PartyPolitical1/partypolitical1.github.io",
          "events_2019": 1022,
          "events_2020": 0,
          "event_decline": 1022,
          "decline_percentage": 100
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "events_2019",
          "type": "UInt64"
        },
        {
          "name": "events_2020",
          "type": "UInt64"
        },
        {
          "name": "event_decline",
          "type": "Int64"
        },
        {
          "name": "decline_percentage",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 29.979885745,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 30.026,
      "requestId": "01JTFXX0PS3GDZYNR2KBF072P3",
      "length": 1286
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Repositories with the worst stagnation in 2019 vs 2020\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (events_2019 - events_2020) AS event_decline,\n    ROUND((events_2019 - events_2020) / events_2019 * 100, 2) AS decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) AND\n    events_2019 > 1000\nGROUP BY repo_name\nHAVING decline_percentage > 0\nORDER BY decline_percentage DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.74,
      "totalDuration": 4.764,
      "tokens": {
        "promptTokens": 5087,
        "completionTokens": 368,
        "totalTokens": 5455
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (events_2019 - events_2020) AS event_decline,\n    ROUND((events_2019 - events_2020) / events_2019 * 100, 2) AS decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) AND\n    events_2019 > 1000\nGROUP BY repo_name\nHAVING decline_percentage > 0\nORDER BY decline_percentage DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.022,
          "requestId": "01JTFXWSJBJ21EQ4CZZNA3KGW0",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(multiIf(toYear(created_at) = 2019, 1, NULL)) AS events_2019 is found in WHERE in query. (ILLEGAL_AGGREGATION) (version 24.8.14.2 (official build))\\\\n'' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.243,
          "totalDuration": 4.244,
          "tokens": {
            "promptTokens": 4833,
            "completionTokens": 195,
            "totalTokens": 5028
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END)) AS event_decline,\n    ROUND((COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END)) / COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) * 100, 2) AS decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020)\nGROUP BY repo_name\nHAVING \n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) > 1000 AND\n    (COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END)) > 0\nORDER BY decline_percentage DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "AlexBykovski/autoparus",
              "events_2019": 1680,
              "events_2020": 0,
              "event_decline": 1680,
              "decline_percentage": 100
            },
            {
              "repo_name": "blainejohnson/blainejohnson.github.io",
              "events_2019": 5387,
              "events_2020": 0,
              "event_decline": 5387,
              "decline_percentage": 100
            },
            {
              "repo_name": "montanadevelopment/android_device_motorola_montana",
              "events_2019": 1929,
              "events_2020": 0,
              "event_decline": 1929,
              "decline_percentage": 100
            },
            {
              "repo_name": "DenisKolodin/yew",
              "events_2019": 3099,
              "events_2020": 0,
              "event_decline": 3099,
              "decline_percentage": 100
            },
            {
              "repo_name": "ambroisealten/back_end",
              "events_2019": 1252,
              "events_2020": 0,
              "event_decline": 1252,
              "decline_percentage": 100
            },
            {
              "repo_name": "mulesoft/docs-release-notes",
              "events_2019": 4750,
              "events_2020": 0,
              "event_decline": 4750,
              "decline_percentage": 100
            },
            {
              "repo_name": "buildpack/lifecycle",
              "events_2019": 1499,
              "events_2020": 0,
              "event_decline": 1499,
              "decline_percentage": 100
            },
            {
              "repo_name": "Andres20141684/eventrinet-frontend",
              "events_2019": 1145,
              "events_2020": 0,
              "event_decline": 1145,
              "decline_percentage": 100
            },
            {
              "repo_name": "InfoSec812/nexus-kubernetes-openshift",
              "events_2019": 1884,
              "events_2020": 0,
              "event_decline": 1884,
              "decline_percentage": 100
            },
            {
              "repo_name": "PartyPolitical1/partypolitical1.github.io",
              "events_2019": 1022,
              "events_2020": 0,
              "event_decline": 1022,
              "decline_percentage": 100
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "events_2019",
              "type": "UInt64"
            },
            {
              "name": "events_2020",
              "type": "UInt64"
            },
            {
              "name": "event_decline",
              "type": "Int64"
            },
            {
              "name": "decline_percentage",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 29.979885745,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 30.026,
          "requestId": "01JTFXX0PS3GDZYNR2KBF072P3",
          "length": 1286
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the worst stagnation in 2019 vs 2020\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n    COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n    (events_2019 - events_2020) AS event_decline,\n    ROUND((events_2019 - events_2020) / events_2019 * 100, 2) AS decline_percentage\nFROM github_events\nWHERE \n    toYear(created_at) IN (2019, 2020) AND\n    events_2019 > 1000\nGROUP BY repo_name\nHAVING decline_percentage > 0\nORDER BY decline_percentage DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.74,
          "totalDuration": 4.764,
          "tokens": {
            "promptTokens": 5087,
            "completionTokens": 368,
            "totalTokens": 5455
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS total_events,\n    stddevPop(monthly_events) AS growth_stability,\n    avg(monthly_events) AS avg_monthly_events\nFROM (\n    SELECT \n        repo_name,\n        toYear(created_at) AS year,\n        toMonth(created_at) AS month,\n        COUNT(*) AS monthly_events\n    FROM github_events\n    WHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR)\n    GROUP BY repo_name, year, month\n    HAVING monthly_events > 100\n) \nGROUP BY repo_name\nHAVING COUNT(*) >= 6\nORDER BY growth_stability / avg_monthly_events ASC, total_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        },
        {
          "name": "growth_stability",
          "type": "Float64"
        },
        {
          "name": "avg_monthly_events",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.005049167,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.024,
      "requestId": "01JTFXYEMPGY4APB5CTZZ2VSH1",
      "length": 2
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Repositories with the most steady growth over time\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) AS total_events,\n    toYear(created_at) AS year,\n    toMonth(created_at) AS month,\n    COUNT(*) / (COUNT(*) OVER (PARTITION BY repo_name ORDER BY toYear(created_at), toMonth(created_at) ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) + 0.1) AS growth_rate\nFROM github_events\nWHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR)\nGROUP BY repo_name, year, month\nHAVING COUNT(*) > 100\nORDER BY stddevPop(growth_rate) ASC, total_events DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.073,
      "totalDuration": 3.261,
      "tokens": {
        "promptTokens": 5060,
        "completionTokens": 189,
        "totalTokens": 5249
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS total_events,\n    toYear(created_at) AS year,\n    toMonth(created_at) AS month,\n    COUNT(*) / (COUNT(*) OVER (PARTITION BY repo_name ORDER BY toYear(created_at), toMonth(created_at) ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) + 0.1) AS growth_rate\nFROM github_events\nWHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR)\nGROUP BY repo_name, year, month\nHAVING COUNT(*) > 100\nORDER BY stddevPop(growth_rate) ASC, total_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTFXY8ZZ0R8N2NN52WRDN40S",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 6.228,
          "totalDuration": 8.748,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 176,
            "totalTokens": 5001
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS total_events,\n    stddevPop(monthly_events) AS growth_stability,\n    avg(monthly_events) AS avg_monthly_events\nFROM (\n    SELECT \n        repo_name,\n        toYear(created_at) AS year,\n        toMonth(created_at) AS month,\n        COUNT(*) AS monthly_events\n    FROM github_events\n    WHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR)\n    GROUP BY repo_name, year, month\n    HAVING monthly_events > 100\n) \nGROUP BY repo_name\nHAVING COUNT(*) >= 6\nORDER BY growth_stability / avg_monthly_events ASC, total_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            },
            {
              "name": "growth_stability",
              "type": "Float64"
            },
            {
              "name": "avg_monthly_events",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.005049167,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.024,
          "requestId": "01JTFXYEMPGY4APB5CTZZ2VSH1",
          "length": 2
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the most steady growth over time\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNT(*) AS total_events,\n    toYear(created_at) AS year,\n    toMonth(created_at) AS month,\n    COUNT(*) / (COUNT(*) OVER (PARTITION BY repo_name ORDER BY toYear(created_at), toMonth(created_at) ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) + 0.1) AS growth_rate\nFROM github_events\nWHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR)\nGROUP BY repo_name, year, month\nHAVING COUNT(*) > 100\nORDER BY stddevPop(growth_rate) ASC, total_events DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.073,
          "totalDuration": 3.261,
          "tokens": {
            "promptTokens": 5060,
            "completionTokens": 189,
            "totalTokens": 5249
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    toDate(created_at) AS date,\n    dayOfWeek(created_at) AS day_of_week,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY date, day_of_week\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "date": "2019-03-28",
          "day_of_week": 4,
          "star_count": 247108
        },
        {
          "date": "2019-03-29",
          "day_of_week": 5,
          "star_count": 225472
        },
        {
          "date": "2019-04-16",
          "day_of_week": 2,
          "star_count": 202970
        },
        {
          "date": "2019-04-22",
          "day_of_week": 1,
          "star_count": 189720
        },
        {
          "date": "2019-05-07",
          "day_of_week": 2,
          "star_count": 182081
        },
        {
          "date": "2019-04-23",
          "day_of_week": 2,
          "star_count": 181267
        },
        {
          "date": "2019-04-02",
          "day_of_week": 2,
          "star_count": 181134
        },
        {
          "date": "2019-04-03",
          "day_of_week": 3,
          "star_count": 179873
        },
        {
          "date": "2019-04-10",
          "day_of_week": 3,
          "star_count": 177115
        },
        {
          "date": "2019-04-08",
          "day_of_week": 1,
          "star_count": 176860
        }
      ],
      "meta": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.331195715,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.35,
      "requestId": "01JTFXYKKRHEGGQSF8AADV9ZAM",
      "length": 581
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.449,
      "totalDuration": 2.564,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 83,
        "totalTokens": 4908
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    toDate(created_at) AS date,\n    dayOfWeek(created_at) AS day_of_week,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY date, day_of_week\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "date": "2019-03-28",
              "day_of_week": 4,
              "star_count": 247108
            },
            {
              "date": "2019-03-29",
              "day_of_week": 5,
              "star_count": 225472
            },
            {
              "date": "2019-04-16",
              "day_of_week": 2,
              "star_count": 202970
            },
            {
              "date": "2019-04-22",
              "day_of_week": 1,
              "star_count": 189720
            },
            {
              "date": "2019-05-07",
              "day_of_week": 2,
              "star_count": 182081
            },
            {
              "date": "2019-04-23",
              "day_of_week": 2,
              "star_count": 181267
            },
            {
              "date": "2019-04-02",
              "day_of_week": 2,
              "star_count": 181134
            },
            {
              "date": "2019-04-03",
              "day_of_week": 3,
              "star_count": 179873
            },
            {
              "date": "2019-04-10",
              "day_of_week": 3,
              "star_count": 177115
            },
            {
              "date": "2019-04-08",
              "day_of_week": 1,
              "star_count": 176860
            }
          ],
          "meta": [
            {
              "name": "date",
              "type": "Date"
            },
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.331195715,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.35,
          "requestId": "01JTFXYKKRHEGGQSF8AADV9ZAM",
          "length": 581
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.449,
          "totalDuration": 2.564,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 83,
            "totalTokens": 4908
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 34099240
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.835009358,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.879,
      "requestId": "01JTFXYRK9AABSBC7YS03BM9RC",
      "length": 26
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.206,
      "totalDuration": 2.227,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 27,
        "totalTokens": 4846
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 34099240
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.835009358,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.879,
          "requestId": "01JTFXYRK9AABSBC7YS03BM9RC",
          "length": 26
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.206,
          "totalDuration": 2.227,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 27,
            "totalTokens": 4846
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 10131322
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.970171507,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 5.021,
      "requestId": "01JTFXZFXF1E86G5A4DSK389YN",
      "length": 26
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.356,
      "totalDuration": 2.489,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 46,
        "totalTokens": 4868
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 10131322
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.970171507,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 5.021,
          "requestId": "01JTFXZFXF1E86G5A4DSK389YN",
          "length": 26
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.356,
          "totalDuration": 2.489,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 46,
            "totalTokens": 4868
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_push": 18808891
        }
      ],
      "meta": [
        {
          "name": "total_users_with_push",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.803821067,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.848,
      "requestId": "01JTFXZSB7P6AWRQTMX55B9KAZ",
      "length": 36
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.106,
      "totalDuration": 2.141,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 43,
        "totalTokens": 4864
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_push": 18808891
            }
          ],
          "meta": [
            {
              "name": "total_users_with_push",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.803821067,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.848,
          "requestId": "01JTFXZSB7P6AWRQTMX55B9KAZ",
          "length": 36
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.106,
          "totalDuration": 2.141,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 43,
            "totalTokens": 4864
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    COUNT(DISTINCT actor_login) AS total_users_with_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_prs": 6418718
        }
      ],
      "meta": [
        {
          "name": "total_users_with_prs",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.212510985,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.23,
      "requestId": "01JTFY0342T9X40JTCKR1QE8KB",
      "length": 34
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.657,
      "totalDuration": 2.683,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 58,
        "totalTokens": 4880
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    COUNT(DISTINCT actor_login) AS total_users_with_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_prs": 6418718
            }
          ],
          "meta": [
            {
              "name": "total_users_with_prs",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.212510985,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.23,
          "requestId": "01JTFY0342T9X40JTCKR1QE8KB",
          "length": 34
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.657,
          "totalDuration": 2.683,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 58,
            "totalTokens": 4880
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars_count": 127332
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars_count": 116642
        },
        {
          "repo_name": "vuejs/vue",
          "stars_count": 115419
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars_count": 110521
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars_count": 106673
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars_count": 101015
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars_count": 97585
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars_count": 91891
        },
        {
          "repo_name": "airbnb/javascript",
          "stars_count": 84730
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars_count": 82794
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.915344345,
        "rows_read": 446952570,
        "bytes_read": 1804735431
      },
      "executionTime": 8.966,
      "requestId": "01JTFY09SX0JAMEMFEFC6JXJP7",
      "length": 583
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.894,
      "totalDuration": 3.085,
      "tokens": {
        "promptTokens": 4839,
        "completionTokens": 101,
        "totalTokens": 4940
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars_count": 127332
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars_count": 116642
            },
            {
              "repo_name": "vuejs/vue",
              "stars_count": 115419
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars_count": 110521
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars_count": 106673
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars_count": 101015
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars_count": 97585
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars_count": 91891
            },
            {
              "repo_name": "airbnb/javascript",
              "stars_count": 84730
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars_count": 82794
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.915344345,
            "rows_read": 446952570,
            "bytes_read": 1804735431
          },
          "executionTime": 8.966,
          "requestId": "01JTFY09SX0JAMEMFEFC6JXJP7",
          "length": 583
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.894,
          "totalDuration": 3.085,
          "tokens": {
            "promptTokens": 4839,
            "completionTokens": 101,
            "totalTokens": 4940
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY actor_login\nHAVING COUNT(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 642504
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "pr_count": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.211950522,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.23,
      "requestId": "01JTFY0W3H33ARG1VJ58GK82CA",
      "length": 519
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 6.432,
      "totalDuration": 7.298,
      "tokens": {
        "promptTokens": 4828,
        "completionTokens": 66,
        "totalTokens": 4894
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY actor_login\nHAVING COUNT(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 642504
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "pr_count": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.211950522,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.23,
          "requestId": "01JTFY0W3H33ARG1VJ58GK82CA",
          "length": 519
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 6.432,
          "totalDuration": 7.298,
          "tokens": {
            "promptTokens": 4828,
            "completionTokens": 66,
            "totalTokens": 4894
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_request_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_request_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_request_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_request_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_request_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_request_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_request_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_request_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_request_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_request_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_request_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.725827132,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.747,
      "requestId": "01JTFY11ZPSC8861SHCD3P4EBT",
      "length": 706
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.064,
      "totalDuration": 2.288,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 61,
        "totalTokens": 4886
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_request_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_request_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_request_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_request_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_request_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_request_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_request_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_request_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_request_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_request_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_request_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.725827132,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.747,
          "requestId": "01JTFY11ZPSC8861SHCD3P4EBT",
          "length": 706
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.064,
          "totalDuration": 2.288,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 61,
            "totalTokens": 4886
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors_count": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors_count": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors_count": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors_count": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors_count": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors_count": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors_count": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors_count": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors_count": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors_count": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.310893891,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 3.36,
      "requestId": "01JTFY18KSDDF0788Z8K54GGZM",
      "length": 720
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.252,
      "totalDuration": 2.519,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 62,
        "totalTokens": 4888
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors_count": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors_count": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors_count": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors_count": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors_count": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors_count": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors_count": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors_count": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors_count": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors_count": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.310893891,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 3.36,
          "requestId": "01JTFY18KSDDF0788Z8K54GGZM",
          "length": 720
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.252,
          "totalDuration": 2.519,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 62,
            "totalTokens": 4888
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.475591439,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.494,
      "requestId": "01JTFY1GECP16Q4B2QF1RHD1ZB",
      "length": 573
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.827,
      "totalDuration": 2.175,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 57,
        "totalTokens": 4881
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.475591439,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.494,
          "requestId": "01JTFY1GECP16Q4B2QF1RHD1ZB",
          "length": 573
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.827,
          "totalDuration": 2.175,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 57,
            "totalTokens": 4881
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened' AND NOT (actor_login LIKE '%bot%' OR actor_login LIKE '%[bot]%')) AS real_issues_count,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened' AND (actor_login LIKE '%bot%' OR actor_login LIKE '%[bot]%')) AS bot_issues_count,\n    count() AS total_issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' \nAND action = 'opened'\nAND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING count() >= 1000\n)\nGROUP BY repo_name\nORDER BY real_issues_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Khan/khan-exercises",
          "real_issues_count": 157014,
          "bot_issues_count": 2,
          "total_issues_count": 157016
        },
        {
          "repo_name": "Microsoft/vscode",
          "real_issues_count": 65082,
          "bot_issues_count": 40,
          "total_issues_count": 65122
        },
        {
          "repo_name": "flutter/flutter",
          "real_issues_count": 45861,
          "bot_issues_count": 59,
          "total_issues_count": 45920
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "real_issues_count": 44103,
          "bot_issues_count": 28,
          "total_issues_count": 44131
        },
        {
          "repo_name": "microsoft/vscode",
          "real_issues_count": 34780,
          "bot_issues_count": 18,
          "total_issues_count": 34798
        },
        {
          "repo_name": "hq450/fancyss",
          "real_issues_count": 31123,
          "bot_issues_count": 1,
          "total_issues_count": 31124
        },
        {
          "repo_name": "golang/go",
          "real_issues_count": 30991,
          "bot_issues_count": 452,
          "total_issues_count": 31443
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "real_issues_count": 29180,
          "bot_issues_count": 2464,
          "total_issues_count": 31644
        },
        {
          "repo_name": "cockroachdb/cockroach",
          "real_issues_count": 28326,
          "bot_issues_count": 64,
          "total_issues_count": 28390
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "real_issues_count": 28321,
          "bot_issues_count": 59,
          "total_issues_count": 28380
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "real_issues_count",
          "type": "UInt64"
        },
        {
          "name": "bot_issues_count",
          "type": "UInt64"
        },
        {
          "name": "total_issues_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.787182452,
        "rows_read": 337769904,
        "bytes_read": 1328861020
      },
      "executionTime": 1.807,
      "requestId": "01JTFY1QKHPVZSDRDEPP6V5M35",
      "length": 1099
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.897,
      "totalDuration": 4.337,
      "tokens": {
        "promptTokens": 4842,
        "completionTokens": 229,
        "totalTokens": 5071
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened' AND NOT (actor_login LIKE '%bot%' OR actor_login LIKE '%[bot]%')) AS real_issues_count,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened' AND (actor_login LIKE '%bot%' OR actor_login LIKE '%[bot]%')) AS bot_issues_count,\n    count() AS total_issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' \nAND action = 'opened'\nAND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING count() >= 1000\n)\nGROUP BY repo_name\nORDER BY real_issues_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Khan/khan-exercises",
              "real_issues_count": 157014,
              "bot_issues_count": 2,
              "total_issues_count": 157016
            },
            {
              "repo_name": "Microsoft/vscode",
              "real_issues_count": 65082,
              "bot_issues_count": 40,
              "total_issues_count": 65122
            },
            {
              "repo_name": "flutter/flutter",
              "real_issues_count": 45861,
              "bot_issues_count": 59,
              "total_issues_count": 45920
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "real_issues_count": 44103,
              "bot_issues_count": 28,
              "total_issues_count": 44131
            },
            {
              "repo_name": "microsoft/vscode",
              "real_issues_count": 34780,
              "bot_issues_count": 18,
              "total_issues_count": 34798
            },
            {
              "repo_name": "hq450/fancyss",
              "real_issues_count": 31123,
              "bot_issues_count": 1,
              "total_issues_count": 31124
            },
            {
              "repo_name": "golang/go",
              "real_issues_count": 30991,
              "bot_issues_count": 452,
              "total_issues_count": 31443
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "real_issues_count": 29180,
              "bot_issues_count": 2464,
              "total_issues_count": 31644
            },
            {
              "repo_name": "cockroachdb/cockroach",
              "real_issues_count": 28326,
              "bot_issues_count": 64,
              "total_issues_count": 28390
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "real_issues_count": 28321,
              "bot_issues_count": 59,
              "total_issues_count": 28380
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "real_issues_count",
              "type": "UInt64"
            },
            {
              "name": "bot_issues_count",
              "type": "UInt64"
            },
            {
              "name": "total_issues_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.787182452,
            "rows_read": 337769904,
            "bytes_read": 1328861020
          },
          "executionTime": 1.807,
          "requestId": "01JTFY1QKHPVZSDRDEPP6V5M35",
          "length": 1099
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.897,
          "totalDuration": 4.337,
          "tokens": {
            "promptTokens": 4842,
            "completionTokens": 229,
            "totalTokens": 5071
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT number) AS total_issues,\n    COUNT(DISTINCT IF(actor_login LIKE '%bot%' OR actor_login LIKE '%[bot]%', number, NULL)) AS bot_issues,\n    COUNT(DISTINCT IF(actor_login NOT LIKE '%bot%' AND actor_login NOT LIKE '%[bot]%', number, NULL)) AS real_issues,\n    COUNT(DISTINCT actor_login) AS issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nGROUP BY repo_name\nHAVING real_issues >= 1000\nORDER BY issue_authors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "total_issues": 65110,
          "bot_issues": 40,
          "real_issues": 65070,
          "issue_authors": 27038
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "total_issues": 44117,
          "bot_issues": 28,
          "real_issues": 44089,
          "issue_authors": 21036
        },
        {
          "repo_name": "microsoft/vscode",
          "total_issues": 34796,
          "bot_issues": 18,
          "real_issues": 34778,
          "issue_authors": 19479
        },
        {
          "repo_name": "flutter/flutter",
          "total_issues": 45912,
          "bot_issues": 59,
          "real_issues": 45853,
          "issue_authors": 16677
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "total_issues": 28344,
          "bot_issues": 59,
          "real_issues": 28285,
          "issue_authors": 16377
        },
        {
          "repo_name": "ansible/ansible",
          "total_issues": 27764,
          "bot_issues": 954,
          "real_issues": 26810,
          "issue_authors": 13050
        },
        {
          "repo_name": "996icu/996.ICU",
          "total_issues": 22607,
          "bot_issues": 4,
          "real_issues": 22603,
          "issue_authors": 12818
        },
        {
          "repo_name": "FortAwesome/Font-Awesome",
          "total_issues": 16437,
          "bot_issues": 28,
          "real_issues": 16409,
          "issue_authors": 12745
        },
        {
          "repo_name": "facebook/react-native",
          "total_issues": 19924,
          "bot_issues": 27,
          "real_issues": 19897,
          "issue_authors": 11861
        },
        {
          "repo_name": "npm/npm",
          "total_issues": 14489,
          "bot_issues": 23,
          "real_issues": 14466,
          "issue_authors": 11403
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_issues",
          "type": "UInt64"
        },
        {
          "name": "bot_issues",
          "type": "UInt64"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        },
        {
          "name": "issue_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.113577987,
        "rows_read": 111439849,
        "bytes_read": 1113152426
      },
      "executionTime": 2.144,
      "requestId": "01JTFY1ZT8Y8BGR2VWVF574MDD",
      "length": 1134
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.297,
      "totalDuration": 4.098,
      "tokens": {
        "promptTokens": 4849,
        "completionTokens": 170,
        "totalTokens": 5019
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT number) AS total_issues,\n    COUNT(DISTINCT IF(actor_login LIKE '%bot%' OR actor_login LIKE '%[bot]%', number, NULL)) AS bot_issues,\n    COUNT(DISTINCT IF(actor_login NOT LIKE '%bot%' AND actor_login NOT LIKE '%[bot]%', number, NULL)) AS real_issues,\n    COUNT(DISTINCT actor_login) AS issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nGROUP BY repo_name\nHAVING real_issues >= 1000\nORDER BY issue_authors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Microsoft/vscode",
              "total_issues": 65110,
              "bot_issues": 40,
              "real_issues": 65070,
              "issue_authors": 27038
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "total_issues": 44117,
              "bot_issues": 28,
              "real_issues": 44089,
              "issue_authors": 21036
            },
            {
              "repo_name": "microsoft/vscode",
              "total_issues": 34796,
              "bot_issues": 18,
              "real_issues": 34778,
              "issue_authors": 19479
            },
            {
              "repo_name": "flutter/flutter",
              "total_issues": 45912,
              "bot_issues": 59,
              "real_issues": 45853,
              "issue_authors": 16677
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "total_issues": 28344,
              "bot_issues": 59,
              "real_issues": 28285,
              "issue_authors": 16377
            },
            {
              "repo_name": "ansible/ansible",
              "total_issues": 27764,
              "bot_issues": 954,
              "real_issues": 26810,
              "issue_authors": 13050
            },
            {
              "repo_name": "996icu/996.ICU",
              "total_issues": 22607,
              "bot_issues": 4,
              "real_issues": 22603,
              "issue_authors": 12818
            },
            {
              "repo_name": "FortAwesome/Font-Awesome",
              "total_issues": 16437,
              "bot_issues": 28,
              "real_issues": 16409,
              "issue_authors": 12745
            },
            {
              "repo_name": "facebook/react-native",
              "total_issues": 19924,
              "bot_issues": 27,
              "real_issues": 19897,
              "issue_authors": 11861
            },
            {
              "repo_name": "npm/npm",
              "total_issues": 14489,
              "bot_issues": 23,
              "real_issues": 14466,
              "issue_authors": 11403
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_issues",
              "type": "UInt64"
            },
            {
              "name": "bot_issues",
              "type": "UInt64"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            },
            {
              "name": "issue_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.113577987,
            "rows_read": 111439849,
            "bytes_read": 1113152426
          },
          "executionTime": 2.144,
          "requestId": "01JTFY1ZT8Y8BGR2VWVF574MDD",
          "length": 1134
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.297,
          "totalDuration": 4.098,
          "tokens": {
            "promptTokens": 4849,
            "completionTokens": 170,
            "totalTokens": 5019
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "push_access_count": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "push_access_count": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "push_access_count": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "push_access_count": 826
        },
        {
          "repo_name": "lifo/docrails",
          "push_access_count": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "push_access_count": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "push_access_count": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "push_access_count": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "push_access_count": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "push_access_count": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.629075603,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 26.671,
      "requestId": "01JTFY26JRWM2WWYRV91N9RHW2",
      "length": 662
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.05,
      "totalDuration": 2.261,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 65,
        "totalTokens": 4891
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "push_access_count": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "push_access_count": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "push_access_count": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "push_access_count": 826
            },
            {
              "repo_name": "lifo/docrails",
              "push_access_count": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "push_access_count": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "push_access_count": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "push_access_count": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "push_access_count": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "push_access_count": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.629075603,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 26.671,
          "requestId": "01JTFY26JRWM2WWYRV91N9RHW2",
          "length": 662
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.05,
          "totalDuration": 2.261,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 65,
            "totalTokens": 4891
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
          "push_access_count": 218
        },
        {
          "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
          "push_access_count": 127
        },
        {
          "repo_name": "ministryofjustice/cloud-platform-environments",
          "push_access_count": 68
        },
        {
          "repo_name": "sourcegraph/about",
          "push_access_count": 64
        },
        {
          "repo_name": "apple/swift",
          "push_access_count": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "push_access_count": 52
        },
        {
          "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
          "push_access_count": 51
        },
        {
          "repo_name": "SPM587FA20/SCM587FA20",
          "push_access_count": 43
        },
        {
          "repo_name": "mks65/10_list",
          "push_access_count": 38
        },
        {
          "repo_name": "mks65/09_construction",
          "push_access_count": 38
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.59555181,
        "rows_read": 1601472977,
        "bytes_read": 49175592159
      },
      "executionTime": 3.643,
      "requestId": "01JTFY35NWDS0NYRDMG00P12YD",
      "length": 668
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.205,
      "totalDuration": 2.664,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 78,
        "totalTokens": 4908
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
              "push_access_count": 218
            },
            {
              "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
              "push_access_count": 127
            },
            {
              "repo_name": "ministryofjustice/cloud-platform-environments",
              "push_access_count": 68
            },
            {
              "repo_name": "sourcegraph/about",
              "push_access_count": 64
            },
            {
              "repo_name": "apple/swift",
              "push_access_count": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "push_access_count": 52
            },
            {
              "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
              "push_access_count": 51
            },
            {
              "repo_name": "SPM587FA20/SCM587FA20",
              "push_access_count": 43
            },
            {
              "repo_name": "mks65/10_list",
              "push_access_count": 38
            },
            {
              "repo_name": "mks65/09_construction",
              "push_access_count": 38
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.59555181,
            "rows_read": 1601472977,
            "bytes_read": 49175592159
          },
          "executionTime": 3.643,
          "requestId": "01JTFY35NWDS0NYRDMG00P12YD",
          "length": 668
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.205,
          "totalDuration": 2.664,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 78,
            "totalTokens": 4908
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND base_ref = 'main'\n    AND (\n        SELECT COUNT(*) \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = github_events.repo_name\n    ) > 99\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.943259898,
        "rows_read": 1833663376,
        "bytes_read": 5174505847
      },
      "executionTime": 0.963,
      "requestId": "01JTFY3EWE8JQZSXEBNQWPKG80",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.019,
      "totalDuration": 3.304,
      "tokens": {
        "promptTokens": 4844,
        "completionTokens": 132,
        "totalTokens": 4976
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND base_ref = 'main'\n    AND (\n        SELECT COUNT(*) \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = github_events.repo_name\n    ) > 99\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.943259898,
            "rows_read": 1833663376,
            "bytes_read": 5174505847
          },
          "executionTime": 0.963,
          "requestId": "01JTFY3EWE8JQZSXEBNQWPKG80",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.019,
          "totalDuration": 3.304,
          "tokens": {
            "promptTokens": 4844,
            "completionTokens": 132,
            "totalTokens": 4976
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS accepted_invitations\nFROM github_events\nWHERE \n    event_type = 'MemberEvent' \n    AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "accepted_invitations": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "accepted_invitations": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "accepted_invitations": 3161
        },
        {
          "repo_name": "/",
          "accepted_invitations": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "accepted_invitations": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "accepted_invitations": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "accepted_invitations": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "accepted_invitations": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "accepted_invitations": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "accepted_invitations": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "accepted_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.431969702,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.45,
      "requestId": "01JTFY3MFNDE82D25S4MM78EYK",
      "length": 752
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.999,
      "totalDuration": 2.27,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 71,
        "totalTokens": 4897
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS accepted_invitations\nFROM github_events\nWHERE \n    event_type = 'MemberEvent' \n    AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "accepted_invitations": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "accepted_invitations": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "accepted_invitations": 3161
            },
            {
              "repo_name": "/",
              "accepted_invitations": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "accepted_invitations": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "accepted_invitations": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "accepted_invitations": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "accepted_invitations": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "accepted_invitations": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "accepted_invitations": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "accepted_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.431969702,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.45,
          "requestId": "01JTFY3MFNDE82D25S4MM78EYK",
          "length": 752
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.999,
          "totalDuration": 2.27,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 71,
            "totalTokens": 4897
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.84213855,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.861,
      "requestId": "01JTFY3SDCK4WFK1WTD5H812Y0",
      "length": 592
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.972,
      "totalDuration": 2.095,
      "tokens": {
        "promptTokens": 4820,
        "completionTokens": 56,
        "totalTokens": 4876
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.84213855,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.861,
          "requestId": "01JTFY3SDCK4WFK1WTD5H812Y0",
          "length": 592
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.972,
          "totalDuration": 2.095,
          "tokens": {
            "promptTokens": 4820,
            "completionTokens": 56,
            "totalTokens": 4876
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    stars / NULLIF(forks, 0) AS star_fork_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "stars": 8190,
          "forks": 1,
          "star_fork_ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "stars": 6042,
          "forks": 1,
          "star_fork_ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "stars": 3069,
          "forks": 1,
          "star_fork_ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "stars": 2288,
          "forks": 1,
          "star_fork_ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "stars": 2088,
          "forks": 1,
          "star_fork_ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "stars": 1822,
          "forks": 1,
          "star_fork_ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "stars": 1801,
          "forks": 1,
          "star_fork_ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "stars": 1795,
          "forks": 1,
          "star_fork_ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "stars": 1759,
          "forks": 1,
          "star_fork_ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "stars": 1752,
          "forks": 1,
          "star_fork_ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "star_fork_ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 2.038252878,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.059,
      "requestId": "01JTFY3ZMAK18NVMB6YH6NEXZ0",
      "length": 852
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.036,
      "totalDuration": 3.003,
      "tokens": {
        "promptTokens": 4827,
        "completionTokens": 121,
        "totalTokens": 4948
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    stars / NULLIF(forks, 0) AS star_fork_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "stars": 8190,
              "forks": 1,
              "star_fork_ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "stars": 6042,
              "forks": 1,
              "star_fork_ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "stars": 3069,
              "forks": 1,
              "star_fork_ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "stars": 2288,
              "forks": 1,
              "star_fork_ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "stars": 2088,
              "forks": 1,
              "star_fork_ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "stars": 1822,
              "forks": 1,
              "star_fork_ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "stars": 1801,
              "forks": 1,
              "star_fork_ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "stars": 1795,
              "forks": 1,
              "star_fork_ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "stars": 1759,
              "forks": 1,
              "star_fork_ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "stars": 1752,
              "forks": 1,
              "star_fork_ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "star_fork_ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 2.038252878,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.059,
          "requestId": "01JTFY3ZMAK18NVMB6YH6NEXZ0",
          "length": 852
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.036,
          "totalDuration": 3.003,
          "tokens": {
            "promptTokens": 4827,
            "completionTokens": 121,
            "totalTokens": 4948
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') AS fork_count,\n    countIf(event_type = 'WatchEvent') AS star_count\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY (fork_count + star_count) DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "fork_count": 27101,
          "star_count": 354850
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226,
          "star_count": 173681
        },
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926,
          "star_count": 6364
        },
        {
          "repo_name": "vuejs/vue",
          "fork_count": 37441,
          "star_count": 199731
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "fork_count": 9442,
          "star_count": 225490
        },
        {
          "repo_name": "facebook/react",
          "fork_count": 44678,
          "star_count": 188575
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878,
          "star_count": 126371
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075,
          "star_count": 119322
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031,
          "star_count": 4601
        },
        {
          "repo_name": "sindresorhus/awesome",
          "fork_count": 23708,
          "star_count": 160542
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.008238397,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.027,
      "requestId": "01JTFY4700D7Y5PPEHNDTSGFXD",
      "length": 728
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.235,
      "totalDuration": 2.982,
      "tokens": {
        "promptTokens": 4832,
        "completionTokens": 99,
        "totalTokens": 4931
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') AS fork_count,\n    countIf(event_type = 'WatchEvent') AS star_count\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY (fork_count + star_count) DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "fork_count": 27101,
              "star_count": 354850
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226,
              "star_count": 173681
            },
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926,
              "star_count": 6364
            },
            {
              "repo_name": "vuejs/vue",
              "fork_count": 37441,
              "star_count": 199731
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "fork_count": 9442,
              "star_count": 225490
            },
            {
              "repo_name": "facebook/react",
              "fork_count": 44678,
              "star_count": 188575
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878,
              "star_count": 126371
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075,
              "star_count": 119322
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031,
              "star_count": 4601
            },
            {
              "repo_name": "sindresorhus/awesome",
              "fork_count": 23708,
              "star_count": 160542
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.008238397,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.027,
          "requestId": "01JTFY4700D7Y5PPEHNDTSGFXD",
          "length": 728
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.235,
          "totalDuration": 2.982,
          "tokens": {
            "promptTokens": 4832,
            "completionTokens": 99,
            "totalTokens": 4931
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') AS fork_count,\n    countIf(event_type = 'WatchEvent') AS star_count\nFROM github_events\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926,
          "star_count": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031,
          "star_count": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794,
          "star_count": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226,
          "star_count": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878,
          "star_count": 126371
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075,
          "star_count": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551,
          "star_count": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601,
          "star_count": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182,
          "star_count": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420,
          "star_count": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 61.678939399,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 61.727,
      "requestId": "01JTFY4EKG2X9F7XE4AKY0XT69",
      "length": 776
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.583,
      "totalDuration": 3.236,
      "tokens": {
        "promptTokens": 4826,
        "completionTokens": 99,
        "totalTokens": 4925
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'ForkEvent') AS fork_count,\n    countIf(event_type = 'WatchEvent') AS star_count\nFROM github_events\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926,
              "star_count": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031,
              "star_count": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794,
              "star_count": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226,
              "star_count": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878,
              "star_count": 126371
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075,
              "star_count": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551,
              "star_count": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601,
              "star_count": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182,
              "star_count": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420,
              "star_count": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 61.678939399,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 61.727,
          "requestId": "01JTFY4EKG2X9F7XE4AKY0XT69",
          "length": 776
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.583,
          "totalDuration": 3.236,
          "tokens": {
            "promptTokens": 4826,
            "completionTokens": 99,
            "totalTokens": 4925
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_stars": 232118474,
          "total_forks": 84709181,
          "stars_to_forks_ratio": 2.7401808311663407
        }
      ],
      "meta": [
        {
          "name": "total_stars",
          "type": "UInt64"
        },
        {
          "name": "total_forks",
          "type": "UInt64"
        },
        {
          "name": "stars_to_forks_ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.455332114,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.48,
      "requestId": "01JTFY6GRN7ENZRRVKCS7C5FE8",
      "length": 92
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.127,
      "totalDuration": 3.547,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 159,
        "totalTokens": 4978
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_stars": 232118474,
              "total_forks": 84709181,
              "stars_to_forks_ratio": 2.7401808311663407
            }
          ],
          "meta": [
            {
              "name": "total_stars",
              "type": "UInt64"
            },
            {
              "name": "total_forks",
              "type": "UInt64"
            },
            {
              "name": "stars_to_forks_ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.455332114,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.48,
          "requestId": "01JTFY6GRN7ENZRRVKCS7C5FE8",
          "length": 92
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.127,
          "totalDuration": 3.547,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 159,
            "totalTokens": 4978
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    COUNT(*) AS total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_issues": 111265504
        }
      ],
      "meta": [
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.008091083,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.032,
      "requestId": "01JTFY6NWH9SJTCES09F1BRZ7D",
      "length": 28
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.533,
      "totalDuration": 2.262,
      "tokens": {
        "promptTokens": 4818,
        "completionTokens": 38,
        "totalTokens": 4856
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    COUNT(*) AS total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_issues": 111265504
            }
          ],
          "meta": [
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.008091083,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.032,
          "requestId": "01JTFY6NWH9SJTCES09F1BRZ7D",
          "length": 28
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.533,
          "totalDuration": 2.262,
          "tokens": {
            "promptTokens": 4818,
            "completionTokens": 38,
            "totalTokens": 4856
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_comments_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comments_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comments_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comments_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comments_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comments_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comments_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comments_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comments_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comments_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comments_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.475380816,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 1.514,
      "requestId": "01JTFY6V2CNG1G4FB1HTES5N0R",
      "length": 649
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.327,
      "totalDuration": 2.774,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 63,
        "totalTokens": 4884
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_comments_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comments_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comments_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comments_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comments_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comments_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comments_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comments_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comments_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comments_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comments_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.475380816,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 1.514,
          "requestId": "01JTFY6V2CNG1G4FB1HTES5N0R",
          "length": 649
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.327,
          "totalDuration": 2.774,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 63,
            "totalTokens": 4884
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent') AS issues_count,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments_count,\n    issue_comments_count / issues_count AS comment_issue_ratio\nFROM github_events\nWHERE \n    event_type IN ('IssuesEvent', 'IssueCommentEvent') AND\n    created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING issues_count > 0 AND issue_comments_count > 0\nORDER BY comment_issue_ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        },
        {
          "name": "issue_comments_count",
          "type": "UInt64"
        },
        {
          "name": "comment_issue_ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.007192509,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.031,
      "requestId": "01JTFY72V709K10MB1BRM8HX8R",
      "length": 2
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.847,
      "totalDuration": 3.948,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 162,
        "totalTokens": 4986
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent') AS issues_count,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments_count,\n    issue_comments_count / issues_count AS comment_issue_ratio\nFROM github_events\nWHERE \n    event_type IN ('IssuesEvent', 'IssueCommentEvent') AND\n    created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING issues_count > 0 AND issue_comments_count > 0\nORDER BY comment_issue_ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            },
            {
              "name": "issue_comments_count",
              "type": "UInt64"
            },
            {
              "name": "comment_issue_ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.007192509,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.031,
          "requestId": "01JTFY72V709K10MB1BRM8HX8R",
          "length": 2
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.847,
          "totalDuration": 3.948,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 162,
            "totalTokens": 4986
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.73304134,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.753,
      "requestId": "01JTFY77YKZKPE4Q56VP4BQPTX",
      "length": 573
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.881,
      "totalDuration": 2.695,
      "tokens": {
        "promptTokens": 4823,
        "completionTokens": 57,
        "totalTokens": 4880
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.73304134,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.753,
          "requestId": "01JTFY77YKZKPE4Q56VP4BQPTX",
          "length": 573
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.881,
          "totalDuration": 2.695,
          "tokens": {
            "promptTokens": 4823,
            "completionTokens": 57,
            "totalTokens": 4880
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS epic_bug_count\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND title LIKE '%epic%bug%'\n    AND number > 0\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "WarEmu/WarBugs",
          "epic_bug_count": 17
        },
        {
          "repo_name": "angular/material",
          "epic_bug_count": 12
        },
        {
          "repo_name": "Dogfalo/materialize",
          "epic_bug_count": 11
        },
        {
          "repo_name": "ant-design/ant-design",
          "epic_bug_count": 10
        },
        {
          "repo_name": "webcompat/web-bugs",
          "epic_bug_count": 7
        },
        {
          "repo_name": "NG-ZORRO/ng-zorro-antd",
          "epic_bug_count": 7
        },
        {
          "repo_name": "ng-bootstrap/ng-bootstrap",
          "epic_bug_count": 7
        },
        {
          "repo_name": "babakhani/pwt.datepicker",
          "epic_bug_count": 6
        },
        {
          "repo_name": "iview/iview",
          "epic_bug_count": 6
        },
        {
          "repo_name": "valor-software/ngx-bootstrap",
          "epic_bug_count": 6
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "epic_bug_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.684419351,
        "rows_read": 111439849,
        "bytes_read": 5206066560
      },
      "executionTime": 0.706,
      "requestId": "01JTFY7Q7GSB4NGGS8GCEX9QCT",
      "length": 563
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 11.114,
      "totalDuration": 12.387,
      "tokens": {
        "promptTokens": 4828,
        "completionTokens": 84,
        "totalTokens": 4912
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS epic_bug_count\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND title LIKE '%epic%bug%'\n    AND number > 0\nGROUP BY repo_name\nORDER BY epic_bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "WarEmu/WarBugs",
              "epic_bug_count": 17
            },
            {
              "repo_name": "angular/material",
              "epic_bug_count": 12
            },
            {
              "repo_name": "Dogfalo/materialize",
              "epic_bug_count": 11
            },
            {
              "repo_name": "ant-design/ant-design",
              "epic_bug_count": 10
            },
            {
              "repo_name": "webcompat/web-bugs",
              "epic_bug_count": 7
            },
            {
              "repo_name": "NG-ZORRO/ng-zorro-antd",
              "epic_bug_count": 7
            },
            {
              "repo_name": "ng-bootstrap/ng-bootstrap",
              "epic_bug_count": 7
            },
            {
              "repo_name": "babakhani/pwt.datepicker",
              "epic_bug_count": 6
            },
            {
              "repo_name": "iview/iview",
              "epic_bug_count": 6
            },
            {
              "repo_name": "valor-software/ngx-bootstrap",
              "epic_bug_count": 6
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "epic_bug_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.684419351,
            "rows_read": 111439849,
            "bytes_read": 5206066560
          },
          "executionTime": 0.706,
          "requestId": "01JTFY7Q7GSB4NGGS8GCEX9QCT",
          "length": 563
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 11.114,
          "totalDuration": 12.387,
          "tokens": {
            "promptTokens": 4828,
            "completionTokens": 84,
            "totalTokens": 4912
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    repo_name,\n    number AS issue_number,\n    title,\n    COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM github_events\nWHERE \n    event_type = 'IssueCommentEvent' \n    AND title LIKE '%epic%bug%'\n    AND number > {{Int(min_issue_number, 0)}}\n    AND repo_name != ''\nGROUP BY \n    repo_name,\n    number,\n    title\nHAVING \n    comment_authors_count >= {{Int(min_comment_authors, 3)}}\nORDER BY \n    comment_authors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "react-native-community/react-native-datetimepicker",
          "issue_number": 11,
          "title": "ANDROID: Task :@react-native-community_datetimepicker:compileDebugJavaWithJavac FAILED",
          "comment_authors_count": 16
        },
        {
          "repo_name": "valor-software/ngx-bootstrap",
          "issue_number": 4396,
          "title": "Datepicker month bug",
          "comment_authors_count": 8
        },
        {
          "repo_name": "wet-boew/wet-boew",
          "issue_number": 6558,
          "title": "Datepicker bug on Firefox?",
          "comment_authors_count": 6
        },
        {
          "repo_name": "akveo/nebular",
          "issue_number": 1102,
          "title": "Datepicker two-way data binding bug ( version 3.0.0 ) ",
          "comment_authors_count": 5
        },
        {
          "repo_name": "axa-ch/patterns-library",
          "issue_number": 803,
          "title": "Datepicker v2 Sammelbug",
          "comment_authors_count": 5
        },
        {
          "repo_name": "WarEmu/WarBugs",
          "issue_number": 18063,
          "title": "Dwarf T4 epic quest - Battle For Remembrance bug",
          "comment_authors_count": 5
        },
        {
          "repo_name": "angular/material2",
          "issue_number": 5492,
          "title": "datepicker bugs when Primary language is different from the Region",
          "comment_authors_count": 5
        },
        {
          "repo_name": "RubyLouvre/avalon.oniui",
          "issue_number": 720,
          "title": "datepicker组件的bug，我自己暂时已修复，麻烦看看",
          "comment_authors_count": 5
        },
        {
          "repo_name": "ng-bootstrap/ng-bootstrap",
          "issue_number": 1615,
          "title": "Datepicker bug in firefox browser",
          "comment_authors_count": 5
        },
        {
          "repo_name": "patternfly/patternfly",
          "issue_number": 745,
          "title": "Timepicker bug",
          "comment_authors_count": 5
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "comment_authors_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.758899848,
        "rows_read": 218620144,
        "bytes_read": 10783208053
      },
      "executionTime": 0.778,
      "requestId": "01JTFY7Y9MM8ZPJW7R4NAG4TNJ",
      "length": 1369
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.304,
      "totalDuration": 4.026,
      "tokens": {
        "promptTokens": 4842,
        "completionTokens": 162,
        "totalTokens": 5004
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    repo_name,\n    number AS issue_number,\n    title,\n    COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM github_events\nWHERE \n    event_type = 'IssueCommentEvent' \n    AND title LIKE '%epic%bug%'\n    AND number > {{Int(min_issue_number, 0)}}\n    AND repo_name != ''\nGROUP BY \n    repo_name,\n    number,\n    title\nHAVING \n    comment_authors_count >= {{Int(min_comment_authors, 3)}}\nORDER BY \n    comment_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "react-native-community/react-native-datetimepicker",
              "issue_number": 11,
              "title": "ANDROID: Task :@react-native-community_datetimepicker:compileDebugJavaWithJavac FAILED",
              "comment_authors_count": 16
            },
            {
              "repo_name": "valor-software/ngx-bootstrap",
              "issue_number": 4396,
              "title": "Datepicker month bug",
              "comment_authors_count": 8
            },
            {
              "repo_name": "wet-boew/wet-boew",
              "issue_number": 6558,
              "title": "Datepicker bug on Firefox?",
              "comment_authors_count": 6
            },
            {
              "repo_name": "akveo/nebular",
              "issue_number": 1102,
              "title": "Datepicker two-way data binding bug ( version 3.0.0 ) ",
              "comment_authors_count": 5
            },
            {
              "repo_name": "axa-ch/patterns-library",
              "issue_number": 803,
              "title": "Datepicker v2 Sammelbug",
              "comment_authors_count": 5
            },
            {
              "repo_name": "WarEmu/WarBugs",
              "issue_number": 18063,
              "title": "Dwarf T4 epic quest - Battle For Remembrance bug",
              "comment_authors_count": 5
            },
            {
              "repo_name": "angular/material2",
              "issue_number": 5492,
              "title": "datepicker bugs when Primary language is different from the Region",
              "comment_authors_count": 5
            },
            {
              "repo_name": "RubyLouvre/avalon.oniui",
              "issue_number": 720,
              "title": "datepicker组件的bug，我自己暂时已修复，麻烦看看",
              "comment_authors_count": 5
            },
            {
              "repo_name": "ng-bootstrap/ng-bootstrap",
              "issue_number": 1615,
              "title": "Datepicker bug in firefox browser",
              "comment_authors_count": 5
            },
            {
              "repo_name": "patternfly/patternfly",
              "issue_number": 745,
              "title": "Timepicker bug",
              "comment_authors_count": 5
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "comment_authors_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.758899848,
            "rows_read": 218620144,
            "bytes_read": 10783208053
          },
          "executionTime": 0.778,
          "requestId": "01JTFY7Y9MM8ZPJW7R4NAG4TNJ",
          "length": 1369
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.304,
          "totalDuration": 4.026,
          "tokens": {
            "promptTokens": 4842,
            "completionTokens": 162,
            "totalTokens": 5004
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    comments\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "oskosk/node-wms-client",
          "number": 2,
          "title": "Lint all the things",
          "comments": 2500
        },
        {
          "repo_name": "OpenKore/openkore",
          "number": 628,
          "title": "~~",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 31,
          "title": "StripeController#events (NoMethodError) \"undefined method `email' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 33,
          "title": "StripeController#events (NoMethodError) \"undefined method `payment_source' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 25,
          "title": "StripeController#events (NoMethodError) \"undefined method `subscription_id=' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 33,
          "title": "StripeController#events (NoMethodError) \"undefined method `payment_source' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 29,
          "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 33,
          "title": "StripeController#events (NoMethodError) \"undefined method `payment_source' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 29,
          "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
          "comments": 2500
        },
        {
          "repo_name": "tannakartikey/currents",
          "number": 29,
          "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
          "comments": 2500
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 0.774976018,
        "rows_read": 111439849,
        "bytes_read": 6314315175
      },
      "executionTime": 0.794,
      "requestId": "01JTFY83RMNSMPFWNM1DN265VK",
      "length": 1530
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.631,
      "totalDuration": 2.32,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 51,
        "totalTokens": 4873
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    comments\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "oskosk/node-wms-client",
              "number": 2,
              "title": "Lint all the things",
              "comments": 2500
            },
            {
              "repo_name": "OpenKore/openkore",
              "number": 628,
              "title": "~~",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 31,
              "title": "StripeController#events (NoMethodError) \"undefined method `email' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 33,
              "title": "StripeController#events (NoMethodError) \"undefined method `payment_source' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 25,
              "title": "StripeController#events (NoMethodError) \"undefined method `subscription_id=' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 33,
              "title": "StripeController#events (NoMethodError) \"undefined method `payment_source' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 29,
              "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 33,
              "title": "StripeController#events (NoMethodError) \"undefined method `payment_source' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 29,
              "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
              "comments": 2500
            },
            {
              "repo_name": "tannakartikey/currents",
              "number": 29,
              "title": "StripeController#events (NoMethodError) \"undefined method `is_active=' for nil:NilClass\"",
              "comments": 2500
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 0.774976018,
            "rows_read": 111439849,
            "bytes_read": 6314315175
          },
          "executionTime": 0.794,
          "requestId": "01JTFY83RMNSMPFWNM1DN265VK",
          "length": 1530
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.631,
          "totalDuration": 2.32,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 51,
            "totalTokens": 4873
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "commit_comments_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "commit_comments_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "commit_comments_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "commit_comments_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "commit_comments_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "commit_comments_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "commit_comments_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "commit_comments_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "commit_comments_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "commit_comments_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.122988422,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.145,
      "requestId": "01JTFY89C2VAPFTJ1YMFTFZ0F6",
      "length": 659
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.097,
      "totalDuration": 2.445,
      "tokens": {
        "promptTokens": 4823,
        "completionTokens": 62,
        "totalTokens": 4885
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "commit_comments_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "commit_comments_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "commit_comments_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "commit_comments_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "commit_comments_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "commit_comments_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "commit_comments_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "commit_comments_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "commit_comments_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "commit_comments_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.122988422,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.145,
          "requestId": "01JTFY89C2VAPFTJ1YMFTFZ0F6",
          "length": 659
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.097,
          "totalDuration": 2.445,
          "tokens": {
            "promptTokens": 4823,
            "completionTokens": 62,
            "totalTokens": 4885
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    head_sha,\n    additions + deletions AS total_changes,\n    additions,\n    deletions,\n    changed_files,\n    created_at\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'closed'\n    AND merged = 1\nORDER BY total_changes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "silky/whatever",
          "head_sha": "1ab8052bec13612b8b2dbc3569a81da82e9d593e",
          "total_changes": 470735855,
          "additions": 1814,
          "deletions": 470734041,
          "changed_files": 47424,
          "created_at": "2015-02-09 11:46:11"
        },
        {
          "repo_name": "viliml/whatever",
          "head_sha": "ef700fa4286499400c17309eccad653371567fc3",
          "total_changes": 470725672,
          "additions": 5,
          "deletions": 470725667,
          "changed_files": 31,
          "created_at": "2014-10-11 12:40:39"
        },
        {
          "repo_name": "tomekw/whatever",
          "head_sha": "642e989409cf731d3b4adea8217b1b09b197e72f",
          "total_changes": 470725229,
          "additions": 0,
          "deletions": 470725229,
          "changed_files": 28,
          "created_at": "2014-10-11 12:06:51"
        },
        {
          "repo_name": "tomekw/whatever",
          "head_sha": "892536e074cb2070bf6c79c4716d8a7afdc71f1e",
          "total_changes": 268536143,
          "additions": 268536143,
          "deletions": 0,
          "changed_files": 6,
          "created_at": "2014-10-10 23:58:58"
        },
        {
          "repo_name": "vraj004/RyR-simulator",
          "head_sha": "577af95cac2c07fee263d710a942ec289bf223d3",
          "total_changes": 145147100,
          "additions": 45714614,
          "deletions": 99432486,
          "changed_files": 482,
          "created_at": "2014-11-01 07:18:59"
        },
        {
          "repo_name": "elleryjsmith/UCLMCTest",
          "head_sha": "a8f6cf43083716cb798fa607c436761f9494a5a0",
          "total_changes": 72451809,
          "additions": 1305,
          "deletions": 72450504,
          "changed_files": 266,
          "created_at": "2015-05-20 17:51:26"
        },
        {
          "repo_name": "wso2/wso2-qa-artifacts",
          "head_sha": "6a3b9f5530a230a99e3bff18bbb89dfc8d35a801",
          "total_changes": 67109926,
          "additions": 731,
          "deletions": 67109195,
          "changed_files": 22,
          "created_at": "2018-01-22 04:41:16"
        },
        {
          "repo_name": "Surrep/recognize",
          "head_sha": "26e016595e6ad754558904f76b6075301abf3b49",
          "total_changes": 67109269,
          "additions": 67109110,
          "deletions": 159,
          "changed_files": 57,
          "created_at": "2018-03-07 22:11:22"
        },
        {
          "repo_name": "elleryjsmith/UCLMCTest",
          "head_sha": "0b017ecf35faa79dfa107a19c27ab8565e4bf652",
          "total_changes": 55026318,
          "additions": 45744617,
          "deletions": 9281701,
          "changed_files": 24,
          "created_at": "2015-03-16 20:46:48"
        },
        {
          "repo_name": "ColeLab/ActflowToolbox",
          "head_sha": "3386497e7ec20a7a75ff4d308fbbcc58fbba4f0d",
          "total_changes": 54068872,
          "additions": 1019,
          "deletions": 54067853,
          "changed_files": 2208,
          "created_at": "2020-06-23 18:13:27"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "head_sha",
          "type": "String"
        },
        {
          "name": "total_changes",
          "type": "UInt64"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        }
      ],
      "statistics": {
        "elapsed": 1.923208198,
        "rows_read": 214762171,
        "bytes_read": 14655513531
      },
      "executionTime": 1.968,
      "requestId": "01JTFY8FG8Y72TFHVY9AVH82CZ",
      "length": 2076
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.283,
      "totalDuration": 3.608,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 95,
        "totalTokens": 4916
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    head_sha,\n    additions + deletions AS total_changes,\n    additions,\n    deletions,\n    changed_files,\n    created_at\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'closed'\n    AND merged = 1\nORDER BY total_changes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "silky/whatever",
              "head_sha": "1ab8052bec13612b8b2dbc3569a81da82e9d593e",
              "total_changes": 470735855,
              "additions": 1814,
              "deletions": 470734041,
              "changed_files": 47424,
              "created_at": "2015-02-09 11:46:11"
            },
            {
              "repo_name": "viliml/whatever",
              "head_sha": "ef700fa4286499400c17309eccad653371567fc3",
              "total_changes": 470725672,
              "additions": 5,
              "deletions": 470725667,
              "changed_files": 31,
              "created_at": "2014-10-11 12:40:39"
            },
            {
              "repo_name": "tomekw/whatever",
              "head_sha": "642e989409cf731d3b4adea8217b1b09b197e72f",
              "total_changes": 470725229,
              "additions": 0,
              "deletions": 470725229,
              "changed_files": 28,
              "created_at": "2014-10-11 12:06:51"
            },
            {
              "repo_name": "tomekw/whatever",
              "head_sha": "892536e074cb2070bf6c79c4716d8a7afdc71f1e",
              "total_changes": 268536143,
              "additions": 268536143,
              "deletions": 0,
              "changed_files": 6,
              "created_at": "2014-10-10 23:58:58"
            },
            {
              "repo_name": "vraj004/RyR-simulator",
              "head_sha": "577af95cac2c07fee263d710a942ec289bf223d3",
              "total_changes": 145147100,
              "additions": 45714614,
              "deletions": 99432486,
              "changed_files": 482,
              "created_at": "2014-11-01 07:18:59"
            },
            {
              "repo_name": "elleryjsmith/UCLMCTest",
              "head_sha": "a8f6cf43083716cb798fa607c436761f9494a5a0",
              "total_changes": 72451809,
              "additions": 1305,
              "deletions": 72450504,
              "changed_files": 266,
              "created_at": "2015-05-20 17:51:26"
            },
            {
              "repo_name": "wso2/wso2-qa-artifacts",
              "head_sha": "6a3b9f5530a230a99e3bff18bbb89dfc8d35a801",
              "total_changes": 67109926,
              "additions": 731,
              "deletions": 67109195,
              "changed_files": 22,
              "created_at": "2018-01-22 04:41:16"
            },
            {
              "repo_name": "Surrep/recognize",
              "head_sha": "26e016595e6ad754558904f76b6075301abf3b49",
              "total_changes": 67109269,
              "additions": 67109110,
              "deletions": 159,
              "changed_files": 57,
              "created_at": "2018-03-07 22:11:22"
            },
            {
              "repo_name": "elleryjsmith/UCLMCTest",
              "head_sha": "0b017ecf35faa79dfa107a19c27ab8565e4bf652",
              "total_changes": 55026318,
              "additions": 45744617,
              "deletions": 9281701,
              "changed_files": 24,
              "created_at": "2015-03-16 20:46:48"
            },
            {
              "repo_name": "ColeLab/ActflowToolbox",
              "head_sha": "3386497e7ec20a7a75ff4d308fbbcc58fbba4f0d",
              "total_changes": 54068872,
              "additions": 1019,
              "deletions": 54067853,
              "changed_files": 2208,
              "created_at": "2020-06-23 18:13:27"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "head_sha",
              "type": "String"
            },
            {
              "name": "total_changes",
              "type": "UInt64"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            }
          ],
          "statistics": {
            "elapsed": 1.923208198,
            "rows_read": 214762171,
            "bytes_read": 14655513531
          },
          "executionTime": 1.968,
          "requestId": "01JTFY8FG8Y72TFHVY9AVH82CZ",
          "length": 2076
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.283,
          "totalDuration": 3.608,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 95,
            "totalTokens": 4916
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    review_comments,\n    additions,\n    deletions,\n    changed_files,\n    DATEDIFF('day', created_at, merged_at) AS days_to_merge\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'closed'\n    AND merged = 1\n    AND review_comments > 0\nORDER BY review_comments DESC, additions + deletions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "abc1763613206/ccxt",
          "number": 1,
          "title": "[pull] master from ccxt:master",
          "review_comments": 4843,
          "additions": 609878,
          "deletions": 176281,
          "changed_files": 1221,
          "days_to_merge": 0
        },
        {
          "repo_name": "steviebeenz/postwoman",
          "number": 265,
          "title": "[pull] master from liyasthomas:master",
          "review_comments": 3734,
          "additions": 35468,
          "deletions": 17888,
          "changed_files": 216,
          "days_to_merge": 0
        },
        {
          "repo_name": "dchbx/enroll",
          "number": 2515,
          "title": "40068",
          "review_comments": 3158,
          "additions": 24264,
          "deletions": 650,
          "changed_files": 487,
          "days_to_merge": 0
        },
        {
          "repo_name": "ovh/cds",
          "number": 4290,
          "title": "Refactor/users",
          "review_comments": 1905,
          "additions": 143679,
          "deletions": 100717,
          "changed_files": 1864,
          "days_to_merge": 0
        },
        {
          "repo_name": "packlink-dev/ecommerce_module_core",
          "number": 2,
          "title": "Implementation of the Core v1.2.1 ",
          "review_comments": 1739,
          "additions": 28548,
          "deletions": 3359,
          "changed_files": 361,
          "days_to_merge": 0
        },
        {
          "repo_name": "mysociety/alaveteli",
          "number": 1631,
          "title": "Add request state updating functionality to API",
          "review_comments": 1618,
          "additions": 587,
          "deletions": 392,
          "changed_files": 4,
          "days_to_merge": 0
        },
        {
          "repo_name": "andela/suyabay",
          "number": 108,
          "title": "Dash board activity page",
          "review_comments": 1219,
          "additions": 573,
          "deletions": 147,
          "changed_files": 24,
          "days_to_merge": 0
        },
        {
          "repo_name": "endless-sky/endless-sky",
          "number": 3761,
          "title": "Adding Remnant content",
          "review_comments": 1208,
          "additions": 1331,
          "deletions": 197,
          "changed_files": 12,
          "days_to_merge": 0
        },
        {
          "repo_name": "NVIDIA/DALI",
          "number": 2175,
          "title": "Adjust documentation after review",
          "review_comments": 1200,
          "additions": 2060,
          "deletions": 1344,
          "changed_files": 89,
          "days_to_merge": 0
        },
        {
          "repo_name": "cms-sw/cmssw",
          "number": 29381,
          "title": "Addition of L1 tracking code for \"TMTT\" & (part of) \"Hybrid\" algorithms (L1Trigger/TrackFindingTMTT) ",
          "review_comments": 1123,
          "additions": 16647,
          "deletions": 0,
          "changed_files": 83,
          "days_to_merge": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "review_comments",
          "type": "UInt32"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "days_to_merge",
          "type": "Int64"
        }
      ],
      "statistics": {
        "elapsed": 2.187528403,
        "rows_read": 214762171,
        "bytes_read": 15534695679
      },
      "executionTime": 2.208,
      "requestId": "01JTFY8Q6C5ZWYGSWSCVGSGEN0",
      "length": 1886
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.065,
      "totalDuration": 3.429,
      "tokens": {
        "promptTokens": 4820,
        "completionTokens": 125,
        "totalTokens": 4945
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    review_comments,\n    additions,\n    deletions,\n    changed_files,\n    DATEDIFF('day', created_at, merged_at) AS days_to_merge\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'closed'\n    AND merged = 1\n    AND review_comments > 0\nORDER BY review_comments DESC, additions + deletions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "abc1763613206/ccxt",
              "number": 1,
              "title": "[pull] master from ccxt:master",
              "review_comments": 4843,
              "additions": 609878,
              "deletions": 176281,
              "changed_files": 1221,
              "days_to_merge": 0
            },
            {
              "repo_name": "steviebeenz/postwoman",
              "number": 265,
              "title": "[pull] master from liyasthomas:master",
              "review_comments": 3734,
              "additions": 35468,
              "deletions": 17888,
              "changed_files": 216,
              "days_to_merge": 0
            },
            {
              "repo_name": "dchbx/enroll",
              "number": 2515,
              "title": "40068",
              "review_comments": 3158,
              "additions": 24264,
              "deletions": 650,
              "changed_files": 487,
              "days_to_merge": 0
            },
            {
              "repo_name": "ovh/cds",
              "number": 4290,
              "title": "Refactor/users",
              "review_comments": 1905,
              "additions": 143679,
              "deletions": 100717,
              "changed_files": 1864,
              "days_to_merge": 0
            },
            {
              "repo_name": "packlink-dev/ecommerce_module_core",
              "number": 2,
              "title": "Implementation of the Core v1.2.1 ",
              "review_comments": 1739,
              "additions": 28548,
              "deletions": 3359,
              "changed_files": 361,
              "days_to_merge": 0
            },
            {
              "repo_name": "mysociety/alaveteli",
              "number": 1631,
              "title": "Add request state updating functionality to API",
              "review_comments": 1618,
              "additions": 587,
              "deletions": 392,
              "changed_files": 4,
              "days_to_merge": 0
            },
            {
              "repo_name": "andela/suyabay",
              "number": 108,
              "title": "Dash board activity page",
              "review_comments": 1219,
              "additions": 573,
              "deletions": 147,
              "changed_files": 24,
              "days_to_merge": 0
            },
            {
              "repo_name": "endless-sky/endless-sky",
              "number": 3761,
              "title": "Adding Remnant content",
              "review_comments": 1208,
              "additions": 1331,
              "deletions": 197,
              "changed_files": 12,
              "days_to_merge": 0
            },
            {
              "repo_name": "NVIDIA/DALI",
              "number": 2175,
              "title": "Adjust documentation after review",
              "review_comments": 1200,
              "additions": 2060,
              "deletions": 1344,
              "changed_files": 89,
              "days_to_merge": 0
            },
            {
              "repo_name": "cms-sw/cmssw",
              "number": 29381,
              "title": "Addition of L1 tracking code for \"TMTT\" & (part of) \"Hybrid\" algorithms (L1Trigger/TrackFindingTMTT) ",
              "review_comments": 1123,
              "additions": 16647,
              "deletions": 0,
              "changed_files": 83,
              "days_to_merge": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "review_comments",
              "type": "UInt32"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "days_to_merge",
              "type": "Int64"
            }
          ],
          "statistics": {
            "elapsed": 2.187528403,
            "rows_read": 214762171,
            "bytes_read": 15534695679
          },
          "executionTime": 2.208,
          "requestId": "01JTFY8Q6C5ZWYGSWSCVGSGEN0",
          "length": 1886
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.065,
          "totalDuration": 3.429,
          "tokens": {
            "promptTokens": 4820,
            "completionTokens": 125,
            "totalTokens": 4945
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "push_count": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "push_count": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "push_count": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "push_count": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "push_count": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "push_count": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "push_count": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "push_count": 3139278
        },
        {
          "actor_login": "newstools",
          "push_count": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "push_count": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.747740072,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.794,
      "requestId": "01JTFY8XVYRAB0W61HPDMKQT8P",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.912,
      "totalDuration": 2.104,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 56,
        "totalTokens": 4878
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "push_count": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "push_count": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "push_count": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "push_count": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "push_count": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "push_count": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "push_count": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "push_count": 3139278
            },
            {
              "actor_login": "newstools",
              "push_count": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "push_count": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.747740072,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.794,
          "requestId": "01JTFY8XVYRAB0W61HPDMKQT8P",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.912,
          "totalDuration": 2.104,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 56,
            "totalTokens": 4878
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, COUNT(*)) AS favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        GROUP BY repo_name\n        ORDER BY COUNT(*) DESC\n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent' AND action = 'opened'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n    ) \n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'WatchEvent' AND action = 'started'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n    )\nGROUP BY actor_login\nHAVING countDistinct(repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.021,
      "requestId": "01JTFY9W9DXQN3C570DX45B9D4",
      "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
      "length": 2
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM (\n    SELECT\n        actor_login,\n        repo_name,\n        COUNT(*) AS push_count\n    FROM github_events\n    WHERE \n        event_type = 'PushEvent' \n        AND actor_login NOT LIKE '%bot%' \n        AND actor_login NOT LIKE '%[bot]%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n    GROUP BY actor_login, repo_name\n)\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n) AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n)\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, count) AS favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        GROUP BY repo_name\n        ORDER BY COUNT(*) DESC\n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent' AND action = 'opened'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n    ) \n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'WatchEvent' AND action = 'started'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n    )\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 6.324,
      "totalDuration": 9.527,
      "tokens": {
        "promptTokens": 5658,
        "completionTokens": 315,
        "totalTokens": 5973
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM (\n    SELECT\n        actor_login,\n        repo_name,\n        COUNT(*) AS push_count\n    FROM github_events\n    WHERE \n        event_type = 'PushEvent' \n        AND actor_login NOT LIKE '%bot%' \n        AND actor_login NOT LIKE '%[bot]%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n    GROUP BY actor_login, repo_name\n)\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n) AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n)\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTFY99BNKW8HFDSGY30JPH87",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*) AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.916,
          "totalDuration": 6.49,
          "tokens": {
            "promptTokens": 4876,
            "completionTokens": 352,
            "totalTokens": 5228
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, count) AS favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        GROUP BY repo_name\n        ORDER BY COUNT(*) DESC\n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent' AND action = 'opened'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n    ) \n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'WatchEvent' AND action = 'started'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n    )\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.023,
          "requestId": "01JTFY9GGQV55XEP0NHCA9XTC2",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'count' in scope SELECT actor_login, COUNT(*) AS push_count, argMax(repo_name, count) AS favorite_repo FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'PushEvent') AND (actor_login NOT LIKE '%bot%') AND (actor_login NOT LIKE '%[bot]%') AND (repo_name IN (SELECT repo_name FROM github_llm_bench.github_events AS github_events GROUP BY repo_name ORDER BY COUNT(*) DESC LIMIT 10000)) AND (actor_login IN (SELECT actor",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM (\n    SELECT\n        actor_login,\n        repo_name,\n        COUNT(*) AS push_count\n    FROM github_events\n    WHERE \n        event_type = 'PushEvent' \n        AND actor_login NOT LIKE '%bot%' \n        AND actor_login NOT LIKE '%[bot]%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n    GROUP BY actor_login, repo_name\n)\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n) AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n)\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.164,
          "totalDuration": 4.804,
          "tokens": {
            "promptTokens": 5286,
            "completionTokens": 314,
            "totalTokens": 5600
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, COUNT(*)) AS favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        GROUP BY repo_name\n        ORDER BY COUNT(*) DESC\n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent' AND action = 'opened'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n    ) \n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'WatchEvent' AND action = 'started'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n    )\nGROUP BY actor_login\nHAVING countDistinct(repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTFY9W9DXQN3C570DX45B9D4",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*)' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM (\n    SELECT\n        actor_login,\n        repo_name,\n        COUNT(*) AS push_count\n    FROM github_events\n    WHERE \n        event_type = 'PushEvent' \n        AND actor_login NOT LIKE '%bot%' \n        AND actor_login NOT LIKE '%[bot]%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n    GROUP BY actor_login, repo_name\n)\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n) AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n)\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, count) AS favorite_repo\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        GROUP BY repo_name\n        ORDER BY COUNT(*) DESC\n        LIMIT 10000\n    )\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent' AND action = 'opened'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_issues, 2)}}\n    ) \n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'WatchEvent' AND action = 'started'\n        GROUP BY actor_login\n        HAVING COUNT(*) >= {{Int(min_stars, 2)}}\n    )\nGROUP BY actor_login\nHAVING COUNT(DISTINCT repo_name) >= {{Int(min_repos, 3)}}\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 6.324,
          "totalDuration": 9.527,
          "tokens": {
            "promptTokens": 5658,
            "completionTokens": 315,
            "totalTokens": 5973
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "organization": "google",
          "star_count": 1414877
        },
        {
          "organization": "facebook",
          "star_count": 1123380
        },
        {
          "organization": "Microsoft",
          "star_count": 691865
        },
        {
          "organization": "microsoft",
          "star_count": 669438
        },
        {
          "organization": "alibaba",
          "star_count": 580707
        },
        {
          "organization": "sindresorhus",
          "star_count": 565535
        },
        {
          "organization": "apache",
          "star_count": 553204
        },
        {
          "organization": "vuejs",
          "star_count": 494824
        },
        {
          "organization": "tensorflow",
          "star_count": 425613
        },
        {
          "organization": "fossasia",
          "star_count": 398255
        }
      ],
      "meta": [
        {
          "name": "organization",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.843523336,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 0.862,
      "requestId": "01JTFYA1GDZZ2AFSPZ18G0VM29",
      "length": 483
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.704,
      "totalDuration": 2.821,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 67,
        "totalTokens": 4889
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "organization": "google",
              "star_count": 1414877
            },
            {
              "organization": "facebook",
              "star_count": 1123380
            },
            {
              "organization": "Microsoft",
              "star_count": 691865
            },
            {
              "organization": "microsoft",
              "star_count": 669438
            },
            {
              "organization": "alibaba",
              "star_count": 580707
            },
            {
              "organization": "sindresorhus",
              "star_count": 565535
            },
            {
              "organization": "apache",
              "star_count": 553204
            },
            {
              "organization": "vuejs",
              "star_count": 494824
            },
            {
              "organization": "tensorflow",
              "star_count": 425613
            },
            {
              "organization": "fossasia",
              "star_count": 398255
            }
          ],
          "meta": [
            {
              "name": "organization",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.843523336,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 0.862,
          "requestId": "01JTFYA1GDZZ2AFSPZ18G0VM29",
          "length": 483
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.704,
          "totalDuration": 2.821,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 67,
            "totalTokens": 4889
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n    COUNT(DISTINCT repo_name) AS repository_count\nFROM github_events\nGROUP BY organization\nORDER BY repository_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "organization": "direwolf-github",
          "repository_count": 1476731
        },
        {
          "organization": "Likj128",
          "repository_count": 409130
        },
        {
          "organization": "circle-test-organization",
          "repository_count": 340186
        },
        {
          "organization": "learn-co-students",
          "repository_count": 325329
        },
        {
          "organization": "botcopado",
          "repository_count": 136118
        },
        {
          "organization": "idsqat1",
          "repository_count": 130217
        },
        {
          "organization": "dvcsconnectortest",
          "repository_count": 128338
        },
        {
          "organization": "mathias7777",
          "repository_count": 128099
        },
        {
          "organization": "autotester-one",
          "repository_count": 125910
        },
        {
          "organization": "isisliu",
          "repository_count": 121787
        }
      ],
      "meta": [
        {
          "name": "organization",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repository_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 41.383157602,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 41.428,
      "requestId": "01JTFYA7BJ424YNZSMS3NJS8T7",
      "length": 590
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.544,
      "totalDuration": 2.6,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 60,
        "totalTokens": 4882
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n    COUNT(DISTINCT repo_name) AS repository_count\nFROM github_events\nGROUP BY organization\nORDER BY repository_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "organization": "direwolf-github",
              "repository_count": 1476731
            },
            {
              "organization": "Likj128",
              "repository_count": 409130
            },
            {
              "organization": "circle-test-organization",
              "repository_count": 340186
            },
            {
              "organization": "learn-co-students",
              "repository_count": 325329
            },
            {
              "organization": "botcopado",
              "repository_count": 136118
            },
            {
              "organization": "idsqat1",
              "repository_count": 130217
            },
            {
              "organization": "dvcsconnectortest",
              "repository_count": 128338
            },
            {
              "organization": "mathias7777",
              "repository_count": 128099
            },
            {
              "organization": "autotester-one",
              "repository_count": 125910
            },
            {
              "organization": "isisliu",
              "repository_count": 121787
            }
          ],
          "meta": [
            {
              "name": "organization",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repository_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 41.383157602,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 41.428,
          "requestId": "01JTFYA7BJ424YNZSMS3NJS8T7",
          "length": 590
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.544,
          "totalDuration": 2.6,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 60,
            "totalTokens": 4882
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS community_size\nFROM github_events\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "community_size": 736368
        },
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 279405
        },
        {
          "repo_name": "jtleek/datasharing",
          "community_size": 264395
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 259323
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 223352
        },
        {
          "repo_name": "facebook/react",
          "community_size": 211153
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 205351
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 203955
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "community_size": 193542
        },
        {
          "repo_name": "github/gitignore",
          "community_size": 182330
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 98.718987624,
        "rows_read": 3124889133,
        "bytes_read": 12479080129
      },
      "executionTime": 98.768,
      "requestId": "01JTFYBN1WFEBDMC9NC9N83GJ7",
      "length": 562
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.178,
      "totalDuration": 2.86,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 49,
        "totalTokens": 4871
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS community_size\nFROM github_events\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "community_size": 736368
            },
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 279405
            },
            {
              "repo_name": "jtleek/datasharing",
              "community_size": 264395
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 259323
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 223352
            },
            {
              "repo_name": "facebook/react",
              "community_size": 211153
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 205351
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 203955
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "community_size": 193542
            },
            {
              "repo_name": "github/gitignore",
              "community_size": 182330
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 98.718987624,
            "rows_read": 3124889133,
            "bytes_read": 12479080129
          },
          "executionTime": 98.768,
          "requestId": "01JTFYBN1WFEBDMC9NC9N83GJ7",
          "length": 562
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.178,
          "totalDuration": 2.86,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 49,
            "totalTokens": 4871
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions,\n    SUM(additions + deletions) AS total_code_changes\nFROM github_events\nWHERE additions IS NOT NULL AND deletions IS NOT NULL\nGROUP BY repo_name\nORDER BY total_code_changes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "fakegit/cdnjs",
          "total_additions": 6222756523,
          "total_deletions": 971500,
          "total_code_changes": 6223728023
        },
        {
          "repo_name": "Qwerty0x64/cdnjs",
          "total_additions": 5706948901,
          "total_deletions": 702152,
          "total_code_changes": 5707651053
        },
        {
          "repo_name": "srz-zumix/iutest-ci-results",
          "total_additions": 3176317839,
          "total_deletions": 1006504276,
          "total_code_changes": 4182822115
        },
        {
          "repo_name": "ikingye/cdnjs",
          "total_additions": 1999629310,
          "total_deletions": 234869,
          "total_code_changes": 1999864179
        },
        {
          "repo_name": "Azure/azure-powershell",
          "total_additions": 714587109,
          "total_deletions": 567893162,
          "total_code_changes": 1282480271
        },
        {
          "repo_name": "tomekw/whatever",
          "total_additions": 323298837,
          "total_deletions": 943026794,
          "total_code_changes": 1266325631
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_additions": 434066544,
          "total_deletions": 766055610,
          "total_code_changes": 1200122154
        },
        {
          "repo_name": "robertoDiaz/liferay-portal",
          "total_additions": 551152902,
          "total_deletions": 414840747,
          "total_code_changes": 965993649
        },
        {
          "repo_name": "silky/whatever",
          "total_additions": 2397,
          "total_deletions": 941459364,
          "total_code_changes": 941461761
        },
        {
          "repo_name": "viliml/whatever",
          "total_additions": 10,
          "total_deletions": 941451334,
          "total_code_changes": 941451344
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        },
        {
          "name": "total_code_changes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 58.84427018,
        "rows_read": 3124889133,
        "bytes_read": 31231946651
      },
      "executionTime": 58.891,
      "requestId": "01JTFYEV7RYCVQCA52Y9RJKFFA",
      "length": 1229
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.739,
      "totalDuration": 3.367,
      "tokens": {
        "promptTokens": 4840,
        "completionTokens": 91,
        "totalTokens": 4931
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions,\n    SUM(additions + deletions) AS total_code_changes\nFROM github_events\nWHERE additions IS NOT NULL AND deletions IS NOT NULL\nGROUP BY repo_name\nORDER BY total_code_changes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "fakegit/cdnjs",
              "total_additions": 6222756523,
              "total_deletions": 971500,
              "total_code_changes": 6223728023
            },
            {
              "repo_name": "Qwerty0x64/cdnjs",
              "total_additions": 5706948901,
              "total_deletions": 702152,
              "total_code_changes": 5707651053
            },
            {
              "repo_name": "srz-zumix/iutest-ci-results",
              "total_additions": 3176317839,
              "total_deletions": 1006504276,
              "total_code_changes": 4182822115
            },
            {
              "repo_name": "ikingye/cdnjs",
              "total_additions": 1999629310,
              "total_deletions": 234869,
              "total_code_changes": 1999864179
            },
            {
              "repo_name": "Azure/azure-powershell",
              "total_additions": 714587109,
              "total_deletions": 567893162,
              "total_code_changes": 1282480271
            },
            {
              "repo_name": "tomekw/whatever",
              "total_additions": 323298837,
              "total_deletions": 943026794,
              "total_code_changes": 1266325631
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_additions": 434066544,
              "total_deletions": 766055610,
              "total_code_changes": 1200122154
            },
            {
              "repo_name": "robertoDiaz/liferay-portal",
              "total_additions": 551152902,
              "total_deletions": 414840747,
              "total_code_changes": 965993649
            },
            {
              "repo_name": "silky/whatever",
              "total_additions": 2397,
              "total_deletions": 941459364,
              "total_code_changes": 941461761
            },
            {
              "repo_name": "viliml/whatever",
              "total_additions": 10,
              "total_deletions": 941451334,
              "total_code_changes": 941451344
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            },
            {
              "name": "total_code_changes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 58.84427018,
            "rows_read": 3124889133,
            "bytes_read": 31231946651
          },
          "executionTime": 58.891,
          "requestId": "01JTFYEV7RYCVQCA52Y9RJKFFA",
          "length": 1229
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.739,
          "totalDuration": 3.367,
          "tokens": {
            "promptTokens": 4840,
            "completionTokens": 91,
            "totalTokens": 4931
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "push_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "push_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "push_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "push_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "push_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "push_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "push_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "push_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "push_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "push_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 19.114436894,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 19.167,
      "requestId": "01JTFYGSHW7R0NH71ESTHF85GB",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.08,
      "totalDuration": 2.42,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 56,
        "totalTokens": 4880
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "push_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "push_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "push_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "push_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "push_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "push_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "push_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "push_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "push_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "push_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 19.114436894,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 19.167,
          "requestId": "01JTFYGSHW7R0NH71ESTHF85GB",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.08,
          "totalDuration": 2.42,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 56,
            "totalTokens": 4880
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login AS author,\n    COUNT(*) AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY author\nORDER BY review_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "author": "github-learning-lab[bot]",
          "review_count": 104542
        },
        {
          "author": "github-actions[bot]",
          "review_count": 89676
        },
        {
          "author": "bot-monkey-2",
          "review_count": 31702
        },
        {
          "author": "staging-muse-bot[bot]",
          "review_count": 29429
        },
        {
          "author": "foreign-sub",
          "review_count": 17630
        },
        {
          "author": "renovate-approve[bot]",
          "review_count": 16563
        },
        {
          "author": "kodiakhq[bot]",
          "review_count": 10876
        },
        {
          "author": "Katsuno0814",
          "review_count": 6966
        },
        {
          "author": "BrewTestBot",
          "review_count": 6718
        },
        {
          "author": "accesslint[bot]",
          "review_count": 6668
        }
      ],
      "meta": [
        {
          "name": "author",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.032989058,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.054,
      "requestId": "01JTFYHNN0KDG8S79GWMJP8QG2",
      "length": 507
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 6.282,
      "totalDuration": 7.129,
      "tokens": {
        "promptTokens": 4822,
        "completionTokens": 59,
        "totalTokens": 4881
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login AS author,\n    COUNT(*) AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY author\nORDER BY review_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "author": "github-learning-lab[bot]",
              "review_count": 104542
            },
            {
              "author": "github-actions[bot]",
              "review_count": 89676
            },
            {
              "author": "bot-monkey-2",
              "review_count": 31702
            },
            {
              "author": "staging-muse-bot[bot]",
              "review_count": 29429
            },
            {
              "author": "foreign-sub",
              "review_count": 17630
            },
            {
              "author": "renovate-approve[bot]",
              "review_count": 16563
            },
            {
              "author": "kodiakhq[bot]",
              "review_count": 10876
            },
            {
              "author": "Katsuno0814",
              "review_count": 6966
            },
            {
              "author": "BrewTestBot",
              "review_count": 6718
            },
            {
              "author": "accesslint[bot]",
              "review_count": 6668
            }
          ],
          "meta": [
            {
              "name": "author",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.032989058,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.054,
          "requestId": "01JTFYHNN0KDG8S79GWMJP8QG2",
          "length": 507
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 6.282,
          "totalDuration": 7.129,
          "tokens": {
            "promptTokens": 4822,
            "completionTokens": 59,
            "totalTokens": 4881
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    label,\n    COUNT(*) AS count\nFROM \n    github_events\nARRAY JOIN \n    labels AS label\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "dependencies",
          "count": 9458518
        },
        {
          "label": "enhancement",
          "count": 6805408
        },
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": ":arrow_heading_down: pull",
          "count": 4124651
        },
        {
          "label": "question",
          "count": 934878
        },
        {
          "label": "help wanted",
          "count": 757775
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "cla: yes",
          "count": 653842
        },
        {
          "label": "documentation",
          "count": 512616
        },
        {
          "label": "javascript",
          "count": 507441
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.637682486,
        "rows_read": 326129279,
        "bytes_read": 3089461441
      },
      "executionTime": 0.66,
      "requestId": "01JTFYHTXH758D5JND3V73CK44",
      "length": 393
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.181,
      "totalDuration": 2.838,
      "tokens": {
        "promptTokens": 4824,
        "completionTokens": 77,
        "totalTokens": 4901
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    label,\n    COUNT(*) AS count\nFROM \n    github_events\nARRAY JOIN \n    labels AS label\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "dependencies",
              "count": 9458518
            },
            {
              "label": "enhancement",
              "count": 6805408
            },
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": ":arrow_heading_down: pull",
              "count": 4124651
            },
            {
              "label": "question",
              "count": 934878
            },
            {
              "label": "help wanted",
              "count": 757775
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "cla: yes",
              "count": 653842
            },
            {
              "label": "documentation",
              "count": 512616
            },
            {
              "label": "javascript",
              "count": 507441
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.637682486,
            "rows_read": 326129279,
            "bytes_read": 3089461441
          },
          "executionTime": 0.66,
          "requestId": "01JTFYHTXH758D5JND3V73CK44",
          "length": 393
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.181,
          "totalDuration": 2.838,
          "tokens": {
            "promptTokens": 4824,
            "completionTokens": 77,
            "totalTokens": 4901
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    arrayJoin(labels) as label,\n    COUNT(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND arrayExists(x -> (lower(x) LIKE '%bug%' OR lower(x) LIKE '%feature%'), labels)\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "Bug",
          "count": 501959
        },
        {
          "label": "enhancement",
          "count": 243475
        },
        {
          "label": "kind/bug",
          "count": 164302
        },
        {
          "label": "Feature",
          "count": 159482
        },
        {
          "label": "help wanted",
          "count": 146587
        },
        {
          "label": "feature request",
          "count": 139669
        },
        {
          "label": "type: bug",
          "count": 138342
        },
        {
          "label": "Type: Bug",
          "count": 116961
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.579107295,
        "rows_read": 326129279,
        "bytes_read": 3089530938
      },
      "executionTime": 1.607,
      "requestId": "01JTFYJ5XQETWZXR1VVC3JNXRE",
      "length": 365
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 most popular labels for issues and pull requests? filter by bugs and features\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    label,\n    COUNT(*) as count\nFROM \n    github_events\nCROSS JOIN \n    arrayJoin(labels) as label\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND (lower(label) LIKE '%bug%' OR lower(label) LIKE '%feature%')\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.125,
      "totalDuration": 2.688,
      "tokens": {
        "promptTokens": 4996,
        "completionTokens": 106,
        "totalTokens": 5102
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    label,\n    COUNT(*) as count\nFROM \n    github_events\nCROSS JOIN \n    arrayJoin(labels) as label\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND (lower(label) LIKE '%bug%' OR lower(label) LIKE '%feature%')\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTFYJ0V0R7FQE0396XPC0ZA1",
          "error": "{\"error\": \"The query uses disabled table functions: 'arrayJoin'\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html\"}",
          "length": 2
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.283,
          "totalDuration": 2.901,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 107,
            "totalTokens": 4937
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    arrayJoin(labels) as label,\n    COUNT(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND arrayExists(x -> (lower(x) LIKE '%bug%' OR lower(x) LIKE '%feature%'), labels)\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "Bug",
              "count": 501959
            },
            {
              "label": "enhancement",
              "count": 243475
            },
            {
              "label": "kind/bug",
              "count": 164302
            },
            {
              "label": "Feature",
              "count": 159482
            },
            {
              "label": "help wanted",
              "count": 146587
            },
            {
              "label": "feature request",
              "count": 139669
            },
            {
              "label": "type: bug",
              "count": 138342
            },
            {
              "label": "Type: Bug",
              "count": 116961
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.579107295,
            "rows_read": 326129279,
            "bytes_read": 3089530938
          },
          "executionTime": 1.607,
          "requestId": "01JTFYJ5XQETWZXR1VVC3JNXRE",
          "length": 365
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 most popular labels for issues and pull requests? filter by bugs and features\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    label,\n    COUNT(*) as count\nFROM \n    github_events\nCROSS JOIN \n    arrayJoin(labels) as label\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND (lower(label) LIKE '%bug%' OR lower(label) LIKE '%feature%')\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.125,
          "totalDuration": 2.688,
          "tokens": {
            "promptTokens": 4996,
            "completionTokens": 106,
            "totalTokens": 5102
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, LENGTH(repo_name) AS name_length\nFROM github_events\nORDER BY name_length DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "name_length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "name_length": 140
        },
        {
          "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
          "name_length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "name_length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "name_length": 140
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
          "name_length": 140
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
          "name_length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "name_length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "name_length": 140
        },
        {
          "repo_name": "qwertqwertqwertqwertqwertqwertqwertqwer/asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf",
          "name_length": 140
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 7.521100709,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.567,
      "requestId": "01JTFYJCZFTM6HYDMWY9ZEKAQQ",
      "length": 1751
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.487,
      "totalDuration": 3.09,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 36,
        "totalTokens": 4855
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, LENGTH(repo_name) AS name_length\nFROM github_events\nORDER BY name_length DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "name_length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "name_length": 140
            },
            {
              "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
              "name_length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "name_length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "name_length": 140
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
              "name_length": 140
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
              "name_length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "name_length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "name_length": 140
            },
            {
              "repo_name": "qwertqwertqwertqwertqwertqwertqwertqwer/asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf",
              "name_length": 140
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 7.521100709,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.567,
          "requestId": "01JTFYJCZFTM6HYDMWY9ZEKAQQ",
          "length": 1751
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.487,
          "totalDuration": 3.09,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 36,
            "totalTokens": 4855
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, LENGTH(repo_name) as name_length\nFROM github_events\nGROUP BY repo_name\nORDER BY name_length ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "name_length": 1
        },
        {
          "repo_name": "/x",
          "name_length": 2
        },
        {
          "repo_name": "/n",
          "name_length": 2
        },
        {
          "repo_name": "/h",
          "name_length": 2
        },
        {
          "repo_name": "/c",
          "name_length": 2
        },
        {
          "repo_name": "/a",
          "name_length": 2
        },
        {
          "repo_name": "/-",
          "name_length": 2
        },
        {
          "repo_name": "/z",
          "name_length": 2
        },
        {
          "repo_name": "/av",
          "name_length": 3
        },
        {
          "repo_name": "/zl",
          "name_length": 3
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 52.42720168,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 76.992,
      "requestId": "01JTFYKGVHM1AW6DC6WA1QR7K9",
      "length": 352
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.086,
      "totalDuration": 2.15,
      "tokens": {
        "promptTokens": 4819,
        "completionTokens": 43,
        "totalTokens": 4862
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, LENGTH(repo_name) as name_length\nFROM github_events\nGROUP BY repo_name\nORDER BY name_length ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "name_length": 1
            },
            {
              "repo_name": "/x",
              "name_length": 2
            },
            {
              "repo_name": "/n",
              "name_length": 2
            },
            {
              "repo_name": "/h",
              "name_length": 2
            },
            {
              "repo_name": "/c",
              "name_length": 2
            },
            {
              "repo_name": "/a",
              "name_length": 2
            },
            {
              "repo_name": "/-",
              "name_length": 2
            },
            {
              "repo_name": "/z",
              "name_length": 2
            },
            {
              "repo_name": "/av",
              "name_length": 3
            },
            {
              "repo_name": "/zl",
              "name_length": 3
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 52.42720168,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 76.992,
          "requestId": "01JTFYKGVHM1AW6DC6WA1QR7K9",
          "length": 352
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.086,
          "totalDuration": 2.15,
          "tokens": {
            "promptTokens": 4819,
            "completionTokens": 43,
            "totalTokens": 4862
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE \n    (event_type = 'IssueCommentEvent' OR event_type = 'PullRequestReviewCommentEvent') \n    AND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 3299
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 1175
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 359
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 250
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 178
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 114
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 89
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 80
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 77
        },
        {
          "repo_name": "frontendbr/forum",
          "comment_count": 63
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 10.385277102,
        "rows_read": 274641647,
        "bytes_read": 99747125712
      },
      "executionTime": 10.434,
      "requestId": "01JTFYN9NQSQCYH9MYG7W70ND1",
      "length": 613
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 1.721,
      "totalDuration": 3.204,
      "tokens": {
        "promptTokens": 4825,
        "completionTokens": 93,
        "totalTokens": 4918
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE \n    (event_type = 'IssueCommentEvent' OR event_type = 'PullRequestReviewCommentEvent') \n    AND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 3299
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 1175
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 359
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 250
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 178
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 114
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 89
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 80
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 77
            },
            {
              "repo_name": "frontendbr/forum",
              "comment_count": 63
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 10.385277102,
            "rows_read": 274641647,
            "bytes_read": 99747125712
          },
          "executionTime": 10.434,
          "requestId": "01JTFYN9NQSQCYH9MYG7W70ND1",
          "length": 613
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 1.721,
          "totalDuration": 3.204,
          "tokens": {
            "promptTokens": 4825,
            "completionTokens": 93,
            "totalTokens": 4918
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT comment_id) AS comment_count,\n    COUNT(DISTINCT actor_login) AS unique_commenters\nFROM github_events\nWHERE \n    event_type IN ('IssueCommentEvent', 'PullRequestReviewCommentEvent', 'CommitCommentEvent') \n    AND (LOWER(body) LIKE '%freecodecamp%' OR LOWER(body) LIKE '%free code camp%')\n    AND body IS NOT NULL\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 11884,
          "unique_commenters": 1403
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 6995,
          "unique_commenters": 1003
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 1556,
          "unique_commenters": 112
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 674,
          "unique_commenters": 74
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 491,
          "unique_commenters": 120
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 456,
          "unique_commenters": 59
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "comment_count": 383,
          "unique_commenters": 53
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 285,
          "unique_commenters": 105
        },
        {
          "repo_name": "bugron/TestPrBot",
          "comment_count": 249,
          "unique_commenters": 3
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 216,
          "unique_commenters": 41
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        },
        {
          "name": "unique_commenters",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 16.858564211,
        "rows_read": 284616113,
        "bytes_read": 103003249186
      },
      "executionTime": 16.903,
      "requestId": "01JTFYNYK3E7ZAHJG6KVAMECQ8",
      "length": 842
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 6.392,
      "totalDuration": 8.485,
      "tokens": {
        "promptTokens": 4830,
        "completionTokens": 141,
        "totalTokens": 4971
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT comment_id) AS comment_count,\n    COUNT(DISTINCT actor_login) AS unique_commenters\nFROM github_events\nWHERE \n    event_type IN ('IssueCommentEvent', 'PullRequestReviewCommentEvent', 'CommitCommentEvent') \n    AND (LOWER(body) LIKE '%freecodecamp%' OR LOWER(body) LIKE '%free code camp%')\n    AND body IS NOT NULL\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 11884,
              "unique_commenters": 1403
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 6995,
              "unique_commenters": 1003
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 1556,
              "unique_commenters": 112
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 674,
              "unique_commenters": 74
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 491,
              "unique_commenters": 120
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 456,
              "unique_commenters": 59
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "comment_count": 383,
              "unique_commenters": 53
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 285,
              "unique_commenters": 105
            },
            {
              "repo_name": "bugron/TestPrBot",
              "comment_count": 249,
              "unique_commenters": 3
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 216,
              "unique_commenters": 41
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            },
            {
              "name": "unique_commenters",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 16.858564211,
            "rows_read": 284616113,
            "bytes_read": 103003249186
          },
          "executionTime": 16.903,
          "requestId": "01JTFYNYK3E7ZAHJG6KVAMECQ8",
          "length": 842
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 6.392,
          "totalDuration": 8.485,
          "tokens": {
            "promptTokens": 4830,
            "completionTokens": 141,
            "totalTokens": 4971
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    body,\n    repo_name,\n    created_at,\n    comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 9.875732251,
        "rows_read": 218620144,
        "bytes_read": 94273991064
      },
      "executionTime": 9.92,
      "requestId": "01JTFYPM9J2A2J904XMMFE349S",
      "length": 1901
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "claude-3.7-sonnet",
    "provider": "anthropic",
    "metrics": {
      "timeToFirstToken": 2.471,
      "totalDuration": 2.816,
      "tokens": {
        "promptTokens": 4821,
        "completionTokens": 61,
        "totalTokens": 4882
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    body,\n    repo_name,\n    created_at,\n    comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 9.875732251,
            "rows_read": 218620144,
            "bytes_read": 94273991064
          },
          "executionTime": 9.92,
          "requestId": "01JTFYPM9J2A2J904XMMFE349S",
          "length": 1901
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "claude-3.7-sonnet",
        "provider": "anthropic",
        "metrics": {
          "timeToFirstToken": 2.471,
          "totalDuration": 2.816,
          "tokens": {
            "promptTokens": 4821,
            "completionTokens": 61,
            "totalTokens": 4882
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars_count": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars_count": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars_count": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars_count": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars_count": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars_count": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars_count": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars_count": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars_count": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars_count": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.25327905,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.278,
      "requestId": "01JTFYQ3RR677YGCTK6VY44Y3P",
      "length": 577
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.731,
      "totalDuration": 3.44,
      "tokens": {
        "promptTokens": 4108,
        "completionTokens": 42,
        "totalTokens": 4150
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars_count": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars_count": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars_count": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars_count": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars_count": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars_count": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars_count": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars_count": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars_count": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars_count": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.25327905,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.278,
          "requestId": "01JTFYQ3RR677YGCTK6VY44Y3P",
          "length": 577
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.731,
          "totalDuration": 3.44,
          "tokens": {
            "promptTokens": 4108,
            "completionTokens": 42,
            "totalTokens": 4150
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.198539514,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.221,
      "requestId": "01JTFYQAN61FMRXRHAZW1V3H2N",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.703,
      "totalDuration": 3.274,
      "tokens": {
        "promptTokens": 4095,
        "completionTokens": 39,
        "totalTokens": 4134
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.198539514,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.221,
          "requestId": "01JTFYQAN61FMRXRHAZW1V3H2N",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.703,
          "totalDuration": 3.274,
          "tokens": {
            "promptTokens": 4095,
            "completionTokens": 39,
            "totalTokens": 4134
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    floor(log10(greatest(1, push_distinct_size)) / 1) * 10 as star_bucket,\n    count(*) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY star_bucket\nORDER BY star_bucket\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "star_bucket": 0,
          "repo_count": 232118474
        }
      ],
      "meta": [
        {
          "name": "star_bucket",
          "type": "Float64"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.305729252,
        "rows_read": 232190399,
        "bytes_read": 1393142394
      },
      "executionTime": 0.324,
      "requestId": "01JTFYQKEJRCSPMQPFNXCN5HCE",
      "length": 42
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.915,
      "totalDuration": 5.279,
      "tokens": {
        "promptTokens": 4111,
        "completionTokens": 73,
        "totalTokens": 4184
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    floor(log10(greatest(1, push_distinct_size)) / 1) * 10 as star_bucket,\n    count(*) as repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY star_bucket\nORDER BY star_bucket\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "star_bucket": 0,
              "repo_count": 232118474
            }
          ],
          "meta": [
            {
              "name": "star_bucket",
              "type": "Float64"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.305729252,
            "rows_read": 232190399,
            "bytes_read": 1393142394
          },
          "executionTime": 0.324,
          "requestId": "01JTFYQKEJRCSPMQPFNXCN5HCE",
          "length": 42
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.915,
          "totalDuration": 5.279,
          "tokens": {
            "promptTokens": 4111,
            "completionTokens": 73,
            "totalTokens": 4184
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories \nFROM github_events \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_repositories": 165611259
        }
      ],
      "meta": [
        {
          "name": "total_repositories",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.30960879,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.354,
      "requestId": "01JTFYQRAP2F8E1N9YM458TJJK",
      "length": 34
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.214,
      "totalDuration": 2.147,
      "tokens": {
        "promptTokens": 4096,
        "completionTokens": 22,
        "totalTokens": 4118
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories \nFROM github_events \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_repositories": 165611259
            }
          ],
          "meta": [
            {
              "name": "total_repositories",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.30960879,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.354,
          "requestId": "01JTFYQRAP2F8E1N9YM458TJJK",
          "length": 34
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.214,
          "totalDuration": 2.147,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 22,
            "totalTokens": 4118
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    toYear(created_at) AS year,\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year ASC, event_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo_name": "direwolf-github/my-app",
          "event_count": 659546
        },
        {
          "year": 2015,
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 510424
        },
        {
          "year": 2015,
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "event_count": 310733
        },
        {
          "year": 2015,
          "repo_name": "sakai-mirror/melete",
          "event_count": 256758
        },
        {
          "year": 2015,
          "repo_name": "Door43/d43-en",
          "event_count": 226907
        },
        {
          "year": 2015,
          "repo_name": "apache/spark",
          "event_count": 223230
        },
        {
          "year": 2015,
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 189974
        },
        {
          "year": 2015,
          "repo_name": "dchekhonin/testDM",
          "event_count": 151983
        },
        {
          "year": 2015,
          "repo_name": "docker/docker",
          "event_count": 132956
        },
        {
          "year": 2015,
          "repo_name": "kubernetes/kubernetes",
          "event_count": 129690
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 63.831049498,
        "rows_read": 2843662884,
        "bytes_read": 17048892505
      },
      "executionTime": 63.879,
      "requestId": "01JTFYRP0ZWF2F3D99QC7CK1FY",
      "length": 709
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.102,
      "totalDuration": 3.553,
      "tokens": {
        "promptTokens": 4104,
        "completionTokens": 60,
        "totalTokens": 4164
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    toYear(created_at) AS year,\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year ASC, event_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2015,
              "repo_name": "direwolf-github/my-app",
              "event_count": 659546
            },
            {
              "year": 2015,
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 510424
            },
            {
              "year": 2015,
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "event_count": 310733
            },
            {
              "year": 2015,
              "repo_name": "sakai-mirror/melete",
              "event_count": 256758
            },
            {
              "year": 2015,
              "repo_name": "Door43/d43-en",
              "event_count": 226907
            },
            {
              "year": 2015,
              "repo_name": "apache/spark",
              "event_count": 223230
            },
            {
              "year": 2015,
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 189974
            },
            {
              "year": 2015,
              "repo_name": "dchekhonin/testDM",
              "event_count": 151983
            },
            {
              "year": 2015,
              "repo_name": "docker/docker",
              "event_count": 132956
            },
            {
              "year": 2015,
              "repo_name": "kubernetes/kubernetes",
              "event_count": 129690
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 63.831049498,
            "rows_read": 2843662884,
            "bytes_read": 17048892505
          },
          "executionTime": 63.879,
          "requestId": "01JTFYRP0ZWF2F3D99QC7CK1FY",
          "length": 709
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.102,
          "totalDuration": 3.553,
          "tokens": {
            "promptTokens": 4104,
            "completionTokens": 60,
            "totalTokens": 4164
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    toDate(created_at) AS date,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY date\nORDER BY date ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "date": "2011-02-12",
          "stars_count": 3517
        },
        {
          "date": "2011-02-13",
          "stars_count": 3692
        },
        {
          "date": "2011-02-14",
          "stars_count": 4722
        },
        {
          "date": "2011-02-15",
          "stars_count": 4967
        },
        {
          "date": "2011-02-16",
          "stars_count": 4477
        },
        {
          "date": "2011-02-17",
          "stars_count": 4758
        },
        {
          "date": "2011-02-18",
          "stars_count": 4598
        },
        {
          "date": "2011-02-19",
          "stars_count": 3538
        },
        {
          "date": "2011-02-20",
          "stars_count": 3304
        },
        {
          "date": "2011-02-21",
          "stars_count": 4762
        }
      ],
      "meta": [
        {
          "name": "date",
          "type": "Date"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.262037345,
        "rows_read": 232190399,
        "bytes_read": 1393142394
      },
      "executionTime": 0.279,
      "requestId": "01JTFYTT2D56A0VK0QTG6CCWNV",
      "length": 411
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.062,
      "totalDuration": 3.321,
      "tokens": {
        "promptTokens": 4101,
        "completionTokens": 53,
        "totalTokens": 4154
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    toDate(created_at) AS date,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY date\nORDER BY date ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "date": "2011-02-12",
              "stars_count": 3517
            },
            {
              "date": "2011-02-13",
              "stars_count": 3692
            },
            {
              "date": "2011-02-14",
              "stars_count": 4722
            },
            {
              "date": "2011-02-15",
              "stars_count": 4967
            },
            {
              "date": "2011-02-16",
              "stars_count": 4477
            },
            {
              "date": "2011-02-17",
              "stars_count": 4758
            },
            {
              "date": "2011-02-18",
              "stars_count": 4598
            },
            {
              "date": "2011-02-19",
              "stars_count": 3538
            },
            {
              "date": "2011-02-20",
              "stars_count": 3304
            },
            {
              "date": "2011-02-21",
              "stars_count": 4762
            }
          ],
          "meta": [
            {
              "name": "date",
              "type": "Date"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.262037345,
            "rows_read": 232190399,
            "bytes_read": 1393142394
          },
          "executionTime": 0.279,
          "requestId": "01JTFYTT2D56A0VK0QTG6CCWNV",
          "length": 411
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.062,
          "totalDuration": 3.321,
          "tokens": {
            "promptTokens": 4101,
            "completionTokens": 53,
            "totalTokens": 4154
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    count() AS stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "stars_given": 232492
        },
        {
          "actor_login": "salifm",
          "stars_given": 202534
        },
        {
          "actor_login": "x0rzkov",
          "stars_given": 73531
        },
        {
          "actor_login": "fly51fly",
          "stars_given": 57756
        },
        {
          "actor_login": "PCOffline",
          "stars_given": 56725
        },
        {
          "actor_login": "baslr",
          "stars_given": 50363
        },
        {
          "actor_login": "gkze",
          "stars_given": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "stars_given": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "stars_given": 44715
        },
        {
          "actor_login": "mcanthony",
          "stars_given": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_given",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.187314919,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 5.248,
      "requestId": "01JTFYTZQ3N7ME6T0ND6D80FY3",
      "length": 470
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.142,
      "totalDuration": 2.964,
      "tokens": {
        "promptTokens": 4098,
        "completionTokens": 46,
        "totalTokens": 4144
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    count() AS stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "stars_given": 232492
            },
            {
              "actor_login": "salifm",
              "stars_given": 202534
            },
            {
              "actor_login": "x0rzkov",
              "stars_given": 73531
            },
            {
              "actor_login": "fly51fly",
              "stars_given": 57756
            },
            {
              "actor_login": "PCOffline",
              "stars_given": 56725
            },
            {
              "actor_login": "baslr",
              "stars_given": 50363
            },
            {
              "actor_login": "gkze",
              "stars_given": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "stars_given": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "stars_given": 44715
            },
            {
              "actor_login": "mcanthony",
              "stars_given": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_given",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.187314919,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 5.248,
          "requestId": "01JTFYTZQ3N7ME6T0ND6D80FY3",
          "length": 470
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.142,
          "totalDuration": 2.964,
          "tokens": {
            "promptTokens": 4098,
            "completionTokens": 46,
            "totalTokens": 4144
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    AND repo_name = 'freecodecamp/freecodecamp'\n)\nAND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.721208505,
        "rows_read": 232317017,
        "bytes_read": 696925709
      },
      "executionTime": 1.741,
      "requestId": "01JTFYVCDRE8EPTN02FVRWHM9R",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.417,
      "totalDuration": 5.302,
      "tokens": {
        "promptTokens": 4116,
        "completionTokens": 96,
        "totalTokens": 4212
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    AND repo_name = 'freecodecamp/freecodecamp'\n)\nAND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.721208505,
            "rows_read": 232317017,
            "bytes_read": 696925709
          },
          "executionTime": 1.741,
          "requestId": "01JTFYVCDRE8EPTN02FVRWHM9R",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.417,
          "totalDuration": 5.302,
          "tokens": {
            "promptTokens": 4116,
            "completionTokens": 96,
            "totalTokens": 4212
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent' \nAND action = 'started'\nAND repo_name LIKE '%javisantana%'\nGROUP BY actor_login\nORDER BY stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "netconstructor",
          "stars_count": 7
        },
        {
          "actor_login": "javierhonduco",
          "stars_count": 3
        },
        {
          "actor_login": "fpedrera",
          "stars_count": 3
        },
        {
          "actor_login": "canwe",
          "stars_count": 2
        },
        {
          "actor_login": "pcruzf",
          "stars_count": 2
        },
        {
          "actor_login": "Sumbera",
          "stars_count": 2
        },
        {
          "actor_login": "alexeypetrushin",
          "stars_count": 2
        },
        {
          "actor_login": "raul",
          "stars_count": 2
        },
        {
          "actor_login": "alperdincer",
          "stars_count": 2
        },
        {
          "actor_login": "javierarce",
          "stars_count": 2
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.337149962,
        "rows_read": 232190399,
        "bytes_read": 928490818
      },
      "executionTime": 0.356,
      "requestId": "01JTFYVMH8B4X2WDYG5C4STZH1",
      "length": 444
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.448,
      "totalDuration": 4.062,
      "tokens": {
        "promptTokens": 4103,
        "completionTokens": 60,
        "totalTokens": 4163
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent' \nAND action = 'started'\nAND repo_name LIKE '%javisantana%'\nGROUP BY actor_login\nORDER BY stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "netconstructor",
              "stars_count": 7
            },
            {
              "actor_login": "javierhonduco",
              "stars_count": 3
            },
            {
              "actor_login": "fpedrera",
              "stars_count": 3
            },
            {
              "actor_login": "canwe",
              "stars_count": 2
            },
            {
              "actor_login": "pcruzf",
              "stars_count": 2
            },
            {
              "actor_login": "Sumbera",
              "stars_count": 2
            },
            {
              "actor_login": "alexeypetrushin",
              "stars_count": 2
            },
            {
              "actor_login": "raul",
              "stars_count": 2
            },
            {
              "actor_login": "alperdincer",
              "stars_count": 2
            },
            {
              "actor_login": "javierarce",
              "stars_count": 2
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.337149962,
            "rows_read": 232190399,
            "bytes_read": 928490818
          },
          "executionTime": 0.356,
          "requestId": "01JTFYVMH8B4X2WDYG5C4STZH1",
          "length": 444
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.448,
          "totalDuration": 4.062,
          "tokens": {
            "promptTokens": 4103,
            "completionTokens": 60,
            "totalTokens": 4163
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    groupUniqArray(repo_name) AS contributed_repos\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freecodecamp/freecodecamp'\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n)\nAND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY actor_login\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributed_repos",
          "type": "Array(String)"
        }
      ],
      "statistics": {
        "elapsed": 7.204545516,
        "rows_read": 3127355383,
        "bytes_read": 6250293479
      },
      "executionTime": 7.249,
      "requestId": "01JTFYVW82FHQ1VFX907YTC0J4",
      "length": 2
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.889,
      "totalDuration": 5.012,
      "tokens": {
        "promptTokens": 4105,
        "completionTokens": 97,
        "totalTokens": 4202
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    groupUniqArray(repo_name) AS contributed_repos\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freecodecamp/freecodecamp'\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n)\nAND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY actor_login\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributed_repos",
              "type": "Array(String)"
            }
          ],
          "statistics": {
            "elapsed": 7.204545516,
            "rows_read": 3127355383,
            "bytes_read": 6250293479
          },
          "executionTime": 7.249,
          "requestId": "01JTFYVW82FHQ1VFX907YTC0J4",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.889,
          "totalDuration": 5.012,
          "tokens": {
            "promptTokens": 4105,
            "completionTokens": 97,
            "totalTokens": 4202
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    e2.repo_name,\n    COUNT(*) AS issue_count\nFROM github_events e1\nJOIN github_events e2 ON e1.actor_login = e2.actor_login\nWHERE \n    e1.repo_name = 'freecodecamp' \n    AND e1.event_type = 'IssuesEvent'\n    AND e2.event_type = 'IssuesEvent'\n    AND e2.repo_name != 'freecodecamp'\nGROUP BY e2.repo_name\nORDER BY issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "e2.repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 9.082006625,
        "rows_read": 111599101,
        "bytes_read": 556932478
      },
      "executionTime": 9.137,
      "requestId": "01JTFYW9RHSHQFHNXAZ8VMB8NA",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.063,
      "totalDuration": 4.086,
      "tokens": {
        "promptTokens": 4108,
        "completionTokens": 115,
        "totalTokens": 4223
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    e2.repo_name,\n    COUNT(*) AS issue_count\nFROM github_events e1\nJOIN github_events e2 ON e1.actor_login = e2.actor_login\nWHERE \n    e1.repo_name = 'freecodecamp' \n    AND e1.event_type = 'IssuesEvent'\n    AND e2.event_type = 'IssuesEvent'\n    AND e2.repo_name != 'freecodecamp'\nGROUP BY e2.repo_name\nORDER BY issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "e2.repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 9.082006625,
            "rows_read": 111599101,
            "bytes_read": 556932478
          },
          "executionTime": 9.137,
          "requestId": "01JTFYW9RHSHQFHNXAZ8VMB8NA",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.063,
          "totalDuration": 4.086,
          "tokens": {
            "promptTokens": 4108,
            "completionTokens": 115,
            "totalTokens": 4223
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= now() - interval 1 day\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003289418,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.02,
      "requestId": "01JTFYWRQ8T593VBFJE7X6DV7V",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.673,
      "totalDuration": 3.703,
      "tokens": {
        "promptTokens": 4102,
        "completionTokens": 55,
        "totalTokens": 4157
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= now() - interval 1 day\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003289418,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.02,
          "requestId": "01JTFYWRQ8T593VBFJE7X6DV7V",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.673,
          "totalDuration": 3.703,
          "tokens": {
            "promptTokens": 4102,
            "completionTokens": 55,
            "totalTokens": 4157
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNTIf(toYear(created_at) = 2019) AS events_2019,\n    COUNTIf(toYear(created_at) = 2020) AS events_2020,\n    (events_2020 - events_2019) AS growth,\n    ROUND((events_2020 - events_2019) * 100.0 / NULLIF(events_2019, 0), 2) AS growth_percentage\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020)\nGROUP BY repo_name\nHAVING events_2019 > 0 AND events_2020 > 0\nORDER BY growth_percentage DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "brand22/d3",
          "events_2019": 2,
          "events_2020": 378498,
          "growth": 378496,
          "growth_percentage": 18924800
        },
        {
          "repo_name": "ihtsae/aom",
          "events_2019": 3,
          "events_2020": 235387,
          "growth": 235384,
          "growth_percentage": 7846133.33
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "events_2019": 3,
          "events_2020": 108098,
          "growth": 108095,
          "growth_percentage": 3603166.67
        },
        {
          "repo_name": "sumitc91/sumitc91.github.io",
          "events_2019": 2,
          "events_2020": 58789,
          "growth": 58787,
          "growth_percentage": 2939350
        },
        {
          "repo_name": "evanw/esbuild",
          "events_2019": 1,
          "events_2020": 21715,
          "growth": 21714,
          "growth_percentage": 2171400
        },
        {
          "repo_name": "26879958/ps",
          "events_2019": 1,
          "events_2020": 21664,
          "growth": 21663,
          "growth_percentage": 2166300
        },
        {
          "repo_name": "saby/wasaby-controls",
          "events_2019": 5,
          "events_2020": 105131,
          "growth": 105126,
          "growth_percentage": 2102520
        },
        {
          "repo_name": "liferay-continuous-integration/liferay-portal",
          "events_2019": 1,
          "events_2020": 17371,
          "growth": 17370,
          "growth_percentage": 1737000
        },
        {
          "repo_name": "moiify/AutoGreen",
          "events_2019": 28,
          "events_2020": 354724,
          "growth": 354696,
          "growth_percentage": 1266771.43
        },
        {
          "repo_name": "pavlo-byshovets/Tutorials",
          "events_2019": 1,
          "events_2020": 11687,
          "growth": 11686,
          "growth_percentage": 1168600
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "events_2019",
          "type": "UInt64"
        },
        {
          "name": "events_2020",
          "type": "UInt64"
        },
        {
          "name": "growth",
          "type": "Int64"
        },
        {
          "name": "growth_percentage",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 23.059741574,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 23.102,
      "requestId": "01JTFYX62F1D1P7QDHT1GA398S",
      "length": 1180
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.864,
      "totalDuration": 11.126,
      "tokens": {
        "promptTokens": 4108,
        "completionTokens": 157,
        "totalTokens": 4265
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNTIf(toYear(created_at) = 2019) AS events_2019,\n    COUNTIf(toYear(created_at) = 2020) AS events_2020,\n    (events_2020 - events_2019) AS growth,\n    ROUND((events_2020 - events_2019) * 100.0 / NULLIF(events_2019, 0), 2) AS growth_percentage\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020)\nGROUP BY repo_name\nHAVING events_2019 > 0 AND events_2020 > 0\nORDER BY growth_percentage DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "brand22/d3",
              "events_2019": 2,
              "events_2020": 378498,
              "growth": 378496,
              "growth_percentage": 18924800
            },
            {
              "repo_name": "ihtsae/aom",
              "events_2019": 3,
              "events_2020": 235387,
              "growth": 235384,
              "growth_percentage": 7846133.33
            },
            {
              "repo_name": "Ramos-dev/jniwebshell",
              "events_2019": 3,
              "events_2020": 108098,
              "growth": 108095,
              "growth_percentage": 3603166.67
            },
            {
              "repo_name": "sumitc91/sumitc91.github.io",
              "events_2019": 2,
              "events_2020": 58789,
              "growth": 58787,
              "growth_percentage": 2939350
            },
            {
              "repo_name": "evanw/esbuild",
              "events_2019": 1,
              "events_2020": 21715,
              "growth": 21714,
              "growth_percentage": 2171400
            },
            {
              "repo_name": "26879958/ps",
              "events_2019": 1,
              "events_2020": 21664,
              "growth": 21663,
              "growth_percentage": 2166300
            },
            {
              "repo_name": "saby/wasaby-controls",
              "events_2019": 5,
              "events_2020": 105131,
              "growth": 105126,
              "growth_percentage": 2102520
            },
            {
              "repo_name": "liferay-continuous-integration/liferay-portal",
              "events_2019": 1,
              "events_2020": 17371,
              "growth": 17370,
              "growth_percentage": 1737000
            },
            {
              "repo_name": "moiify/AutoGreen",
              "events_2019": 28,
              "events_2020": 354724,
              "growth": 354696,
              "growth_percentage": 1266771.43
            },
            {
              "repo_name": "pavlo-byshovets/Tutorials",
              "events_2019": 1,
              "events_2020": 11687,
              "growth": 11686,
              "growth_percentage": 1168600
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "events_2019",
              "type": "UInt64"
            },
            {
              "name": "events_2020",
              "type": "UInt64"
            },
            {
              "name": "growth",
              "type": "Int64"
            },
            {
              "name": "growth_percentage",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 23.059741574,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 23.102,
          "requestId": "01JTFYX62F1D1P7QDHT1GA398S",
          "length": 1180
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.864,
          "totalDuration": 11.126,
          "tokens": {
            "promptTokens": 4108,
            "completionTokens": 157,
            "totalTokens": 4265
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    countIf(created_at >= '2019-01-01' AND created_at < '2020-01-01') AS activity_2019,\n    countIf(created_at >= '2020-01-01' AND created_at < '2021-01-01') AS activity_2020,\n    (activity_2020 - activity_2019) AS activity_diff,\n    activity_2020 / nullIf(activity_2019, 0) AS stagnation_ratio\nFROM github_events\nWHERE (created_at >= '2019-01-01' AND created_at < '2021-01-01')\nGROUP BY repo_name\nHAVING activity_2019 > 0\nORDER BY stagnation_ratio ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "idsqat1/idsqat4-PagerDuty-1569380431876",
          "activity_2019": 2,
          "activity_2020": 0,
          "activity_diff": -2,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "xuaolin/readTickersList",
          "activity_2019": 2,
          "activity_2020": 0,
          "activity_diff": -2,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "lonban/game",
          "activity_2019": 1,
          "activity_2020": 0,
          "activity_diff": -1,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "sablierhq/minimum-viable-payment-channel",
          "activity_2019": 1,
          "activity_2020": 0,
          "activity_diff": -1,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "Askat08/filterable-list",
          "activity_2019": 2,
          "activity_2020": 0,
          "activity_diff": -2,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "sheriline/javascript-1",
          "activity_2019": 2,
          "activity_2020": 0,
          "activity_diff": -2,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "kchonka/hacktoberfest19",
          "activity_2019": 2,
          "activity_2020": 0,
          "activity_diff": -2,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "xjlzh/xiong",
          "activity_2019": 1,
          "activity_2020": 0,
          "activity_diff": -1,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "GunnvieGunner/INPG",
          "activity_2019": 76,
          "activity_2020": 0,
          "activity_diff": -76,
          "stagnation_ratio": 0
        },
        {
          "repo_name": "vikaspoonia/awesome-learning-python",
          "activity_2019": 5,
          "activity_2020": 0,
          "activity_diff": -5,
          "stagnation_ratio": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "activity_2019",
          "type": "UInt64"
        },
        {
          "name": "activity_2020",
          "type": "UInt64"
        },
        {
          "name": "activity_diff",
          "type": "Int64"
        },
        {
          "name": "stagnation_ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 22.559801882,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 22.607,
      "requestId": "01JTFYY9BH3AM4S72M0F8S6397",
      "length": 1178
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 2.838,
      "totalDuration": 10.521,
      "tokens": {
        "promptTokens": 4106,
        "completionTokens": 168,
        "totalTokens": 4274
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    countIf(created_at >= '2019-01-01' AND created_at < '2020-01-01') AS activity_2019,\n    countIf(created_at >= '2020-01-01' AND created_at < '2021-01-01') AS activity_2020,\n    (activity_2020 - activity_2019) AS activity_diff,\n    activity_2020 / nullIf(activity_2019, 0) AS stagnation_ratio\nFROM github_events\nWHERE (created_at >= '2019-01-01' AND created_at < '2021-01-01')\nGROUP BY repo_name\nHAVING activity_2019 > 0\nORDER BY stagnation_ratio ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "idsqat1/idsqat4-PagerDuty-1569380431876",
              "activity_2019": 2,
              "activity_2020": 0,
              "activity_diff": -2,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "xuaolin/readTickersList",
              "activity_2019": 2,
              "activity_2020": 0,
              "activity_diff": -2,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "lonban/game",
              "activity_2019": 1,
              "activity_2020": 0,
              "activity_diff": -1,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "sablierhq/minimum-viable-payment-channel",
              "activity_2019": 1,
              "activity_2020": 0,
              "activity_diff": -1,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "Askat08/filterable-list",
              "activity_2019": 2,
              "activity_2020": 0,
              "activity_diff": -2,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "sheriline/javascript-1",
              "activity_2019": 2,
              "activity_2020": 0,
              "activity_diff": -2,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "kchonka/hacktoberfest19",
              "activity_2019": 2,
              "activity_2020": 0,
              "activity_diff": -2,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "xjlzh/xiong",
              "activity_2019": 1,
              "activity_2020": 0,
              "activity_diff": -1,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "GunnvieGunner/INPG",
              "activity_2019": 76,
              "activity_2020": 0,
              "activity_diff": -76,
              "stagnation_ratio": 0
            },
            {
              "repo_name": "vikaspoonia/awesome-learning-python",
              "activity_2019": 5,
              "activity_2020": 0,
              "activity_diff": -5,
              "stagnation_ratio": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "activity_2019",
              "type": "UInt64"
            },
            {
              "name": "activity_2020",
              "type": "UInt64"
            },
            {
              "name": "activity_diff",
              "type": "Int64"
            },
            {
              "name": "stagnation_ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 22.559801882,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 22.607,
          "requestId": "01JTFYY9BH3AM4S72M0F8S6397",
          "length": 1178
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 2.838,
          "totalDuration": 10.521,
          "tokens": {
            "promptTokens": 4106,
            "completionTokens": 168,
            "totalTokens": 4274
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(*) AS total_events,\n    min(created_at) AS first_event_date,\n    max(created_at) AS last_event_date,\n    count(*) / date_diff('day', min(created_at), max(created_at)) AS growth_rate\nFROM github_events\nGROUP BY repo_name\nHAVING growth_rate > 0\nORDER BY growth_rate DESC, total_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "widelands/widelands-issue-migration2",
          "total_events": 27388,
          "first_event_date": "2019-09-09 06:24:50",
          "last_event_date": "2019-09-09 16:08:11",
          "growth_rate": null
        },
        {
          "repo_name": "26879958/vids",
          "total_events": 17205,
          "first_event_date": "2020-04-18 12:33:22",
          "last_event_date": "2020-04-18 22:06:15",
          "growth_rate": null
        },
        {
          "repo_name": "rbeckman-nextgen/test-mc6",
          "total_events": 16600,
          "first_event_date": "2020-04-22 15:45:27",
          "last_event_date": "2020-04-22 21:01:21",
          "growth_rate": null
        },
        {
          "repo_name": "AutomationUIUser/TestCommitRepository",
          "total_events": 13543,
          "first_event_date": "2020-02-04 06:10:26",
          "last_event_date": "2020-02-04 09:09:37",
          "growth_rate": null
        },
        {
          "repo_name": "fgtmenow/tst",
          "total_events": 12199,
          "first_event_date": "2016-08-02 07:15:40",
          "last_event_date": "2016-08-02 09:03:33",
          "growth_rate": null
        },
        {
          "repo_name": "Kirin420/Container",
          "total_events": 11761,
          "first_event_date": "2020-08-29 03:14:24",
          "last_event_date": "2020-08-29 16:35:45",
          "growth_rate": null
        },
        {
          "repo_name": "ammula88/linux",
          "total_events": 11248,
          "first_event_date": "2016-02-07 17:02:16",
          "last_event_date": "2016-02-07 22:06:47",
          "growth_rate": null
        },
        {
          "repo_name": "QAClarizen/ForGitHub4",
          "total_events": 10793,
          "first_event_date": "2020-05-04 11:08:30",
          "last_event_date": "2020-05-04 21:34:33",
          "growth_rate": null
        },
        {
          "repo_name": "mikfalluf/secondrepo",
          "total_events": 10477,
          "first_event_date": "2014-03-09 07:02:36",
          "last_event_date": "2014-03-09 19:25:16",
          "growth_rate": null
        },
        {
          "repo_name": "pekkaklarck/rf-migration-test-6",
          "total_events": 10101,
          "first_event_date": "2014-06-29 17:16:11",
          "last_event_date": "2014-06-29 20:32:42",
          "growth_rate": null
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        },
        {
          "name": "first_event_date",
          "type": "DateTime"
        },
        {
          "name": "last_event_date",
          "type": "DateTime"
        },
        {
          "name": "growth_rate",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 62.896782567,
        "rows_read": 3124889133,
        "bytes_read": 18732847102
      },
      "executionTime": 62.938,
      "requestId": "01JTFYZ5CN72H8DQNJB1N91QBH",
      "length": 1608
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.767,
      "totalDuration": 3.603,
      "tokens": {
        "promptTokens": 4101,
        "completionTokens": 94,
        "totalTokens": 4195
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(*) AS total_events,\n    min(created_at) AS first_event_date,\n    max(created_at) AS last_event_date,\n    count(*) / date_diff('day', min(created_at), max(created_at)) AS growth_rate\nFROM github_events\nGROUP BY repo_name\nHAVING growth_rate > 0\nORDER BY growth_rate DESC, total_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "widelands/widelands-issue-migration2",
              "total_events": 27388,
              "first_event_date": "2019-09-09 06:24:50",
              "last_event_date": "2019-09-09 16:08:11",
              "growth_rate": null
            },
            {
              "repo_name": "26879958/vids",
              "total_events": 17205,
              "first_event_date": "2020-04-18 12:33:22",
              "last_event_date": "2020-04-18 22:06:15",
              "growth_rate": null
            },
            {
              "repo_name": "rbeckman-nextgen/test-mc6",
              "total_events": 16600,
              "first_event_date": "2020-04-22 15:45:27",
              "last_event_date": "2020-04-22 21:01:21",
              "growth_rate": null
            },
            {
              "repo_name": "AutomationUIUser/TestCommitRepository",
              "total_events": 13543,
              "first_event_date": "2020-02-04 06:10:26",
              "last_event_date": "2020-02-04 09:09:37",
              "growth_rate": null
            },
            {
              "repo_name": "fgtmenow/tst",
              "total_events": 12199,
              "first_event_date": "2016-08-02 07:15:40",
              "last_event_date": "2016-08-02 09:03:33",
              "growth_rate": null
            },
            {
              "repo_name": "Kirin420/Container",
              "total_events": 11761,
              "first_event_date": "2020-08-29 03:14:24",
              "last_event_date": "2020-08-29 16:35:45",
              "growth_rate": null
            },
            {
              "repo_name": "ammula88/linux",
              "total_events": 11248,
              "first_event_date": "2016-02-07 17:02:16",
              "last_event_date": "2016-02-07 22:06:47",
              "growth_rate": null
            },
            {
              "repo_name": "QAClarizen/ForGitHub4",
              "total_events": 10793,
              "first_event_date": "2020-05-04 11:08:30",
              "last_event_date": "2020-05-04 21:34:33",
              "growth_rate": null
            },
            {
              "repo_name": "mikfalluf/secondrepo",
              "total_events": 10477,
              "first_event_date": "2014-03-09 07:02:36",
              "last_event_date": "2014-03-09 19:25:16",
              "growth_rate": null
            },
            {
              "repo_name": "pekkaklarck/rf-migration-test-6",
              "total_events": 10101,
              "first_event_date": "2014-06-29 17:16:11",
              "last_event_date": "2014-06-29 20:32:42",
              "growth_rate": null
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            },
            {
              "name": "first_event_date",
              "type": "DateTime"
            },
            {
              "name": "last_event_date",
              "type": "DateTime"
            },
            {
              "name": "growth_rate",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 62.896782567,
            "rows_read": 3124889133,
            "bytes_read": 18732847102
          },
          "executionTime": 62.938,
          "requestId": "01JTFYZ5CN72H8DQNJB1N91QBH",
          "length": 1608
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.767,
          "totalDuration": 3.603,
          "tokens": {
            "promptTokens": 4101,
            "completionTokens": 94,
            "totalTokens": 4195
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    toDayOfWeek(created_at) AS day_of_week, \n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "star_count": 38094378
        },
        {
          "day_of_week": 3,
          "star_count": 37570733
        },
        {
          "day_of_week": 4,
          "star_count": 37208005
        },
        {
          "day_of_week": 1,
          "star_count": 36491986
        },
        {
          "day_of_week": 5,
          "star_count": 34924484
        },
        {
          "day_of_week": 7,
          "star_count": 24102566
        },
        {
          "day_of_week": 6,
          "star_count": 23726322
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.198602071,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.216,
      "requestId": "01JTFZ1WEXGM0E6MR1HDGFWCPH",
      "length": 281
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\n \n\nAssume \"WatchEvent\" represents starring a repository.\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n Assume \"WatchEvent\" represents starring a repository.\n\n\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 4.107,
      "totalDuration": 13.415,
      "tokens": {
        "promptTokens": 4335,
        "completionTokens": 56,
        "totalTokens": 4391
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": " \n\nAssume \"WatchEvent\" represents starring a repository.\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.016,
          "requestId": "01JTFZ180VAWRRRDA3QBW1PPDN",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('Assume') (line 1, col 1): Assume \\\"WatchEvent\\\" represents starring a repository.\\n\\nSELECT \\n    dayOfWeek(created_at) AS day_of_week, \\n    count(*) AS star_count\\nFROM github_events\\nWHERE ev. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, ",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.835,
          "totalDuration": 2.81,
          "tokens": {
            "promptTokens": 3757,
            "completionTokens": 68,
            "totalTokens": 3825
          }
        },
        "error": null
      },
      {
        "sql": " Assume \"WatchEvent\" represents starring a repository.\n\n\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.016,
          "requestId": "01JTFZ1CWY3DRJEPP60W5RSNJ7",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('Assume') (line 1, col 1): Assume \\\"WatchEvent\\\" represents starring a repository.\\n\\n\\n\\nSELECT \\n    dayOfWeek(created_at) AS day_of_week, \\n    count() AS star_count\\nFROM github_events\\nWHERE e. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\n \n\nAssume \"WatchEvent\" represents starring a repository.\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.567,
          "totalDuration": 2.478,
          "tokens": {
            "promptTokens": 3872,
            "completionTokens": 68,
            "totalTokens": 3940
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    toDayOfWeek(created_at) AS day_of_week, \n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "star_count": 38094378
            },
            {
              "day_of_week": 3,
              "star_count": 37570733
            },
            {
              "day_of_week": 4,
              "star_count": 37208005
            },
            {
              "day_of_week": 1,
              "star_count": 36491986
            },
            {
              "day_of_week": 5,
              "star_count": 34924484
            },
            {
              "day_of_week": 7,
              "star_count": 24102566
            },
            {
              "day_of_week": 6,
              "star_count": 23726322
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.198602071,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.216,
          "requestId": "01JTFZ1WEXGM0E6MR1HDGFWCPH",
          "length": 281
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\n \n\nAssume \"WatchEvent\" represents starring a repository.\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n Assume \"WatchEvent\" represents starring a repository.\n\n\n\nSELECT \n    dayOfWeek(created_at) AS day_of_week, \n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 4.107,
          "totalDuration": 13.415,
          "tokens": {
            "promptTokens": 4335,
            "completionTokens": 56,
            "totalTokens": 4391
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users \nFROM github_events \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 34099240
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.859153502,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.906,
      "requestId": "01JTFZ21G07HJ7W1WYF1GZPHME",
      "length": 26
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.484,
      "totalDuration": 2.408,
      "tokens": {
        "promptTokens": 4096,
        "completionTokens": 22,
        "totalTokens": 4118
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users \nFROM github_events \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 34099240
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.859153502,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.906,
          "requestId": "01JTFZ21G07HJ7W1WYF1GZPHME",
          "length": 26
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.484,
          "totalDuration": 2.408,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 22,
            "totalTokens": 4118
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_stars": 10131322
        }
      ],
      "meta": [
        {
          "name": "total_users_with_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.955311108,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 5.001,
      "requestId": "01JTFZ2RERPZRWVWT59TT0GWF8",
      "length": 37
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.144,
      "totalDuration": 2.106,
      "tokens": {
        "promptTokens": 4099,
        "completionTokens": 41,
        "totalTokens": 4140
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_stars": 10131322
            }
          ],
          "meta": [
            {
              "name": "total_users_with_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.955311108,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 5.001,
          "requestId": "01JTFZ2RERPZRWVWT59TT0GWF8",
          "length": 37
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.144,
          "totalDuration": 2.106,
          "tokens": {
            "promptTokens": 4099,
            "completionTokens": 41,
            "totalTokens": 4140
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_push": 18808891
        }
      ],
      "meta": [
        {
          "name": "total_users_with_push",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.745200795,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.765,
      "requestId": "01JTFZ313WW5X64Q2W0EKR88T8",
      "length": 36
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.947,
      "totalDuration": 1.393,
      "tokens": {
        "promptTokens": 4098,
        "completionTokens": 33,
        "totalTokens": 4131
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_push": 18808891
            }
          ],
          "meta": [
            {
              "name": "total_users_with_push",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.745200795,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.765,
          "requestId": "01JTFZ313WW5X64Q2W0EKR88T8",
          "length": 36
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.947,
          "totalDuration": 1.393,
          "tokens": {
            "promptTokens": 4098,
            "completionTokens": 33,
            "totalTokens": 4131
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_pr\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 1",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_pr": 6418718
        }
      ],
      "meta": [
        {
          "name": "total_users_with_pr",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.203173736,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.222,
      "requestId": "01JTFZ3AZ9Y7BR0DNG5CFB22AJ",
      "length": 33
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.138,
      "totalDuration": 2.827,
      "tokens": {
        "promptTokens": 4099,
        "completionTokens": 40,
        "totalTokens": 4139
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_pr\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 1",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_pr": 6418718
            }
          ],
          "meta": [
            {
              "name": "total_users_with_pr",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.203173736,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.222,
          "requestId": "01JTFZ3AZ9Y7BR0DNG5CFB22AJ",
          "length": 33
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.138,
          "totalDuration": 2.827,
          "tokens": {
            "promptTokens": 4099,
            "completionTokens": 40,
            "totalTokens": 4139
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars": 127332
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars": 116642
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 115419
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 110521
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 106673
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 101015
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 97585
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 91891
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 84730
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars": 82794
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.908838922,
        "rows_read": 446952570,
        "bytes_read": 1804735431
      },
      "executionTime": 8.947,
      "requestId": "01JTFZ3VGN6FF7STG9C9B0DWW3",
      "length": 523
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.003,
      "totalDuration": 13.195,
      "tokens": {
        "promptTokens": 4116,
        "completionTokens": 74,
        "totalTokens": 4190
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars": 127332
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars": 116642
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 115419
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 110521
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 106673
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 101015
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 97585
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 91891
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 84730
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars": 82794
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.908838922,
            "rows_read": 446952570,
            "bytes_read": 1804735431
          },
          "executionTime": 8.947,
          "requestId": "01JTFZ3VGN6FF7STG9C9B0DWW3",
          "length": 523
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.003,
          "totalDuration": 13.195,
          "tokens": {
            "promptTokens": 4116,
            "completionTokens": 74,
            "totalTokens": 4190
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nGROUP BY actor_login\nHAVING COUNT(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 19655845
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 4695741
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 4140801
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 1675452
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 1186691
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 562383
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545186
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 521087
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "imgbot[bot]",
          "pr_count": 171285
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.256682104,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.275,
      "requestId": "01JTFZ49S6FDNBW1BFMX6MMR0Q",
      "length": 512
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.333,
      "totalDuration": 3.179,
      "tokens": {
        "promptTokens": 4103,
        "completionTokens": 61,
        "totalTokens": 4164
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nGROUP BY actor_login\nHAVING COUNT(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 19655845
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 4695741
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 4140801
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 1675452
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 1186691
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 562383
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545186
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 521087
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "imgbot[bot]",
              "pr_count": 171285
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.256682104,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.275,
          "requestId": "01JTFZ49S6FDNBW1BFMX6MMR0Q",
          "length": 512
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.333,
          "totalDuration": 3.179,
          "tokens": {
            "promptTokens": 4103,
            "completionTokens": 61,
            "totalTokens": 4164
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_request_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_request_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_request_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_request_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_request_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_request_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_request_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_request_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_request_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_request_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_request_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.71241171,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.731,
      "requestId": "01JTFZ4GHK5VV1EK51KRVQAB7V",
      "length": 706
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.335,
      "totalDuration": 3.149,
      "tokens": {
        "promptTokens": 4101,
        "completionTokens": 44,
        "totalTokens": 4145
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_request_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_request_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_request_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_request_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_request_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_request_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_request_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_request_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_request_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_request_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_request_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.71241171,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.731,
          "requestId": "01JTFZ4GHK5VV1EK51KRVQAB7V",
          "length": 706
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.335,
          "totalDuration": 3.149,
          "tokens": {
            "promptTokens": 4101,
            "completionTokens": 44,
            "totalTokens": 4145
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors_count": 31919
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors_count": 24995
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors_count": 18204
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors_count": 13826
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors_count": 9751
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors_count": 9749
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors_count": 8839
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors_count": 8291
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors_count": 8132
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors_count": 8112
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.970690249,
        "rows_read": 214762171,
        "bytes_read": 1288143912
      },
      "executionTime": 3.018,
      "requestId": "01JTFZ4RGAWH1ZRJ8PDZVD90PN",
      "length": 720
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.393,
      "totalDuration": 3.896,
      "tokens": {
        "promptTokens": 4102,
        "completionTokens": 57,
        "totalTokens": 4159
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors_count": 31919
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors_count": 24995
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors_count": 18204
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors_count": 13826
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors_count": 9751
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors_count": 9749
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors_count": 8839
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors_count": 8291
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors_count": 8132
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors_count": 8112
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.970690249,
            "rows_read": 214762171,
            "bytes_read": 1288143912
          },
          "executionTime": 3.018,
          "requestId": "01JTFZ4RGAWH1ZRJ8PDZVD90PN",
          "length": 720
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.393,
          "totalDuration": 3.896,
          "tokens": {
            "promptTokens": 4102,
            "completionTokens": 57,
            "totalTokens": 4159
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS issue_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nGROUP BY repo_name \nORDER BY issue_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.486522428,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.509,
      "requestId": "01JTFZ555K6BRQ6HB1PA4KZXQH",
      "length": 573
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 3.618,
      "totalDuration": 7.469,
      "tokens": {
        "promptTokens": 4100,
        "completionTokens": 41,
        "totalTokens": 4141
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS issue_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nGROUP BY repo_name \nORDER BY issue_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.486522428,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.509,
          "requestId": "01JTFZ555K6BRQ6HB1PA4KZXQH",
          "length": 573
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 3.618,
          "totalDuration": 7.469,
          "tokens": {
            "promptTokens": 4100,
            "completionTokens": 41,
            "totalTokens": 4141
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association != 'BOT') AS human_issues,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association = 'BOT') AS bot_issues,\n    COUNTIf(event_type = 'WatchEvent' AND action = 'started') AS stars\nFROM github_events\nGROUP BY repo_name\nHAVING stars >= 1000\nORDER BY human_issues DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Khan/khan-exercises",
          "human_issues": 157016,
          "bot_issues": 0,
          "stars": 1749
        },
        {
          "repo_name": "Microsoft/vscode",
          "human_issues": 65122,
          "bot_issues": 0,
          "stars": 82043
        },
        {
          "repo_name": "flutter/flutter",
          "human_issues": 45920,
          "bot_issues": 0,
          "stars": 116303
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "human_issues": 44131,
          "bot_issues": 0,
          "stars": 4888
        },
        {
          "repo_name": "microsoft/vscode",
          "human_issues": 34798,
          "bot_issues": 0,
          "stars": 38395
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "human_issues": 31644,
          "bot_issues": 0,
          "stars": 68644
        },
        {
          "repo_name": "golang/go",
          "human_issues": 31443,
          "bot_issues": 0,
          "stars": 92407
        },
        {
          "repo_name": "hq450/fancyss",
          "human_issues": 31124,
          "bot_issues": 0,
          "stars": 7921
        },
        {
          "repo_name": "cockroachdb/cockroach",
          "human_issues": 28390,
          "bot_issues": 0,
          "stars": 21147
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "human_issues": 28380,
          "bot_issues": 0,
          "stars": 173681
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "human_issues",
          "type": "UInt64"
        },
        {
          "name": "bot_issues",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 55.430513831,
        "rows_read": 3124889133,
        "bytes_read": 15608295813
      },
      "executionTime": 55.479,
      "requestId": "01JTFZ645XC2W2SHH4PD4RYNA6",
      "length": 846
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association != 'BOT') AS human_issues,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association = 'BOT') AS bot_issues,\n    COUNTIf(event_type = 'WatchEvent' AND action = 'started') AS stars\nFROM github_events\nWHERE stars >= 1000\nGROUP BY repo_name\nORDER BY human_issues DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 2.253,
      "totalDuration": 12.34,
      "tokens": {
        "promptTokens": 4288,
        "completionTokens": 121,
        "totalTokens": 4409
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association != 'BOT') AS human_issues,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association = 'BOT') AS bot_issues,\n    COUNTIf(event_type = 'WatchEvent' AND action = 'started') AS stars\nFROM github_events\nWHERE stars >= 1000\nGROUP BY repo_name\nORDER BY human_issues DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.026,
          "requestId": "01JTFZ5NMEAM60JY8AEWDPCCX9",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNTIf((event_type = 'WatchEvent') AND (action = 'started')) AS stars is found in WHERE in query. (ILLEGAL_AGGREGATION) (version 24.8.14.2 (official build))\\\\n\\\"' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 2.627,
          "totalDuration": 13.847,
          "tokens": {
            "promptTokens": 4117,
            "completionTokens": 119,
            "totalTokens": 4236
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association != 'BOT') AS human_issues,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association = 'BOT') AS bot_issues,\n    COUNTIf(event_type = 'WatchEvent' AND action = 'started') AS stars\nFROM github_events\nGROUP BY repo_name\nHAVING stars >= 1000\nORDER BY human_issues DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Khan/khan-exercises",
              "human_issues": 157016,
              "bot_issues": 0,
              "stars": 1749
            },
            {
              "repo_name": "Microsoft/vscode",
              "human_issues": 65122,
              "bot_issues": 0,
              "stars": 82043
            },
            {
              "repo_name": "flutter/flutter",
              "human_issues": 45920,
              "bot_issues": 0,
              "stars": 116303
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "human_issues": 44131,
              "bot_issues": 0,
              "stars": 4888
            },
            {
              "repo_name": "microsoft/vscode",
              "human_issues": 34798,
              "bot_issues": 0,
              "stars": 38395
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "human_issues": 31644,
              "bot_issues": 0,
              "stars": 68644
            },
            {
              "repo_name": "golang/go",
              "human_issues": 31443,
              "bot_issues": 0,
              "stars": 92407
            },
            {
              "repo_name": "hq450/fancyss",
              "human_issues": 31124,
              "bot_issues": 0,
              "stars": 7921
            },
            {
              "repo_name": "cockroachdb/cockroach",
              "human_issues": 28390,
              "bot_issues": 0,
              "stars": 21147
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "human_issues": 28380,
              "bot_issues": 0,
              "stars": 173681
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "human_issues",
              "type": "UInt64"
            },
            {
              "name": "bot_issues",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 55.430513831,
            "rows_read": 3124889133,
            "bytes_read": 15608295813
          },
          "executionTime": 55.479,
          "requestId": "01JTFZ645XC2W2SHH4PD4RYNA6",
          "length": 846
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    repo_name,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association != 'BOT') AS human_issues,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened' AND author_association = 'BOT') AS bot_issues,\n    COUNTIf(event_type = 'WatchEvent' AND action = 'started') AS stars\nFROM github_events\nWHERE stars >= 1000\nGROUP BY repo_name\nORDER BY human_issues DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 2.253,
          "totalDuration": 12.34,
          "tokens": {
            "promptTokens": 4288,
            "completionTokens": 121,
            "totalTokens": 4409
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT If(author_association = 'NONE', NULL, actor_login)) AS human_issue_authors,\n    COUNT(DISTINCT If(author_association = 'NONE', actor_login, NULL)) AS bot_issue_authors,\n    COUNT(DISTINCT actor_login) AS total_issue_authors,\n    COUNT(*) AS total_issues\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened'\n    AND number > 1000\nGROUP BY repo_name\nORDER BY human_issue_authors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "human_issue_authors": 1289,
          "bot_issue_authors": 19998,
          "total_issue_authors": 21036,
          "total_issues": 44131
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "human_issue_authors": 1087,
          "bot_issue_authors": 2774,
          "total_issue_authors": 3225,
          "total_issues": 18337
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "human_issue_authors": 912,
          "bot_issue_authors": 8254,
          "total_issue_authors": 8615,
          "total_issues": 31644
        },
        {
          "repo_name": "rust-lang/rust",
          "human_issue_authors": 869,
          "bot_issue_authors": 5997,
          "total_issue_authors": 6283,
          "total_issues": 28036
        },
        {
          "repo_name": "ansible/ansible",
          "human_issue_authors": 846,
          "bot_issue_authors": 12641,
          "total_issue_authors": 12991,
          "total_issues": 27328
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "human_issue_authors": 775,
          "bot_issue_authors": 4899,
          "total_issue_authors": 5385,
          "total_issues": 11046
        },
        {
          "repo_name": "golang/go",
          "human_issue_authors": 567,
          "bot_issue_authors": 10049,
          "total_issue_authors": 10190,
          "total_issues": 31443
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "human_issue_authors": 540,
          "bot_issue_authors": 15772,
          "total_issue_authors": 16026,
          "total_issues": 27598
        },
        {
          "repo_name": "godotengine/godot",
          "human_issue_authors": 534,
          "bot_issue_authors": 5350,
          "total_issue_authors": 5521,
          "total_issues": 23546
        },
        {
          "repo_name": "pytorch/pytorch",
          "human_issue_authors": 524,
          "bot_issue_authors": 6662,
          "total_issue_authors": 6955,
          "total_issues": 16332
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "human_issue_authors",
          "type": "UInt64"
        },
        {
          "name": "bot_issue_authors",
          "type": "UInt64"
        },
        {
          "name": "total_issue_authors",
          "type": "UInt64"
        },
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.604229591,
        "rows_read": 111439849,
        "bytes_read": 1164692727
      },
      "executionTime": 0.628,
      "requestId": "01JTFZ848F9HWDVBWH3S6BC4T4",
      "length": 1335
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.163,
      "totalDuration": 7.662,
      "tokens": {
        "promptTokens": 4123,
        "completionTokens": 135,
        "totalTokens": 4258
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT If(author_association = 'NONE', NULL, actor_login)) AS human_issue_authors,\n    COUNT(DISTINCT If(author_association = 'NONE', actor_login, NULL)) AS bot_issue_authors,\n    COUNT(DISTINCT actor_login) AS total_issue_authors,\n    COUNT(*) AS total_issues\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened'\n    AND number > 1000\nGROUP BY repo_name\nORDER BY human_issue_authors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "human_issue_authors": 1289,
              "bot_issue_authors": 19998,
              "total_issue_authors": 21036,
              "total_issues": 44131
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "human_issue_authors": 1087,
              "bot_issue_authors": 2774,
              "total_issue_authors": 3225,
              "total_issues": 18337
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "human_issue_authors": 912,
              "bot_issue_authors": 8254,
              "total_issue_authors": 8615,
              "total_issues": 31644
            },
            {
              "repo_name": "rust-lang/rust",
              "human_issue_authors": 869,
              "bot_issue_authors": 5997,
              "total_issue_authors": 6283,
              "total_issues": 28036
            },
            {
              "repo_name": "ansible/ansible",
              "human_issue_authors": 846,
              "bot_issue_authors": 12641,
              "total_issue_authors": 12991,
              "total_issues": 27328
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "human_issue_authors": 775,
              "bot_issue_authors": 4899,
              "total_issue_authors": 5385,
              "total_issues": 11046
            },
            {
              "repo_name": "golang/go",
              "human_issue_authors": 567,
              "bot_issue_authors": 10049,
              "total_issue_authors": 10190,
              "total_issues": 31443
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "human_issue_authors": 540,
              "bot_issue_authors": 15772,
              "total_issue_authors": 16026,
              "total_issues": 27598
            },
            {
              "repo_name": "godotengine/godot",
              "human_issue_authors": 534,
              "bot_issue_authors": 5350,
              "total_issue_authors": 5521,
              "total_issues": 23546
            },
            {
              "repo_name": "pytorch/pytorch",
              "human_issue_authors": 524,
              "bot_issue_authors": 6662,
              "total_issue_authors": 6955,
              "total_issues": 16332
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "human_issue_authors",
              "type": "UInt64"
            },
            {
              "name": "bot_issue_authors",
              "type": "UInt64"
            },
            {
              "name": "total_issue_authors",
              "type": "UInt64"
            },
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.604229591,
            "rows_read": 111439849,
            "bytes_read": 1164692727
          },
          "executionTime": 0.628,
          "requestId": "01JTFZ848F9HWDVBWH3S6BC4T4",
          "length": 1335
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.163,
          "totalDuration": 7.662,
          "tokens": {
            "promptTokens": 4123,
            "completionTokens": 135,
            "totalTokens": 4258
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "push_users_count": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "push_users_count": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "push_users_count": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "push_users_count": 826
        },
        {
          "repo_name": "lifo/docrails",
          "push_users_count": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "push_users_count": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "push_users_count": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "push_users_count": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "push_users_count": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "push_users_count": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_users_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.644676826,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 26.694,
      "requestId": "01JTFZ8ARRHDYMBBGEVNVZMNQA",
      "length": 652
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.413,
      "totalDuration": 3.511,
      "tokens": {
        "promptTokens": 4102,
        "completionTokens": 48,
        "totalTokens": 4150
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "push_users_count": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "push_users_count": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "push_users_count": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "push_users_count": 826
            },
            {
              "repo_name": "lifo/docrails",
              "push_users_count": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "push_users_count": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "push_users_count": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "push_users_count": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "push_users_count": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "push_users_count": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_users_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.644676826,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 26.694,
          "requestId": "01JTFZ8ARRHDYMBBGEVNVZMNQA",
          "length": 652
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.413,
          "totalDuration": 3.511,
          "tokens": {
            "promptTokens": 4102,
            "completionTokens": 48,
            "totalTokens": 4150
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) AS push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent' \nAND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
          "push_users_count": 218
        },
        {
          "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
          "push_users_count": 127
        },
        {
          "repo_name": "ministryofjustice/cloud-platform-environments",
          "push_users_count": 68
        },
        {
          "repo_name": "sourcegraph/about",
          "push_users_count": 64
        },
        {
          "repo_name": "apple/swift",
          "push_users_count": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "push_users_count": 52
        },
        {
          "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
          "push_users_count": 51
        },
        {
          "repo_name": "SPM587FA20/SCM587FA20",
          "push_users_count": 43
        },
        {
          "repo_name": "microsoft/azuredatastudio",
          "push_users_count": 38
        },
        {
          "repo_name": "mks65/10_list",
          "push_users_count": 38
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_users_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.541814717,
        "rows_read": 1601472977,
        "bytes_read": 49175592159
      },
      "executionTime": 3.589,
      "requestId": "01JTFZ9B3K3J9QSRG8DM2MSF5F",
      "length": 662
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.238,
      "totalDuration": 3.915,
      "tokens": {
        "promptTokens": 4107,
        "completionTokens": 60,
        "totalTokens": 4167
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) AS push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent' \nAND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
              "push_users_count": 218
            },
            {
              "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
              "push_users_count": 127
            },
            {
              "repo_name": "ministryofjustice/cloud-platform-environments",
              "push_users_count": 68
            },
            {
              "repo_name": "sourcegraph/about",
              "push_users_count": 64
            },
            {
              "repo_name": "apple/swift",
              "push_users_count": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "push_users_count": 52
            },
            {
              "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
              "push_users_count": 51
            },
            {
              "repo_name": "SPM587FA20/SCM587FA20",
              "push_users_count": 43
            },
            {
              "repo_name": "microsoft/azuredatastudio",
              "push_users_count": 38
            },
            {
              "repo_name": "mks65/10_list",
              "push_users_count": 38
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_users_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.541814717,
            "rows_read": 1601472977,
            "bytes_read": 49175592159
          },
          "executionTime": 3.589,
          "requestId": "01JTFZ9B3K3J9QSRG8DM2MSF5F",
          "length": 662
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.238,
          "totalDuration": 3.915,
          "tokens": {
            "promptTokens": 4107,
            "completionTokens": 60,
            "totalTokens": 4167
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND ref = 'refs/heads/main'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING COUNT(*) > 99\n    )\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "apple/swift",
          "push_access_count": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "push_access_count": 52
        },
        {
          "repo_name": "microsoft/azuredatastudio",
          "push_access_count": 38
        },
        {
          "repo_name": "guardian/frontend",
          "push_access_count": 35
        },
        {
          "repo_name": "cerner/fhir.cerner.com",
          "push_access_count": 33
        },
        {
          "repo_name": "guardian/dotcom-rendering",
          "push_access_count": 29
        },
        {
          "repo_name": "github/codeql",
          "push_access_count": 29
        },
        {
          "repo_name": "woocommerce/woocommerce-admin",
          "push_access_count": 26
        },
        {
          "repo_name": "microsoft/FluidFramework",
          "push_access_count": 25
        },
        {
          "repo_name": "awslabs/s2n",
          "push_access_count": 23
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.996434104,
        "rows_read": 1536349523,
        "bytes_read": 39743348818
      },
      "executionTime": 5.045,
      "requestId": "01JTFZ9MKKY5N09AV159K70ANE",
      "length": 601
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.119,
      "totalDuration": 3.642,
      "tokens": {
        "promptTokens": 4119,
        "completionTokens": 107,
        "totalTokens": 4226
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND ref = 'refs/heads/main'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING COUNT(*) > 99\n    )\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "apple/swift",
              "push_access_count": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "push_access_count": 52
            },
            {
              "repo_name": "microsoft/azuredatastudio",
              "push_access_count": 38
            },
            {
              "repo_name": "guardian/frontend",
              "push_access_count": 35
            },
            {
              "repo_name": "cerner/fhir.cerner.com",
              "push_access_count": 33
            },
            {
              "repo_name": "guardian/dotcom-rendering",
              "push_access_count": 29
            },
            {
              "repo_name": "github/codeql",
              "push_access_count": 29
            },
            {
              "repo_name": "woocommerce/woocommerce-admin",
              "push_access_count": 26
            },
            {
              "repo_name": "microsoft/FluidFramework",
              "push_access_count": 25
            },
            {
              "repo_name": "awslabs/s2n",
              "push_access_count": 23
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.996434104,
            "rows_read": 1536349523,
            "bytes_read": 39743348818
          },
          "executionTime": 5.045,
          "requestId": "01JTFZ9MKKY5N09AV159K70ANE",
          "length": 601
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.119,
          "totalDuration": 3.642,
          "tokens": {
            "promptTokens": 4119,
            "completionTokens": 107,
            "totalTokens": 4226
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "accepted_invitations_count": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "accepted_invitations_count": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "accepted_invitations_count": 3161
        },
        {
          "repo_name": "/",
          "accepted_invitations_count": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "accepted_invitations_count": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "accepted_invitations_count": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "accepted_invitations_count": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "accepted_invitations_count": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "accepted_invitations_count": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "accepted_invitations_count": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "accepted_invitations_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.422376053,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.441,
      "requestId": "01JTFZA892J3J3R82PGFKRTBQM",
      "length": 812
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum number of accepted invitations\"\n\nYou generated this SQL query:\n```sql\n to collaborate (MemberEvent) \n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n \n\nHere's the fixed query:\n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.58,
      "totalDuration": 3.185,
      "tokens": {
        "promptTokens": 4320,
        "completionTokens": 51,
        "totalTokens": 4371
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": " to collaborate (MemberEvent) \n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTFZ9Y4G0B3ERATZ0YH3RJ3N",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('to') (line 1, col 1): to collaborate (MemberEvent) \\n\\nSELECT repo_name, count(*) as accepted_invitations_count\\nFROM github_events\\nWHERE event_type = 'MemberEvent' AND action = 'added'. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CRE",
          "length": 2
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.584,
          "totalDuration": 2.234,
          "tokens": {
            "promptTokens": 3756,
            "completionTokens": 58,
            "totalTokens": 3814
          }
        },
        "error": null
      },
      {
        "sql": " \n\nHere's the fixed query:\n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTFZA2PYET5X22GDMZM9T4GM",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 154 (''\\nGROUP BY repo_name\\nORDER BY accepted_invitations_count DESC\\nLIMIT 10 FORMAT JSON') (line 5, col 53): '\\nGROUP BY repo_name\\nORDER BY accepted_invitations_count DESC\\nLIMIT 10 FORMAT JSON. Single quoted string is not closed: ''\\nGROUP BY repo_name\\nORDER BY accepted_invitations_count DESC\\nLIMIT 10 FORMAT JSON'\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the maximum number of accepted invitations\"\n\nYou generated this SQL query:\n```sql\n to collaborate (MemberEvent) \n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.566,
          "totalDuration": 2.172,
          "tokens": {
            "promptTokens": 3865,
            "completionTokens": 58,
            "totalTokens": 3923
          }
        },
        "error": null
      },
      {
        "sql": "SELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "accepted_invitations_count": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "accepted_invitations_count": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "accepted_invitations_count": 3161
            },
            {
              "repo_name": "/",
              "accepted_invitations_count": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "accepted_invitations_count": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "accepted_invitations_count": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "accepted_invitations_count": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "accepted_invitations_count": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "accepted_invitations_count": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "accepted_invitations_count": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "accepted_invitations_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.422376053,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.441,
          "requestId": "01JTFZA892J3J3R82PGFKRTBQM",
          "length": 812
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum number of accepted invitations\"\n\nYou generated this SQL query:\n```sql\n to collaborate (MemberEvent) \n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n \n\nHere's the fixed query:\n\nSELECT repo_name, count(*) as accepted_invitations_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.58,
          "totalDuration": 3.185,
          "tokens": {
            "promptTokens": 4320,
            "completionTokens": 51,
            "totalTokens": 4371
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.839299443,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.857,
      "requestId": "01JTFZAK4JZEWKA2CT1YP88CP2",
      "length": 592
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Most forked repositories\"\n\nYou generated this SQL query:\n```sql\nSELECTĠĊĠĠĠĠrepo_name,ĊĠĠĠĠcount()ĠASĠfork_countĊFROMĠgithub_eventsĊWHEREĠevent_typeĠ=Ġ'ForkEvent'ĊGROUPĠBYĠrepo_nameĊORDERĠBYĠfork_countĠDESCĊLIMITĠ10<｜end▁of▁sentence｜>\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.006,
      "totalDuration": 1.906,
      "tokens": {
        "promptTokens": 4241,
        "completionTokens": 43,
        "totalTokens": 4284
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECTĠĊĠĠĠĠrepo_name,ĊĠĠĠĠcount()ĠASĠfork_countĊFROMĠgithub_eventsĊWHEREĠevent_typeĠ=Ġ'ForkEvent'ĊGROUPĠBYĠrepo_nameĊORDERĠBYĠfork_countĠDESCĊLIMITĠ10<｜end▁of▁sentence｜>",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.012,
          "requestId": "01JTFZAETFM5Q0WAGC9D4E4BFJ",
          "error": "{\"error\": \"'utf-8' codec can't decode byte 0xc4 in position 52: invalid continuation byte\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.314,
          "totalDuration": 3.757,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 43,
            "totalTokens": 4139
          }
        },
        "error": null
      },
      {
        "sql": "SELECT\n    repo_name,\n    count() AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.839299443,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.857,
          "requestId": "01JTFZAK4JZEWKA2CT1YP88CP2",
          "length": 592
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Most forked repositories\"\n\nYou generated this SQL query:\n```sql\nSELECTĠĊĠĠĠĠrepo_name,ĊĠĠĠĠcount()ĠASĠfork_countĊFROMĠgithub_eventsĊWHEREĠevent_typeĠ=Ġ'ForkEvent'ĊGROUPĠBYĠrepo_nameĊORDERĠBYĠfork_countĠDESCĊLIMITĠ10<｜end▁of▁sentence｜>\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.006,
          "totalDuration": 1.906,
          "tokens": {
            "promptTokens": 4241,
            "completionTokens": 43,
            "totalTokens": 4284
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'WatchEvent') AS stars,\n    COUNTIf(event_type = 'ForkEvent') AS forks,\n    stars / NULLIF(forks, 0) AS stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "stars": 8190,
          "forks": 1,
          "stars_to_forks_ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "stars": 6042,
          "forks": 1,
          "stars_to_forks_ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "stars": 3069,
          "forks": 1,
          "stars_to_forks_ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "stars": 2288,
          "forks": 1,
          "stars_to_forks_ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "stars": 2088,
          "forks": 1,
          "stars_to_forks_ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "stars": 1822,
          "forks": 1,
          "stars_to_forks_ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "stars": 1801,
          "forks": 1,
          "stars_to_forks_ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "stars": 1795,
          "forks": 1,
          "stars_to_forks_ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "stars": 1759,
          "forks": 1,
          "stars_to_forks_ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "stars": 1752,
          "forks": 1,
          "stars_to_forks_ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars_to_forks_ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 2.02819985,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.047,
      "requestId": "01JTFZAWREXCCEQ5DJKKZ1K1C1",
      "length": 902
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.301,
      "totalDuration": 6.494,
      "tokens": {
        "promptTokens": 4101,
        "completionTokens": 98,
        "totalTokens": 4199
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'WatchEvent') AS stars,\n    COUNTIf(event_type = 'ForkEvent') AS forks,\n    stars / NULLIF(forks, 0) AS stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "stars": 8190,
              "forks": 1,
              "stars_to_forks_ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "stars": 6042,
              "forks": 1,
              "stars_to_forks_ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "stars": 3069,
              "forks": 1,
              "stars_to_forks_ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "stars": 2288,
              "forks": 1,
              "stars_to_forks_ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "stars": 2088,
              "forks": 1,
              "stars_to_forks_ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "stars": 1822,
              "forks": 1,
              "stars_to_forks_ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "stars": 1801,
              "forks": 1,
              "stars_to_forks_ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "stars": 1795,
              "forks": 1,
              "stars_to_forks_ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "stars": 1759,
              "forks": 1,
              "stars_to_forks_ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "stars": 1752,
              "forks": 1,
              "stars_to_forks_ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars_to_forks_ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 2.02819985,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.047,
          "requestId": "01JTFZAWREXCCEQ5DJKKZ1K1C1",
          "length": 902
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.301,
          "totalDuration": 6.494,
          "tokens": {
            "promptTokens": 4101,
            "completionTokens": 98,
            "totalTokens": 4199
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE NULL END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE NULL END) AS star_count\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY fork_count + star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "fork_count": 27101,
          "star_count": 354850
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226,
          "star_count": 173681
        },
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926,
          "star_count": 6364
        },
        {
          "repo_name": "vuejs/vue",
          "fork_count": 37441,
          "star_count": 199731
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "fork_count": 9442,
          "star_count": 225490
        },
        {
          "repo_name": "facebook/react",
          "fork_count": 44678,
          "star_count": 188575
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878,
          "star_count": 126371
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075,
          "star_count": 119322
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031,
          "star_count": 4601
        },
        {
          "repo_name": "sindresorhus/awesome",
          "fork_count": 23708,
          "star_count": 160542
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.125966585,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.145,
      "requestId": "01JTFZB46FTEGZGEABNG95KNCQ",
      "length": 728
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.469,
      "totalDuration": 3.068,
      "tokens": {
        "promptTokens": 3762,
        "completionTokens": 89,
        "totalTokens": 3851
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE NULL END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE NULL END) AS star_count\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY fork_count + star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "fork_count": 27101,
              "star_count": 354850
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226,
              "star_count": 173681
            },
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926,
              "star_count": 6364
            },
            {
              "repo_name": "vuejs/vue",
              "fork_count": 37441,
              "star_count": 199731
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "fork_count": 9442,
              "star_count": 225490
            },
            {
              "repo_name": "facebook/react",
              "fork_count": 44678,
              "star_count": 188575
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878,
              "star_count": 126371
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075,
              "star_count": 119322
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031,
              "star_count": 4601
            },
            {
              "repo_name": "sindresorhus/awesome",
              "fork_count": 23708,
              "star_count": 160542
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.125966585,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.145,
          "requestId": "01JTFZB46FTEGZGEABNG95KNCQ",
          "length": 728
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.469,
          "totalDuration": 3.068,
          "tokens": {
            "promptTokens": 3762,
            "completionTokens": 89,
            "totalTokens": 3851
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS star_count\nFROM github_events\nWHERE toYear(created_at) = 2023\n  AND event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.024946477,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.042,
      "requestId": "01JTFZBMT3MT3T6J3NQS0633C2",
      "length": 2
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"find out top 10 repositories have more forks and less stars\"\n\nYou generated this SQL query:\n```sql\n (negative relationship) in 2023.\nSELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS star_count\nFROM github_events\nWHERE toYear(created_at) = 2023\n  AND event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.966,
      "totalDuration": 5.554,
      "tokens": {
        "promptTokens": 4276,
        "completionTokens": 113,
        "totalTokens": 4389
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": " (negative relationship) in 2023.\nSELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS star_count\nFROM github_events\nWHERE toYear(created_at) = 2023\n  AND event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTFZBCXW2H4YWRCEVY4YBXWP",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 2 ('negative') (line 1, col 2): negative relationship) in 2023.\\nSELECT repo_name, \\n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS fork_count,\\n       COUNT(CASE WHEN event_type . Expected one of: SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, EXPLAIN, EXPLAIN\", \"documentation\": \"https://docs.tinybird.co/query/quer",
          "length": 2
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.646,
          "totalDuration": 4.291,
          "tokens": {
            "promptTokens": 3756,
            "completionTokens": 123,
            "totalTokens": 3879
          }
        },
        "error": null
      },
      {
        "sql": "SELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS star_count\nFROM github_events\nWHERE toYear(created_at) = 2023\n  AND event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.024946477,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.042,
          "requestId": "01JTFZBMT3MT3T6J3NQS0633C2",
          "length": 2
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find out top 10 repositories have more forks and less stars\"\n\nYou generated this SQL query:\n```sql\n (negative relationship) in 2023.\nSELECT repo_name, \n       COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS fork_count,\n       COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS star_count\nFROM github_events\nWHERE toYear(created_at) = 2023\n  AND event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nHAVING fork_count > 0 AND star_count > 0\nORDER BY fork_count DESC, star_count ASC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.966,
          "totalDuration": 5.554,
          "tokens": {
            "promptTokens": 4276,
            "completionTokens": 113,
            "totalTokens": 4389
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    event_type,\n    count() as count,\n    count() / (SELECT count() FROM github_events WHERE event_type IN ('WatchEvent', 'ForkEvent')) as proportion\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY event_type\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "event_type": "ForkEvent",
          "count": 84709181,
          "proportion": 0.2673667518070668
        },
        {
          "event_type": "WatchEvent",
          "count": 232118474,
          "proportion": 0.7326332481929332
        }
      ],
      "meta": [
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        },
        {
          "name": "proportion",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 0.277986426,
        "rows_read": 634072796,
        "bytes_read": 634072796
      },
      "executionTime": 0.296,
      "requestId": "01JTFZD5D34SBFMNNNW29X1QQ3",
      "length": 155
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 15.637,
      "totalDuration": 47.215,
      "tokens": {
        "promptTokens": 4096,
        "completionTokens": 68,
        "totalTokens": 4164
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    event_type,\n    count() as count,\n    count() / (SELECT count() FROM github_events WHERE event_type IN ('WatchEvent', 'ForkEvent')) as proportion\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY event_type\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "event_type": "ForkEvent",
              "count": 84709181,
              "proportion": 0.2673667518070668
            },
            {
              "event_type": "WatchEvent",
              "count": 232118474,
              "proportion": 0.7326332481929332
            }
          ],
          "meta": [
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            },
            {
              "name": "proportion",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 0.277986426,
            "rows_read": 634072796,
            "bytes_read": 634072796
          },
          "executionTime": 0.296,
          "requestId": "01JTFZD5D34SBFMNNNW29X1QQ3",
          "length": 155
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 15.637,
          "totalDuration": 47.215,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 68,
            "totalTokens": 4164
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(*) AS total_issues \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nLIMIT 1",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_issues": 111265504
        }
      ],
      "meta": [
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005098184,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.022,
      "requestId": "01JTFZD9NQKHJJD1CCMTJNVNXQ",
      "length": 28
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.17,
      "totalDuration": 1.575,
      "tokens": {
        "promptTokens": 4095,
        "completionTokens": 29,
        "totalTokens": 4124
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(*) AS total_issues \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nLIMIT 1",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_issues": 111265504
            }
          ],
          "meta": [
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005098184,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.022,
          "requestId": "01JTFZD9NQKHJJD1CCMTJNVNXQ",
          "length": 28
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.17,
          "totalDuration": 1.575,
          "tokens": {
            "promptTokens": 4095,
            "completionTokens": 29,
            "totalTokens": 4124
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "comment_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "comment_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "comment_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "comment_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "comment_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "comment_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "comment_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "comment_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "comment_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "comment_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.52220208,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.541,
      "requestId": "01JTFZDFEPN4972DGNKCYQKKBF",
      "length": 579
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.272,
      "totalDuration": 3.396,
      "tokens": {
        "promptTokens": 4097,
        "completionTokens": 42,
        "totalTokens": 4139
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "comment_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "comment_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "comment_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "comment_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "comment_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "comment_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "comment_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "comment_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "comment_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "comment_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.52220208,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.541,
          "requestId": "01JTFZDFEPN4972DGNKCYQKKBF",
          "length": 579
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.272,
          "totalDuration": 3.396,
          "tokens": {
            "promptTokens": 4097,
            "completionTokens": 42,
            "totalTokens": 4139
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": " \n\nSELECT \n    repo_name,\n    COUNTIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    COUNTIf(event_type = 'IssuesEvent') AS issues,\n    issue_comments / NULLIF(issues, 0) AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments": 477302,
          "issues": 2,
          "ratio": 238651
        },
        {
          "repo_name": "sauron-demo/sauron",
          "issue_comments": 132338,
          "issues": 2,
          "ratio": 66169
        },
        {
          "repo_name": "apache/flink",
          "issue_comments": 58428,
          "issues": 1,
          "ratio": 58428
        },
        {
          "repo_name": "jbosstm/narayana",
          "issue_comments": 27020,
          "issues": 1,
          "ratio": 27020
        },
        {
          "repo_name": "php/php-src",
          "issue_comments": 25578,
          "issues": 1,
          "ratio": 25578
        },
        {
          "repo_name": "jenkinsci/jenkins",
          "issue_comments": 25431,
          "issues": 1,
          "ratio": 25431
        },
        {
          "repo_name": "apple/swift",
          "issue_comments": 175983,
          "issues": 7,
          "ratio": 25140.428571428572
        },
        {
          "repo_name": "dolphin-emu/dolphin",
          "issue_comments": 37761,
          "issues": 2,
          "ratio": 18880.5
        },
        {
          "repo_name": "liferay/com-liferay-commerce",
          "issue_comments": 15010,
          "issues": 1,
          "ratio": 15010
        },
        {
          "repo_name": "python/cpython",
          "issue_comments": 70575,
          "issues": 7,
          "ratio": 10082.142857142857
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 1.272707195,
        "rows_read": 329902046,
        "bytes_read": 989046767
      },
      "executionTime": 1.291,
      "requestId": "01JTFZDNJPFMEM5B2ZK8C11B1M",
      "length": 859
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.689,
      "totalDuration": 3.228,
      "tokens": {
        "promptTokens": 3755,
        "completionTokens": 95,
        "totalTokens": 3850
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": " \n\nSELECT \n    repo_name,\n    COUNTIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    COUNTIf(event_type = 'IssuesEvent') AS issues,\n    issue_comments / NULLIF(issues, 0) AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments": 477302,
              "issues": 2,
              "ratio": 238651
            },
            {
              "repo_name": "sauron-demo/sauron",
              "issue_comments": 132338,
              "issues": 2,
              "ratio": 66169
            },
            {
              "repo_name": "apache/flink",
              "issue_comments": 58428,
              "issues": 1,
              "ratio": 58428
            },
            {
              "repo_name": "jbosstm/narayana",
              "issue_comments": 27020,
              "issues": 1,
              "ratio": 27020
            },
            {
              "repo_name": "php/php-src",
              "issue_comments": 25578,
              "issues": 1,
              "ratio": 25578
            },
            {
              "repo_name": "jenkinsci/jenkins",
              "issue_comments": 25431,
              "issues": 1,
              "ratio": 25431
            },
            {
              "repo_name": "apple/swift",
              "issue_comments": 175983,
              "issues": 7,
              "ratio": 25140.428571428572
            },
            {
              "repo_name": "dolphin-emu/dolphin",
              "issue_comments": 37761,
              "issues": 2,
              "ratio": 18880.5
            },
            {
              "repo_name": "liferay/com-liferay-commerce",
              "issue_comments": 15010,
              "issues": 1,
              "ratio": 15010
            },
            {
              "repo_name": "python/cpython",
              "issue_comments": 70575,
              "issues": 7,
              "ratio": 10082.142857142857
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            },
            {
              "name": "issues",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 1.272707195,
            "rows_read": 329902046,
            "bytes_read": 989046767
          },
          "executionTime": 1.291,
          "requestId": "01JTFZDNJPFMEM5B2ZK8C11B1M",
          "length": 859
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.689,
          "totalDuration": 3.228,
          "tokens": {
            "promptTokens": 3755,
            "completionTokens": 95,
            "totalTokens": 3850
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.47070107,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.488,
      "requestId": "01JTFZDW50N9C8GT6NMC02HVXG",
      "length": 573
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.688,
      "totalDuration": 2.937,
      "tokens": {
        "promptTokens": 4099,
        "completionTokens": 43,
        "totalTokens": 4142
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.47070107,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.488,
          "requestId": "01JTFZDW50N9C8GT6NMC02HVXG",
          "length": 573
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.688,
          "totalDuration": 2.937,
          "tokens": {
            "promptTokens": 4099,
            "completionTokens": 43,
            "totalTokens": 4142
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, number, title\nFROM github_events\nWHERE event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND (title LIKE '%epic bug%' OR title LIKE '%critical bug%' OR title LIKE '%major bug%')\nORDER BY created_at DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "okozelsk/NET",
          "number": 25,
          "title": "StateMachineDesigner 2nd level cluster computation, Crossvalidation element, Regression noncritical bugfix"
        },
        {
          "repo_name": "ethereumclassic/ECIPs",
          "number": 397,
          "title": "ECIP-1099 critical bug in reference code"
        },
        {
          "repo_name": "AY2021S1-CS2103-F10-3/tp",
          "number": 210,
          "title": "Exercise major bug"
        },
        {
          "repo_name": "ggPMXdevelopment/ggPMX",
          "number": 146,
          "title": "URGENT - major bug: as default all rows with LIDV=0 dropped in ggPMX?"
        },
        {
          "repo_name": "JasXSL/GoThongs",
          "number": 330,
          "title": "URGENT: Entering the gorge triggers a critical bug!"
        },
        {
          "repo_name": "star-inc/star_yuuki_bot",
          "number": 26,
          "title": "v6.5.3-alpha_RC2 has several major bug found"
        },
        {
          "repo_name": "atharva01903/iiitsassignments",
          "number": 2,
          "title": "Line number 6 in your code is causing a major bug. "
        },
        {
          "repo_name": "kubeflow/kfp-tekton",
          "number": 331,
          "title": "Migrate to kfp 1.0.3 for some major bug fixes on the cache deployer"
        },
        {
          "repo_name": "Azure/azure-event-hubs-go",
          "number": 195,
          "title": "strange stuff, coming from gofmt and 1+ critical bug, with vet. Conversion from Duration (int64) to string yields a string of one rune, not a string of digits in sender.go"
        },
        {
          "repo_name": "RabeaMue/python-lesson-Rabea",
          "number": 1,
          "title": "Fix major bug"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.598609199,
        "rows_read": 111439849,
        "bytes_read": 5325353258
      },
      "executionTime": 0.616,
      "requestId": "01JTFZE34MSGW45DG4545Y3C4R",
      "length": 1253
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.441,
      "totalDuration": 4.165,
      "tokens": {
        "promptTokens": 4105,
        "completionTokens": 69,
        "totalTokens": 4174
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, number, title\nFROM github_events\nWHERE event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND (title LIKE '%epic bug%' OR title LIKE '%critical bug%' OR title LIKE '%major bug%')\nORDER BY created_at DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "okozelsk/NET",
              "number": 25,
              "title": "StateMachineDesigner 2nd level cluster computation, Crossvalidation element, Regression noncritical bugfix"
            },
            {
              "repo_name": "ethereumclassic/ECIPs",
              "number": 397,
              "title": "ECIP-1099 critical bug in reference code"
            },
            {
              "repo_name": "AY2021S1-CS2103-F10-3/tp",
              "number": 210,
              "title": "Exercise major bug"
            },
            {
              "repo_name": "ggPMXdevelopment/ggPMX",
              "number": 146,
              "title": "URGENT - major bug: as default all rows with LIDV=0 dropped in ggPMX?"
            },
            {
              "repo_name": "JasXSL/GoThongs",
              "number": 330,
              "title": "URGENT: Entering the gorge triggers a critical bug!"
            },
            {
              "repo_name": "star-inc/star_yuuki_bot",
              "number": 26,
              "title": "v6.5.3-alpha_RC2 has several major bug found"
            },
            {
              "repo_name": "atharva01903/iiitsassignments",
              "number": 2,
              "title": "Line number 6 in your code is causing a major bug. "
            },
            {
              "repo_name": "kubeflow/kfp-tekton",
              "number": 331,
              "title": "Migrate to kfp 1.0.3 for some major bug fixes on the cache deployer"
            },
            {
              "repo_name": "Azure/azure-event-hubs-go",
              "number": 195,
              "title": "strange stuff, coming from gofmt and 1+ critical bug, with vet. Conversion from Duration (int64) to string yields a string of one rune, not a string of digits in sender.go"
            },
            {
              "repo_name": "RabeaMue/python-lesson-Rabea",
              "number": 1,
              "title": "Fix major bug"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            }
          ],
          "statistics": {
            "elapsed": 0.598609199,
            "rows_read": 111439849,
            "bytes_read": 5325353258
          },
          "executionTime": 0.616,
          "requestId": "01JTFZE34MSGW45DG4545Y3C4R",
          "length": 1253
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.441,
          "totalDuration": 4.165,
          "tokens": {
            "promptTokens": 4105,
            "completionTokens": 69,
            "totalTokens": 4174
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) AS comment_authors_count,\n    count() AS total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND title LIKE '%epic bug%'\nAND number > 0\nGROUP BY repo_name\nHAVING comment_authors_count > 5\nORDER BY total_comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_authors_count",
          "type": "UInt64"
        },
        {
          "name": "total_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.689045634,
        "rows_read": 218620144,
        "bytes_read": 10776640994
      },
      "executionTime": 0.706,
      "requestId": "01JTFZEAH5GPFMBXJ8DSJPG6Z6",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.883,
      "totalDuration": 4.45,
      "tokens": {
        "promptTokens": 4119,
        "completionTokens": 84,
        "totalTokens": 4203
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) AS comment_authors_count,\n    count() AS total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND title LIKE '%epic bug%'\nAND number > 0\nGROUP BY repo_name\nHAVING comment_authors_count > 5\nORDER BY total_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_authors_count",
              "type": "UInt64"
            },
            {
              "name": "total_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.689045634,
            "rows_read": 218620144,
            "bytes_read": 10776640994
          },
          "executionTime": 0.706,
          "requestId": "01JTFZEAH5GPFMBXJ8DSJPG6Z6",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.883,
          "totalDuration": 4.45,
          "tokens": {
            "promptTokens": 4119,
            "completionTokens": 84,
            "totalTokens": 4203
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    comments\nFROM github_events\nWHERE event_type = 'IssuesEvent' \nAND action = 'opened'\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "sinara-hw/Shuttler",
          "number": 2,
          "title": "[RFC] New AMC: Shuttler (high-speed multi-channel DAC)",
          "comments": 317
        },
        {
          "repo_name": "dresden-elektronik/deconz-serial-protocol",
          "number": 2,
          "title": "Native serial UART protocol support for RaspBee and ConBee in Home Assistant without deCONZ software",
          "comments": 292
        },
        {
          "repo_name": "sinara-hw/Sayma_RTM",
          "number": 52,
          "title": "Sayma RTM - version 1 errata & tests",
          "comments": 286
        },
        {
          "repo_name": "dresden-elektronik/phoscon-app-beta",
          "number": 119,
          "title": "Support for Aqara Smart Vibration Sensor DJT11LM",
          "comments": 198
        },
        {
          "repo_name": "dresden-elektronik/deconz-ota-plugin",
          "number": 10,
          "title": "Hue Firmware Update",
          "comments": 194
        },
        {
          "repo_name": "Suicide-Squirrel/issues_pie",
          "number": 41,
          "title": "vs986: no RIL/cell service on Verizon networks",
          "comments": 161
        },
        {
          "repo_name": "MichalLytek/typegraphql-prisma",
          "number": 1,
          "title": "Prisma 2 integration",
          "comments": 146
        },
        {
          "repo_name": "sinara-hw/Thermostat",
          "number": 5,
          "title": "Thermostat: request for comment",
          "comments": 142
        },
        {
          "repo_name": "m4saka/ksh2kson",
          "number": 4,
          "title": "Better chart formats? (feedback is welcome!)",
          "comments": 138
        },
        {
          "repo_name": "microsoft/vscode-jupyter",
          "number": 1732,
          "title": "In a notebook (.ipynb file) paste double pastes.",
          "comments": 138
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 0.890026919,
        "rows_read": 111439849,
        "bytes_read": 6421980564
      },
      "executionTime": 0.909,
      "requestId": "01JTFZEGB9JR4KT9509TX6CJS7",
      "length": 1260
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.74,
      "totalDuration": 2.749,
      "tokens": {
        "promptTokens": 4099,
        "completionTokens": 47,
        "totalTokens": 4146
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    comments\nFROM github_events\nWHERE event_type = 'IssuesEvent' \nAND action = 'opened'\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "sinara-hw/Shuttler",
              "number": 2,
              "title": "[RFC] New AMC: Shuttler (high-speed multi-channel DAC)",
              "comments": 317
            },
            {
              "repo_name": "dresden-elektronik/deconz-serial-protocol",
              "number": 2,
              "title": "Native serial UART protocol support for RaspBee and ConBee in Home Assistant without deCONZ software",
              "comments": 292
            },
            {
              "repo_name": "sinara-hw/Sayma_RTM",
              "number": 52,
              "title": "Sayma RTM - version 1 errata & tests",
              "comments": 286
            },
            {
              "repo_name": "dresden-elektronik/phoscon-app-beta",
              "number": 119,
              "title": "Support for Aqara Smart Vibration Sensor DJT11LM",
              "comments": 198
            },
            {
              "repo_name": "dresden-elektronik/deconz-ota-plugin",
              "number": 10,
              "title": "Hue Firmware Update",
              "comments": 194
            },
            {
              "repo_name": "Suicide-Squirrel/issues_pie",
              "number": 41,
              "title": "vs986: no RIL/cell service on Verizon networks",
              "comments": 161
            },
            {
              "repo_name": "MichalLytek/typegraphql-prisma",
              "number": 1,
              "title": "Prisma 2 integration",
              "comments": 146
            },
            {
              "repo_name": "sinara-hw/Thermostat",
              "number": 5,
              "title": "Thermostat: request for comment",
              "comments": 142
            },
            {
              "repo_name": "m4saka/ksh2kson",
              "number": 4,
              "title": "Better chart formats? (feedback is welcome!)",
              "comments": 138
            },
            {
              "repo_name": "microsoft/vscode-jupyter",
              "number": 1732,
              "title": "In a notebook (.ipynb file) paste double pastes.",
              "comments": 138
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 0.890026919,
            "rows_read": 111439849,
            "bytes_read": 6421980564
          },
          "executionTime": 0.909,
          "requestId": "01JTFZEGB9JR4KT9509TX6CJS7",
          "length": 1260
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.74,
          "totalDuration": 2.749,
          "tokens": {
            "promptTokens": 4099,
            "completionTokens": 47,
            "totalTokens": 4146
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "commit_comments_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "commit_comments_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "commit_comments_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "commit_comments_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "commit_comments_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "commit_comments_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "commit_comments_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "commit_comments_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "commit_comments_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "commit_comments_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.117448761,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.136,
      "requestId": "01JTFZERE4X4TY16VWHAAM4MWJ",
      "length": 659
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.073,
      "totalDuration": 4.872,
      "tokens": {
        "promptTokens": 4100,
        "completionTokens": 47,
        "totalTokens": 4147
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "commit_comments_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "commit_comments_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "commit_comments_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "commit_comments_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "commit_comments_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "commit_comments_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "commit_comments_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "commit_comments_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "commit_comments_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "commit_comments_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.117448761,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.136,
          "requestId": "01JTFZERE4X4TY16VWHAAM4MWJ",
          "length": 659
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.073,
          "totalDuration": 4.872,
          "tokens": {
            "promptTokens": 4100,
            "completionTokens": 47,
            "totalTokens": 4147
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    commit_id,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name, commit_id\nORDER BY event_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "commit_id": "",
          "event_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "commit_id": "",
          "event_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "commit_id": "",
          "event_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "commit_id": "",
          "event_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "commit_id": "",
          "event_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "commit_id": "",
          "event_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "commit_id": "",
          "event_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "commit_id": "",
          "event_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "commit_id": "",
          "event_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "commit_id": "",
          "event_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.232608152,
        "rows_read": 1601472977,
        "bytes_read": 19212154281
      },
      "executionTime": 26.282,
      "requestId": "01JTFZEX37BCJ1A46EJENYX3JT",
      "length": 731
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.505,
      "totalDuration": 2.105,
      "tokens": {
        "promptTokens": 4098,
        "completionTokens": 49,
        "totalTokens": 4147
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    commit_id,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name, commit_id\nORDER BY event_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "commit_id": "",
              "event_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "commit_id": "",
              "event_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "commit_id": "",
              "event_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "commit_id": "",
              "event_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "commit_id": "",
              "event_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "commit_id": "",
              "event_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "commit_id": "",
              "event_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "commit_id": "",
              "event_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "commit_id": "",
              "event_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "commit_id": "",
              "event_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.232608152,
            "rows_read": 1601472977,
            "bytes_read": 19212154281
          },
          "executionTime": 26.282,
          "requestId": "01JTFZEX37BCJ1A46EJENYX3JT",
          "length": 731
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.505,
          "totalDuration": 2.105,
          "tokens": {
            "promptTokens": 4098,
            "completionTokens": 49,
            "totalTokens": 4147
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    count() AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\n    AND review_state = 'changes_requested'\nGROUP BY repo_name\nORDER BY review_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.017572034,
        "rows_read": 56094244,
        "bytes_read": 112085271
      },
      "executionTime": 0.036,
      "requestId": "01JTFZGFB2XG454H6ASWS9G3WG",
      "length": 2
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 16.987,
      "totalDuration": 22.694,
      "tokens": {
        "promptTokens": 4096,
        "completionTokens": 55,
        "totalTokens": 4151
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    count() AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\n    AND review_state = 'changes_requested'\nGROUP BY repo_name\nORDER BY review_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.017572034,
            "rows_read": 56094244,
            "bytes_read": 112085271
          },
          "executionTime": 0.036,
          "requestId": "01JTFZGFB2XG454H6ASWS9G3WG",
          "length": 2
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 16.987,
          "totalDuration": 22.694,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 55,
            "totalTokens": 4151
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "push_count": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "push_count": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "push_count": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "push_count": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "push_count": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "push_count": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "push_count": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "push_count": 3139278
        },
        {
          "actor_login": "newstools",
          "push_count": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "push_count": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.720218078,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.768,
      "requestId": "01JTFZGM6S9GAASCH1TP7YXAPN",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.465,
      "totalDuration": 2.42,
      "tokens": {
        "promptTokens": 4097,
        "completionTokens": 42,
        "totalTokens": 4139
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "push_count": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "push_count": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "push_count": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "push_count": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "push_count": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "push_count": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "push_count": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "push_count": 3139278
            },
            {
              "actor_login": "newstools",
              "push_count": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "push_count": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.720218078,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.768,
          "requestId": "01JTFZGM6S9GAASCH1TP7YXAPN",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.465,
          "totalDuration": 2.42,
          "tokens": {
            "promptTokens": 4097,
            "completionTokens": 42,
            "totalTokens": 4139
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login AS author,\n    COUNT(DISTINCT repo_name) AS repo_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) AS push_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN number END) AS issues_created,\n    COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN repo_name END) AS stars_given,\n    (SELECT repo_name \n     FROM github_events e2 \n     WHERE e2.actor_login = github_events.actor_login AND e2.event_type = 'PushEvent'\n     GROUP BY repo_name \n     ORDER BY COUNT(*) DESC \n     LIMIT 1) AS favorite_repo\nFROM github_events\nWHERE \n    actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\nGROUP BY actor_login\nHAVING \n    repo_count >= 2\n    AND push_count >= 2\n    AND issues_created >= 2\n    AND stars_given >= 2\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "author": "Piedone",
          "repo_count": 116,
          "push_count": 73,
          "issues_created": 152,
          "stars_given": 5,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "tmtmtmtm",
          "repo_count": 47,
          "push_count": 43,
          "issues_created": 704,
          "stars_given": 3,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "pranavkm",
          "repo_count": 62,
          "push_count": 34,
          "issues_created": 1178,
          "stars_given": 3,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "pakrym",
          "repo_count": 61,
          "push_count": 31,
          "issues_created": 770,
          "stars_given": 2,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "davidfowl",
          "repo_count": 117,
          "push_count": 28,
          "issues_created": 1192,
          "stars_given": 12,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "natemcmaster",
          "repo_count": 159,
          "push_count": 26,
          "issues_created": 782,
          "stars_given": 108,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "ondenman",
          "repo_count": 39,
          "push_count": 26,
          "issues_created": 130,
          "stars_given": 4,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "BenedekFarkas",
          "repo_count": 93,
          "push_count": 26,
          "issues_created": 58,
          "stars_given": 3,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "BrennanConroy",
          "repo_count": 49,
          "push_count": 25,
          "issues_created": 293,
          "stars_given": 2,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        },
        {
          "author": "sindresorhus",
          "repo_count": 320,
          "push_count": 25,
          "issues_created": 710,
          "stars_given": 163,
          "favorite_repo": "peter-clifford/grax-hd-trial"
        }
      ],
      "meta": [
        {
          "name": "author",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        },
        {
          "name": "issues_created",
          "type": "UInt64"
        },
        {
          "name": "stars_given",
          "type": "UInt64"
        },
        {
          "name": "favorite_repo",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 111.662011948,
        "rows_read": 6544908729,
        "bytes_read": 30309675128
      },
      "executionTime": 111.711,
      "requestId": "01JTFZHQSPH3S7H1BXWYPEK85Q",
      "length": 1407
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login AS author,\n    COUNT(DISTINCT repo_name) AS repo_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) AS push_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN number END) AS issues_created,\n    COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN repo_name END) AS stars_given,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE \n    actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\nGROUP BY actor_login\nHAVING \n    repo_count >= 2\n    AND push_count >= 2\n    AND issues_created >= 2\n    AND stars_given >= 2\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.836,
      "totalDuration": 18.598,
      "tokens": {
        "promptTokens": 4436,
        "completionTokens": 281,
        "totalTokens": 4717
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login AS author,\n    COUNT(DISTINCT repo_name) AS repo_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) AS push_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN number END) AS issues_created,\n    COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN repo_name END) AS stars_given,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE \n    actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\nGROUP BY actor_login\nHAVING \n    repo_count >= 2\n    AND push_count >= 2\n    AND issues_created >= 2\n    AND stars_given >= 2\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.025,
          "requestId": "01JTFZH34T33WXDHN34JEVHAXW",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNTDistinct(multiIf(event_type = 'PushEvent', repo_name, NULL)) AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.006,
          "totalDuration": 10.052,
          "tokens": {
            "promptTokens": 4150,
            "completionTokens": 233,
            "totalTokens": 4383
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n    actor_login AS author,\n    COUNT(DISTINCT repo_name) AS repo_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) AS push_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN number END) AS issues_created,\n    COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN repo_name END) AS stars_given,\n    (SELECT repo_name \n     FROM github_events e2 \n     WHERE e2.actor_login = github_events.actor_login AND e2.event_type = 'PushEvent'\n     GROUP BY repo_name \n     ORDER BY COUNT(*) DESC \n     LIMIT 1) AS favorite_repo\nFROM github_events\nWHERE \n    actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\nGROUP BY actor_login\nHAVING \n    repo_count >= 2\n    AND push_count >= 2\n    AND issues_created >= 2\n    AND stars_given >= 2\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "author": "Piedone",
              "repo_count": 116,
              "push_count": 73,
              "issues_created": 152,
              "stars_given": 5,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "tmtmtmtm",
              "repo_count": 47,
              "push_count": 43,
              "issues_created": 704,
              "stars_given": 3,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "pranavkm",
              "repo_count": 62,
              "push_count": 34,
              "issues_created": 1178,
              "stars_given": 3,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "pakrym",
              "repo_count": 61,
              "push_count": 31,
              "issues_created": 770,
              "stars_given": 2,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "davidfowl",
              "repo_count": 117,
              "push_count": 28,
              "issues_created": 1192,
              "stars_given": 12,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "natemcmaster",
              "repo_count": 159,
              "push_count": 26,
              "issues_created": 782,
              "stars_given": 108,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "ondenman",
              "repo_count": 39,
              "push_count": 26,
              "issues_created": 130,
              "stars_given": 4,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "BenedekFarkas",
              "repo_count": 93,
              "push_count": 26,
              "issues_created": 58,
              "stars_given": 3,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "BrennanConroy",
              "repo_count": 49,
              "push_count": 25,
              "issues_created": 293,
              "stars_given": 2,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            },
            {
              "author": "sindresorhus",
              "repo_count": 320,
              "push_count": 25,
              "issues_created": 710,
              "stars_given": 163,
              "favorite_repo": "peter-clifford/grax-hd-trial"
            }
          ],
          "meta": [
            {
              "name": "author",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            },
            {
              "name": "issues_created",
              "type": "UInt64"
            },
            {
              "name": "stars_given",
              "type": "UInt64"
            },
            {
              "name": "favorite_repo",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 111.662011948,
            "rows_read": 6544908729,
            "bytes_read": 30309675128
          },
          "executionTime": 111.711,
          "requestId": "01JTFZHQSPH3S7H1BXWYPEK85Q",
          "length": 1407
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    actor_login AS author,\n    COUNT(DISTINCT repo_name) AS repo_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) AS push_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN number END) AS issues_created,\n    COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN repo_name END) AS stars_given,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE \n    actor_login NOT LIKE '%bot%' \n    AND actor_login NOT LIKE '%[bot]%'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        GROUP BY repo_name \n        ORDER BY COUNT(*) DESC \n        LIMIT 10000\n    )\nGROUP BY actor_login\nHAVING \n    repo_count >= 2\n    AND push_count >= 2\n    AND issues_created >= 2\n    AND stars_given >= 2\nORDER BY push_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.836,
          "totalDuration": 18.598,
          "tokens": {
            "promptTokens": 4436,
            "completionTokens": 281,
            "totalTokens": 4717
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS org_name,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY org_name\nORDER BY star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "org_name": "google",
          "star_count": 1414877
        },
        {
          "org_name": "facebook",
          "star_count": 1123380
        },
        {
          "org_name": "Microsoft",
          "star_count": 691865
        },
        {
          "org_name": "microsoft",
          "star_count": 669438
        },
        {
          "org_name": "alibaba",
          "star_count": 580707
        },
        {
          "org_name": "sindresorhus",
          "star_count": 565535
        },
        {
          "org_name": "apache",
          "star_count": 553204
        },
        {
          "org_name": "vuejs",
          "star_count": 494824
        },
        {
          "org_name": "tensorflow",
          "star_count": 425613
        },
        {
          "org_name": "fossasia",
          "star_count": 398255
        }
      ],
      "meta": [
        {
          "name": "org_name",
          "type": "String"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.508330405,
        "rows_read": 232190399,
        "bytes_read": 928496724
      },
      "executionTime": 1.528,
      "requestId": "01JTFZNG5B31X2DYVXEK9ADZEE",
      "length": 443
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 5.141,
      "totalDuration": 9.065,
      "tokens": {
        "promptTokens": 4099,
        "completionTokens": 59,
        "totalTokens": 4158
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS org_name,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY org_name\nORDER BY star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "org_name": "google",
              "star_count": 1414877
            },
            {
              "org_name": "facebook",
              "star_count": 1123380
            },
            {
              "org_name": "Microsoft",
              "star_count": 691865
            },
            {
              "org_name": "microsoft",
              "star_count": 669438
            },
            {
              "org_name": "alibaba",
              "star_count": 580707
            },
            {
              "org_name": "sindresorhus",
              "star_count": 565535
            },
            {
              "org_name": "apache",
              "star_count": 553204
            },
            {
              "org_name": "vuejs",
              "star_count": 494824
            },
            {
              "org_name": "tensorflow",
              "star_count": 425613
            },
            {
              "org_name": "fossasia",
              "star_count": 398255
            }
          ],
          "meta": [
            {
              "name": "org_name",
              "type": "String"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.508330405,
            "rows_read": 232190399,
            "bytes_read": 928496724
          },
          "executionTime": 1.528,
          "requestId": "01JTFZNG5B31X2DYVXEK9ADZEE",
          "length": 443
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 5.141,
          "totalDuration": 9.065,
          "tokens": {
            "promptTokens": 4099,
            "completionTokens": 59,
            "totalTokens": 4158
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS repository_count\nFROM github_events\nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY repo_name\nORDER BY repository_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "efarbereger/tmp_clock_repo",
          "repository_count": 276269
        },
        {
          "repo_name": "aws-risk-analysis/ddrepo-prod",
          "repository_count": 155730
        },
        {
          "repo_name": "/",
          "repository_count": 108866
        },
        {
          "repo_name": "efarbereger/historyclockimage",
          "repository_count": 72267
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-ap-northeast-2",
          "repository_count": 47150
        },
        {
          "repo_name": "codestar-github-bot-1/user-public-seeded-repo-ap-northeast-2",
          "repository_count": 47116
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-2",
          "repository_count": 46850
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-3",
          "repository_count": 46838
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-1",
          "repository_count": 46816
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-central-1",
          "repository_count": 46759
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repository_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.832236396,
        "rows_read": 448167202,
        "bytes_read": 1761967917
      },
      "executionTime": 24.874,
      "requestId": "01JTFZNT8X3EABDQB76QXHE60Z",
      "length": 812
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.44,
      "totalDuration": 6.301,
      "tokens": {
        "promptTokens": 4098,
        "completionTokens": 50,
        "totalTokens": 4148
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS repository_count\nFROM github_events\nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY repo_name\nORDER BY repository_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "efarbereger/tmp_clock_repo",
              "repository_count": 276269
            },
            {
              "repo_name": "aws-risk-analysis/ddrepo-prod",
              "repository_count": 155730
            },
            {
              "repo_name": "/",
              "repository_count": 108866
            },
            {
              "repo_name": "efarbereger/historyclockimage",
              "repository_count": 72267
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-ap-northeast-2",
              "repository_count": 47150
            },
            {
              "repo_name": "codestar-github-bot-1/user-public-seeded-repo-ap-northeast-2",
              "repository_count": 47116
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-2",
              "repository_count": 46850
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-3",
              "repository_count": 46838
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-1",
              "repository_count": 46816
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-central-1",
              "repository_count": 46759
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repository_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.832236396,
            "rows_read": 448167202,
            "bytes_read": 1761967917
          },
          "executionTime": 24.874,
          "requestId": "01JTFZNT8X3EABDQB76QXHE60Z",
          "length": 812
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.44,
          "totalDuration": 6.301,
          "tokens": {
            "promptTokens": 4098,
            "completionTokens": 50,
            "totalTokens": 4148
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login AS organization,\n    COUNT(DISTINCT repo_name) AS repositories,\n    COUNT(*) AS total_events\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY total_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "organization": "4148",
          "repositories": 232448,
          "total_events": 232492
        },
        {
          "organization": "salifm",
          "repositories": 202475,
          "total_events": 202534
        },
        {
          "organization": "x0rzkov",
          "repositories": 73510,
          "total_events": 73531
        },
        {
          "organization": "fly51fly",
          "repositories": 57460,
          "total_events": 57756
        },
        {
          "organization": "PCOffline",
          "repositories": 2,
          "total_events": 56725
        },
        {
          "organization": "baslr",
          "repositories": 180,
          "total_events": 50363
        },
        {
          "organization": "gkze",
          "repositories": 41230,
          "total_events": 49078
        },
        {
          "organization": "StarTheWorld",
          "repositories": 45691,
          "total_events": 45691
        },
        {
          "organization": "thanhtoan1196",
          "repositories": 44203,
          "total_events": 44715
        },
        {
          "organization": "mcanthony",
          "repositories": 44060,
          "total_events": 44331
        }
      ],
      "meta": [
        {
          "name": "organization",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repositories",
          "type": "UInt64"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 23.926185167,
        "rows_read": 232190399,
        "bytes_read": 1160752532
      },
      "executionTime": 23.972,
      "requestId": "01JTFZPSSHBHQRKXXFTFNG6WR8",
      "length": 696
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.866,
      "totalDuration": 4.896,
      "tokens": {
        "promptTokens": 4099,
        "completionTokens": 56,
        "totalTokens": 4155
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login AS organization,\n    COUNT(DISTINCT repo_name) AS repositories,\n    COUNT(*) AS total_events\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY total_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "organization": "4148",
              "repositories": 232448,
              "total_events": 232492
            },
            {
              "organization": "salifm",
              "repositories": 202475,
              "total_events": 202534
            },
            {
              "organization": "x0rzkov",
              "repositories": 73510,
              "total_events": 73531
            },
            {
              "organization": "fly51fly",
              "repositories": 57460,
              "total_events": 57756
            },
            {
              "organization": "PCOffline",
              "repositories": 2,
              "total_events": 56725
            },
            {
              "organization": "baslr",
              "repositories": 180,
              "total_events": 50363
            },
            {
              "organization": "gkze",
              "repositories": 41230,
              "total_events": 49078
            },
            {
              "organization": "StarTheWorld",
              "repositories": 45691,
              "total_events": 45691
            },
            {
              "organization": "thanhtoan1196",
              "repositories": 44203,
              "total_events": 44715
            },
            {
              "organization": "mcanthony",
              "repositories": 44060,
              "total_events": 44331
            }
          ],
          "meta": [
            {
              "name": "organization",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repositories",
              "type": "UInt64"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 23.926185167,
            "rows_read": 232190399,
            "bytes_read": 1160752532
          },
          "executionTime": 23.972,
          "requestId": "01JTFZPSSHBHQRKXXFTFNG6WR8",
          "length": 696
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.866,
          "totalDuration": 4.896,
          "tokens": {
            "promptTokens": 4099,
            "completionTokens": 56,
            "totalTokens": 4155
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    SUM(additions + deletions) AS total_changes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY total_changes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "HelloTech/meteor-moment-timezone",
          "total_changes": 0
        },
        {
          "repo_name": "stephencweiss/javascript-streams-example",
          "total_changes": 0
        },
        {
          "repo_name": "rreicher/rreicher.github.io",
          "total_changes": 0
        },
        {
          "repo_name": "Alisa-Modeste/col-wis",
          "total_changes": 0
        },
        {
          "repo_name": "BitexXBX/tokens",
          "total_changes": 0
        },
        {
          "repo_name": "mwwasswa/mosesw.github.io",
          "total_changes": 0
        },
        {
          "repo_name": "B-14HKR001/ctetguru.com",
          "total_changes": 0
        },
        {
          "repo_name": "alexroemerdeveloper/LoadingSpinner",
          "total_changes": 0
        },
        {
          "repo_name": "gtibrett/tesla-dash",
          "total_changes": 0
        },
        {
          "repo_name": "feehlds/Projeto-DW1A3",
          "total_changes": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_changes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 42.923382125,
        "rows_read": 1601472977,
        "bytes_read": 17609324555
      },
      "executionTime": 42.968,
      "requestId": "01JTFZQQWX9JPJVCM7G953TE00",
      "length": 608
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 2.483,
      "totalDuration": 4.355,
      "tokens": {
        "promptTokens": 4116,
        "completionTokens": 47,
        "totalTokens": 4163
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    SUM(additions + deletions) AS total_changes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY total_changes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "HelloTech/meteor-moment-timezone",
              "total_changes": 0
            },
            {
              "repo_name": "stephencweiss/javascript-streams-example",
              "total_changes": 0
            },
            {
              "repo_name": "rreicher/rreicher.github.io",
              "total_changes": 0
            },
            {
              "repo_name": "Alisa-Modeste/col-wis",
              "total_changes": 0
            },
            {
              "repo_name": "BitexXBX/tokens",
              "total_changes": 0
            },
            {
              "repo_name": "mwwasswa/mosesw.github.io",
              "total_changes": 0
            },
            {
              "repo_name": "B-14HKR001/ctetguru.com",
              "total_changes": 0
            },
            {
              "repo_name": "alexroemerdeveloper/LoadingSpinner",
              "total_changes": 0
            },
            {
              "repo_name": "gtibrett/tesla-dash",
              "total_changes": 0
            },
            {
              "repo_name": "feehlds/Projeto-DW1A3",
              "total_changes": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_changes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 42.923382125,
            "rows_read": 1601472977,
            "bytes_read": 17609324555
          },
          "executionTime": 42.968,
          "requestId": "01JTFZQQWX9JPJVCM7G953TE00",
          "length": 608
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 2.483,
          "totalDuration": 4.355,
          "tokens": {
            "promptTokens": 4116,
            "completionTokens": 47,
            "totalTokens": 4163
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT repo_name, count() as push_count \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY repo_name \nORDER BY push_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "push_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "push_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "push_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "push_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "push_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "push_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "push_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "push_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "push_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "push_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 22.889031295,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 22.933,
      "requestId": "01JTFZS5T8YEWPMBTV9Y2P82FC",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.477,
      "totalDuration": 1.552,
      "tokens": {
        "promptTokens": 3754,
        "completionTokens": 42,
        "totalTokens": 3796
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT repo_name, count() as push_count \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY repo_name \nORDER BY push_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "push_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "push_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "push_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "push_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "push_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "push_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "push_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "push_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "push_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "push_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 22.889031295,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 22.933,
          "requestId": "01JTFZS5T8YEWPMBTV9Y2P82FC",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.477,
          "totalDuration": 1.552,
          "tokens": {
            "promptTokens": 3754,
            "completionTokens": 42,
            "totalTokens": 3796
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login AS author,\n    COUNT(*) AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY author\nORDER BY review_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "author": "github-learning-lab[bot]",
          "review_count": 104542
        },
        {
          "author": "github-actions[bot]",
          "review_count": 89676
        },
        {
          "author": "bot-monkey-2",
          "review_count": 31702
        },
        {
          "author": "staging-muse-bot[bot]",
          "review_count": 29429
        },
        {
          "author": "foreign-sub",
          "review_count": 17630
        },
        {
          "author": "renovate-approve[bot]",
          "review_count": 16563
        },
        {
          "author": "kodiakhq[bot]",
          "review_count": 10876
        },
        {
          "author": "Katsuno0814",
          "review_count": 6966
        },
        {
          "author": "BrewTestBot",
          "review_count": 6718
        },
        {
          "author": "accesslint[bot]",
          "review_count": 6668
        }
      ],
      "meta": [
        {
          "name": "author",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.033047107,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.054,
      "requestId": "01JTFZT1N76K90E4T900MGTQRB",
      "length": 507
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.288,
      "totalDuration": 3.098,
      "tokens": {
        "promptTokens": 4098,
        "completionTokens": 44,
        "totalTokens": 4142
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login AS author,\n    COUNT(*) AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY author\nORDER BY review_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "author": "github-learning-lab[bot]",
              "review_count": 104542
            },
            {
              "author": "github-actions[bot]",
              "review_count": 89676
            },
            {
              "author": "bot-monkey-2",
              "review_count": 31702
            },
            {
              "author": "staging-muse-bot[bot]",
              "review_count": 29429
            },
            {
              "author": "foreign-sub",
              "review_count": 17630
            },
            {
              "author": "renovate-approve[bot]",
              "review_count": 16563
            },
            {
              "author": "kodiakhq[bot]",
              "review_count": 10876
            },
            {
              "author": "Katsuno0814",
              "review_count": 6966
            },
            {
              "author": "BrewTestBot",
              "review_count": 6718
            },
            {
              "author": "accesslint[bot]",
              "review_count": 6668
            }
          ],
          "meta": [
            {
              "name": "author",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.033047107,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.054,
          "requestId": "01JTFZT1N76K90E4T900MGTQRB",
          "length": 507
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.288,
          "totalDuration": 3.098,
          "tokens": {
            "promptTokens": 4098,
            "completionTokens": 44,
            "totalTokens": 4142
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    label,\n    COUNT(*) AS count\nFROM github_events\nARRAY JOIN labels AS label\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "dependencies",
          "count": 9458518
        },
        {
          "label": "enhancement",
          "count": 6805408
        },
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": ":arrow_heading_down: pull",
          "count": 4124651
        },
        {
          "label": "question",
          "count": 934878
        },
        {
          "label": "help wanted",
          "count": 757775
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "cla: yes",
          "count": 653842
        },
        {
          "label": "documentation",
          "count": 512616
        },
        {
          "label": "javascript",
          "count": 507441
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.659684827,
        "rows_read": 326129279,
        "bytes_read": 3089461441
      },
      "executionTime": 0.679,
      "requestId": "01JTFZT6WQD2WJFNHK4JT6N5GG",
      "length": 393
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.851,
      "totalDuration": 2.803,
      "tokens": {
        "promptTokens": 4100,
        "completionTokens": 50,
        "totalTokens": 4150
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    label,\n    COUNT(*) AS count\nFROM github_events\nARRAY JOIN labels AS label\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "dependencies",
              "count": 9458518
            },
            {
              "label": "enhancement",
              "count": 6805408
            },
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": ":arrow_heading_down: pull",
              "count": 4124651
            },
            {
              "label": "question",
              "count": 934878
            },
            {
              "label": "help wanted",
              "count": 757775
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "cla: yes",
              "count": 653842
            },
            {
              "label": "documentation",
              "count": 512616
            },
            {
              "label": "javascript",
              "count": 507441
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.659684827,
            "rows_read": 326129279,
            "bytes_read": 3089461441
          },
          "executionTime": 0.679,
          "requestId": "01JTFZT6WQD2WJFNHK4JT6N5GG",
          "length": 393
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.851,
          "totalDuration": 2.803,
          "tokens": {
            "promptTokens": 4100,
            "completionTokens": 50,
            "totalTokens": 4150
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT label, count() as count \nFROM (\n    SELECT arrayJoin(labels) as label \n    FROM github_events \n    WHERE \n        event_type IN ('IssuesEvent', 'PullRequestEvent') \n        AND hasAny(labels, ['bug', 'feature'])\n) \nGROUP BY label \nORDER BY count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "enhancement",
          "count": 199449
        },
        {
          "label": "help wanted",
          "count": 117985
        },
        {
          "label": "good first issue",
          "count": 54548
        },
        {
          "label": "in progress",
          "count": 52467
        },
        {
          "label": "fixed",
          "count": 48625
        },
        {
          "label": "question",
          "count": 44114
        },
        {
          "label": "wontfix",
          "count": 38675
        },
        {
          "label": "duplicate",
          "count": 33695
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.954215956,
        "rows_read": 326129279,
        "bytes_read": 3089486744
      },
      "executionTime": 0.974,
      "requestId": "01JTFZTKJWQG28E0Y1KFHW3JPE",
      "length": 364
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 most popular labels for issues and pull requests? filter by bugs and features\"\n\nYou generated this SQL query:\n```sql\n.\n\nSELECT label, count() as count \nFROM (\n    SELECT arrayJoin(labels) as label \n    FROM github_events \n    WHERE \n        event_type IN ('IssuesEvent', 'PullRequestEvent') \n        AND arrayExists(x -> x IN ('bug', 'feature'), labels)\n) \nGROUP BY label \nORDER BY count DESC \nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 0.745,
      "totalDuration": 4.041,
      "tokens": {
        "promptTokens": 4236,
        "completionTokens": 73,
        "totalTokens": 4309
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": ".\n\nSELECT label, count() as count \nFROM (\n    SELECT arrayJoin(labels) as label \n    FROM github_events \n    WHERE \n        event_type IN ('IssuesEvent', 'PullRequestEvent') \n        AND arrayExists(x -> x IN ('bug', 'feature'), labels)\n) \nGROUP BY label \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTFZTD5Y97PRGFZD6YBSDBVC",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('.') (line 1, col 1): .\\n\\nSELECT label, count() as count \\nFROM (\\n    SELECT arrayJoin(labels) as label \\n    FROM github_events \\n    WHERE \\n        event_type IN ('IssuesEvent', 'PullR. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW C",
          "length": 2
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.694,
          "totalDuration": 3.258,
          "tokens": {
            "promptTokens": 3761,
            "completionTokens": 77,
            "totalTokens": 3838
          }
        },
        "error": null
      },
      {
        "sql": "SELECT label, count() as count \nFROM (\n    SELECT arrayJoin(labels) as label \n    FROM github_events \n    WHERE \n        event_type IN ('IssuesEvent', 'PullRequestEvent') \n        AND hasAny(labels, ['bug', 'feature'])\n) \nGROUP BY label \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "enhancement",
              "count": 199449
            },
            {
              "label": "help wanted",
              "count": 117985
            },
            {
              "label": "good first issue",
              "count": 54548
            },
            {
              "label": "in progress",
              "count": 52467
            },
            {
              "label": "fixed",
              "count": 48625
            },
            {
              "label": "question",
              "count": 44114
            },
            {
              "label": "wontfix",
              "count": 38675
            },
            {
              "label": "duplicate",
              "count": 33695
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.954215956,
            "rows_read": 326129279,
            "bytes_read": 3089486744
          },
          "executionTime": 0.974,
          "requestId": "01JTFZTKJWQG28E0Y1KFHW3JPE",
          "length": 364
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 most popular labels for issues and pull requests? filter by bugs and features\"\n\nYou generated this SQL query:\n```sql\n.\n\nSELECT label, count() as count \nFROM (\n    SELECT arrayJoin(labels) as label \n    FROM github_events \n    WHERE \n        event_type IN ('IssuesEvent', 'PullRequestEvent') \n        AND arrayExists(x -> x IN ('bug', 'feature'), labels)\n) \nGROUP BY label \nORDER BY count DESC \nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 0.745,
          "totalDuration": 4.041,
          "tokens": {
            "promptTokens": 4236,
            "completionTokens": 73,
            "totalTokens": 4309
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    length(repo_name) AS name_length\nFROM github_events\nGROUP BY repo_name\nORDER BY name_length DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "696969696969696969696969696969696969696/6969696969696969696969696969696969696966969696969696969696969696969696969696966969696969696969696969",
          "name_length": 140
        },
        {
          "repo_name": "JonathanJonathanJonathanJonathanJonatha/JonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJona",
          "name_length": 140
        },
        {
          "repo_name": "jfhuisdhfudhkjshdkjfhuildfhiugfjzgzugeh/ojdsiojeroijthiepr98gzp948wzrgpuezroiughiouhgiuheriufzhiugzreiuzgiuzgeiuzriureztiurztiuerztiutzuzrti",
          "name_length": 140
        },
        {
          "repo_name": "7nJpHo92j8dgSlmsG24z9iAqTXX5NVU5DOk4hZa/cNQ2R8xA1xrab4RNHbzVMN2q25nJSOl7LafDvRJlwatglLC3EyHNzPLPVhV9XfnZKrhCCEVNSCRGn5DxmJPi89nuw3GV7LOj6qa4",
          "name_length": 140
        },
        {
          "repo_name": "ooooooooooooooooo-ooooooooooooooooooooo/oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo",
          "name_length": 140
        },
        {
          "repo_name": "GiT0WOalVjZ6ZhToNFeqLpdYByfodiQ4nksWmTL/SMp7RImOgmQphQXOSzcnX9Q4tvtFfBHYdnu2wXB3Xi3WgNKi8digOgrd6aMF5a7HeLjGLWSiEycf0mPlG4p95EJBU1gSdKEd89Ev",
          "name_length": 140
        },
        {
          "repo_name": "ySV4N68CKltnzm4uR2swcjOW7Mjji3WKHBp0xVb/ReMDVPQbYCwQhZQ7v39jswwsS0JtrfcPkSqO3wvimSfp3NAIEUCk9ReBlgVzB54hMBYrQlDnA-cxf6p8Tc5wSM6UDBUWEeJsodm-",
          "name_length": 140
        },
        {
          "repo_name": "qwertqwertqwertqwertqwertqwertqwertqwer/asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf",
          "name_length": 140
        },
        {
          "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooj",
          "name_length": 140
        },
        {
          "repo_name": "9iejhyf4ygzhryvcfuy35vn3tuv8yowthoibsg5/piusrgibgbhrbeymvcytwmvstmygytmvaeyotayeutfgatunvceagtiletauatuhaOIHSBHHCSEVMHSVTESith46whcnt5eawslg",
          "name_length": 140
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 40.634442097,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 40.677,
      "requestId": "01JTFZTTCPY27P5PCPGBBKZEBX",
      "length": 1751
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.109,
      "totalDuration": 3.472,
      "tokens": {
        "promptTokens": 4096,
        "completionTokens": 38,
        "totalTokens": 4134
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    length(repo_name) AS name_length\nFROM github_events\nGROUP BY repo_name\nORDER BY name_length DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "696969696969696969696969696969696969696/6969696969696969696969696969696969696966969696969696969696969696969696969696966969696969696969696969",
              "name_length": 140
            },
            {
              "repo_name": "JonathanJonathanJonathanJonathanJonatha/JonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJona",
              "name_length": 140
            },
            {
              "repo_name": "jfhuisdhfudhkjshdkjfhuildfhiugfjzgzugeh/ojdsiojeroijthiepr98gzp948wzrgpuezroiughiouhgiuheriufzhiugzreiuzgiuzgeiuzriureztiurztiuerztiutzuzrti",
              "name_length": 140
            },
            {
              "repo_name": "7nJpHo92j8dgSlmsG24z9iAqTXX5NVU5DOk4hZa/cNQ2R8xA1xrab4RNHbzVMN2q25nJSOl7LafDvRJlwatglLC3EyHNzPLPVhV9XfnZKrhCCEVNSCRGn5DxmJPi89nuw3GV7LOj6qa4",
              "name_length": 140
            },
            {
              "repo_name": "ooooooooooooooooo-ooooooooooooooooooooo/oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo",
              "name_length": 140
            },
            {
              "repo_name": "GiT0WOalVjZ6ZhToNFeqLpdYByfodiQ4nksWmTL/SMp7RImOgmQphQXOSzcnX9Q4tvtFfBHYdnu2wXB3Xi3WgNKi8digOgrd6aMF5a7HeLjGLWSiEycf0mPlG4p95EJBU1gSdKEd89Ev",
              "name_length": 140
            },
            {
              "repo_name": "ySV4N68CKltnzm4uR2swcjOW7Mjji3WKHBp0xVb/ReMDVPQbYCwQhZQ7v39jswwsS0JtrfcPkSqO3wvimSfp3NAIEUCk9ReBlgVzB54hMBYrQlDnA-cxf6p8Tc5wSM6UDBUWEeJsodm-",
              "name_length": 140
            },
            {
              "repo_name": "qwertqwertqwertqwertqwertqwertqwertqwer/asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf",
              "name_length": 140
            },
            {
              "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooj",
              "name_length": 140
            },
            {
              "repo_name": "9iejhyf4ygzhryvcfuy35vn3tuv8yowthoibsg5/piusrgibgbhrbeymvcytwmvstmygytmvaeyotayeutfgatunvceagtiletauatuhaOIHSBHHCSEVMHSVTESith46whcnt5eawslg",
              "name_length": 140
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 40.634442097,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 40.677,
          "requestId": "01JTFZTTCPY27P5PCPGBBKZEBX",
          "length": 1751
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.109,
          "totalDuration": 3.472,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 38,
            "totalTokens": 4134
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, length(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY name_length ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "name_length": 1
        },
        {
          "repo_name": "/z",
          "name_length": 2
        },
        {
          "repo_name": "/c",
          "name_length": 2
        },
        {
          "repo_name": "/-",
          "name_length": 2
        },
        {
          "repo_name": "/a",
          "name_length": 2
        },
        {
          "repo_name": "/n",
          "name_length": 2
        },
        {
          "repo_name": "/x",
          "name_length": 2
        },
        {
          "repo_name": "/h",
          "name_length": 2
        },
        {
          "repo_name": "/av",
          "name_length": 3
        },
        {
          "repo_name": "/Gv",
          "name_length": 3
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 41.23901593,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 41.287,
      "requestId": "01JTFZW6G09ESCDQBVF27QA9SZ",
      "length": 352
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.052,
      "totalDuration": 1.979,
      "tokens": {
        "promptTokens": 4095,
        "completionTokens": 39,
        "totalTokens": 4134
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, length(repo_name) as name_length\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY name_length ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "name_length": 1
            },
            {
              "repo_name": "/z",
              "name_length": 2
            },
            {
              "repo_name": "/c",
              "name_length": 2
            },
            {
              "repo_name": "/-",
              "name_length": 2
            },
            {
              "repo_name": "/a",
              "name_length": 2
            },
            {
              "repo_name": "/n",
              "name_length": 2
            },
            {
              "repo_name": "/x",
              "name_length": 2
            },
            {
              "repo_name": "/h",
              "name_length": 2
            },
            {
              "repo_name": "/av",
              "name_length": 3
            },
            {
              "repo_name": "/Gv",
              "name_length": 3
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 41.23901593,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 41.287,
          "requestId": "01JTFZW6G09ESCDQBVF27QA9SZ",
          "length": 352
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.052,
          "totalDuration": 1.979,
          "tokens": {
            "promptTokens": 4095,
            "completionTokens": 39,
            "totalTokens": 4134
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 3203
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 1155
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 359
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 248
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 178
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 104
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 87
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 76
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 71
        },
        {
          "repo_name": "frontendbr/forum",
          "comment_count": 63
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.931365716,
        "rows_read": 218620144,
        "bytes_read": 91676124350
      },
      "executionTime": 8.975,
      "requestId": "01JTFZXPC1AQZJRXVANGBDF1YT",
      "length": 613
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 2.249,
      "totalDuration": 5.237,
      "tokens": {
        "promptTokens": 4100,
        "completionTokens": 52,
        "totalTokens": 4152
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 3203
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 1155
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 359
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 248
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 178
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 104
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 87
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 76
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 71
            },
            {
              "repo_name": "frontendbr/forum",
              "comment_count": 63
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.931365716,
            "rows_read": 218620144,
            "bytes_read": 91676124350
          },
          "executionTime": 8.975,
          "requestId": "01JTFZXPC1AQZJRXVANGBDF1YT",
          "length": 613
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 2.249,
          "totalDuration": 5.237,
          "tokens": {
            "promptTokens": 4100,
            "completionTokens": 52,
            "totalTokens": 4152
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND repo_name LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 2993
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 1309
        },
        {
          "repo_name": "huluoyang/freecodecamp.cn",
          "comment_count": 418
        },
        {
          "repo_name": "QuincyLarson/freecodecamp",
          "comment_count": 150
        },
        {
          "repo_name": "NBR-hugh/freecodecamp-practice",
          "comment_count": 118
        },
        {
          "repo_name": "FreeCodeCampGuam/freecodecampguam.github.io",
          "comment_count": 93
        },
        {
          "repo_name": "iamjinme/freecodecamp-challenges",
          "comment_count": 82
        },
        {
          "repo_name": "freecodecamp-spb/web_dev_courses_Front_End",
          "comment_count": 46
        },
        {
          "repo_name": "freecodecamp-spb/web-dev-courses",
          "comment_count": 42
        },
        {
          "repo_name": "freecodecamp-fresnoca/arthop-map-dev",
          "comment_count": 36
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.186316919,
        "rows_read": 218620144,
        "bytes_read": 655216797
      },
      "executionTime": 0.205,
      "requestId": "01JTFZY859G8HXRTVN3TECF9VA",
      "length": 691
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 3.484,
      "totalDuration": 6.762,
      "tokens": {
        "promptTokens": 4104,
        "completionTokens": 53,
        "totalTokens": 4157
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND repo_name LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 2993
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 1309
            },
            {
              "repo_name": "huluoyang/freecodecamp.cn",
              "comment_count": 418
            },
            {
              "repo_name": "QuincyLarson/freecodecamp",
              "comment_count": 150
            },
            {
              "repo_name": "NBR-hugh/freecodecamp-practice",
              "comment_count": 118
            },
            {
              "repo_name": "FreeCodeCampGuam/freecodecampguam.github.io",
              "comment_count": 93
            },
            {
              "repo_name": "iamjinme/freecodecamp-challenges",
              "comment_count": 82
            },
            {
              "repo_name": "freecodecamp-spb/web_dev_courses_Front_End",
              "comment_count": 46
            },
            {
              "repo_name": "freecodecamp-spb/web-dev-courses",
              "comment_count": 42
            },
            {
              "repo_name": "freecodecamp-fresnoca/arthop-map-dev",
              "comment_count": 36
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.186316919,
            "rows_read": 218620144,
            "bytes_read": 655216797
          },
          "executionTime": 0.205,
          "requestId": "01JTFZY859G8HXRTVN3TECF9VA",
          "length": 691
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 3.484,
          "totalDuration": 6.762,
          "tokens": {
            "promptTokens": 4104,
            "completionTokens": 53,
            "totalTokens": 4157
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    actor_login,\n    repo_name,\n    body,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' AND body IS NOT NULL\nGROUP BY actor_login, repo_name, body\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "signcla-test-signed-corp",
          "repo_name": "google-test/signcla-probe-repo",
          "body": "corp-pass-fork: test succeeded",
          "comment_count": 106839
        },
        {
          "actor_login": "signcla-test-unsigned",
          "repo_name": "google-test/signcla-probe-repo",
          "body": "unsigned-fail-fork: test succeeded",
          "comment_count": 106290
        },
        {
          "actor_login": "tweakCompatible-bot",
          "repo_name": "jlippold/tweakCompatible",
          "body": "This issue is being closed because your review was accepted into the tweakCompatible website. \nTweak developers do not monitor or fix issues submitted via this repo.\nIf you have an issue with a tweak, contact the developer via another method.",
          "comment_count": 106133
        },
        {
          "actor_login": "AmplabJenkins",
          "repo_name": "apache/spark",
          "body": "Merged build finished. Test PASSed.",
          "comment_count": 88776
        },
        {
          "actor_login": "sauron-canary",
          "repo_name": "sauron-demo/sauron",
          "body": "@z-kasparov new game",
          "comment_count": 65605
        },
        {
          "actor_login": "signcla-test-signed-indiv",
          "repo_name": "google-test/signcla-probe-repo",
          "body": "indiv-pass-fork: test succeeded",
          "comment_count": 59291
        },
        {
          "actor_login": "KhanBugz",
          "repo_name": "Khan/khan-exercises",
          "body": "",
          "comment_count": 54273
        },
        {
          "actor_login": "signcla-test-signed-indiv",
          "repo_name": "google-test/signcla-probe-repo",
          "body": "corp-pass-indiv: test succeeded",
          "comment_count": 47554
        },
        {
          "actor_login": "AmplabJenkins",
          "repo_name": "apache/spark",
          "body": "Merged build finished. Test FAILed.",
          "comment_count": 45427
        },
        {
          "actor_login": "PKUDeleted",
          "repo_name": "PKUDeleted/Holes",
          "body": "**[Alice]** 给爷爬",
          "comment_count": 44144
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 159.070436122,
        "rows_read": 218620144,
        "bytes_read": 92525751690
      },
      "executionTime": 159.119,
      "requestId": "01JTFZYFMD4GMZVB60E9GKB186",
      "length": 1531
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "deepseek-chat-v3-0324",
    "provider": "deepseek",
    "metrics": {
      "timeToFirstToken": 1.113,
      "totalDuration": 4.919,
      "tokens": {
        "promptTokens": 4097,
        "completionTokens": 61,
        "totalTokens": 4158
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    actor_login,\n    repo_name,\n    body,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' AND body IS NOT NULL\nGROUP BY actor_login, repo_name, body\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "signcla-test-signed-corp",
              "repo_name": "google-test/signcla-probe-repo",
              "body": "corp-pass-fork: test succeeded",
              "comment_count": 106839
            },
            {
              "actor_login": "signcla-test-unsigned",
              "repo_name": "google-test/signcla-probe-repo",
              "body": "unsigned-fail-fork: test succeeded",
              "comment_count": 106290
            },
            {
              "actor_login": "tweakCompatible-bot",
              "repo_name": "jlippold/tweakCompatible",
              "body": "This issue is being closed because your review was accepted into the tweakCompatible website. \nTweak developers do not monitor or fix issues submitted via this repo.\nIf you have an issue with a tweak, contact the developer via another method.",
              "comment_count": 106133
            },
            {
              "actor_login": "AmplabJenkins",
              "repo_name": "apache/spark",
              "body": "Merged build finished. Test PASSed.",
              "comment_count": 88776
            },
            {
              "actor_login": "sauron-canary",
              "repo_name": "sauron-demo/sauron",
              "body": "@z-kasparov new game",
              "comment_count": 65605
            },
            {
              "actor_login": "signcla-test-signed-indiv",
              "repo_name": "google-test/signcla-probe-repo",
              "body": "indiv-pass-fork: test succeeded",
              "comment_count": 59291
            },
            {
              "actor_login": "KhanBugz",
              "repo_name": "Khan/khan-exercises",
              "body": "",
              "comment_count": 54273
            },
            {
              "actor_login": "signcla-test-signed-indiv",
              "repo_name": "google-test/signcla-probe-repo",
              "body": "corp-pass-indiv: test succeeded",
              "comment_count": 47554
            },
            {
              "actor_login": "AmplabJenkins",
              "repo_name": "apache/spark",
              "body": "Merged build finished. Test FAILed.",
              "comment_count": 45427
            },
            {
              "actor_login": "PKUDeleted",
              "repo_name": "PKUDeleted/Holes",
              "body": "**[Alice]** 给爷爬",
              "comment_count": 44144
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 159.070436122,
            "rows_read": 218620144,
            "bytes_read": 92525751690
          },
          "executionTime": 159.119,
          "requestId": "01JTFZYFMD4GMZVB60E9GKB186",
          "length": 1531
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "deepseek-chat-v3-0324",
        "provider": "deepseek",
        "metrics": {
          "timeToFirstToken": 1.113,
          "totalDuration": 4.919,
          "tokens": {
            "promptTokens": 4097,
            "completionTokens": 61,
            "totalTokens": 4158
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.286400024,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.306,
      "requestId": "01JTG03EZ44YEF48CJ4221CWZJ",
      "length": 517
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.29,
      "totalDuration": 1.552,
      "tokens": {
        "promptTokens": 4233,
        "completionTokens": 50,
        "totalTokens": 4283
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.286400024,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.306,
          "requestId": "01JTG03EZ44YEF48CJ4221CWZJ",
          "length": 517
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.29,
          "totalDuration": 1.552,
          "tokens": {
            "promptTokens": 4233,
            "completionTokens": 50,
            "totalTokens": 4283
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.20564287,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.226,
      "requestId": "01JTG03M1H6DBREBC41ZCAPQZA",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.102,
      "totalDuration": 1.39,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 40,
        "totalTokens": 4261
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.20564287,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.226,
          "requestId": "01JTG03M1H6DBREBC41ZCAPQZA",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.102,
          "totalDuration": 1.39,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 40,
            "totalTokens": 4261
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nI am unable to provide a query to directly answer your question about the distribution of repositories by stars because the `github_events` table does not contain information about the number of stars for each repository. The previous attempts were based on the available data but could not fulfill the request.\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG04143P8V8Z1W8MC9HGW6Q",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to provide a query to directly answer your question about the distribution of repositories by stars because the `github_events` table does not conta. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
      "length": 2
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nI don't have the number of stars for each repository in the table. I can provide a query that shows the distribution of event types across repositories.\n\n\nSELECT repo_name, event_type, count() AS event_count\nFROM github_events\nGROUP BY repo_name, event_type\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe table `github_events` does not contain the number of stars for each repository. Therefore, it is impossible to directly answer the question \"what is the distribution of repositories by stars?\". The previous query was also incorrect as it was trying to show the distribution of event types across repositories, which is not the same as the distribution of repositories by stars.\n\nSince I cannot directly answer the question, I will provide a query that shows the number of events per repository. This might give some indication of the popularity of the repository, although it is not a direct measure of stars.\n\n\nSELECT repo_name, count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.073,
      "totalDuration": 1.47,
      "tokens": {
        "promptTokens": 4575,
        "completionTokens": 61,
        "totalTokens": 4636
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I don't have the number of stars for each repository in the table. I can provide a query that shows the distribution of event types across repositories.\n\n\nSELECT repo_name, event_type, count() AS event_count\nFROM github_events\nGROUP BY repo_name, event_type\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG03RVJ930YDKK6VB6YEFHY",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 6 (''t have the number of stars for each repository in the table. I can provide a query that shows the distribution of event types across repositories.\\n\\n\\nSELECT repo_name, event_type, count() AS event_count\\nFROM github_events\\nGROUP BY repo_name, event_type\\nLIMIT 10\\n FORMAT JSON') (line 1, col 6): 't have the number of stars for each repository in the table. I can provide a query that shows the distribution of event types across re",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.686,
          "totalDuration": 1.201,
          "tokens": {
            "promptTokens": 4240,
            "completionTokens": 72,
            "totalTokens": 4312
          }
        },
        "error": null
      },
      {
        "sql": "The table `github_events` does not contain the number of stars for each repository. Therefore, it is impossible to directly answer the question \"what is the distribution of repositories by stars?\". The previous query was also incorrect as it was trying to show the distribution of event types across repositories, which is not the same as the distribution of repositories by stars.\n\nSince I cannot directly answer the question, I will provide a query that shows the number of events per repository. This might give some indication of the popularity of the repository, although it is not a direct measure of stars.\n\n\nSELECT repo_name, count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG03X7J1PE1PHYQTN0TH2CJ",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The table `github_events` does not contain the number of stars for each repository. Therefore, it is impossible to directly answer the question \\\"what is the dis. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREAT",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nI don't have the number of stars for each repository in the table. I can provide a query that shows the distribution of event types across repositories.\n\n\nSELECT repo_name, event_type, count() AS event_count\nFROM github_events\nGROUP BY repo_name, event_type\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.958,
          "totalDuration": 1.966,
          "tokens": {
            "promptTokens": 4366,
            "completionTokens": 156,
            "totalTokens": 4522
          }
        },
        "error": null
      },
      {
        "sql": "\nI am unable to provide a query to directly answer your question about the distribution of repositories by stars because the `github_events` table does not contain information about the number of stars for each repository. The previous attempts were based on the available data but could not fulfill the request.\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG04143P8V8Z1W8MC9HGW6Q",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to provide a query to directly answer your question about the distribution of repositories by stars because the `github_events` table does not conta. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nI don't have the number of stars for each repository in the table. I can provide a query that shows the distribution of event types across repositories.\n\n\nSELECT repo_name, event_type, count() AS event_count\nFROM github_events\nGROUP BY repo_name, event_type\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe table `github_events` does not contain the number of stars for each repository. Therefore, it is impossible to directly answer the question \"what is the distribution of repositories by stars?\". The previous query was also incorrect as it was trying to show the distribution of event types across repositories, which is not the same as the distribution of repositories by stars.\n\nSince I cannot directly answer the question, I will provide a query that shows the number of events per repository. This might give some indication of the popularity of the repository, although it is not a direct measure of stars.\n\n\nSELECT repo_name, count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.073,
          "totalDuration": 1.47,
          "tokens": {
            "promptTokens": 4575,
            "completionTokens": 61,
            "totalTokens": 4636
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT count(DISTINCT repo_name) AS total_repositories FROM github_events LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_repositories": 165611259
        }
      ],
      "meta": [
        {
          "name": "total_repositories",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.455019113,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.5,
      "requestId": "01JTG044RTZ2HKQV5D0T0BBQDX",
      "length": 34
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.032,
      "totalDuration": 1.194,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 26,
        "totalTokens": 4247
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT count(DISTINCT repo_name) AS total_repositories FROM github_events LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_repositories": 165611259
            }
          ],
          "meta": [
            {
              "name": "total_repositories",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.455019113,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.5,
          "requestId": "01JTG044RTZ2HKQV5D0T0BBQDX",
          "length": 34
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.032,
          "totalDuration": 1.194,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 26,
            "totalTokens": 4247
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    YEAR(created_at) AS year,\n    count() AS event_count\nFROM github_events\nWHERE YEAR(created_at) >= 2015\nGROUP BY\n    repo_name,\n    year\nORDER BY\n    year,\n    event_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "direwolf-github/my-app",
          "year": 2015,
          "event_count": 659546
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "year": 2015,
          "event_count": 510424
        },
        {
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "year": 2015,
          "event_count": 310733
        },
        {
          "repo_name": "sakai-mirror/melete",
          "year": 2015,
          "event_count": 256758
        },
        {
          "repo_name": "Door43/d43-en",
          "year": 2015,
          "event_count": 226907
        },
        {
          "repo_name": "apache/spark",
          "year": 2015,
          "event_count": 223230
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "year": 2015,
          "event_count": 189974
        },
        {
          "repo_name": "dchekhonin/testDM",
          "year": 2015,
          "event_count": 151983
        },
        {
          "repo_name": "docker/docker",
          "year": 2015,
          "event_count": 132956
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "year": 2015,
          "event_count": 129690
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 64.388774578,
        "rows_read": 2843662884,
        "bytes_read": 17048892505
      },
      "executionTime": 64.411,
      "requestId": "01JTG050JM83BND7YYNNPJ3X99",
      "length": 709
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.082,
      "totalDuration": 1.498,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 81,
        "totalTokens": 4312
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    YEAR(created_at) AS year,\n    count() AS event_count\nFROM github_events\nWHERE YEAR(created_at) >= 2015\nGROUP BY\n    repo_name,\n    year\nORDER BY\n    year,\n    event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "direwolf-github/my-app",
              "year": 2015,
              "event_count": 659546
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "year": 2015,
              "event_count": 510424
            },
            {
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "year": 2015,
              "event_count": 310733
            },
            {
              "repo_name": "sakai-mirror/melete",
              "year": 2015,
              "event_count": 256758
            },
            {
              "repo_name": "Door43/d43-en",
              "year": 2015,
              "event_count": 226907
            },
            {
              "repo_name": "apache/spark",
              "year": 2015,
              "event_count": 223230
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "year": 2015,
              "event_count": 189974
            },
            {
              "repo_name": "dchekhonin/testDM",
              "year": 2015,
              "event_count": 151983
            },
            {
              "repo_name": "docker/docker",
              "year": 2015,
              "event_count": 132956
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "year": 2015,
              "event_count": 129690
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 64.388774578,
            "rows_read": 2843662884,
            "bytes_read": 17048892505
          },
          "executionTime": 64.411,
          "requestId": "01JTG050JM83BND7YYNNPJ3X99",
          "length": 709
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.082,
          "totalDuration": 1.498,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 81,
            "totalTokens": 4312
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    toYear(created_at) AS year,\n    count() AS watch_event_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2011,
          "watch_event_count": 1831742
        },
        {
          "year": 2012,
          "watch_event_count": 4048676
        },
        {
          "year": 2013,
          "watch_event_count": 7432800
        },
        {
          "year": 2014,
          "watch_event_count": 11952935
        },
        {
          "year": 2015,
          "watch_event_count": 18994833
        },
        {
          "year": 2016,
          "watch_event_count": 26166310
        },
        {
          "year": 2017,
          "watch_event_count": 32640040
        },
        {
          "year": 2018,
          "watch_event_count": 37068153
        },
        {
          "year": 2019,
          "watch_event_count": 46118187
        },
        {
          "year": 2020,
          "watch_event_count": 45864798
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "watch_event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.251647925,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.271,
      "requestId": "01JTG078CMGZKBDVQF0JJTZJBA",
      "length": 428
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "I previously asked: \"How has the total number of stars changed over time?\"\n\nYou generated this SQL query:\n```sql\nI cannot directly calculate the number of stars from the available data. However, I can provide a query that shows the count of 'WatchEvent' events over time, which might be related to the number of stars.\n\n\nSELECT\n    toYear(created_at) AS year,\n    count() AS watch_event_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.144,
      "totalDuration": 1.389,
      "tokens": {
        "promptTokens": 4378,
        "completionTokens": 56,
        "totalTokens": 4434
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot directly calculate the number of stars from the available data. However, I can provide a query that shows the count of 'WatchEvent' events over time, which might be related to the number of stars.\n\n\nSELECT\n    toYear(created_at) AS year,\n    count() AS watch_event_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG074JJY8ZSS9Z7596B682N",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot directly calculate the number of stars from the available data. However, I can provide a query that shows the count of 'WatchEvent' events over time, w. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.969,
          "totalDuration": 2.717,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 100,
            "totalTokens": 4325
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    toYear(created_at) AS year,\n    count() AS watch_event_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2011,
              "watch_event_count": 1831742
            },
            {
              "year": 2012,
              "watch_event_count": 4048676
            },
            {
              "year": 2013,
              "watch_event_count": 7432800
            },
            {
              "year": 2014,
              "watch_event_count": 11952935
            },
            {
              "year": 2015,
              "watch_event_count": 18994833
            },
            {
              "year": 2016,
              "watch_event_count": 26166310
            },
            {
              "year": 2017,
              "watch_event_count": 32640040
            },
            {
              "year": 2018,
              "watch_event_count": 37068153
            },
            {
              "year": 2019,
              "watch_event_count": 46118187
            },
            {
              "year": 2020,
              "watch_event_count": 45864798
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "watch_event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.251647925,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.271,
          "requestId": "01JTG078CMGZKBDVQF0JJTZJBA",
          "length": 428
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "I previously asked: \"How has the total number of stars changed over time?\"\n\nYou generated this SQL query:\n```sql\nI cannot directly calculate the number of stars from the available data. However, I can provide a query that shows the count of 'WatchEvent' events over time, which might be related to the number of stars.\n\n\nSELECT\n    toYear(created_at) AS year,\n    count() AS watch_event_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.144,
          "totalDuration": 1.389,
          "tokens": {
            "promptTokens": 4378,
            "completionTokens": 56,
            "totalTokens": 4434
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    actor_login,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "star_count": 232492
        },
        {
          "actor_login": "salifm",
          "star_count": 202534
        },
        {
          "actor_login": "x0rzkov",
          "star_count": 73531
        },
        {
          "actor_login": "fly51fly",
          "star_count": 57756
        },
        {
          "actor_login": "PCOffline",
          "star_count": 56725
        },
        {
          "actor_login": "baslr",
          "star_count": 50363
        },
        {
          "actor_login": "gkze",
          "star_count": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "star_count": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "star_count": 44715
        },
        {
          "actor_login": "mcanthony",
          "star_count": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.563821054,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 5.657,
      "requestId": "01JTG07C08JPHY65GVNYSCAVXB",
      "length": 460
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.596,
      "totalDuration": 0.854,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 53,
        "totalTokens": 4277
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    actor_login,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "star_count": 232492
            },
            {
              "actor_login": "salifm",
              "star_count": 202534
            },
            {
              "actor_login": "x0rzkov",
              "star_count": 73531
            },
            {
              "actor_login": "fly51fly",
              "star_count": 57756
            },
            {
              "actor_login": "PCOffline",
              "star_count": 56725
            },
            {
              "actor_login": "baslr",
              "star_count": 50363
            },
            {
              "actor_login": "gkze",
              "star_count": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "star_count": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "star_count": 44715
            },
            {
              "actor_login": "mcanthony",
              "star_count": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.563821054,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 5.657,
          "requestId": "01JTG07C08JPHY65GVNYSCAVXB",
          "length": 460
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.596,
          "totalDuration": 0.854,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 53,
            "totalTokens": 4277
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS star_count\nFROM github_events\nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent')\n  AND event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.677030921,
        "rows_read": 232317017,
        "bytes_read": 464619279
      },
      "executionTime": 1.695,
      "requestId": "01JTG07T6RGEJ7ZNGRGG748XSC",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\"\n\nYou generated this SQL query:\n```sql\nI cannot directly determine the number of stars for repositories or identify users who starred a specific repository. However, I can provide a query to find the top 10 repositories that users who interacted with 'freecodecamp/freecodecamp' also interacted with. This query focuses on the 'WatchEvent' (which usually indicates starring a repository) and counts the occurrences of other repositories by users who also watched 'freecodecamp/freecodecamp'.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent')\n  AND event_type = 'WatchEvent'\n  AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.177,
      "totalDuration": 1.559,
      "tokens": {
        "promptTokens": 4494,
        "completionTokens": 92,
        "totalTokens": 4586
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot directly determine the number of stars for repositories or identify users who starred a specific repository. However, I can provide a query to find the top 10 repositories that users who interacted with 'freecodecamp/freecodecamp' also interacted with. This query focuses on the 'WatchEvent' (which usually indicates starring a repository) and counts the occurrences of other repositories by users who also watched 'freecodecamp/freecodecamp'.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent')\n  AND event_type = 'WatchEvent'\n  AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG07P7EWQ1S9FEPTDVCD89C",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot directly determine the number of stars for repositories or identify users who starred a specific repository. However, I can provide a query to find the. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.201,
          "totalDuration": 2.381,
          "tokens": {
            "promptTokens": 4242,
            "completionTokens": 199,
            "totalTokens": 4441
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS star_count\nFROM github_events\nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent')\n  AND event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.677030921,
            "rows_read": 232317017,
            "bytes_read": 464619279
          },
          "executionTime": 1.695,
          "requestId": "01JTG07T6RGEJ7ZNGRGG748XSC",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\"\n\nYou generated this SQL query:\n```sql\nI cannot directly determine the number of stars for repositories or identify users who starred a specific repository. However, I can provide a query to find the top 10 repositories that users who interacted with 'freecodecamp/freecodecamp' also interacted with. This query focuses on the 'WatchEvent' (which usually indicates starring a repository) and counts the occurrences of other repositories by users who also watched 'freecodecamp/freecodecamp'.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent')\n  AND event_type = 'WatchEvent'\n  AND repo_name != 'freecodecamp/freecodecamp'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.177,
          "totalDuration": 1.559,
          "tokens": {
            "promptTokens": 4494,
            "completionTokens": 92,
            "totalTokens": 4586
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    actor_login,\n    count(*) AS stars\nFROM github_events\nWHERE repo_name = 'javisantana/friends' AND event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.007812824,
        "rows_read": 114688,
        "bytes_read": 229376
      },
      "executionTime": 0.025,
      "requestId": "01JTG07ZKS4JJHE0W566MN5DJ6",
      "length": 2
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.001,
      "totalDuration": 1.34,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 61,
        "totalTokens": 4289
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    actor_login,\n    count(*) AS stars\nFROM github_events\nWHERE repo_name = 'javisantana/friends' AND event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.007812824,
            "rows_read": 114688,
            "bytes_read": 229376
          },
          "executionTime": 0.025,
          "requestId": "01JTG07ZKS4JJHE0W566MN5DJ6",
          "length": 2
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.001,
          "totalDuration": 1.34,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 61,
            "totalTokens": 4289
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    ge.repo_name,\n    COUNT(DISTINCT ge.actor_login) AS num_authors\nFROM github_events ge\nWHERE ge.actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' GROUP BY actor_login ORDER BY count(*) DESC LIMIT 10)\nGROUP BY ge.repo_name\nORDER BY num_authors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 7.208374661,
        "rows_read": 3127355383,
        "bytes_read": 6250330477
      },
      "executionTime": 7.255,
      "requestId": "01JTG0837RYA0QS3B9QSFM9PN6",
      "length": 2
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.704,
      "totalDuration": 1.157,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 103,
        "totalTokens": 4334
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    ge.repo_name,\n    COUNT(DISTINCT ge.actor_login) AS num_authors\nFROM github_events ge\nWHERE ge.actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' GROUP BY actor_login ORDER BY count(*) DESC LIMIT 10)\nGROUP BY ge.repo_name\nORDER BY num_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 7.208374661,
            "rows_read": 3127355383,
            "bytes_read": 6250330477
          },
          "executionTime": 7.255,
          "requestId": "01JTG0837RYA0QS3B9QSFM9PN6",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.704,
          "totalDuration": 1.157,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 103,
            "totalTokens": 4334
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    ge2.repo_name,\n    COUNT(DISTINCT ge2.actor_login) AS num_authors\nFROM github_events ge1\nJOIN github_events ge2 ON ge1.actor_login = ge2.actor_login\nWHERE ge1.repo_name = 'freecodecamp/freecodecamp'\n  AND ge1.event_type = 'IssuesEvent'\n  AND ge2.event_type = 'IssuesEvent'\nGROUP BY ge2.repo_name\nORDER BY num_authors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "ge2.repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.832476292,
        "rows_read": 111599101,
        "bytes_read": 556858065
      },
      "executionTime": 8.862,
      "requestId": "01JTG08E06V9AVD5PM16PM77FN",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.644,
      "totalDuration": 1.292,
      "tokens": {
        "promptTokens": 4234,
        "completionTokens": 128,
        "totalTokens": 4362
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    ge2.repo_name,\n    COUNT(DISTINCT ge2.actor_login) AS num_authors\nFROM github_events ge1\nJOIN github_events ge2 ON ge1.actor_login = ge2.actor_login\nWHERE ge1.repo_name = 'freecodecamp/freecodecamp'\n  AND ge1.event_type = 'IssuesEvent'\n  AND ge2.event_type = 'IssuesEvent'\nGROUP BY ge2.repo_name\nORDER BY num_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "ge2.repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.832476292,
            "rows_read": 111599101,
            "bytes_read": 556858065
          },
          "executionTime": 8.862,
          "requestId": "01JTG08E06V9AVD5PM16PM77FN",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.644,
          "totalDuration": 1.292,
          "tokens": {
            "promptTokens": 4234,
            "completionTokens": 128,
            "totalTokens": 4362
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n    repo_name, \n    count() AS stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nAND created_at >= now() - interval 1 day\nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.002989915,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.02,
      "requestId": "01JTG08T2QHY4D4BP011ZQHGZV",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.624,
      "totalDuration": 1.006,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 69,
        "totalTokens": 4296
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n    repo_name, \n    count() AS stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nAND created_at >= now() - interval 1 day\nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.002989915,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.02,
          "requestId": "01JTG08T2QHY4D4BP011ZQHGZV",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.624,
          "totalDuration": 1.006,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 69,
            "totalTokens": 4296
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    (countIf(created_at >= toDateTime('2020-01-01') AND created_at < toDateTime('2021-01-01')) - countIf(created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2020-01-01'))) AS growth\nFROM github_events\nWHERE created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2021-01-01')\nGROUP BY repo_name\nORDER BY growth DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "growth": 3097267
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "growth": 1688192
        },
        {
          "repo_name": "otiny/up",
          "growth": 982758
        },
        {
          "repo_name": "regro/releases",
          "growth": 943517
        },
        {
          "repo_name": "breakingheatmap/breakingheatmap",
          "growth": 878499
        },
        {
          "repo_name": "CLSPhila/DocketScraperAPI",
          "growth": 878005
        },
        {
          "repo_name": "Lombiq/Orchard",
          "growth": 738574
        },
        {
          "repo_name": "infaautovcs/DependencyUIAuto",
          "growth": 704468
        },
        {
          "repo_name": "wix-incubator/wix-rest-docs",
          "growth": 652535
        },
        {
          "repo_name": "Lombiq/Orchard.AngularJS",
          "growth": 576665
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "growth",
          "type": "Int64"
        }
      ],
      "statistics": {
        "elapsed": 22.717618767,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 22.801,
      "requestId": "01JTG08YFJFHVYTQ25MRRR1Q73",
      "length": 553
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.116,
      "totalDuration": 1.922,
      "tokens": {
        "promptTokens": 4237,
        "completionTokens": 158,
        "totalTokens": 4395
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    (countIf(created_at >= toDateTime('2020-01-01') AND created_at < toDateTime('2021-01-01')) - countIf(created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2020-01-01'))) AS growth\nFROM github_events\nWHERE created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2021-01-01')\nGROUP BY repo_name\nORDER BY growth DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "growth": 3097267
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "growth": 1688192
            },
            {
              "repo_name": "otiny/up",
              "growth": 982758
            },
            {
              "repo_name": "regro/releases",
              "growth": 943517
            },
            {
              "repo_name": "breakingheatmap/breakingheatmap",
              "growth": 878499
            },
            {
              "repo_name": "CLSPhila/DocketScraperAPI",
              "growth": 878005
            },
            {
              "repo_name": "Lombiq/Orchard",
              "growth": 738574
            },
            {
              "repo_name": "infaautovcs/DependencyUIAuto",
              "growth": 704468
            },
            {
              "repo_name": "wix-incubator/wix-rest-docs",
              "growth": 652535
            },
            {
              "repo_name": "Lombiq/Orchard.AngularJS",
              "growth": 576665
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "growth",
              "type": "Int64"
            }
          ],
          "statistics": {
            "elapsed": 22.717618767,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 22.801,
          "requestId": "01JTG08YFJFHVYTQ25MRRR1Q73",
          "length": 553
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.116,
          "totalDuration": 1.922,
          "tokens": {
            "promptTokens": 4237,
            "completionTokens": 158,
            "totalTokens": 4395
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    (countIf(created_at >= toDateTime('2020-01-01') AND created_at < toDateTime('2021-01-01')) - countIf(created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2020-01-01'))) AS difference\nFROM github_events\nWHERE created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2021-01-01')\nGROUP BY repo_name\nORDER BY difference ASC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "difference": -1619655
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "difference": -1437711
        },
        {
          "repo_name": "willcbaker-ext/subt",
          "difference": -869959
        },
        {
          "repo_name": "bossm/chancechat",
          "difference": -781822
        },
        {
          "repo_name": "dotclear/dotclear",
          "difference": -505464
        },
        {
          "repo_name": "btopt5/idepairline",
          "difference": -504335
        },
        {
          "repo_name": "geos4s/18w856162",
          "difference": -471939
        },
        {
          "repo_name": "996icu/996.ICU",
          "difference": -418755
        },
        {
          "repo_name": "SophieDeBenedetto/learn-co-sandbox",
          "difference": -417057
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "difference": -407449
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "difference",
          "type": "Int64"
        }
      ],
      "statistics": {
        "elapsed": 22.513176082,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 22.56,
      "requestId": "01JTG09RNRY25QW4HRJ9YRAC04",
      "length": 583
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.734,
      "totalDuration": 1.553,
      "tokens": {
        "promptTokens": 4236,
        "completionTokens": 159,
        "totalTokens": 4395
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    (countIf(created_at >= toDateTime('2020-01-01') AND created_at < toDateTime('2021-01-01')) - countIf(created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2020-01-01'))) AS difference\nFROM github_events\nWHERE created_at >= toDateTime('2019-01-01') AND created_at < toDateTime('2021-01-01')\nGROUP BY repo_name\nORDER BY difference ASC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "difference": -1619655
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "difference": -1437711
            },
            {
              "repo_name": "willcbaker-ext/subt",
              "difference": -869959
            },
            {
              "repo_name": "bossm/chancechat",
              "difference": -781822
            },
            {
              "repo_name": "dotclear/dotclear",
              "difference": -505464
            },
            {
              "repo_name": "btopt5/idepairline",
              "difference": -504335
            },
            {
              "repo_name": "geos4s/18w856162",
              "difference": -471939
            },
            {
              "repo_name": "996icu/996.ICU",
              "difference": -418755
            },
            {
              "repo_name": "SophieDeBenedetto/learn-co-sandbox",
              "difference": -417057
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "difference": -407449
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "difference",
              "type": "Int64"
            }
          ],
          "statistics": {
            "elapsed": 22.513176082,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 22.56,
          "requestId": "01JTG09RNRY25QW4HRJ9YRAC04",
          "length": 583
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.734,
          "totalDuration": 1.553,
          "tokens": {
            "promptTokens": 4236,
            "completionTokens": 159,
            "totalTokens": 4395
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "event_count": 7451541
        },
        {
          "repo_name": "direwolf-github/my-app",
          "event_count": 3955891
        },
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "event_count": 3097267
        },
        {
          "repo_name": "Lombiq/Orchard",
          "event_count": 2471262
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 2191295
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "event_count": 2018701
        },
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "event_count": 1891264
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "event_count": 1789118
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "event_count": 1688192
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "event_count": 1667750
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 45.489162535,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 45.508,
      "requestId": "01JTG0AJJBSR5NWC0T21VKXEV0",
      "length": 611
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.121,
      "totalDuration": 1.479,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 43,
        "totalTokens": 4270
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "event_count": 7451541
            },
            {
              "repo_name": "direwolf-github/my-app",
              "event_count": 3955891
            },
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "event_count": 3097267
            },
            {
              "repo_name": "Lombiq/Orchard",
              "event_count": 2471262
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 2191295
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "event_count": 2018701
            },
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "event_count": 1891264
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "event_count": 1789118
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "event_count": 1688192
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "event_count": 1667750
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 45.489162535,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 45.508,
          "requestId": "01JTG0AJJBSR5NWC0T21VKXEV0",
          "length": 611
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.121,
          "totalDuration": 1.479,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 43,
            "totalTokens": 4270
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "I cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibility, and I cannot generate such information.\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.013,
      "requestId": "01JTG0C9XFEYNSGBZQ7TRFJXJB",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibil. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
      "length": 2
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\nI cannot provide an answer to your question with the available tools. I don't have access to a calendar or any information about astronomical events.\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nI cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibility.\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.09,
      "totalDuration": 1.251,
      "tokens": {
        "promptTokens": 4399,
        "completionTokens": 35,
        "totalTokens": 4434
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot provide an answer to your question with the available tools. I don't have access to a calendar or any information about astronomical events.\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0C2H23XHZQ72V5M5JEW96",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 76 (''t have access to a calendar or any information about astronomical events.\\n FORMAT JSON') (line 1, col 76): 't have access to a calendar or any information about astronomical events.\\n FORMAT JSON. Single quoted string is not closed: ''t have access to a calendar or any information about astronomical events.\\n FORMAT JSON'\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.66,
          "totalDuration": 1.101,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 30,
            "totalTokens": 4257
          }
        },
        "error": null
      },
      {
        "sql": "I cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibility.\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0C67SBFZSQ8PE2HY5TKF5",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibil. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\nI cannot provide an answer to your question with the available tools. I don't have access to a calendar or any information about astronomical events.\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.081,
          "totalDuration": 1.282,
          "tokens": {
            "promptTokens": 4314,
            "completionTokens": 28,
            "totalTokens": 4342
          }
        },
        "error": null
      },
      {
        "sql": "I cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibility, and I cannot generate such information.\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG0C9XFEYNSGBZQ7TRFJXJB",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibil. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\nI cannot provide an answer to your question with the available tools. I don't have access to a calendar or any information about astronomical events.\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nI cannot provide an answer to your question with the available tools. The database schema does not contain information about astronomical events or star visibility.\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.09,
          "totalDuration": 1.251,
          "tokens": {
            "promptTokens": 4399,
            "completionTokens": 35,
            "totalTokens": 4434
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 34099240
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.850005915,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.894,
      "requestId": "01JTG0CDPY12YPTYVN0B13VBZ7",
      "length": 26
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.174,
      "totalDuration": 1.347,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 21,
        "totalTokens": 4242
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 34099240
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.850005915,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.894,
          "requestId": "01JTG0CDPY12YPTYVN0B13VBZ7",
          "length": 26
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.174,
          "totalDuration": 1.347,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 21,
            "totalTokens": 4242
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 10131322
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.866037104,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 4.884,
      "requestId": "01JTG0D3V22VZ5XQCPTBYRN86H",
      "length": 41
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.143,
      "totalDuration": 1.287,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 26,
        "totalTokens": 4250
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 10131322
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.866037104,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 4.884,
          "requestId": "01JTG0D3V22VZ5XQCPTBYRN86H",
          "length": 41
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.143,
          "totalDuration": 1.287,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 26,
            "totalTokens": 4250
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_push": 18808891
        }
      ],
      "meta": [
        {
          "name": "total_users_with_push",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.642038463,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.659,
      "requestId": "01JTG0DBWTNM84AWN0Y8VXGQQC",
      "length": 36
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.53,
      "totalDuration": 0.863,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 42,
        "totalTokens": 4265
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_push": 18808891
            }
          ],
          "meta": [
            {
              "name": "total_users_with_push",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.642038463,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.659,
          "requestId": "01JTG0DBWTNM84AWN0Y8VXGQQC",
          "length": 36
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.53,
          "totalDuration": 0.863,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 42,
            "totalTokens": 4265
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 6418718
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.218797611,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.237,
      "requestId": "01JTG0DMHJAK6ESB8VXHNP3TG7",
      "length": 40
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.49,
      "totalDuration": 1.695,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 38,
        "totalTokens": 4262
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 6418718
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.218797611,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.237,
          "requestId": "01JTG0DMHJAK6ESB8VXHNP3TG7",
          "length": 40
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.49,
          "totalDuration": 1.695,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 38,
            "totalTokens": 4262
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY actor_login) GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars": 127332
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars": 116642
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 115419
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 110521
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 106673
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 101015
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 97585
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 91891
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 84730
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars": 82794
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.563107998,
        "rows_read": 446952570,
        "bytes_read": 1804735431
      },
      "executionTime": 6.611,
      "requestId": "01JTG0DS69P4X4ZCZ4E1KPT8SS",
      "length": 523
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.551,
      "totalDuration": 0.991,
      "tokens": {
        "promptTokens": 4241,
        "completionTokens": 70,
        "totalTokens": 4311
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY actor_login) GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars": 127332
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars": 116642
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 115419
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 110521
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 106673
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 101015
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 97585
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 91891
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 84730
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars": 82794
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 6.563107998,
            "rows_read": 446952570,
            "bytes_read": 1804735431
          },
          "executionTime": 6.611,
          "requestId": "01JTG0DS69P4X4ZCZ4E1KPT8SS",
          "length": 523
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.551,
          "totalDuration": 0.991,
          "tokens": {
            "promptTokens": 4241,
            "completionTokens": 70,
            "totalTokens": 4311
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    actor_login,\n    count(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY actor_login\nHAVING count(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 642504
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "pr_count": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.187659129,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.207,
      "requestId": "01JTG0E3S22B59YEX4NC8DFZ9Z",
      "length": 519
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.445,
      "totalDuration": 1.755,
      "tokens": {
        "promptTokens": 4230,
        "completionTokens": 63,
        "totalTokens": 4293
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    actor_login,\n    count(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY actor_login\nHAVING count(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 642504
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "pr_count": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.187659129,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.207,
          "requestId": "01JTG0E3S22B59YEX4NC8DFZ9Z",
          "length": 519
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.445,
          "totalDuration": 1.755,
          "tokens": {
            "promptTokens": 4230,
            "completionTokens": 63,
            "totalTokens": 4293
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n    repo_name,\n    count() AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_request_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_request_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_request_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_request_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_request_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_request_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_request_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_request_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_request_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_request_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_request_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.712265196,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.732,
      "requestId": "01JTG0E8CDY05KFAX6QR3EHXDK",
      "length": 706
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.67,
      "totalDuration": 1.006,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 59,
        "totalTokens": 4286
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n    repo_name,\n    count() AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_request_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_request_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_request_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_request_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_request_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_request_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_request_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_request_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_request_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_request_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_request_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.712265196,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.732,
          "requestId": "01JTG0E8CDY05KFAX6QR3EHXDK",
          "length": 706
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.67,
          "totalDuration": 1.006,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 59,
            "totalTokens": 4286
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY num_contributors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "num_contributors": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "num_contributors": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "num_contributors": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "num_contributors": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "num_contributors": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "num_contributors": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "num_contributors": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "num_contributors": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "num_contributors": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "num_contributors": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.295694075,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 3.349,
      "requestId": "01JTG0EDW125YZDVZP230EWZT1",
      "length": 700
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.999,
      "totalDuration": 1.358,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 61,
        "totalTokens": 4289
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY num_contributors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "num_contributors": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "num_contributors": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "num_contributors": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "num_contributors": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "num_contributors": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "num_contributors": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "num_contributors": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "num_contributors": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "num_contributors": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "num_contributors": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.295694075,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 3.349,
          "requestId": "01JTG0EDW125YZDVZP230EWZT1",
          "length": 700
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.999,
          "totalDuration": 1.358,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 61,
            "totalTokens": 4289
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.484873489,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.502,
      "requestId": "01JTG0EMJXWHE7KKY36K22D533",
      "length": 573
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.719,
      "totalDuration": 1.052,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 53,
        "totalTokens": 4279
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.484873489,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.502,
          "requestId": "01JTG0EMJXWHE7KKY36K22D533",
          "length": 573
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.719,
          "totalDuration": 1.052,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 53,
            "totalTokens": 4279
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND actor_login != 'dependabot[bot]'\n  AND actor_login != 'renovate[bot]'\nGROUP BY repo_name\nHAVING sum(if(event_type = 'IssuesEvent', 1, 0)) > 1000\nORDER BY issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.688740058,
        "rows_read": 111439849,
        "bytes_read": 556668920
      },
      "executionTime": 0.706,
      "requestId": "01JTG0ERQ429DEQAMHZ28Z95QV",
      "length": 573
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.556,
      "totalDuration": 1.226,
      "tokens": {
        "promptTokens": 4244,
        "completionTokens": 106,
        "totalTokens": 4350
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND actor_login != 'dependabot[bot]'\n  AND actor_login != 'renovate[bot]'\nGROUP BY repo_name\nHAVING sum(if(event_type = 'IssuesEvent', 1, 0)) > 1000\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.688740058,
            "rows_read": 111439849,
            "bytes_read": 556668920
          },
          "executionTime": 0.706,
          "requestId": "01JTG0ERQ429DEQAMHZ28Z95QV",
          "length": 573
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.556,
          "totalDuration": 1.226,
          "tokens": {
            "promptTokens": 4244,
            "completionTokens": 106,
            "totalTokens": 4350
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action IN ('opened', 'closed')\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name HAVING COUNT() > 1000)\nGROUP BY repo_name\nORDER BY num_issue_authors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "num_issue_authors": 27148
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "num_issue_authors": 21207
        },
        {
          "repo_name": "microsoft/vscode",
          "num_issue_authors": 19560
        },
        {
          "repo_name": "flutter/flutter",
          "num_issue_authors": 16771
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_issue_authors": 16684
        },
        {
          "repo_name": "ansible/ansible",
          "num_issue_authors": 13096
        },
        {
          "repo_name": "996icu/996.ICU",
          "num_issue_authors": 12826
        },
        {
          "repo_name": "FortAwesome/Font-Awesome",
          "num_issue_authors": 12784
        },
        {
          "repo_name": "facebook/react-native",
          "num_issue_authors": 11947
        },
        {
          "repo_name": "npm/npm",
          "num_issue_authors": 11468
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_issue_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 54.203417514,
        "rows_read": 3235880755,
        "bytes_read": 6898739723
      },
      "executionTime": 54.246,
      "requestId": "01JTG0EWYPBJ7CT4R10VVDMMTE",
      "length": 604
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.532,
      "totalDuration": 1.109,
      "tokens": {
        "promptTokens": 4251,
        "completionTokens": 106,
        "totalTokens": 4357
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action IN ('opened', 'closed')\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name HAVING COUNT() > 1000)\nGROUP BY repo_name\nORDER BY num_issue_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Microsoft/vscode",
              "num_issue_authors": 27148
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "num_issue_authors": 21207
            },
            {
              "repo_name": "microsoft/vscode",
              "num_issue_authors": 19560
            },
            {
              "repo_name": "flutter/flutter",
              "num_issue_authors": 16771
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_issue_authors": 16684
            },
            {
              "repo_name": "ansible/ansible",
              "num_issue_authors": 13096
            },
            {
              "repo_name": "996icu/996.ICU",
              "num_issue_authors": 12826
            },
            {
              "repo_name": "FortAwesome/Font-Awesome",
              "num_issue_authors": 12784
            },
            {
              "repo_name": "facebook/react-native",
              "num_issue_authors": 11947
            },
            {
              "repo_name": "npm/npm",
              "num_issue_authors": 11468
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_issue_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 54.203417514,
            "rows_read": 3235880755,
            "bytes_read": 6898739723
          },
          "executionTime": 54.246,
          "requestId": "01JTG0EWYPBJ7CT4R10VVDMMTE",
          "length": 604
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.532,
          "totalDuration": 1.109,
          "tokens": {
            "promptTokens": 4251,
            "completionTokens": 106,
            "totalTokens": 4357
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "pusher_count": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "pusher_count": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "pusher_count": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "pusher_count": 826
        },
        {
          "repo_name": "lifo/docrails",
          "pusher_count": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "pusher_count": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "pusher_count": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "pusher_count": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "pusher_count": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "pusher_count": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pusher_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 41.619506854,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 41.668,
      "requestId": "01JTG0GNWKGH52Z2MXFVWE5QVF",
      "length": 612
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.209,
      "totalDuration": 1.548,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 60,
        "totalTokens": 4288
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "pusher_count": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "pusher_count": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "pusher_count": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "pusher_count": 826
            },
            {
              "repo_name": "lifo/docrails",
              "pusher_count": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "pusher_count": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "pusher_count": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "pusher_count": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "pusher_count": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "pusher_count": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pusher_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 41.619506854,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 41.668,
          "requestId": "01JTG0GNWKGH52Z2MXFVWE5QVF",
          "length": 612
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.209,
          "totalDuration": 1.548,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 60,
            "totalTokens": 4288
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
          "pusher_count": 218
        },
        {
          "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
          "pusher_count": 127
        },
        {
          "repo_name": "ministryofjustice/cloud-platform-environments",
          "pusher_count": 68
        },
        {
          "repo_name": "sourcegraph/about",
          "pusher_count": 64
        },
        {
          "repo_name": "apple/swift",
          "pusher_count": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "pusher_count": 52
        },
        {
          "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
          "pusher_count": 51
        },
        {
          "repo_name": "SPM587FA20/SCM587FA20",
          "pusher_count": 43
        },
        {
          "repo_name": "mks65/05_pointers",
          "pusher_count": 38
        },
        {
          "repo_name": "mks65/09_construction",
          "pusher_count": 38
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pusher_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.782095409,
        "rows_read": 1601472977,
        "bytes_read": 49175592159
      },
      "executionTime": 6.866,
      "requestId": "01JTG0J2M4DA2XQM6JSSC71C2J",
      "length": 622
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.168,
      "totalDuration": 1.604,
      "tokens": {
        "promptTokens": 4232,
        "completionTokens": 72,
        "totalTokens": 4304
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
              "pusher_count": 218
            },
            {
              "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
              "pusher_count": 127
            },
            {
              "repo_name": "ministryofjustice/cloud-platform-environments",
              "pusher_count": 68
            },
            {
              "repo_name": "sourcegraph/about",
              "pusher_count": 64
            },
            {
              "repo_name": "apple/swift",
              "pusher_count": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "pusher_count": 52
            },
            {
              "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
              "pusher_count": 51
            },
            {
              "repo_name": "SPM587FA20/SCM587FA20",
              "pusher_count": 43
            },
            {
              "repo_name": "mks65/05_pointers",
              "pusher_count": 38
            },
            {
              "repo_name": "mks65/09_construction",
              "pusher_count": 38
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pusher_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 6.782095409,
            "rows_read": 1601472977,
            "bytes_read": 49175592159
          },
          "executionTime": 6.866,
          "requestId": "01JTG0J2M4DA2XQM6JSSC71C2J",
          "length": 622
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.168,
          "totalDuration": 1.604,
          "tokens": {
            "promptTokens": 4232,
            "completionTokens": 72,
            "totalTokens": 4304
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "I am unable to access the number of stars for each repository. Therefore, I cannot filter the repositories based on the number of stars. The following query identifies the top 10 repositories with the most distinct users who have pushed to the `main` branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG0JNH3MXSK5GDKAZDEDJ8H",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to access the number of stars for each repository. Therefore, I cannot filter the repositories based on the number of stars. The following query ide. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\nI cannot fulfill this request because I do not have access to the number of stars for each repository. However, I can provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nI cannot fulfill this request because I do not have access to the number of stars for each repository. I can only provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.055,
      "totalDuration": 1.736,
      "tokens": {
        "promptTokens": 4580,
        "completionTokens": 118,
        "totalTokens": 4698
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot fulfill this request because I do not have access to the number of stars for each repository. However, I can provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0JD0TR7D6GWR2J738ATQE",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot fulfill this request because I do not have access to the number of stars for each repository. However, I can provide a query to find the top 10 reposit. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.684,
          "totalDuration": 1.339,
          "tokens": {
            "promptTokens": 4246,
            "completionTokens": 114,
            "totalTokens": 4360
          }
        },
        "error": null
      },
      {
        "sql": "I cannot fulfill this request because I do not have access to the number of stars for each repository. I can only provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0JHC8NP5SDZ1GMYSF71KB",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot fulfill this request because I do not have access to the number of stars for each repository. I can only provide a query to find the top 10 repositorie. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\nI cannot fulfill this request because I do not have access to the number of stars for each repository. However, I can provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.381,
          "totalDuration": 1.948,
          "tokens": {
            "promptTokens": 4414,
            "completionTokens": 113,
            "totalTokens": 4527
          }
        },
        "error": null
      },
      {
        "sql": "I am unable to access the number of stars for each repository. Therefore, I cannot filter the repositories based on the number of stars. The following query identifies the top 10 repositories with the most distinct users who have pushed to the `main` branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG0JNH3MXSK5GDKAZDEDJ8H",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to access the number of stars for each repository. Therefore, I cannot filter the repositories based on the number of stars. The following query ide. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\nI cannot fulfill this request because I do not have access to the number of stars for each repository. However, I can provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nI cannot fulfill this request because I do not have access to the number of stars for each repository. I can only provide a query to find the top 10 repositories with the most people who have push access to the main branch.\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.055,
          "totalDuration": 1.736,
          "tokens": {
            "promptTokens": 4580,
            "completionTokens": 118,
            "totalTokens": 4698
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS accepted_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "accepted_invitations": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "accepted_invitations": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "accepted_invitations": 3161
        },
        {
          "repo_name": "/",
          "accepted_invitations": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "accepted_invitations": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "accepted_invitations": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "accepted_invitations": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "accepted_invitations": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "accepted_invitations": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "accepted_invitations": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "accepted_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.44584719,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.465,
      "requestId": "01JTG0JRT4KP50XWMT1MSR4NR2",
      "length": 752
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.555,
      "totalDuration": 0.844,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 61,
        "totalTokens": 4288
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS accepted_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY accepted_invitations DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "accepted_invitations": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "accepted_invitations": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "accepted_invitations": 3161
            },
            {
              "repo_name": "/",
              "accepted_invitations": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "accepted_invitations": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "accepted_invitations": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "accepted_invitations": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "accepted_invitations": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "accepted_invitations": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "accepted_invitations": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "accepted_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.44584719,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.465,
          "requestId": "01JTG0JRT4KP50XWMT1MSR4NR2",
          "length": 752
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.555,
          "totalDuration": 0.844,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 61,
            "totalTokens": 4288
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.860495577,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.88,
      "requestId": "01JTG0JX13EF0D16K6V29WGFXH",
      "length": 542
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.13,
      "totalDuration": 1.354,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 35,
        "totalTokens": 4256
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.860495577,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.88,
          "requestId": "01JTG0JX13EF0D16K6V29WGFXH",
          "length": 542
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.13,
          "totalDuration": 1.354,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 35,
            "totalTokens": 4256
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.014,
      "requestId": "01JTG0K9CK38ZP7VCAB0T020QD",
      "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 reposistories by ratio between stars and forks\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n    repo_name,\n    COUNTIF(event_type = 'WatchEvent') AS stars,\n    COUNTIF(event_type = 'ForkEvent') AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.07,
      "totalDuration": 1.652,
      "tokens": {
        "promptTokens": 4517,
        "completionTokens": 119,
        "totalTokens": 4636
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n    repo_name,\n    COUNTIF(event_type = 'WatchEvent') AS stars,\n    COUNTIF(event_type = 'ForkEvent') AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0K1A2GTY2YSVMGC4KGFHA",
          "error": "{\"error\": \"DB::Exception: Unknown function COUNTIF. Maybe you meant: ['count']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.575,
          "totalDuration": 1,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 85,
            "totalTokens": 4312
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.016,
          "requestId": "01JTG0K5A85VC9QAXG6TKRVC6G",
          "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 reposistories by ratio between stars and forks\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n    repo_name,\n    COUNTIF(event_type = 'WatchEvent') AS stars,\n    COUNTIF(event_type = 'ForkEvent') AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.148,
          "totalDuration": 1.587,
          "tokens": {
            "promptTokens": 4366,
            "completionTokens": 98,
            "totalTokens": 4464
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0K9CK38ZP7VCAB0T020QD",
          "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 reposistories by ratio between stars and forks\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n    repo_name,\n    COUNTIF(event_type = 'WatchEvent') AS stars,\n    COUNTIF(event_type = 'ForkEvent') AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.07,
          "totalDuration": 1.652,
          "tokens": {
            "promptTokens": 4517,
            "completionTokens": 119,
            "totalTokens": 4636
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n    repo_name,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS fork_count,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS star_count\nFROM github_events\nGROUP BY repo_name\nORDER BY fork_count DESC, star_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926,
          "star_count": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031,
          "star_count": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794,
          "star_count": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226,
          "star_count": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878,
          "star_count": 126371
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075,
          "star_count": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551,
          "star_count": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601,
          "star_count": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182,
          "star_count": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420,
          "star_count": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 53.542547424,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 53.59,
      "requestId": "01JTG0KCY26P81ZDARRPRY1DGX",
      "length": 776
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.542,
      "totalDuration": 1.089,
      "tokens": {
        "promptTokens": 4233,
        "completionTokens": 95,
        "totalTokens": 4328
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n    repo_name,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS fork_count,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS star_count\nFROM github_events\nGROUP BY repo_name\nORDER BY fork_count DESC, star_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926,
              "star_count": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031,
              "star_count": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794,
              "star_count": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226,
              "star_count": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878,
              "star_count": 126371
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075,
              "star_count": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551,
              "star_count": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601,
              "star_count": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182,
              "star_count": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420,
              "star_count": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 53.542547424,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 53.59,
          "requestId": "01JTG0KCY26P81ZDARRPRY1DGX",
          "length": 776
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.542,
          "totalDuration": 1.089,
          "tokens": {
            "promptTokens": 4233,
            "completionTokens": 95,
            "totalTokens": 4328
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, countIf(event_type = 'ForkEvent') AS forks, countIf(event_type = 'WatchEvent') AS stars FROM github_events GROUP BY repo_name ORDER BY forks DESC, stars ASC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 51.508926791,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 51.528,
      "requestId": "01JTG0N4QKPVJ5YA68WQPWMVKX",
      "length": 676
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.734,
      "totalDuration": 1.071,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 52,
        "totalTokens": 4279
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, countIf(event_type = 'ForkEvent') AS forks, countIf(event_type = 'WatchEvent') AS stars FROM github_events GROUP BY repo_name ORDER BY forks DESC, stars ASC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 51.508926791,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 51.528,
          "requestId": "01JTG0N4QKPVJ5YA68WQPWMVKX",
          "length": 676
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.734,
          "totalDuration": 1.071,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 52,
            "totalTokens": 4279
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nI am unable to provide a query that calculates the proportion between stars and forks because the `github_events` table does not contain information about stars. The table only contains information about events like ForkEvent and PushEvent.\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.013,
      "requestId": "01JTG0Q1Z3W350WNKYZGFC5HKS",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to provide a query that calculates the proportion between stars and forks because the `github_events` table does not contain information about stars. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
      "length": 2
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"overall proportion between stars and forks\"\n\nYou generated this SQL query:\n```sql\nI cannot directly calculate the proportion between stars and forks because the table `github_events` does not contain star information. However, I can provide a query to count the number of ForkEvents.\n\n\nSELECT count() AS fork_count FROM github_events WHERE event_type = 'ForkEvent' LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe previous response was not helpful because the table `github_events` does not contain star information.\nI need to find a way to calculate the proportion between stars and forks, but I don't have enough information to do so.\nI will return a query that counts the number of fork events and push events.\n\n\nSELECT event_type, count() AS event_count FROM github_events WHERE event_type IN ('ForkEvent', 'PushEvent') GROUP BY event_type LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.533,
      "totalDuration": 0.816,
      "tokens": {
        "promptTokens": 4504,
        "completionTokens": 49,
        "totalTokens": 4553
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot directly calculate the proportion between stars and forks because the table `github_events` does not contain star information. However, I can provide a query to count the number of ForkEvents.\n\n\nSELECT count() AS fork_count FROM github_events WHERE event_type = 'ForkEvent' LIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0PV3GBKG27263E6WMYX4N",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot directly calculate the proportion between stars and forks because the table `github_events` does not contain star information. However, I can provide a. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.191,
          "totalDuration": 1.647,
          "tokens": {
            "promptTokens": 4220,
            "completionTokens": 69,
            "totalTokens": 4289
          }
        },
        "error": null
      },
      {
        "sql": "The previous response was not helpful because the table `github_events` does not contain star information.\nI need to find a way to calculate the proportion between stars and forks, but I don't have enough information to do so.\nI will return a query that counts the number of fork events and push events.\n\n\nSELECT event_type, count() AS event_count FROM github_events WHERE event_type IN ('ForkEvent', 'PushEvent') GROUP BY event_type LIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG0PYPZ0694P4VDK66M53RC",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 412 ('') GROUP BY event_type LIMIT 10\\n FORMAT JSON') (line 6, col 106): ') GROUP BY event_type LIMIT 10\\n FORMAT JSON. Single quoted string is not closed: '') GROUP BY event_type LIMIT 10\\n FORMAT JSON'\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "I previously asked: \"overall proportion between stars and forks\"\n\nYou generated this SQL query:\n```sql\nI cannot directly calculate the proportion between stars and forks because the table `github_events` does not contain star information. However, I can provide a query to count the number of ForkEvents.\n\n\nSELECT count() AS fork_count FROM github_events WHERE event_type = 'ForkEvent' LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.565,
          "totalDuration": 1.179,
          "tokens": {
            "promptTokens": 4343,
            "completionTokens": 108,
            "totalTokens": 4451
          }
        },
        "error": null
      },
      {
        "sql": "\nI am unable to provide a query that calculates the proportion between stars and forks because the `github_events` table does not contain information about stars. The table only contains information about events like ForkEvent and PushEvent.\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG0Q1Z3W350WNKYZGFC5HKS",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to provide a query that calculates the proportion between stars and forks because the `github_events` table does not contain information about stars. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"overall proportion between stars and forks\"\n\nYou generated this SQL query:\n```sql\nI cannot directly calculate the proportion between stars and forks because the table `github_events` does not contain star information. However, I can provide a query to count the number of ForkEvents.\n\n\nSELECT count() AS fork_count FROM github_events WHERE event_type = 'ForkEvent' LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe previous response was not helpful because the table `github_events` does not contain star information.\nI need to find a way to calculate the proportion between stars and forks, but I don't have enough information to do so.\nI will return a query that counts the number of fork events and push events.\n\n\nSELECT event_type, count() AS event_count FROM github_events WHERE event_type IN ('ForkEvent', 'PushEvent') GROUP BY event_type LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.533,
          "totalDuration": 0.816,
          "tokens": {
            "promptTokens": 4504,
            "completionTokens": 49,
            "totalTokens": 4553
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT count() AS total_issues FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_issues": 111265504
        }
      ],
      "meta": [
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005536741,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.024,
      "requestId": "01JTG0Q5Q5RS45MXNPY55WA618",
      "length": 28
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.113,
      "totalDuration": 1.327,
      "tokens": {
        "promptTokens": 4220,
        "completionTokens": 30,
        "totalTokens": 4250
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT count() AS total_issues FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_issues": 111265504
            }
          ],
          "meta": [
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005536741,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.024,
          "requestId": "01JTG0Q5Q5RS45MXNPY55WA618",
          "length": 28
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.113,
          "totalDuration": 1.327,
          "tokens": {
            "promptTokens": 4220,
            "completionTokens": 30,
            "totalTokens": 4250
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comment_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comment_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comment_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comment_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comment_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comment_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comment_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comment_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comment_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comment_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.551455319,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.571,
      "requestId": "01JTG0Q9JASZJTKYV13E20PRDX",
      "length": 639
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.028,
      "totalDuration": 1.415,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 58,
        "totalTokens": 4281
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comment_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comment_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comment_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comment_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comment_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comment_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comment_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comment_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comment_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comment_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.551455319,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.571,
          "requestId": "01JTG0Q9JASZJTKYV13E20PRDX",
          "length": 639
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.028,
          "totalDuration": 1.415,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 58,
            "totalTokens": 4281
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issue_count > 0\nORDER BY ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.014,
      "requestId": "01JTG0QP8RQE22ZC5PEZ5H18CB",
      "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 repositories by ratio between issue comments and issues\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nWHERE issue_count > 0\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.075,
      "totalDuration": 1.586,
      "tokens": {
        "promptTokens": 4555,
        "completionTokens": 116,
        "totalTokens": 4671
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0QE493ETQXP5YDDJ1JJNK",
          "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.011,
          "totalDuration": 1.599,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 107,
            "totalTokens": 4333
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nWHERE issue_count > 0\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0QJ8MPABHA68RE2NH71K2",
          "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 repositories by ratio between issue comments and issues\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.203,
          "totalDuration": 1.72,
          "tokens": {
            "promptTokens": 4387,
            "completionTokens": 115,
            "totalTokens": 4502
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issue_count > 0\nORDER BY ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0QP8RQE22ZC5PEZ5H18CB",
          "error": "{\"error\": \"DB::Exception: Unknown function safeDivide. Maybe you meant: ['tupleDivide']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 repositories by ratio between issue comments and issues\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nWHERE issue_count > 0\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.075,
          "totalDuration": 1.586,
          "tokens": {
            "promptTokens": 4555,
            "completionTokens": 116,
            "totalTokens": 4671
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.453288986,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.472,
      "requestId": "01JTG0QT39C2HS9974SYVAS42Q",
      "length": 573
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.084,
      "totalDuration": 1.404,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 53,
        "totalTokens": 4278
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.453288986,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.472,
          "requestId": "01JTG0QT39C2HS9974SYVAS42Q",
          "length": 573
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.084,
          "totalDuration": 1.404,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 53,
            "totalTokens": 4278
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_issues\nFROM github_events\nWHERE title LIKE '%epic bugs%'\nGROUP BY repo_name\nORDER BY total_issues DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.431326747,
        "rows_read": 3124889133,
        "bytes_read": 53158262214
      },
      "executionTime": 3.479,
      "requestId": "01JTG0QYD1X2WZW9GRVWNNB89M",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.085,
      "totalDuration": 1.405,
      "tokens": {
        "promptTokens": 4230,
        "completionTokens": 51,
        "totalTokens": 4281
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_issues\nFROM github_events\nWHERE title LIKE '%epic bugs%'\nGROUP BY repo_name\nORDER BY total_issues DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.431326747,
            "rows_read": 3124889133,
            "bytes_read": 53158262214
          },
          "executionTime": 3.479,
          "requestId": "01JTG0QYD1X2WZW9GRVWNNB89M",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.085,
          "totalDuration": 1.405,
          "tokens": {
            "promptTokens": 4230,
            "completionTokens": 51,
            "totalTokens": 4281
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_comment_authors\nFROM github_events\nWHERE body LIKE '%epic bugs%'\n  AND event_type = 'IssueCommentEvent'\n  AND number > 100\nGROUP BY repo_name\nORDER BY num_comment_authors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Tribler/tribler",
          "num_comment_authors": 1
        },
        {
          "repo_name": "ipfs/js-ipfs",
          "num_comment_authors": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_comment_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.536593108,
        "rows_read": 218620144,
        "bytes_read": 91449824530
      },
      "executionTime": 8.554,
      "requestId": "01JTG0R56ADAT8F746HX26GKF9",
      "length": 110
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.576,
      "totalDuration": 1.003,
      "tokens": {
        "promptTokens": 4245,
        "completionTokens": 83,
        "totalTokens": 4328
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_comment_authors\nFROM github_events\nWHERE body LIKE '%epic bugs%'\n  AND event_type = 'IssueCommentEvent'\n  AND number > 100\nGROUP BY repo_name\nORDER BY num_comment_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Tribler/tribler",
              "num_comment_authors": 1
            },
            {
              "repo_name": "ipfs/js-ipfs",
              "num_comment_authors": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_comment_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.536593108,
            "rows_read": 218620144,
            "bytes_read": 91449824530
          },
          "executionTime": 8.554,
          "requestId": "01JTG0R56ADAT8F746HX26GKF9",
          "length": 110
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.576,
          "totalDuration": 1.003,
          "tokens": {
            "promptTokens": 4245,
            "completionTokens": 83,
            "totalTokens": 4328
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT repo_name, number, comments FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name, number, comments ORDER BY sum(comments) DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 9,
          "comments": 2304
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 9,
          "comments": 1735
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 9,
          "comments": 2195
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 6,
          "comments": 2073
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 6,
          "comments": 2281
        },
        {
          "repo_name": "gafusion/regression_notifications",
          "number": 1,
          "comments": 90
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 6,
          "comments": 2469
        },
        {
          "repo_name": "D00Med/farlands",
          "number": 77,
          "comments": 2499
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 9,
          "comments": 1698
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "comments": 2400
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 24.639753318,
        "rows_read": 218620144,
        "bytes_read": 2403486015
      },
      "executionTime": 24.659,
      "requestId": "01JTG0RGTMPGAWC7NPNBBGAQEA",
      "length": 673
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.594,
      "totalDuration": 0.858,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 47,
        "totalTokens": 4271
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT repo_name, number, comments FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name, number, comments ORDER BY sum(comments) DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 9,
              "comments": 2304
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 9,
              "comments": 1735
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 9,
              "comments": 2195
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 6,
              "comments": 2073
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 6,
              "comments": 2281
            },
            {
              "repo_name": "gafusion/regression_notifications",
              "number": 1,
              "comments": 90
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 6,
              "comments": 2469
            },
            {
              "repo_name": "D00Med/farlands",
              "number": 77,
              "comments": 2499
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 9,
              "comments": 1698
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "comments": 2400
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 24.639753318,
            "rows_read": 218620144,
            "bytes_read": 2403486015
          },
          "executionTime": 24.659,
          "requestId": "01JTG0RGTMPGAWC7NPNBBGAQEA",
          "length": 673
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.594,
          "totalDuration": 0.858,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 47,
            "totalTokens": 4271
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS commit_comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "commit_comment_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "commit_comment_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "commit_comment_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "commit_comment_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "commit_comment_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "commit_comment_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "commit_comment_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "commit_comment_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "commit_comment_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "commit_comment_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.127139053,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.146,
      "requestId": "01JTG0SCEN0G1A6TDXBCEJFSD7",
      "length": 649
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.635,
      "totalDuration": 1.126,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 58,
        "totalTokens": 4283
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS commit_comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "commit_comment_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "commit_comment_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "commit_comment_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "commit_comment_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "commit_comment_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "commit_comment_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "commit_comment_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "commit_comment_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "commit_comment_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "commit_comment_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.127139053,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.146,
          "requestId": "01JTG0SCEN0G1A6TDXBCEJFSD7",
          "length": 649
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.635,
          "totalDuration": 1.126,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 58,
            "totalTokens": 4283
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    commit_id,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name, commit_id\nORDER BY event_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "commit_id": "",
          "event_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "commit_id": "",
          "event_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "commit_id": "",
          "event_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "commit_id": "",
          "event_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "commit_id": "",
          "event_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "commit_id": "",
          "event_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "commit_id": "",
          "event_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "commit_id": "",
          "event_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "commit_id": "",
          "event_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "commit_id": "",
          "event_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 25.820611689,
        "rows_read": 1601472977,
        "bytes_read": 19212154281
      },
      "executionTime": 25.868,
      "requestId": "01JTG0SFYXZ2B3K6SFDAQ1YNE3",
      "length": 731
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.605,
      "totalDuration": 0.918,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 63,
        "totalTokens": 4286
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    commit_id,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name, commit_id\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "commit_id": "",
              "event_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "commit_id": "",
              "event_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "commit_id": "",
              "event_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "commit_id": "",
              "event_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "commit_id": "",
              "event_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "commit_id": "",
              "event_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "commit_id": "",
              "event_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "commit_id": "",
              "event_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "commit_id": "",
              "event_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "commit_id": "",
              "event_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 25.820611689,
            "rows_read": 1601472977,
            "bytes_read": 19212154281
          },
          "executionTime": 25.868,
          "requestId": "01JTG0SFYXZ2B3K6SFDAQ1YNE3",
          "length": 731
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.605,
          "totalDuration": 0.918,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 63,
            "totalTokens": 4286
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_reviews\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name\nORDER BY total_reviews DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "total_reviews": 223363
        },
        {
          "repo_name": "apache/spark",
          "total_reviews": 208263
        },
        {
          "repo_name": "dotnet/roslyn",
          "total_reviews": 133778
        },
        {
          "repo_name": "edx/edx-platform",
          "total_reviews": 103561
        },
        {
          "repo_name": "elastic/kibana",
          "total_reviews": 97099
        },
        {
          "repo_name": "elastic/elasticsearch",
          "total_reviews": 96885
        },
        {
          "repo_name": "dotnet/corefx",
          "total_reviews": 93268
        },
        {
          "repo_name": "rust-lang/rust",
          "total_reviews": 91651
        },
        {
          "repo_name": "oppia/oppia",
          "total_reviews": 89697
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "total_reviews": 86334
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_reviews",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.11924545,
        "rows_read": 56094244,
        "bytes_read": 168075157
      },
      "executionTime": 0.137,
      "requestId": "01JTG0TD487N7G9Z2GQJH9TPAC",
      "length": 543
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.149,
      "totalDuration": 1.524,
      "tokens": {
        "promptTokens": 4222,
        "completionTokens": 56,
        "totalTokens": 4278
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_reviews\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name\nORDER BY total_reviews DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "total_reviews": 223363
            },
            {
              "repo_name": "apache/spark",
              "total_reviews": 208263
            },
            {
              "repo_name": "dotnet/roslyn",
              "total_reviews": 133778
            },
            {
              "repo_name": "edx/edx-platform",
              "total_reviews": 103561
            },
            {
              "repo_name": "elastic/kibana",
              "total_reviews": 97099
            },
            {
              "repo_name": "elastic/elasticsearch",
              "total_reviews": 96885
            },
            {
              "repo_name": "dotnet/corefx",
              "total_reviews": 93268
            },
            {
              "repo_name": "rust-lang/rust",
              "total_reviews": 91651
            },
            {
              "repo_name": "oppia/oppia",
              "total_reviews": 89697
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "total_reviews": 86334
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_reviews",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.11924545,
            "rows_read": 56094244,
            "bytes_read": 168075157
          },
          "executionTime": 0.137,
          "requestId": "01JTG0TD487N7G9Z2GQJH9TPAC",
          "length": 543
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.149,
          "totalDuration": 1.524,
          "tokens": {
            "promptTokens": 4222,
            "completionTokens": 56,
            "totalTokens": 4278
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, count() AS pushes FROM github_events WHERE event_type = 'PushEvent' GROUP BY actor_login ORDER BY pushes DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "pushes": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "pushes": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "pushes": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "pushes": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "pushes": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "pushes": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "pushes": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "pushes": 3139278
        },
        {
          "actor_login": "newstools",
          "pushes": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "pushes": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.708951612,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.755,
      "requestId": "01JTG0TGZ1AEP9B674MQJWH2YC",
      "length": 492
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.001,
      "totalDuration": 1.264,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 35,
        "totalTokens": 4258
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, count() AS pushes FROM github_events WHERE event_type = 'PushEvent' GROUP BY actor_login ORDER BY pushes DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "pushes": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "pushes": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "pushes": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "pushes": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "pushes": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "pushes": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "pushes": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "pushes": 3139278
            },
            {
              "actor_login": "newstools",
              "pushes": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "pushes": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.708951612,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.755,
          "requestId": "01JTG0TGZ1AEP9B674MQJWH2YC",
          "length": 492
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.001,
          "totalDuration": 1.264,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 35,
            "totalTokens": 4258
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.02,
      "requestId": "01JTG0V0K8T72T5QYKY765GFRH",
      "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*) AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
      "length": 2
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT creator_user_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY creator_user_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.004,
      "totalDuration": 1.979,
      "tokens": {
        "promptTokens": 4831,
        "completionTokens": 222,
        "totalTokens": 5053
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.022,
          "requestId": "01JTG0TQQQTDTBE4QHNFQNTF5F",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*) AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.575,
          "totalDuration": 1.703,
          "tokens": {
            "promptTokens": 4277,
            "completionTokens": 222,
            "totalTokens": 4499
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT creator_user_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY creator_user_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG0TW6J9F6N1H3RPM51EA1T",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*) AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.012,
          "totalDuration": 2.049,
          "tokens": {
            "promptTokens": 4552,
            "completionTokens": 226,
            "totalTokens": 4778
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTG0V0K8T72T5QYKY765GFRH",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'COUNT(*) AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    COUNT(*) AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND actor_login NOT LIKE '%bot%'\n    AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n    AND actor_login IN (SELECT creator_user_login FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY creator_user_login HAVING count() >= 2)\n    AND actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login HAVING count() >= 2)\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) > {{UInt32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.004,
          "totalDuration": 1.979,
          "tokens": {
            "promptTokens": 4831,
            "completionTokens": 222,
            "totalTokens": 5053
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nI am unable to provide a query that returns the number of stars, as the table `github_events` does not contain information about the number of stars. The table stores events, and we can aggregate those events by repository. I will modify the query to provide the top 10 repositories with the most events, which can be seen as a proxy for popularity.\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.014,
      "requestId": "01JTG0VCEB9W2KKPM8TCRJ3QDJ",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to provide a query that returns the number of stars, as the table `github_events` does not contain information about the number of stars. The table . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
      "length": 2
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Organizations by the number of stars\"\n\nYou generated this SQL query:\n```sql\nI cannot provide the number of stars as the table `github_events` does not contain information about the number of stars. However, I can provide the top 10 organizations by the number of events.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe previous query failed because the `github_events` table does not directly contain the number of stars for a repository.  The table stores events, and we can aggregate those events by repository.  Since we cannot directly determine the number of stars, I will modify the query to provide the top 10 repositories with the most events, which can be seen as a proxy for popularity.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.064,
      "totalDuration": 1.622,
      "tokens": {
        "promptTokens": 4539,
        "completionTokens": 118,
        "totalTokens": 4657
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot provide the number of stars as the table `github_events` does not contain information about the number of stars. However, I can provide the top 10 organizations by the number of events.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0V4JBEPS9JMTRVWKFH1Q6",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot provide the number of stars as the table `github_events` does not contain information about the number of stars. However, I can provide the top 10 orga. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.058,
          "totalDuration": 1.545,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 86,
            "totalTokens": 4310
          }
        },
        "error": null
      },
      {
        "sql": "The previous query failed because the `github_events` table does not directly contain the number of stars for a repository.  The table stores events, and we can aggregate those events by repository.  Since we cannot directly determine the number of stars, I will modify the query to provide the top 10 repositories with the most events, which can be seen as a proxy for popularity.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0V8D3T9TQD5MC3B5VY6GA",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The previous query failed because the `github_events` table does not directly contain the number of stars for a repository.  The table stores events, and we can. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE",
          "length": 2
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Organizations by the number of stars\"\n\nYou generated this SQL query:\n```sql\nI cannot provide the number of stars as the table `github_events` does not contain information about the number of stars. However, I can provide the top 10 organizations by the number of events.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.57,
          "totalDuration": 1.411,
          "tokens": {
            "promptTokens": 4364,
            "completionTokens": 122,
            "totalTokens": 4486
          }
        },
        "error": null
      },
      {
        "sql": "\nI am unable to provide a query that returns the number of stars, as the table `github_events` does not contain information about the number of stars. The table stores events, and we can aggregate those events by repository. I will modify the query to provide the top 10 repositories with the most events, which can be seen as a proxy for popularity.\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG0VCEB9W2KKPM8TCRJ3QDJ",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I am unable to provide a query that returns the number of stars, as the table `github_events` does not contain information about the number of stars. The table . Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Organizations by the number of stars\"\n\nYou generated this SQL query:\n```sql\nI cannot provide the number of stars as the table `github_events` does not contain information about the number of stars. However, I can provide the top 10 organizations by the number of events.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe previous query failed because the `github_events` table does not directly contain the number of stars for a repository.  The table stores events, and we can aggregate those events by repository.  Since we cannot directly determine the number of stars, I will modify the query to provide the top 10 repositories with the most events, which can be seen as a proxy for popularity.\n\n\nSELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.064,
          "totalDuration": 1.622,
          "tokens": {
            "promptTokens": 4539,
            "completionTokens": 118,
            "totalTokens": 4657
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS repo_count\nFROM github_events\nGROUP BY repo_name\nORDER BY repo_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "repo_count": 7451541
        },
        {
          "repo_name": "direwolf-github/my-app",
          "repo_count": 3955891
        },
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "repo_count": 3097267
        },
        {
          "repo_name": "Lombiq/Orchard",
          "repo_count": 2471262
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "repo_count": 2191295
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "repo_count": 2018701
        },
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "repo_count": 1891264
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "repo_count": 1789118
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "repo_count": 1688192
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "repo_count": 1667750
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 45.916359439,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 46.022,
      "requestId": "01JTG0VG7BXMWZM1PRX1S6RN2C",
      "length": 601
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.991,
      "totalDuration": 1.273,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 43,
        "totalTokens": 4267
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS repo_count\nFROM github_events\nGROUP BY repo_name\nORDER BY repo_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "repo_count": 7451541
            },
            {
              "repo_name": "direwolf-github/my-app",
              "repo_count": 3955891
            },
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "repo_count": 3097267
            },
            {
              "repo_name": "Lombiq/Orchard",
              "repo_count": 2471262
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "repo_count": 2191295
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "repo_count": 2018701
            },
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "repo_count": 1891264
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "repo_count": 1789118
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "repo_count": 1688192
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "repo_count": 1667750
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 45.916359439,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 46.022,
          "requestId": "01JTG0VG7BXMWZM1PRX1S6RN2C",
          "length": 601
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.991,
          "totalDuration": 1.273,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 43,
            "totalTokens": 4267
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "community_size": 736368
        },
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 279405
        },
        {
          "repo_name": "jtleek/datasharing",
          "community_size": 264395
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 259323
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 223352
        },
        {
          "repo_name": "facebook/react",
          "community_size": 211153
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 205351
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 203955
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "community_size": 193542
        },
        {
          "repo_name": "github/gitignore",
          "community_size": 182330
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 96.141161365,
        "rows_read": 3124889133,
        "bytes_read": 12479080129
      },
      "executionTime": 96.192,
      "requestId": "01JTG0X118NZDZBV357D70WFDE",
      "length": 562
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.201,
      "totalDuration": 1.512,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 50,
        "totalTokens": 4274
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "community_size": 736368
            },
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 279405
            },
            {
              "repo_name": "jtleek/datasharing",
              "community_size": 264395
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 259323
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 223352
            },
            {
              "repo_name": "facebook/react",
              "community_size": 211153
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 205351
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 203955
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "community_size": 193542
            },
            {
              "repo_name": "github/gitignore",
              "community_size": 182330
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 96.141161365,
            "rows_read": 3124889133,
            "bytes_read": 12479080129
          },
          "executionTime": 96.192,
          "requestId": "01JTG0X118NZDZBV357D70WFDE",
          "length": 562
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.201,
          "totalDuration": 1.512,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 50,
            "totalTokens": 4274
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    SUM(additions + deletions) AS total_modified_code\nFROM github_events\nGROUP BY repo_name\nORDER BY total_modified_code DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "fakegit/cdnjs",
          "total_modified_code": 6223728023
        },
        {
          "repo_name": "Qwerty0x64/cdnjs",
          "total_modified_code": 5707651053
        },
        {
          "repo_name": "srz-zumix/iutest-ci-results",
          "total_modified_code": 4182822115
        },
        {
          "repo_name": "ikingye/cdnjs",
          "total_modified_code": 1999864179
        },
        {
          "repo_name": "Azure/azure-powershell",
          "total_modified_code": 1282480271
        },
        {
          "repo_name": "tomekw/whatever",
          "total_modified_code": 1266325631
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_modified_code": 1200122154
        },
        {
          "repo_name": "robertoDiaz/liferay-portal",
          "total_modified_code": 965993649
        },
        {
          "repo_name": "silky/whatever",
          "total_modified_code": 941461761
        },
        {
          "repo_name": "viliml/whatever",
          "total_modified_code": 941451344
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_modified_code",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 48.496846389,
        "rows_read": 3124889133,
        "bytes_read": 31231946651
      },
      "executionTime": 48.576,
      "requestId": "01JTG103057JC94TSVPDMJ0W99",
      "length": 695
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.244,
      "totalDuration": 1.594,
      "tokens": {
        "promptTokens": 4242,
        "completionTokens": 52,
        "totalTokens": 4294
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    SUM(additions + deletions) AS total_modified_code\nFROM github_events\nGROUP BY repo_name\nORDER BY total_modified_code DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "fakegit/cdnjs",
              "total_modified_code": 6223728023
            },
            {
              "repo_name": "Qwerty0x64/cdnjs",
              "total_modified_code": 5707651053
            },
            {
              "repo_name": "srz-zumix/iutest-ci-results",
              "total_modified_code": 4182822115
            },
            {
              "repo_name": "ikingye/cdnjs",
              "total_modified_code": 1999864179
            },
            {
              "repo_name": "Azure/azure-powershell",
              "total_modified_code": 1282480271
            },
            {
              "repo_name": "tomekw/whatever",
              "total_modified_code": 1266325631
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_modified_code": 1200122154
            },
            {
              "repo_name": "robertoDiaz/liferay-portal",
              "total_modified_code": 965993649
            },
            {
              "repo_name": "silky/whatever",
              "total_modified_code": 941461761
            },
            {
              "repo_name": "viliml/whatever",
              "total_modified_code": 941451344
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_modified_code",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 48.496846389,
            "rows_read": 3124889133,
            "bytes_read": 31231946651
          },
          "executionTime": 48.576,
          "requestId": "01JTG103057JC94TSVPDMJ0W99",
          "length": 695
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.244,
          "totalDuration": 1.594,
          "tokens": {
            "promptTokens": 4242,
            "completionTokens": 52,
            "totalTokens": 4294
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n    repo_name,\n    count() AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "push_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "push_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "push_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "push_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "push_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "push_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "push_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "push_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "push_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "push_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 30.464314876,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 30.483,
      "requestId": "01JTG11P7C3HRD9KQZQFNHSW9F",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.164,
      "totalDuration": 1.435,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 54,
        "totalTokens": 4279
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n    repo_name,\n    count() AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "push_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "push_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "push_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "push_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "push_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "push_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "push_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "push_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "push_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "push_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 30.464314876,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 30.483,
          "requestId": "01JTG11P7C3HRD9KQZQFNHSW9F",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.164,
          "totalDuration": 1.435,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 54,
            "totalTokens": 4279
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    actor_login,\n    COUNT(*) AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY actor_login\nORDER BY review_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "github-learning-lab[bot]",
          "review_count": 104542
        },
        {
          "actor_login": "github-actions[bot]",
          "review_count": 89676
        },
        {
          "actor_login": "bot-monkey-2",
          "review_count": 31702
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "review_count": 29429
        },
        {
          "actor_login": "foreign-sub",
          "review_count": 17630
        },
        {
          "actor_login": "renovate-approve[bot]",
          "review_count": 16563
        },
        {
          "actor_login": "kodiakhq[bot]",
          "review_count": 10876
        },
        {
          "actor_login": "Katsuno0814",
          "review_count": 6966
        },
        {
          "actor_login": "BrewTestBot",
          "review_count": 6718
        },
        {
          "actor_login": "accesslint[bot]",
          "review_count": 6668
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.028644326,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.048,
      "requestId": "01JTG12QBVTBAF2D2BSX2Q3BGF",
      "length": 557
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.709,
      "totalDuration": 0.951,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 56,
        "totalTokens": 4280
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    actor_login,\n    COUNT(*) AS review_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nGROUP BY actor_login\nORDER BY review_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "github-learning-lab[bot]",
              "review_count": 104542
            },
            {
              "actor_login": "github-actions[bot]",
              "review_count": 89676
            },
            {
              "actor_login": "bot-monkey-2",
              "review_count": 31702
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "review_count": 29429
            },
            {
              "actor_login": "foreign-sub",
              "review_count": 17630
            },
            {
              "actor_login": "renovate-approve[bot]",
              "review_count": 16563
            },
            {
              "actor_login": "kodiakhq[bot]",
              "review_count": 10876
            },
            {
              "actor_login": "Katsuno0814",
              "review_count": 6966
            },
            {
              "actor_login": "BrewTestBot",
              "review_count": 6718
            },
            {
              "actor_login": "accesslint[bot]",
              "review_count": 6668
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.028644326,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.048,
          "requestId": "01JTG12QBVTBAF2D2BSX2Q3BGF",
          "length": 557
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.709,
          "totalDuration": 0.951,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 56,
            "totalTokens": 4280
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT labels, count() AS count FROM github_events WHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND action IN ('opened', 'labeled') GROUP BY labels ORDER BY count DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [],
          "count": 170909641
        },
        {
          "labels": [
            "enhancement"
          ],
          "count": 2230754
        },
        {
          "labels": [
            "bug"
          ],
          "count": 1589968
        },
        {
          "labels": [
            "feature"
          ],
          "count": 176180
        },
        {
          "labels": [
            "question"
          ],
          "count": 130318
        },
        {
          "labels": [
            "documentation"
          ],
          "count": 116284
        },
        {
          "labels": [
            "dependencies"
          ],
          "count": 98898
        },
        {
          "labels": [
            "Bug"
          ],
          "count": 84033
        },
        {
          "labels": [
            "help wanted"
          ],
          "count": 72832
        },
        {
          "labels": [
            "greenkeeper"
          ],
          "count": 62625
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.531366469,
        "rows_read": 326129279,
        "bytes_read": 3414984667
      },
      "executionTime": 1.551,
      "requestId": "01JTG12TVYZW7MRVE6TYJAVXGW",
      "length": 389
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.661,
      "totalDuration": 1.038,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 50,
        "totalTokens": 4276
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT labels, count() AS count FROM github_events WHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND action IN ('opened', 'labeled') GROUP BY labels ORDER BY count DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [],
              "count": 170909641
            },
            {
              "labels": [
                "enhancement"
              ],
              "count": 2230754
            },
            {
              "labels": [
                "bug"
              ],
              "count": 1589968
            },
            {
              "labels": [
                "feature"
              ],
              "count": 176180
            },
            {
              "labels": [
                "question"
              ],
              "count": 130318
            },
            {
              "labels": [
                "documentation"
              ],
              "count": 116284
            },
            {
              "labels": [
                "dependencies"
              ],
              "count": 98898
            },
            {
              "labels": [
                "Bug"
              ],
              "count": 84033
            },
            {
              "labels": [
                "help wanted"
              ],
              "count": 72832
            },
            {
              "labels": [
                "greenkeeper"
              ],
              "count": 62625
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.531366469,
            "rows_read": 326129279,
            "bytes_read": 3414984667
          },
          "executionTime": 1.551,
          "requestId": "01JTG12TVYZW7MRVE6TYJAVXGW",
          "length": 389
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.661,
          "totalDuration": 1.038,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 50,
            "totalTokens": 4276
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT labels, count() AS count FROM github_events WHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND has(labels, 'bug') AND has(labels, 'feature') GROUP BY labels ORDER BY count DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [
            "bug",
            "feature"
          ],
          "count": 3115
        },
        {
          "labels": [
            "bug",
            "enhancement",
            "feature"
          ],
          "count": 545
        },
        {
          "labels": [
            "bug",
            "confirmed",
            "critical",
            "feature"
          ],
          "count": 75
        },
        {
          "labels": [
            "bug",
            "documentation",
            "feature"
          ],
          "count": 49
        },
        {
          "labels": [
            "bug",
            "feature",
            "help wanted"
          ],
          "count": 49
        },
        {
          "labels": [
            "bug",
            "feature",
            "refactor"
          ],
          "count": 41
        },
        {
          "labels": [
            "bug",
            "feature",
            "improvement"
          ],
          "count": 32
        },
        {
          "labels": [
            "bug",
            "feature",
            "question"
          ],
          "count": 30
        },
        {
          "labels": [
            "bug",
            "feature",
            "frontend"
          ],
          "count": 23
        },
        {
          "labels": [
            "bug",
            "feature",
            "in progress"
          ],
          "count": 23
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.276948226,
        "rows_read": 326129279,
        "bytes_read": 3089485949
      },
      "executionTime": 1.298,
      "requestId": "01JTG130YTDNYWX7ESZPCRP2YF",
      "length": 532
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.891,
      "totalDuration": 2.183,
      "tokens": {
        "promptTokens": 4232,
        "completionTokens": 57,
        "totalTokens": 4289
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT labels, count() AS count FROM github_events WHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND has(labels, 'bug') AND has(labels, 'feature') GROUP BY labels ORDER BY count DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [
                "bug",
                "feature"
              ],
              "count": 3115
            },
            {
              "labels": [
                "bug",
                "enhancement",
                "feature"
              ],
              "count": 545
            },
            {
              "labels": [
                "bug",
                "confirmed",
                "critical",
                "feature"
              ],
              "count": 75
            },
            {
              "labels": [
                "bug",
                "documentation",
                "feature"
              ],
              "count": 49
            },
            {
              "labels": [
                "bug",
                "feature",
                "help wanted"
              ],
              "count": 49
            },
            {
              "labels": [
                "bug",
                "feature",
                "refactor"
              ],
              "count": 41
            },
            {
              "labels": [
                "bug",
                "feature",
                "improvement"
              ],
              "count": 32
            },
            {
              "labels": [
                "bug",
                "feature",
                "question"
              ],
              "count": 30
            },
            {
              "labels": [
                "bug",
                "feature",
                "frontend"
              ],
              "count": 23
            },
            {
              "labels": [
                "bug",
                "feature",
                "in progress"
              ],
              "count": 23
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.276948226,
            "rows_read": 326129279,
            "bytes_read": 3089485949
          },
          "executionTime": 1.298,
          "requestId": "01JTG130YTDNYWX7ESZPCRP2YF",
          "length": 532
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.891,
          "totalDuration": 2.183,
          "tokens": {
            "promptTokens": 4232,
            "completionTokens": 57,
            "totalTokens": 4289
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS repo_name_length\nFROM github_events\nORDER BY repo_name_length DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
          "repo_name_length": 140
        },
        {
          "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
          "repo_name_length": 140
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
          "repo_name_length": 140
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
          "repo_name_length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "repo_name_length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "repo_name_length": 140
        },
        {
          "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
          "repo_name_length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "repo_name_length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "repo_name_length": 140
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
          "repo_name_length": 140
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 7.688399348,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.745,
      "requestId": "01JTG137KQHV0CT12C6YPF6876",
      "length": 1801
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.676,
      "totalDuration": 2.977,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 47,
        "totalTokens": 4268
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS repo_name_length\nFROM github_events\nORDER BY repo_name_length DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
              "repo_name_length": 140
            },
            {
              "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
              "repo_name_length": 140
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
              "repo_name_length": 140
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
              "repo_name_length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "repo_name_length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "repo_name_length": 140
            },
            {
              "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
              "repo_name_length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "repo_name_length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "repo_name_length": 140
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
              "repo_name_length": 140
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 7.688399348,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.745,
          "requestId": "01JTG137KQHV0CT12C6YPF6876",
          "length": 1801
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.676,
          "totalDuration": 2.977,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 47,
            "totalTokens": 4268
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS repo_name_length\nFROM github_events\nGROUP BY repo_name\nORDER BY repo_name_length ASC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/z",
          "repo_name_length": 2
        },
        {
          "repo_name": "/c",
          "repo_name_length": 2
        },
        {
          "repo_name": "/n",
          "repo_name_length": 2
        },
        {
          "repo_name": "/-",
          "repo_name_length": 2
        },
        {
          "repo_name": "/x",
          "repo_name_length": 2
        },
        {
          "repo_name": "/a",
          "repo_name_length": 2
        },
        {
          "repo_name": "/h",
          "repo_name_length": 2
        },
        {
          "repo_name": "/av",
          "repo_name_length": 3
        },
        {
          "repo_name": "/Gv",
          "repo_name_length": 3
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 40.724628323,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 40.77,
      "requestId": "01JTG13NAT06D1BXP3ENXRX3W2",
      "length": 402
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.489,
      "totalDuration": 3.815,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 53,
        "totalTokens": 4274
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS repo_name_length\nFROM github_events\nGROUP BY repo_name\nORDER BY repo_name_length ASC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/z",
              "repo_name_length": 2
            },
            {
              "repo_name": "/c",
              "repo_name_length": 2
            },
            {
              "repo_name": "/n",
              "repo_name_length": 2
            },
            {
              "repo_name": "/-",
              "repo_name_length": 2
            },
            {
              "repo_name": "/x",
              "repo_name_length": 2
            },
            {
              "repo_name": "/a",
              "repo_name_length": 2
            },
            {
              "repo_name": "/h",
              "repo_name_length": 2
            },
            {
              "repo_name": "/av",
              "repo_name_length": 3
            },
            {
              "repo_name": "/Gv",
              "repo_name_length": 3
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 40.724628323,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 40.77,
          "requestId": "01JTG13NAT06D1BXP3ENXRX3W2",
          "length": 402
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.489,
          "totalDuration": 3.815,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 53,
            "totalTokens": 4274
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 16156
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 12388
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 1336
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 995
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 746
        },
        {
          "repo_name": "phase-0/phase-0",
          "comment_count": 740
        },
        {
          "repo_name": "GulajavaMinistudio/freeCodeCamp",
          "comment_count": 703
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 458
        },
        {
          "repo_name": "signalapp/Signal-Desktop",
          "comment_count": 340
        },
        {
          "repo_name": "airyrooms/maleo.js",
          "comment_count": 319
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 51.920187679,
        "rows_read": 3124889133,
        "bytes_read": 512013103828
      },
      "executionTime": 51.939,
      "requestId": "01JTG150YHZZFN511ZM7MX9W3Z",
      "length": 624
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.235,
      "totalDuration": 1.415,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 38,
        "totalTokens": 4264
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 16156
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 12388
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 1336
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 995
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 746
            },
            {
              "repo_name": "phase-0/phase-0",
              "comment_count": 740
            },
            {
              "repo_name": "GulajavaMinistudio/freeCodeCamp",
              "comment_count": 703
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 458
            },
            {
              "repo_name": "signalapp/Signal-Desktop",
              "comment_count": 340
            },
            {
              "repo_name": "airyrooms/maleo.js",
              "comment_count": 319
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 51.920187679,
            "rows_read": 3124889133,
            "bytes_read": 512013103828
          },
          "executionTime": 51.939,
          "requestId": "01JTG150YHZZFN511ZM7MX9W3Z",
          "length": 624
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.235,
          "totalDuration": 1.415,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 38,
            "totalTokens": 4264
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 16156
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 12388
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 1336
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 995
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 746
        },
        {
          "repo_name": "phase-0/phase-0",
          "comment_count": 740
        },
        {
          "repo_name": "GulajavaMinistudio/freeCodeCamp",
          "comment_count": 703
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 458
        },
        {
          "repo_name": "signalapp/Signal-Desktop",
          "comment_count": 340
        },
        {
          "repo_name": "airyrooms/maleo.js",
          "comment_count": 319
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 48.129448261,
        "rows_read": 3124889133,
        "bytes_read": 512013156873
      },
      "executionTime": 48.171,
      "requestId": "01JTG16YXD1NAV8NAD1XFHEW2X",
      "length": 624
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with freecodecamp-related comments, sorted by stars\"\n\nYou generated this SQL query:\n```sql\nI cannot sort by stars because that information is not available in the table. However, I can provide the top 10 repositories with freecodecamp-related comments.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe previous query failed because I attempted to execute a query that would sort by stars, which is not available in the table. I will remove the sorting by stars.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.062,
      "totalDuration": 1.274,
      "tokens": {
        "promptTokens": 4493,
        "completionTokens": 43,
        "totalTokens": 4536
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "I cannot sort by stars because that information is not available in the table. However, I can provide the top 10 repositories with freecodecamp-related comments.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG16QKW9PDACKSVE7DF5QV4",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('I') (line 1, col 1): I cannot sort by stars because that information is not available in the table. However, I can provide the top 10 repositories with freecodecamp-related comments. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE, ",
          "length": 2
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.089,
          "totalDuration": 1.538,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 78,
            "totalTokens": 4309
          }
        },
        "error": null
      },
      {
        "sql": "The previous query failed because I attempted to execute a query that would sort by stars, which is not available in the table. I will remove the sorting by stars.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG16V6BP857H5GHEE7YGM2C",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('The') (line 1, col 1): The previous query failed because I attempted to execute a query that would sort by stars, which is not available in the table. I will remove the sorting by sta. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHOW CREATE",
          "length": 2
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with freecodecamp-related comments, sorted by stars\"\n\nYou generated this SQL query:\n```sql\nI cannot sort by stars because that information is not available in the table. However, I can provide the top 10 repositories with freecodecamp-related comments.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.629,
          "totalDuration": 1.147,
          "tokens": {
            "promptTokens": 4363,
            "completionTokens": 77,
            "totalTokens": 4440
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 16156
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 12388
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 1336
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 995
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 746
            },
            {
              "repo_name": "phase-0/phase-0",
              "comment_count": 740
            },
            {
              "repo_name": "GulajavaMinistudio/freeCodeCamp",
              "comment_count": 703
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 458
            },
            {
              "repo_name": "signalapp/Signal-Desktop",
              "comment_count": 340
            },
            {
              "repo_name": "airyrooms/maleo.js",
              "comment_count": 319
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 48.129448261,
            "rows_read": 3124889133,
            "bytes_read": 512013156873
          },
          "executionTime": 48.171,
          "requestId": "01JTG16YXD1NAV8NAD1XFHEW2X",
          "length": 624
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with freecodecamp-related comments, sorted by stars\"\n\nYou generated this SQL query:\n```sql\nI cannot sort by stars because that information is not available in the table. However, I can provide the top 10 repositories with freecodecamp-related comments.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\nThe previous query failed because I attempted to execute a query that would sort by stars, which is not available in the table. I will remove the sorting by stars.\n\n\nSELECT repo_name, count() AS comment_count FROM github_events WHERE body LIKE '%freecodecamp%' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.062,
          "totalDuration": 1.274,
          "tokens": {
            "promptTokens": 4493,
            "completionTokens": 43,
            "totalTokens": 4536
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "comment_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "comment_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "comment_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "comment_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "comment_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "comment_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "comment_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "comment_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "comment_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "comment_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.115675865,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.135,
      "requestId": "01JTG18HVHN0Y8N8MA3MJCCR7D",
      "length": 579
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "gemini-2.0-flash-001",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.188,
      "totalDuration": 1.513,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 54,
        "totalTokens": 4277
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "comment_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "comment_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "comment_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "comment_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "comment_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "comment_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "comment_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "comment_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "comment_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "comment_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.115675865,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.135,
          "requestId": "01JTG18HVHN0Y8N8MA3MJCCR7D",
          "length": 579
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "gemini-2.0-flash-001",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.188,
          "totalDuration": 1.513,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 54,
            "totalTokens": 4277
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.201159363,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.22,
      "requestId": "01JTG18NWQTGSRBDJBW9F0RP5G",
      "length": 517
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.227,
      "totalDuration": 1.483,
      "tokens": {
        "promptTokens": 4233,
        "completionTokens": 44,
        "totalTokens": 4277
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.201159363,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.22,
          "requestId": "01JTG18NWQTGSRBDJBW9F0RP5G",
          "length": 517
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.227,
          "totalDuration": 1.483,
          "tokens": {
            "promptTokens": 4233,
            "completionTokens": 44,
            "totalTokens": 4277
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.208085647,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.226,
      "requestId": "01JTG18TWYNYTQCNK9Q9GAN384",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.119,
      "totalDuration": 1.406,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 46,
        "totalTokens": 4267
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.208085647,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.226,
          "requestId": "01JTG18TWYNYTQCNK9Q9GAN384",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.119,
          "totalDuration": 1.406,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 46,
            "totalTokens": 4267
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    floor(comments / 10) * 10 AS stars_range,\n    count() AS repository_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND comments BETWEEN 1 AND 100000\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "stars_range",
          "type": "Float64"
        },
        {
          "name": "repository_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.057190348,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.075,
      "requestId": "01JTG1906GP2AZV4W9EPGE6NK3",
      "length": 2
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.166,
      "totalDuration": 1.699,
      "tokens": {
        "promptTokens": 4240,
        "completionTokens": 73,
        "totalTokens": 4313
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    floor(comments / 10) * 10 AS stars_range,\n    count() AS repository_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND comments BETWEEN 1 AND 100000\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "stars_range",
              "type": "Float64"
            },
            {
              "name": "repository_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.057190348,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.075,
          "requestId": "01JTG1906GP2AZV4W9EPGE6NK3",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.166,
          "totalDuration": 1.699,
          "tokens": {
            "promptTokens": 4240,
            "completionTokens": 73,
            "totalTokens": 4313
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT repo_name) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(repo_name)": 165611259
        }
      ],
      "meta": [
        {
          "name": "countDistinct(repo_name)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.574916288,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.621,
      "requestId": "01JTG193X3PREXFZ61RH2FQYPT",
      "length": 40
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.092,
      "totalDuration": 1.19,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 17,
        "totalTokens": 4238
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT repo_name) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(repo_name)": 165611259
            }
          ],
          "meta": [
            {
              "name": "countDistinct(repo_name)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.574916288,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.621,
          "requestId": "01JTG193X3PREXFZ61RH2FQYPT",
          "length": 40
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.092,
          "totalDuration": 1.19,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 17,
            "totalTokens": 4238
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year ASC,\n    event_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo_name": "direwolf-github/my-app",
          "event_count": 659546
        },
        {
          "year": 2015,
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 510424
        },
        {
          "year": 2015,
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "event_count": 310733
        },
        {
          "year": 2015,
          "repo_name": "sakai-mirror/melete",
          "event_count": 256758
        },
        {
          "year": 2015,
          "repo_name": "Door43/d43-en",
          "event_count": 226907
        },
        {
          "year": 2015,
          "repo_name": "apache/spark",
          "event_count": 223230
        },
        {
          "year": 2015,
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 189974
        },
        {
          "year": 2015,
          "repo_name": "dchekhonin/testDM",
          "event_count": 151983
        },
        {
          "year": 2015,
          "repo_name": "docker/docker",
          "event_count": 132956
        },
        {
          "year": 2015,
          "repo_name": "kubernetes/kubernetes",
          "event_count": 129690
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 63.29965757,
        "rows_read": 2843662884,
        "bytes_read": 17048892505
      },
      "executionTime": 63.348,
      "requestId": "01JTG1A0380RNV6GTFJ7JNEV7V",
      "length": 709
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.167,
      "totalDuration": 1.747,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 83,
        "totalTokens": 4314
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year ASC,\n    event_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2015,
              "repo_name": "direwolf-github/my-app",
              "event_count": 659546
            },
            {
              "year": 2015,
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 510424
            },
            {
              "year": 2015,
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "event_count": 310733
            },
            {
              "year": 2015,
              "repo_name": "sakai-mirror/melete",
              "event_count": 256758
            },
            {
              "year": 2015,
              "repo_name": "Door43/d43-en",
              "event_count": 226907
            },
            {
              "year": 2015,
              "repo_name": "apache/spark",
              "event_count": 223230
            },
            {
              "year": 2015,
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 189974
            },
            {
              "year": 2015,
              "repo_name": "dchekhonin/testDM",
              "event_count": 151983
            },
            {
              "year": 2015,
              "repo_name": "docker/docker",
              "event_count": 132956
            },
            {
              "year": 2015,
              "repo_name": "kubernetes/kubernetes",
              "event_count": 129690
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 63.29965757,
            "rows_read": 2843662884,
            "bytes_read": 17048892505
          },
          "executionTime": 63.348,
          "requestId": "01JTG1A0380RNV6GTFJ7JNEV7V",
          "length": 709
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.167,
          "totalDuration": 1.747,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 83,
            "totalTokens": 4314
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    toDate(created_at) AS day,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY day\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day": "2011-02-12",
          "total_stars": 3517
        },
        {
          "day": "2011-02-13",
          "total_stars": 3692
        },
        {
          "day": "2011-02-14",
          "total_stars": 4722
        },
        {
          "day": "2011-02-15",
          "total_stars": 4967
        },
        {
          "day": "2011-02-16",
          "total_stars": 4477
        },
        {
          "day": "2011-02-17",
          "total_stars": 4758
        },
        {
          "day": "2011-02-18",
          "total_stars": 4598
        },
        {
          "day": "2011-02-19",
          "total_stars": 3538
        },
        {
          "day": "2011-02-20",
          "total_stars": 3304
        },
        {
          "day": "2011-02-21",
          "total_stars": 4762
        }
      ],
      "meta": [
        {
          "name": "day",
          "type": "Date"
        },
        {
          "name": "total_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.24260229,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.261,
      "requestId": "01JTG1C1YR5YPZ8Z5FMT7FZZ9A",
      "length": 401
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.255,
      "totalDuration": 1.615,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 48,
        "totalTokens": 4273
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    toDate(created_at) AS day,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY day\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day": "2011-02-12",
              "total_stars": 3517
            },
            {
              "day": "2011-02-13",
              "total_stars": 3692
            },
            {
              "day": "2011-02-14",
              "total_stars": 4722
            },
            {
              "day": "2011-02-15",
              "total_stars": 4967
            },
            {
              "day": "2011-02-16",
              "total_stars": 4477
            },
            {
              "day": "2011-02-17",
              "total_stars": 4758
            },
            {
              "day": "2011-02-18",
              "total_stars": 4598
            },
            {
              "day": "2011-02-19",
              "total_stars": 3538
            },
            {
              "day": "2011-02-20",
              "total_stars": 3304
            },
            {
              "day": "2011-02-21",
              "total_stars": 4762
            }
          ],
          "meta": [
            {
              "name": "day",
              "type": "Date"
            },
            {
              "name": "total_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.24260229,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.261,
          "requestId": "01JTG1C1YR5YPZ8Z5FMT7FZZ9A",
          "length": 401
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.255,
          "totalDuration": 1.615,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 48,
            "totalTokens": 4273
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS stars_given\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY\n    actor_login\nORDER BY\n    stars_given DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "stars_given": 232492
        },
        {
          "actor_login": "salifm",
          "stars_given": 202534
        },
        {
          "actor_login": "x0rzkov",
          "stars_given": 73531
        },
        {
          "actor_login": "fly51fly",
          "stars_given": 57756
        },
        {
          "actor_login": "PCOffline",
          "stars_given": 56725
        },
        {
          "actor_login": "baslr",
          "stars_given": 50363
        },
        {
          "actor_login": "gkze",
          "stars_given": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "stars_given": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "stars_given": 44715
        },
        {
          "actor_login": "mcanthony",
          "stars_given": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_given",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.469327597,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 5.51,
      "requestId": "01JTG1C6MYMWH8P2V3V0Z1PSG8",
      "length": 470
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.514,
      "totalDuration": 2.023,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 54,
        "totalTokens": 4278
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS stars_given\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY\n    actor_login\nORDER BY\n    stars_given DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "stars_given": 232492
            },
            {
              "actor_login": "salifm",
              "stars_given": 202534
            },
            {
              "actor_login": "x0rzkov",
              "stars_given": 73531
            },
            {
              "actor_login": "fly51fly",
              "stars_given": 57756
            },
            {
              "actor_login": "PCOffline",
              "stars_given": 56725
            },
            {
              "actor_login": "baslr",
              "stars_given": 50363
            },
            {
              "actor_login": "gkze",
              "stars_given": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "stars_given": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "stars_given": 44715
            },
            {
              "actor_login": "mcanthony",
              "stars_given": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_given",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.469327597,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 5.51,
          "requestId": "01JTG1C6MYMWH8P2V3V0Z1PSG8",
          "length": 470
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.514,
          "totalDuration": 2.023,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 54,
            "totalTokens": 4278
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent' AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE\n            event_type = 'WatchEvent' AND repo_name = 'freecodecamp/freecodecamp'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.67808937,
        "rows_read": 232317017,
        "bytes_read": 696924366
      },
      "executionTime": 1.698,
      "requestId": "01JTG1CG79WAVVNV3ME68CT8R1",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.207,
      "totalDuration": 1.814,
      "tokens": {
        "promptTokens": 4242,
        "completionTokens": 94,
        "totalTokens": 4336
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent' AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE\n            event_type = 'WatchEvent' AND repo_name = 'freecodecamp/freecodecamp'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.67808937,
            "rows_read": 232317017,
            "bytes_read": 696924366
          },
          "executionTime": 1.698,
          "requestId": "01JTG1CG79WAVVNV3ME68CT8R1",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.207,
          "totalDuration": 1.814,
          "tokens": {
            "promptTokens": 4242,
            "completionTokens": 94,
            "totalTokens": 4336
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent' AND repo_name = 'javisantana/stars'\nGROUP BY\n    actor_login\nORDER BY\n    stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.007898196,
        "rows_read": 114688,
        "bytes_read": 344064
      },
      "executionTime": 0.026,
      "requestId": "01JTG1CNWK7J1KWW94T23QQ3NK",
      "length": 2
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.212,
      "totalDuration": 1.602,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 62,
        "totalTokens": 4290
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent' AND repo_name = 'javisantana/stars'\nGROUP BY\n    actor_login\nORDER BY\n    stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.007898196,
            "rows_read": 114688,
            "bytes_read": 344064
          },
          "executionTime": 0.026,
          "requestId": "01JTG1CNWK7J1KWW94T23QQ3NK",
          "length": 2
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.212,
          "totalDuration": 1.602,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 62,
            "totalTokens": 4290
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS contributions\nFROM github_events\nWHERE\n    actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE repo_name = 'freeCodeCamp/freeCodeCamp'\n        GROUP BY actor_login\n        ORDER BY count() DESC\n        LIMIT 10\n    )\n    AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY repo_name\nORDER BY contributions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "contributions": 6653
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "contributions": 2813
        },
        {
          "repo_name": "raisedadead/freeCodeCamp",
          "contributions": 2442
        },
        {
          "repo_name": "RandellDawson/freeCodeCamp",
          "contributions": 1876
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "contributions": 1836
        },
        {
          "repo_name": "scissorsneedfoodtoo/freeCodeCamp",
          "contributions": 1725
        },
        {
          "repo_name": "raisedadead/portfolio",
          "contributions": 1715
        },
        {
          "repo_name": "unoplatform/uno",
          "contributions": 1444
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "contributions": 1437
        },
        {
          "repo_name": "raisedadead/raisedadead.github.io",
          "contributions": 1095
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 7.762603776,
        "rows_read": 3127516010,
        "bytes_read": 6287151277
      },
      "executionTime": 7.842,
      "requestId": "01JTG1CSQER1JPX5V6XN3TYXGP",
      "length": 632
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.677,
      "totalDuration": 1.345,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 110,
        "totalTokens": 4341
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS contributions\nFROM github_events\nWHERE\n    actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE repo_name = 'freeCodeCamp/freeCodeCamp'\n        GROUP BY actor_login\n        ORDER BY count() DESC\n        LIMIT 10\n    )\n    AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY repo_name\nORDER BY contributions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "contributions": 6653
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "contributions": 2813
            },
            {
              "repo_name": "raisedadead/freeCodeCamp",
              "contributions": 2442
            },
            {
              "repo_name": "RandellDawson/freeCodeCamp",
              "contributions": 1876
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "contributions": 1836
            },
            {
              "repo_name": "scissorsneedfoodtoo/freeCodeCamp",
              "contributions": 1725
            },
            {
              "repo_name": "raisedadead/portfolio",
              "contributions": 1715
            },
            {
              "repo_name": "unoplatform/uno",
              "contributions": 1444
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "contributions": 1437
            },
            {
              "repo_name": "raisedadead/raisedadead.github.io",
              "contributions": 1095
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 7.762603776,
            "rows_read": 3127516010,
            "bytes_read": 6287151277
          },
          "executionTime": 7.842,
          "requestId": "01JTG1CSQER1JPX5V6XN3TYXGP",
          "length": 632
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.677,
          "totalDuration": 1.345,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 110,
            "totalTokens": 4341
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    repo_name\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE\n            event_type = 'IssuesEvent'\n            AND action = 'opened'\n            AND repo_name = 'freeCodeCamp/freeCodeCamp'\n        GROUP BY actor_login\n        ORDER BY count() DESC\n        LIMIT 10\n    )\nGROUP BY repo_name\nORDER BY count() DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp"
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp"
        },
        {
          "repo_name": "FreeCodeCamp/hikes"
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp"
        },
        {
          "repo_name": "Greenheart/swipeforfuture.com"
        },
        {
          "repo_name": "FreeCodeCamp/CurriculumExpansion"
        },
        {
          "repo_name": "FreeCodeCamp/TranslationExpansion"
        },
        {
          "repo_name": "freeCodeCamp/chapter"
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion"
        },
        {
          "repo_name": "freeCodeCamp/learn"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.359243912,
        "rows_read": 111610728,
        "bytes_read": 448825143
      },
      "executionTime": 0.378,
      "requestId": "01JTG1D5MWPBW1D2Y27J8A9B43",
      "length": 428
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.137,
      "totalDuration": 1.92,
      "tokens": {
        "promptTokens": 4234,
        "completionTokens": 130,
        "totalTokens": 4364
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    repo_name\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE\n            event_type = 'IssuesEvent'\n            AND action = 'opened'\n            AND repo_name = 'freeCodeCamp/freeCodeCamp'\n        GROUP BY actor_login\n        ORDER BY count() DESC\n        LIMIT 10\n    )\nGROUP BY repo_name\nORDER BY count() DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp"
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp"
            },
            {
              "repo_name": "FreeCodeCamp/hikes"
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp"
            },
            {
              "repo_name": "Greenheart/swipeforfuture.com"
            },
            {
              "repo_name": "FreeCodeCamp/CurriculumExpansion"
            },
            {
              "repo_name": "FreeCodeCamp/TranslationExpansion"
            },
            {
              "repo_name": "freeCodeCamp/chapter"
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion"
            },
            {
              "repo_name": "freeCodeCamp/learn"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 0.359243912,
            "rows_read": 111610728,
            "bytes_read": 448825143
          },
          "executionTime": 0.378,
          "requestId": "01JTG1D5MWPBW1D2Y27J8A9B43",
          "length": 428
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.137,
          "totalDuration": 1.92,
          "tokens": {
            "promptTokens": 4234,
            "completionTokens": 130,
            "totalTokens": 4364
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' AND created_at >= now() - INTERVAL 1 DAY GROUP BY repo_name ORDER BY stars DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003138341,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.02,
      "requestId": "01JTG1D9W8315PSEPK6WX4SZRR",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.081,
      "totalDuration": 1.451,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 47,
        "totalTokens": 4274
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' AND created_at >= now() - INTERVAL 1 DAY GROUP BY repo_name ORDER BY stars DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003138341,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.02,
          "requestId": "01JTG1D9W8315PSEPK6WX4SZRR",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.081,
          "totalDuration": 1.451,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 47,
            "totalTokens": 4274
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2020) AS stars_2020,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2019) AS stars_2019,\n    (stars_2020 - stars_2019) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent' AND (toYear(created_at) = 2019 OR toYear(created_at) = 2020)\nGROUP BY repo_name\nORDER BY growth DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "labuladong/fucking-algorithm",
          "stars_2020": 77568,
          "stars_2019": 0,
          "growth": 77568
        },
        {
          "repo_name": "jwasham/coding-interview-university",
          "stars_2020": 54591,
          "stars_2019": 25556,
          "growth": 29035
        },
        {
          "repo_name": "CSSEGISandData/COVID-19",
          "stars_2020": 26659,
          "stars_2019": 0,
          "growth": 26659
        },
        {
          "repo_name": "public-apis/public-apis",
          "stars_2020": 36405,
          "stars_2019": 11464,
          "growth": 24941
        },
        {
          "repo_name": "bradtraversy/design-resources-for-developers",
          "stars_2020": 23170,
          "stars_2019": 0,
          "growth": 23170
        },
        {
          "repo_name": "geekxh/hello-algorithm",
          "stars_2020": 22650,
          "stars_2019": 0,
          "growth": 22650
        },
        {
          "repo_name": "cli/cli",
          "stars_2020": 21541,
          "stars_2019": 0,
          "growth": 21541
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars_2020": 50944,
          "stars_2019": 30842,
          "growth": 20102
        },
        {
          "repo_name": "florinpop17/app-ideas",
          "stars_2020": 27989,
          "stars_2019": 8415,
          "growth": 19574
        },
        {
          "repo_name": "ohmyzsh/ohmyzsh",
          "stars_2020": 21705,
          "stars_2019": 2529,
          "growth": 19176
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_2020",
          "type": "UInt64"
        },
        {
          "name": "stars_2019",
          "type": "UInt64"
        },
        {
          "name": "growth",
          "type": "Int64"
        }
      ],
      "statistics": {
        "elapsed": 0.658991458,
        "rows_read": 91998350,
        "bytes_read": 643906549
      },
      "executionTime": 0.678,
      "requestId": "01JTG1DEVNTN09H2AVDHHW60MN",
      "length": 928
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.605,
      "totalDuration": 2.578,
      "tokens": {
        "promptTokens": 4237,
        "completionTokens": 161,
        "totalTokens": 4398
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2020) AS stars_2020,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2019) AS stars_2019,\n    (stars_2020 - stars_2019) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent' AND (toYear(created_at) = 2019 OR toYear(created_at) = 2020)\nGROUP BY repo_name\nORDER BY growth DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "labuladong/fucking-algorithm",
              "stars_2020": 77568,
              "stars_2019": 0,
              "growth": 77568
            },
            {
              "repo_name": "jwasham/coding-interview-university",
              "stars_2020": 54591,
              "stars_2019": 25556,
              "growth": 29035
            },
            {
              "repo_name": "CSSEGISandData/COVID-19",
              "stars_2020": 26659,
              "stars_2019": 0,
              "growth": 26659
            },
            {
              "repo_name": "public-apis/public-apis",
              "stars_2020": 36405,
              "stars_2019": 11464,
              "growth": 24941
            },
            {
              "repo_name": "bradtraversy/design-resources-for-developers",
              "stars_2020": 23170,
              "stars_2019": 0,
              "growth": 23170
            },
            {
              "repo_name": "geekxh/hello-algorithm",
              "stars_2020": 22650,
              "stars_2019": 0,
              "growth": 22650
            },
            {
              "repo_name": "cli/cli",
              "stars_2020": 21541,
              "stars_2019": 0,
              "growth": 21541
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars_2020": 50944,
              "stars_2019": 30842,
              "growth": 20102
            },
            {
              "repo_name": "florinpop17/app-ideas",
              "stars_2020": 27989,
              "stars_2019": 8415,
              "growth": 19574
            },
            {
              "repo_name": "ohmyzsh/ohmyzsh",
              "stars_2020": 21705,
              "stars_2019": 2529,
              "growth": 19176
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_2020",
              "type": "UInt64"
            },
            {
              "name": "stars_2019",
              "type": "UInt64"
            },
            {
              "name": "growth",
              "type": "Int64"
            }
          ],
          "statistics": {
            "elapsed": 0.658991458,
            "rows_read": 91998350,
            "bytes_read": 643906549
          },
          "executionTime": 0.678,
          "requestId": "01JTG1DEVNTN09H2AVDHHW60MN",
          "length": 928
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.605,
          "totalDuration": 2.578,
          "tokens": {
            "promptTokens": 4237,
            "completionTokens": 161,
            "totalTokens": 4398
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    sumIf(push_distinct_size, toYear(created_at) = 2019) AS pushes_2019,\n    sumIf(push_distinct_size, toYear(created_at) = 2020) AS pushes_2020,\n    (sumIf(push_distinct_size, toYear(created_at) = 2019) - sumIf(push_distinct_size, toYear(created_at) = 2020)) AS stagnation\nFROM github_events\nWHERE event_type = 'PushEvent' AND (toYear(created_at) = 2019 OR toYear(created_at) = 2020)\nGROUP BY repo_name\nORDER BY stagnation DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "one-million-repo/biggest-repo-ever",
          "pushes_2019": 9740504,
          "pushes_2020": 0,
          "stagnation": 9740504
        },
        {
          "repo_name": "escapewindow/gecko",
          "pushes_2019": 8480899,
          "pushes_2020": 0,
          "stagnation": 8480899
        },
        {
          "repo_name": "nefetsx/android_frameworks_base",
          "pushes_2019": 3388264,
          "pushes_2020": 0,
          "stagnation": 3388264
        },
        {
          "repo_name": "xwvvvvwx/untrustix-git-testdata",
          "pushes_2019": 3323786,
          "pushes_2020": 0,
          "stagnation": 3323786
        },
        {
          "repo_name": "reliefs/bot.c",
          "pushes_2019": 2372500,
          "pushes_2020": 0,
          "stagnation": 2372500
        },
        {
          "repo_name": "inhzus/github-run",
          "pushes_2019": 2026816,
          "pushes_2020": 0,
          "stagnation": 2026816
        },
        {
          "repo_name": "mirror-land/bzip2",
          "pushes_2019": 1571067,
          "pushes_2020": 0,
          "stagnation": 1571067
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "pushes_2019": 1437710,
          "pushes_2020": 0,
          "stagnation": 1437710
        },
        {
          "repo_name": "marco-c/gecko-dev-wordified",
          "pushes_2019": 1748678,
          "pushes_2020": 552643,
          "stagnation": 1196035
        },
        {
          "repo_name": "marco-c/gecko-dev-comments-removed",
          "pushes_2019": 1741086,
          "pushes_2020": 553360,
          "stagnation": 1187726
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes_2019",
          "type": "UInt64"
        },
        {
          "name": "pushes_2020",
          "type": "UInt64"
        },
        {
          "name": "stagnation",
          "type": "Int64"
        }
      ],
      "statistics": {
        "elapsed": 4.619438051,
        "rows_read": 716542169,
        "bytes_read": 7877471188
      },
      "executionTime": 4.667,
      "requestId": "01JTG1DKVHP3RNM0ZHJGXC6TW4",
      "length": 1009
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.763,
      "totalDuration": 1.913,
      "tokens": {
        "promptTokens": 4236,
        "completionTokens": 186,
        "totalTokens": 4422
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    sumIf(push_distinct_size, toYear(created_at) = 2019) AS pushes_2019,\n    sumIf(push_distinct_size, toYear(created_at) = 2020) AS pushes_2020,\n    (sumIf(push_distinct_size, toYear(created_at) = 2019) - sumIf(push_distinct_size, toYear(created_at) = 2020)) AS stagnation\nFROM github_events\nWHERE event_type = 'PushEvent' AND (toYear(created_at) = 2019 OR toYear(created_at) = 2020)\nGROUP BY repo_name\nORDER BY stagnation DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "one-million-repo/biggest-repo-ever",
              "pushes_2019": 9740504,
              "pushes_2020": 0,
              "stagnation": 9740504
            },
            {
              "repo_name": "escapewindow/gecko",
              "pushes_2019": 8480899,
              "pushes_2020": 0,
              "stagnation": 8480899
            },
            {
              "repo_name": "nefetsx/android_frameworks_base",
              "pushes_2019": 3388264,
              "pushes_2020": 0,
              "stagnation": 3388264
            },
            {
              "repo_name": "xwvvvvwx/untrustix-git-testdata",
              "pushes_2019": 3323786,
              "pushes_2020": 0,
              "stagnation": 3323786
            },
            {
              "repo_name": "reliefs/bot.c",
              "pushes_2019": 2372500,
              "pushes_2020": 0,
              "stagnation": 2372500
            },
            {
              "repo_name": "inhzus/github-run",
              "pushes_2019": 2026816,
              "pushes_2020": 0,
              "stagnation": 2026816
            },
            {
              "repo_name": "mirror-land/bzip2",
              "pushes_2019": 1571067,
              "pushes_2020": 0,
              "stagnation": 1571067
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "pushes_2019": 1437710,
              "pushes_2020": 0,
              "stagnation": 1437710
            },
            {
              "repo_name": "marco-c/gecko-dev-wordified",
              "pushes_2019": 1748678,
              "pushes_2020": 552643,
              "stagnation": 1196035
            },
            {
              "repo_name": "marco-c/gecko-dev-comments-removed",
              "pushes_2019": 1741086,
              "pushes_2020": 553360,
              "stagnation": 1187726
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes_2019",
              "type": "UInt64"
            },
            {
              "name": "pushes_2020",
              "type": "UInt64"
            },
            {
              "name": "stagnation",
              "type": "Int64"
            }
          ],
          "statistics": {
            "elapsed": 4.619438051,
            "rows_read": 716542169,
            "bytes_read": 7877471188
          },
          "executionTime": 4.667,
          "requestId": "01JTG1DKVHP3RNM0ZHJGXC6TW4",
          "length": 1009
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.763,
          "totalDuration": 1.913,
          "tokens": {
            "promptTokens": 4236,
            "completionTokens": 186,
            "totalTokens": 4422
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    COUNT() AS total_events,\n    COUNT() / (MAX(created_at) - MIN(created_at)) AS growth_rate\nFROM github_events\nGROUP BY\n    repo_name\nORDER BY\n    growth_rate DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "isbang/Honey-V",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "alexissengangabo07/Ecommerce",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "tournami/digit",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "supraja0/jenkins",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "WafaJohal/Nao_Quizz_Math",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "heyjulieh/ruby-monster-oop",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "neva11/ff",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "ptersnow/adotandoBichinhos",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "davidc104/david101",
          "total_events": 1,
          "growth_rate": null
        },
        {
          "repo_name": "djhoffma/pyret-lang",
          "total_events": 1,
          "growth_rate": null
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        },
        {
          "name": "growth_rate",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 60.132361143,
        "rows_read": 3124889133,
        "bytes_read": 18732847102
      },
      "executionTime": 60.182,
      "requestId": "01JTG1DWDBTV16H8FGA2HM755T",
      "length": 725
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.085,
      "totalDuration": 1.588,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 66,
        "totalTokens": 4293
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    COUNT() AS total_events,\n    COUNT() / (MAX(created_at) - MIN(created_at)) AS growth_rate\nFROM github_events\nGROUP BY\n    repo_name\nORDER BY\n    growth_rate DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "isbang/Honey-V",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "alexissengangabo07/Ecommerce",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "tournami/digit",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "supraja0/jenkins",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "WafaJohal/Nao_Quizz_Math",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "heyjulieh/ruby-monster-oop",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "neva11/ff",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "ptersnow/adotandoBichinhos",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "davidc104/david101",
              "total_events": 1,
              "growth_rate": null
            },
            {
              "repo_name": "djhoffma/pyret-lang",
              "total_events": 1,
              "growth_rate": null
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            },
            {
              "name": "growth_rate",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 60.132361143,
            "rows_read": 3124889133,
            "bytes_read": 18732847102
          },
          "executionTime": 60.182,
          "requestId": "01JTG1DWDBTV16H8FGA2HM755T",
          "length": 725
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.085,
          "totalDuration": 1.588,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 66,
            "totalTokens": 4293
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT toDayOfWeek(created_at) AS day_of_week, COUNT(*) AS star_count FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day_of_week ORDER BY star_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "star_count": 38094378
        },
        {
          "day_of_week": 3,
          "star_count": 37570733
        },
        {
          "day_of_week": 4,
          "star_count": 37208005
        },
        {
          "day_of_week": 1,
          "star_count": 36491986
        },
        {
          "day_of_week": 5,
          "star_count": 34924484
        },
        {
          "day_of_week": 7,
          "star_count": 24102566
        },
        {
          "day_of_week": 6,
          "star_count": 23726322
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.211829787,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.23,
      "requestId": "01JTG1FVDT32PMSJWHHHTN9K8T",
      "length": 281
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.476,
      "totalDuration": 1.871,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 51,
        "totalTokens": 4278
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT toDayOfWeek(created_at) AS day_of_week, COUNT(*) AS star_count FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day_of_week ORDER BY star_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "star_count": 38094378
            },
            {
              "day_of_week": 3,
              "star_count": 37570733
            },
            {
              "day_of_week": 4,
              "star_count": 37208005
            },
            {
              "day_of_week": 1,
              "star_count": 36491986
            },
            {
              "day_of_week": 5,
              "star_count": 34924484
            },
            {
              "day_of_week": 7,
              "star_count": 24102566
            },
            {
              "day_of_week": 6,
              "star_count": 23726322
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.211829787,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.23,
          "requestId": "01JTG1FVDT32PMSJWHHHTN9K8T",
          "length": 281
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.476,
          "totalDuration": 1.871,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 51,
            "totalTokens": 4278
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 34099240
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.864634207,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.91,
      "requestId": "01JTG1FZFT87W1W4KEFDTMD4HB",
      "length": 41
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.29,
      "totalDuration": 1.401,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 17,
        "totalTokens": 4238
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 34099240
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.864634207,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.91,
          "requestId": "01JTG1FZFT87W1W4KEFDTMD4HB",
          "length": 41
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.29,
          "totalDuration": 1.401,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 17,
            "totalTokens": 4238
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 10131322
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.619009624,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 4.638,
      "requestId": "01JTG1GNR45JJVGSE52KSXVMZ8",
      "length": 41
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.266,
      "totalDuration": 1.409,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 26,
        "totalTokens": 4250
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 10131322
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.619009624,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 4.638,
          "requestId": "01JTG1GNR45JJVGSE52KSXVMZ8",
          "length": 41
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.266,
          "totalDuration": 1.409,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 26,
            "totalTokens": 4250
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 18808891
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.757317926,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.776,
      "requestId": "01JTG1GY3C87HYZXRNNFQ2YG3M",
      "length": 41
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.261,
      "totalDuration": 1.413,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 26,
        "totalTokens": 4249
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 18808891
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.757317926,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.776,
          "requestId": "01JTG1GY3C87HYZXRNNFQ2YG3M",
          "length": 41
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.261,
          "totalDuration": 1.413,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 26,
            "totalTokens": 4249
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 6418718
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.185376325,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.204,
      "requestId": "01JTG1H64WXH6J8HFMQ8GKYTXF",
      "length": 40
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.788,
      "totalDuration": 0.962,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 33,
        "totalTokens": 4257
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 6418718
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.185376325,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.204,
          "requestId": "01JTG1H64WXH6J8HFMQ8GKYTXF",
          "length": 40
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.788,
          "totalDuration": 0.962,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 33,
            "totalTokens": 4257
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'PullRequestEvent'\n        GROUP BY actor_login\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars": 127332
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars": 116642
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 115419
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 110521
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 106673
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 101015
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 97585
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 91891
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 84730
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars": 82794
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.471277886,
        "rows_read": 446952570,
        "bytes_read": 1804735431
      },
      "executionTime": 6.532,
      "requestId": "01JTG1HBC0SHECCV891FGN1M8B",
      "length": 523
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.085,
      "totalDuration": 1.601,
      "tokens": {
        "promptTokens": 4241,
        "completionTokens": 88,
        "totalTokens": 4329
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'PullRequestEvent'\n        GROUP BY actor_login\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars": 127332
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars": 116642
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 115419
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 110521
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 106673
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 101015
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 97585
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 91891
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 84730
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars": 82794
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 6.471277886,
            "rows_read": 446952570,
            "bytes_read": 1804735431
          },
          "executionTime": 6.532,
          "requestId": "01JTG1HBC0SHECCV891FGN1M8B",
          "length": 523
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.085,
          "totalDuration": 1.601,
          "tokens": {
            "promptTokens": 4241,
            "completionTokens": 88,
            "totalTokens": 4329
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, count() AS pr_count FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY actor_login HAVING pr_count >= 10 ORDER BY pr_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 642504
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "pr_count": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.123646686,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.143,
      "requestId": "01JTG1HNHF545WH0ZXN9SFKSNS",
      "length": 519
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.101,
      "totalDuration": 1.421,
      "tokens": {
        "promptTokens": 4230,
        "completionTokens": 48,
        "totalTokens": 4278
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, count() AS pr_count FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY actor_login HAVING pr_count >= 10 ORDER BY pr_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 642504
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "pr_count": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.123646686,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.143,
          "requestId": "01JTG1HNHF545WH0ZXN9SFKSNS",
          "length": 519
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.101,
          "totalDuration": 1.421,
          "tokens": {
            "promptTokens": 4230,
            "completionTokens": 48,
            "totalTokens": 4278
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS pull_request_count FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY repo_name ORDER BY pull_request_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_request_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_request_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_request_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_request_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_request_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_request_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_request_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_request_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_request_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_request_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_request_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.715145378,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.734,
      "requestId": "01JTG1HTDWMBP2SE77B7JNTYAC",
      "length": 706
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.065,
      "totalDuration": 1.361,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 44,
        "totalTokens": 4271
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS pull_request_count FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY repo_name ORDER BY pull_request_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_request_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_request_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_request_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_request_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_request_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_request_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_request_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_request_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_request_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_request_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_request_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.715145378,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.734,
          "requestId": "01JTG1HTDWMBP2SE77B7JNTYAC",
          "length": 706
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.065,
          "totalDuration": 1.361,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 44,
            "totalTokens": 4271
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS contributors\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent'\nGROUP BY\n    repo_name\nORDER BY\n    contributors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.040777944,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 3.096,
      "requestId": "01JTG1HZMTXQCMSHRR0FNH79V4",
      "length": 660
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.753,
      "totalDuration": 1.084,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 57,
        "totalTokens": 4285
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS contributors\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent'\nGROUP BY\n    repo_name\nORDER BY\n    contributors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.040777944,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 3.096,
          "requestId": "01JTG1HZMTXQCMSHRR0FNH79V4",
          "length": 660
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.753,
          "totalDuration": 1.084,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 57,
            "totalTokens": 4285
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS issue_count FROM github_events WHERE event_type = 'IssuesEvent' GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.460570994,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.48,
      "requestId": "01JTG1J5W1F7CQ7MRECG4VFPS6",
      "length": 573
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.603,
      "totalDuration": 0.802,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 39,
        "totalTokens": 4265
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS issue_count FROM github_events WHERE event_type = 'IssuesEvent' GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.460570994,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.48,
          "requestId": "01JTG1J5W1F7CQ7MRECG4VFPS6",
          "length": 573
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.603,
          "totalDuration": 0.802,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 39,
            "totalTokens": 4265
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%bot%') AS real_issues,\n    countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%bot%') AS robot_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY real_issues DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "real_issues": 379379,
          "robot_issues": 0
        },
        {
          "repo_name": "Khan/khan-exercises",
          "real_issues": 308874,
          "robot_issues": 2
        },
        {
          "repo_name": "pddemo/demo",
          "real_issues": 216215,
          "robot_issues": 0
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "real_issues": 202921,
          "robot_issues": 55479
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "real_issues": 173986,
          "robot_issues": 0
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "real_issues": 149264,
          "robot_issues": 0
        },
        {
          "repo_name": "Khan/khan-i18n",
          "real_issues": 130935,
          "robot_issues": 0
        },
        {
          "repo_name": "Microsoft/vscode",
          "real_issues": 124157,
          "robot_issues": 8455
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "real_issues": 108096,
          "robot_issues": 0
        },
        {
          "repo_name": "flutter/flutter",
          "real_issues": 87443,
          "robot_issues": 2071
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        },
        {
          "name": "robot_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.843400046,
        "rows_read": 111439849,
        "bytes_read": 556565135
      },
      "executionTime": 0.862,
      "requestId": "01JTG1J9YYP0858AY7V2AC4JJ3",
      "length": 741
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.669,
      "totalDuration": 1.205,
      "tokens": {
        "promptTokens": 4244,
        "completionTokens": 94,
        "totalTokens": 4338
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%bot%') AS real_issues,\n    countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%bot%') AS robot_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY real_issues DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "real_issues": 379379,
              "robot_issues": 0
            },
            {
              "repo_name": "Khan/khan-exercises",
              "real_issues": 308874,
              "robot_issues": 2
            },
            {
              "repo_name": "pddemo/demo",
              "real_issues": 216215,
              "robot_issues": 0
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "real_issues": 202921,
              "robot_issues": 55479
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "real_issues": 173986,
              "robot_issues": 0
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "real_issues": 149264,
              "robot_issues": 0
            },
            {
              "repo_name": "Khan/khan-i18n",
              "real_issues": 130935,
              "robot_issues": 0
            },
            {
              "repo_name": "Microsoft/vscode",
              "real_issues": 124157,
              "robot_issues": 8455
            },
            {
              "repo_name": "Ramos-dev/jniwebshell",
              "real_issues": 108096,
              "robot_issues": 0
            },
            {
              "repo_name": "flutter/flutter",
              "real_issues": 87443,
              "robot_issues": 2071
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            },
            {
              "name": "robot_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.843400046,
            "rows_read": 111439849,
            "bytes_read": 556565135
          },
          "executionTime": 0.862,
          "requestId": "01JTG1J9YYP0858AY7V2AC4JJ3",
          "length": 741
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.669,
          "totalDuration": 1.205,
          "tokens": {
            "promptTokens": 4244,
            "completionTokens": 94,
            "totalTokens": 4338
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%bot%') AS real_issues,\n    countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%bot%') AS robot_issues,\n    count(DISTINCT actor_login) AS issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nHAVING countIf(event_type = 'WatchEvent') >= 1000\nORDER BY issue_authors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        },
        {
          "name": "robot_issues",
          "type": "UInt64"
        },
        {
          "name": "issue_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.384998172,
        "rows_read": 111439849,
        "bytes_read": 556565135
      },
      "executionTime": 1.406,
      "requestId": "01JTG1JER5Y2EKP5CRYF2T12RY",
      "length": 2
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.729,
      "totalDuration": 1.541,
      "tokens": {
        "promptTokens": 4251,
        "completionTokens": 129,
        "totalTokens": 4380
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%bot%') AS real_issues,\n    countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%bot%') AS robot_issues,\n    count(DISTINCT actor_login) AS issue_authors\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nHAVING countIf(event_type = 'WatchEvent') >= 1000\nORDER BY issue_authors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            },
            {
              "name": "robot_issues",
              "type": "UInt64"
            },
            {
              "name": "issue_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.384998172,
            "rows_read": 111439849,
            "bytes_read": 556565135
          },
          "executionTime": 1.406,
          "requestId": "01JTG1JER5Y2EKP5CRYF2T12RY",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.729,
          "totalDuration": 1.541,
          "tokens": {
            "promptTokens": 4251,
            "completionTokens": 129,
            "totalTokens": 4380
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(DISTINCT actor_login) AS num_pushers FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY num_pushers DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "num_pushers": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "num_pushers": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "num_pushers": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "num_pushers": 826
        },
        {
          "repo_name": "lifo/docrails",
          "num_pushers": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "num_pushers": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "num_pushers": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "num_pushers": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "num_pushers": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "num_pushers": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pushers",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.597947982,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 26.666,
      "requestId": "01JTG1JKJWMHH4KP1BWTEKASVJ",
      "length": 602
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.667,
      "totalDuration": 0.995,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 47,
        "totalTokens": 4275
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(DISTINCT actor_login) AS num_pushers FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY num_pushers DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "num_pushers": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "num_pushers": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "num_pushers": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "num_pushers": 826
            },
            {
              "repo_name": "lifo/docrails",
              "num_pushers": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "num_pushers": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "num_pushers": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "num_pushers": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "num_pushers": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "num_pushers": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pushers",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.597947982,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 26.666,
          "requestId": "01JTG1JKJWMHH4KP1BWTEKASVJ",
          "length": 602
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.667,
          "totalDuration": 0.995,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 47,
            "totalTokens": 4275
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS distinct_actors\nFROM github_events\nWHERE\n    event_type = 'PushEvent' AND base_ref = 'main'\nGROUP BY\n    repo_name\nORDER BY\n    distinct_actors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "distinct_actors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.290084316,
        "rows_read": 1601472977,
        "bytes_read": 4478338888
      },
      "executionTime": 0.31,
      "requestId": "01JTG1KHPEBHXRM68KZ690CPB9",
      "length": 2
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.276,
      "totalDuration": 1.713,
      "tokens": {
        "promptTokens": 4232,
        "completionTokens": 68,
        "totalTokens": 4300
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS distinct_actors\nFROM github_events\nWHERE\n    event_type = 'PushEvent' AND base_ref = 'main'\nGROUP BY\n    repo_name\nORDER BY\n    distinct_actors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "distinct_actors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.290084316,
            "rows_read": 1601472977,
            "bytes_read": 4478338888
          },
          "executionTime": 0.31,
          "requestId": "01JTG1KHPEBHXRM68KZ690CPB9",
          "length": 2
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.276,
          "totalDuration": 1.713,
          "tokens": {
            "promptTokens": 4232,
            "completionTokens": 68,
            "totalTokens": 4300
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE\n    event_type = 'PushEvent'\n    AND base_ref = 'main'\nGROUP BY\n    repo_name\nORDER BY\n    push_access_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.276244403,
        "rows_read": 1601472977,
        "bytes_read": 4478338888
      },
      "executionTime": 0.295,
      "requestId": "01JTG1KNH85PVFW7YTK2CV3XM8",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.663,
      "totalDuration": 1.118,
      "tokens": {
        "promptTokens": 4246,
        "completionTokens": 74,
        "totalTokens": 4320
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE\n    event_type = 'PushEvent'\n    AND base_ref = 'main'\nGROUP BY\n    repo_name\nORDER BY\n    push_access_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.276244403,
            "rows_read": 1601472977,
            "bytes_read": 4478338888
          },
          "executionTime": 0.295,
          "requestId": "01JTG1KNH85PVFW7YTK2CV3XM8",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.663,
          "totalDuration": 1.118,
          "tokens": {
            "promptTokens": 4246,
            "completionTokens": 74,
            "totalTokens": 4320
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS accepted_invitations FROM github_events WHERE event_type = 'MemberEvent' AND action = 'added' GROUP BY repo_name ORDER BY accepted_invitations DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "accepted_invitations": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "accepted_invitations": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "accepted_invitations": 3161
        },
        {
          "repo_name": "/",
          "accepted_invitations": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "accepted_invitations": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "accepted_invitations": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "accepted_invitations": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "accepted_invitations": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "accepted_invitations": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "accepted_invitations": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "accepted_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.43233742,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.452,
      "requestId": "01JTG1KS1R48NMD3VG9Z44QV7J",
      "length": 752
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.529,
      "totalDuration": 0.804,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 47,
        "totalTokens": 4274
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS accepted_invitations FROM github_events WHERE event_type = 'MemberEvent' AND action = 'added' GROUP BY repo_name ORDER BY accepted_invitations DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "accepted_invitations": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "accepted_invitations": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "accepted_invitations": 3161
            },
            {
              "repo_name": "/",
              "accepted_invitations": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "accepted_invitations": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "accepted_invitations": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "accepted_invitations": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "accepted_invitations": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "accepted_invitations": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "accepted_invitations": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "accepted_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.43233742,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.452,
          "requestId": "01JTG1KS1R48NMD3VG9Z44QV7J",
          "length": 752
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.529,
          "totalDuration": 0.804,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 47,
            "totalTokens": 4274
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.87085826,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.891,
      "requestId": "01JTG1KXACHWAVZ68399W9J46F",
      "length": 542
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.066,
      "totalDuration": 1.419,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 44,
        "totalTokens": 4265
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.87085826,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.891,
          "requestId": "01JTG1KXACHWAVZ68399W9J46F",
          "length": 542
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.066,
          "totalDuration": 1.419,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 44,
            "totalTokens": 4265
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    sum(event_type = 'WatchEvent') AS stars,\n    sum(event_type = 'ForkEvent') AS forks,\n    stars / forks AS ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "stars": 8190,
          "forks": 1,
          "ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "stars": 6042,
          "forks": 1,
          "ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "stars": 3069,
          "forks": 1,
          "ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "stars": 2288,
          "forks": 1,
          "ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "stars": 2088,
          "forks": 1,
          "ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "stars": 1822,
          "forks": 1,
          "ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "stars": 1801,
          "forks": 1,
          "ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "stars": 1795,
          "forks": 1,
          "ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "stars": 1759,
          "forks": 1,
          "ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "stars": 1752,
          "forks": 1,
          "ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 2.018502204,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.041,
      "requestId": "01JTG1M1SPPF483K4ZKJRJSG6B",
      "length": 752
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.653,
      "totalDuration": 1.193,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 86,
        "totalTokens": 4313
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    sum(event_type = 'WatchEvent') AS stars,\n    sum(event_type = 'ForkEvent') AS forks,\n    stars / forks AS ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "stars": 8190,
              "forks": 1,
              "ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "stars": 6042,
              "forks": 1,
              "ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "stars": 3069,
              "forks": 1,
              "ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "stars": 2288,
              "forks": 1,
              "ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "stars": 2088,
              "forks": 1,
              "ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "stars": 1822,
              "forks": 1,
              "ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "stars": 1801,
              "forks": 1,
              "ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "stars": 1795,
              "forks": 1,
              "ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "stars": 1759,
              "forks": 1,
              "ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "stars": 1752,
              "forks": 1,
              "ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 2.018502204,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.041,
          "requestId": "01JTG1M1SPPF483K4ZKJRJSG6B",
          "length": 752
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.653,
          "totalDuration": 1.193,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 86,
            "totalTokens": 4313
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY\n    forks DESC,\n    stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.03894722,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.056,
      "requestId": "01JTG1M7V6HAF09A8Z3GXDPFWY",
      "length": 676
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.12,
      "totalDuration": 1.649,
      "tokens": {
        "promptTokens": 4233,
        "completionTokens": 80,
        "totalTokens": 4313
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY\n    forks DESC,\n    stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.03894722,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.056,
          "requestId": "01JTG1M7V6HAF09A8Z3GXDPFWY",
          "length": 676
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.12,
          "totalDuration": 1.649,
          "tokens": {
            "promptTokens": 4233,
            "completionTokens": 80,
            "totalTokens": 4313
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nORDER BY\n    forks DESC,\n    stars ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 51.268757055,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 51.371,
      "requestId": "01JTG1MDPMBDYVD9SY4Z2CGRR4",
      "length": 676
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.928,
      "totalDuration": 1.358,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 66,
        "totalTokens": 4293
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nORDER BY\n    forks DESC,\n    stars ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 51.268757055,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 51.371,
          "requestId": "01JTG1MDPMBDYVD9SY4Z2CGRR4",
          "length": 676
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.928,
          "totalDuration": 1.358,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 66,
            "totalTokens": 4293
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n    stars / forks AS proportion\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars": 232118474,
          "forks": 84709181,
          "proportion": 2.7401808311663407
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "proportion",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.278426851,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.297,
      "requestId": "01JTG1P3G59FWZHFJFJ55JFG3V",
      "length": 70
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.839,
      "totalDuration": 1.297,
      "tokens": {
        "promptTokens": 4220,
        "completionTokens": 68,
        "totalTokens": 4288
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n    stars / forks AS proportion\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars": 232118474,
              "forks": 84709181,
              "proportion": 2.7401808311663407
            }
          ],
          "meta": [
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "proportion",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.278426851,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.297,
          "requestId": "01JTG1P3G59FWZHFJFJ55JFG3V",
          "length": 70
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.839,
          "totalDuration": 1.297,
          "tokens": {
            "promptTokens": 4220,
            "completionTokens": 68,
            "totalTokens": 4288
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count() FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "count()": 111265504
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005222257,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.023,
      "requestId": "01JTG1P7FCXCKFXPDM569WYJ3V",
      "length": 23
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.152,
      "totalDuration": 1.271,
      "tokens": {
        "promptTokens": 4220,
        "completionTokens": 20,
        "totalTokens": 4240
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count() FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "count()": 111265504
            }
          ],
          "meta": [
            {
              "name": "count()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005222257,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.023,
          "requestId": "01JTG1P7FCXCKFXPDM569WYJ3V",
          "length": 23
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.152,
          "totalDuration": 1.271,
          "tokens": {
            "promptTokens": 4220,
            "completionTokens": 20,
            "totalTokens": 4240
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comment_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comment_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comment_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comment_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comment_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comment_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comment_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comment_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comment_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comment_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.549142544,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.568,
      "requestId": "01JTG1PBDM1TXWRM8A0JD0VCB4",
      "length": 639
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.25,
      "totalDuration": 1.517,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 53,
        "totalTokens": 4276
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comment_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comment_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comment_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comment_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comment_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comment_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comment_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comment_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comment_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comment_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.549142544,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.568,
          "requestId": "01JTG1PBDM1TXWRM8A0JD0VCB4",
          "length": 639
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.25,
          "totalDuration": 1.517,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 53,
            "totalTokens": 4276
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    countIf(event_type = 'IssuesEvent') AS issues,\n    countIf(event_type = 'IssueCommentEvent') / countIf(event_type = 'IssuesEvent') AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "platform-acceleration-lab/assignment-submission-dotnet",
          "issue_comments": 1,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "JuanLu90/ManaSports",
          "issue_comments": 2,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "sangw0804/find_pet",
          "issue_comments": 1,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "draftbox-co/gatsby-attila-theme-ghost",
          "issue_comments": 1,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "scalabridge/website-react",
          "issue_comments": 22,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "chethan1801/DemoRepo",
          "issue_comments": 14,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "ucp-ntfy/eredis",
          "issue_comments": 1,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "seatshare/seatshare.github.io",
          "issue_comments": 4,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "specialmitesh/HelloWorld",
          "issue_comments": 1,
          "issues": 0,
          "ratio": null
        },
        {
          "repo_name": "yangyinglong/stu-front-end",
          "issue_comments": 1,
          "issues": 0,
          "ratio": null
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 1.25444659,
        "rows_read": 329902046,
        "bytes_read": 989046767
      },
      "executionTime": 1.274,
      "requestId": "01JTG1PG6P0GQ7TP6NA16HR65A",
      "length": 870
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.192,
      "totalDuration": 1.831,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 106,
        "totalTokens": 4332
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    countIf(event_type = 'IssuesEvent') AS issues,\n    countIf(event_type = 'IssueCommentEvent') / countIf(event_type = 'IssuesEvent') AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "platform-acceleration-lab/assignment-submission-dotnet",
              "issue_comments": 1,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "JuanLu90/ManaSports",
              "issue_comments": 2,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "sangw0804/find_pet",
              "issue_comments": 1,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "draftbox-co/gatsby-attila-theme-ghost",
              "issue_comments": 1,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "scalabridge/website-react",
              "issue_comments": 22,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "chethan1801/DemoRepo",
              "issue_comments": 14,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "ucp-ntfy/eredis",
              "issue_comments": 1,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "seatshare/seatshare.github.io",
              "issue_comments": 4,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "specialmitesh/HelloWorld",
              "issue_comments": 1,
              "issues": 0,
              "ratio": null
            },
            {
              "repo_name": "yangyinglong/stu-front-end",
              "issue_comments": 1,
              "issues": 0,
              "ratio": null
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            },
            {
              "name": "issues",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 1.25444659,
            "rows_read": 329902046,
            "bytes_read": 989046767
          },
          "executionTime": 1.274,
          "requestId": "01JTG1PG6P0GQ7TP6NA16HR65A",
          "length": 870
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.192,
          "totalDuration": 1.831,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 106,
            "totalTokens": 4332
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS issue_count FROM github_events WHERE event_type = 'IssuesEvent' GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.45967414,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.479,
      "requestId": "01JTG1PMSHXTQMFEK4FS3RE17X",
      "length": 573
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.647,
      "totalDuration": 0.922,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 39,
        "totalTokens": 4264
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS issue_count FROM github_events WHERE event_type = 'IssuesEvent' GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.45967414,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.479,
          "requestId": "01JTG1PMSHXTQMFEK4FS3RE17X",
          "length": 573
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.647,
          "totalDuration": 0.922,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 39,
            "totalTokens": 4264
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.013,
      "requestId": "01JTG1Q1DRJ9NKK070K0YWTTGT",
      "error": "{\"error\": \"Syntax error: invalid syntax\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.677,
      "totalDuration": 1.251,
      "tokens": {
        "promptTokens": 4553,
        "completionTokens": 103,
        "totalTokens": 4656
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG1PSJ988D353KDSHBDH54R",
          "error": "{\"error\": \"Syntax error: invalid syntax\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.201,
          "totalDuration": 1.908,
          "tokens": {
            "promptTokens": 4230,
            "completionTokens": 103,
            "totalTokens": 4333
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG1PXR1CQFDB5RW3XY4M39M",
          "error": "{\"error\": \"Syntax error: invalid syntax\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.224,
          "totalDuration": 1.764,
          "tokens": {
            "promptTokens": 4392,
            "completionTokens": 103,
            "totalTokens": 4495
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG1Q1DRJ9NKK070K0YWTTGT",
          "error": "{\"error\": \"Syntax error: invalid syntax\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT\n    repo_name,\n    count() AS bug_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND has(labels, 'epic bugs')\n    {{% if defined(issue_number) %}}\n    AND number != {{Int(issue_number)}}\n    {{% endif %}}\nGROUP BY repo_name\nORDER BY bug_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.677,
          "totalDuration": 1.251,
          "tokens": {
            "promptTokens": 4553,
            "completionTokens": 103,
            "totalTokens": 4656
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS authors\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND body LIKE '%epic bugs%' AND number > {{Int32(issue_number, 0)}}\nGROUP BY\n    repo_name\nHAVING\n    authors > {{Int32(authors_threshold, 0)}}\nORDER BY\n    authors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "etsy/sbt-compile-quick-plugin",
          "authors": 1
        },
        {
          "repo_name": "Tribler/tribler",
          "authors": 1
        },
        {
          "repo_name": "ipfs/js-ipfs",
          "authors": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.754238628,
        "rows_read": 218620144,
        "bytes_read": 91657815457
      },
      "executionTime": 8.799,
      "requestId": "01JTG1Q5Y09ZKGS7ZDJRY842CE",
      "length": 144
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.396,
      "totalDuration": 2.076,
      "tokens": {
        "promptTokens": 4245,
        "completionTokens": 100,
        "totalTokens": 4345
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS authors\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND body LIKE '%epic bugs%' AND number > {{Int32(issue_number, 0)}}\nGROUP BY\n    repo_name\nHAVING\n    authors > {{Int32(authors_threshold, 0)}}\nORDER BY\n    authors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "etsy/sbt-compile-quick-plugin",
              "authors": 1
            },
            {
              "repo_name": "Tribler/tribler",
              "authors": 1
            },
            {
              "repo_name": "ipfs/js-ipfs",
              "authors": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.754238628,
            "rows_read": 218620144,
            "bytes_read": 91657815457
          },
          "executionTime": 8.799,
          "requestId": "01JTG1Q5Y09ZKGS7ZDJRY842CE",
          "length": 144
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.396,
          "totalDuration": 2.076,
          "tokens": {
            "promptTokens": 4245,
            "completionTokens": 100,
            "totalTokens": 4345
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS comments_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comments_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "comments_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "comments_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "comments_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "comments_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "comments_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "comments_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "comments_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "comments_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "comments_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "comments_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.529314339,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.547,
      "requestId": "01JTG1QJC1MS0TYE1B2VZ9N5X5",
      "length": 589
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.098,
      "totalDuration": 1.46,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 49,
        "totalTokens": 4273
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS comments_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comments_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "comments_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "comments_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "comments_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "comments_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "comments_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "comments_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "comments_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "comments_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "comments_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "comments_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.529314339,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.547,
          "requestId": "01JTG1QJC1MS0TYE1B2VZ9N5X5",
          "length": 589
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.098,
          "totalDuration": 1.46,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 49,
            "totalTokens": 4273
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS comment_count FROM github_events WHERE event_type = 'CommitCommentEvent' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "comment_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "comment_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "comment_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "comment_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "comment_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "comment_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "comment_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "comment_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "comment_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "comment_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.135896996,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.155,
      "requestId": "01JTG1QPQMXDFJZZMRY0XAGVRW",
      "length": 579
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.25,
      "totalDuration": 1.418,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 40,
        "totalTokens": 4265
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS comment_count FROM github_events WHERE event_type = 'CommitCommentEvent' GROUP BY repo_name ORDER BY comment_count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "comment_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "comment_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "comment_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "comment_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "comment_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "comment_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "comment_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "comment_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "comment_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "comment_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.135896996,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.155,
          "requestId": "01JTG1QPQMXDFJZZMRY0XAGVRW",
          "length": 579
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.25,
          "totalDuration": 1.418,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 40,
            "totalTokens": 4265
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    commit_id,\n    count() AS hotness\nFROM github_events\nWHERE\n    event_type = 'PushEvent' AND commit_id != ''\nGROUP BY\n    repo_name,\n    commit_id\nORDER BY\n    hotness DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "hotness",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.780926253,
        "rows_read": 1601472977,
        "bytes_read": 16015712031
      },
      "executionTime": 0.8,
      "requestId": "01JTG1QTGGBHAEFSNMM8GACT4R",
      "length": 2
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.833,
      "totalDuration": 1.213,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 70,
        "totalTokens": 4293
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    commit_id,\n    count() AS hotness\nFROM github_events\nWHERE\n    event_type = 'PushEvent' AND commit_id != ''\nGROUP BY\n    repo_name,\n    commit_id\nORDER BY\n    hotness DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "hotness",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.780926253,
            "rows_read": 1601472977,
            "bytes_read": 16015712031
          },
          "executionTime": 0.8,
          "requestId": "01JTG1QTGGBHAEFSNMM8GACT4R",
          "length": 2
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.833,
          "totalDuration": 1.213,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 70,
            "totalTokens": 4293
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    number,\n    title,\n    review_comments\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'\nORDER BY\n    review_comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "slimudoh/rectangle",
          "number": 20,
          "title": "Feature/header",
          "review_comments": 112
        },
        {
          "repo_name": "slimudoh/rectangle",
          "number": 21,
          "title": "Feature/router",
          "review_comments": 64
        },
        {
          "repo_name": "thesimpledev/westCoastWeightLossCenter",
          "number": 2,
          "title": "Model & controller tests",
          "review_comments": 63
        },
        {
          "repo_name": "framgia/Music_04",
          "number": 1,
          "title": "commit giao diện ban đầu",
          "review_comments": 36
        },
        {
          "repo_name": "THEozmic/postit",
          "number": 97,
          "title": "#152642873 Refactor test files",
          "review_comments": 32
        },
        {
          "repo_name": "rubyroidlabs/bsuir-courses",
          "number": 545,
          "title": "Dm homework 1",
          "review_comments": 32
        },
        {
          "repo_name": "NonsoAmadi10/EPIC-MAIL",
          "number": 31,
          "title": "Ch rearrange directory 164564468",
          "review_comments": 30
        },
        {
          "repo_name": "canonical-websites/www.ubuntu.com",
          "number": 4545,
          "title": "Add basic modal contact us on core page",
          "review_comments": 30
        },
        {
          "repo_name": "ngageoint/hootenanny",
          "number": 3883,
          "title": "3851 - More Milford AOI fixes",
          "review_comments": 25
        },
        {
          "repo_name": "seanst13/AC40001-Honours-Project",
          "number": 32,
          "title": "Code Refactor & Organisation Restructure. ",
          "review_comments": 23
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "review_comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 2.195957562,
        "rows_read": 214762171,
        "bytes_read": 11911748510
      },
      "executionTime": 2.216,
      "requestId": "01JTG1QZ7J6E4EQH9CFPB5MHV2",
      "length": 1114
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.418,
      "totalDuration": 1.533,
      "tokens": {
        "promptTokens": 4222,
        "completionTokens": 58,
        "totalTokens": 4280
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    number,\n    title,\n    review_comments\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'\nORDER BY\n    review_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "slimudoh/rectangle",
              "number": 20,
              "title": "Feature/header",
              "review_comments": 112
            },
            {
              "repo_name": "slimudoh/rectangle",
              "number": 21,
              "title": "Feature/router",
              "review_comments": 64
            },
            {
              "repo_name": "thesimpledev/westCoastWeightLossCenter",
              "number": 2,
              "title": "Model & controller tests",
              "review_comments": 63
            },
            {
              "repo_name": "framgia/Music_04",
              "number": 1,
              "title": "commit giao diện ban đầu",
              "review_comments": 36
            },
            {
              "repo_name": "THEozmic/postit",
              "number": 97,
              "title": "#152642873 Refactor test files",
              "review_comments": 32
            },
            {
              "repo_name": "rubyroidlabs/bsuir-courses",
              "number": 545,
              "title": "Dm homework 1",
              "review_comments": 32
            },
            {
              "repo_name": "NonsoAmadi10/EPIC-MAIL",
              "number": 31,
              "title": "Ch rearrange directory 164564468",
              "review_comments": 30
            },
            {
              "repo_name": "canonical-websites/www.ubuntu.com",
              "number": 4545,
              "title": "Add basic modal contact us on core page",
              "review_comments": 30
            },
            {
              "repo_name": "ngageoint/hootenanny",
              "number": 3883,
              "title": "3851 - More Milford AOI fixes",
              "review_comments": 25
            },
            {
              "repo_name": "seanst13/AC40001-Honours-Project",
              "number": 32,
              "title": "Code Refactor & Organisation Restructure. ",
              "review_comments": 23
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "review_comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 2.195957562,
            "rows_read": 214762171,
            "bytes_read": 11911748510
          },
          "executionTime": 2.216,
          "requestId": "01JTG1QZ7J6E4EQH9CFPB5MHV2",
          "length": 1114
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.418,
          "totalDuration": 1.533,
          "tokens": {
            "promptTokens": 4222,
            "completionTokens": 58,
            "totalTokens": 4280
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "push_count": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "push_count": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "push_count": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "push_count": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "push_count": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "push_count": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "push_count": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "push_count": 3139278
        },
        {
          "actor_login": "newstools",
          "push_count": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "push_count": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.799631424,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.844,
      "requestId": "01JTG1R4Q5P7RWSHJKXPQ40C92",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.62,
      "totalDuration": 0.877,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 48,
        "totalTokens": 4271
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "push_count": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "push_count": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "push_count": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "push_count": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "push_count": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "push_count": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "push_count": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "push_count": 3139278
            },
            {
              "actor_login": "newstools",
              "push_count": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "push_count": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.799631424,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.844,
          "requestId": "01JTG1R4Q5P7RWSHJKXPQ40C92",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.62,
          "totalDuration": 0.877,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 48,
            "totalTokens": 4271
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT\n    actor_login,\n    count() AS push_count,\n    argMax(repo_name, created_at) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND actor_login NOT LIKE '%bot%'\n  AND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10000\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) >= {{Int32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "uqs",
          "push_count": 94341,
          "favorite_repo": "freebsd/freebsd"
        },
        {
          "actor_login": "ornicar",
          "push_count": 50108,
          "favorite_repo": "ornicar/lila"
        },
        {
          "actor_login": "SergeyZh",
          "push_count": 48029,
          "favorite_repo": "JetBrains/intellij-community"
        },
        {
          "actor_login": "monzta",
          "push_count": 44614,
          "favorite_repo": "easylist/easylist"
        },
        {
          "actor_login": "twinaphex",
          "push_count": 36552,
          "favorite_repo": "libretro/RetroArch"
        },
        {
          "actor_login": "ryanbr",
          "push_count": 33561,
          "favorite_repo": "easylist/easylist"
        },
        {
          "actor_login": "dtzWill",
          "push_count": 32888,
          "favorite_repo": "NixOS/nixpkgs"
        },
        {
          "actor_login": "Alex-302",
          "push_count": 32770,
          "favorite_repo": "AdguardTeam/AdguardFilters"
        },
        {
          "actor_login": "Gargron",
          "push_count": 30983,
          "favorite_repo": "tootsuite/mastodon"
        },
        {
          "actor_login": "eldy",
          "push_count": 29552,
          "favorite_repo": "Dolibarr/dolibarr"
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        },
        {
          "name": "favorite_repo",
          "type": "String"
        }
      ],
      "statistics": {
        "elapsed": 13.826287811,
        "rows_read": 1098177555,
        "bytes_read": 4920932282
      },
      "executionTime": 13.877,
      "requestId": "01JTG1RGH3ETFCGECJBDGSZ53Z",
      "length": 817
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    count() AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND actor_login NOT LIKE '%bot%'\n  AND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10000\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) >= {{Int32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.633,
      "totalDuration": 2.051,
      "tokens": {
        "promptTokens": 4599,
        "completionTokens": 269,
        "totalTokens": 4868
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\n%\nSELECT\n    actor_login,\n    count() AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND actor_login NOT LIKE '%bot%'\n  AND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10000\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) >= {{Int32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTG1RC1D6VTB2PBDW4GVM5G1",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'count() AS push_count' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.686,
          "totalDuration": 2.174,
          "tokens": {
            "promptTokens": 4277,
            "completionTokens": 269,
            "totalTokens": 4546
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    actor_login,\n    count() AS push_count,\n    argMax(repo_name, created_at) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND actor_login NOT LIKE '%bot%'\n  AND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10000\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) >= {{Int32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "uqs",
              "push_count": 94341,
              "favorite_repo": "freebsd/freebsd"
            },
            {
              "actor_login": "ornicar",
              "push_count": 50108,
              "favorite_repo": "ornicar/lila"
            },
            {
              "actor_login": "SergeyZh",
              "push_count": 48029,
              "favorite_repo": "JetBrains/intellij-community"
            },
            {
              "actor_login": "monzta",
              "push_count": 44614,
              "favorite_repo": "easylist/easylist"
            },
            {
              "actor_login": "twinaphex",
              "push_count": 36552,
              "favorite_repo": "libretro/RetroArch"
            },
            {
              "actor_login": "ryanbr",
              "push_count": 33561,
              "favorite_repo": "easylist/easylist"
            },
            {
              "actor_login": "dtzWill",
              "push_count": 32888,
              "favorite_repo": "NixOS/nixpkgs"
            },
            {
              "actor_login": "Alex-302",
              "push_count": 32770,
              "favorite_repo": "AdguardTeam/AdguardFilters"
            },
            {
              "actor_login": "Gargron",
              "push_count": 30983,
              "favorite_repo": "tootsuite/mastodon"
            },
            {
              "actor_login": "eldy",
              "push_count": 29552,
              "favorite_repo": "Dolibarr/dolibarr"
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            },
            {
              "name": "favorite_repo",
              "type": "String"
            }
          ],
          "statistics": {
            "elapsed": 13.826287811,
            "rows_read": 1098177555,
            "bytes_read": 4920932282
          },
          "executionTime": 13.877,
          "requestId": "01JTG1RGH3ETFCGECJBDGSZ53Z",
          "length": 817
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    actor_login,\n    count() AS push_count,\n    argMax(repo_name, push_count) AS favorite_repo\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND actor_login NOT LIKE '%bot%'\n  AND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10000\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    HAVING count() >= 2\n  )\nGROUP BY actor_login\nHAVING count(DISTINCT repo_name) >= {{Int32(repo_threshold, 1)}}\nORDER BY push_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.633,
          "totalDuration": 2.051,
          "tokens": {
            "promptTokens": 4599,
            "completionTokens": 269,
            "totalTokens": 4868
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.236717396,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.255,
      "requestId": "01JTG1S1PVFKKBRDGHA11F2J7P",
      "length": 517
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.926,
      "totalDuration": 1.241,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 44,
        "totalTokens": 4268
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.236717396,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.255,
          "requestId": "01JTG1S1PVFKKBRDGHA11F2J7P",
          "length": 517
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.926,
          "totalDuration": 1.241,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 44,
            "totalTokens": 4268
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS num_repos\nFROM github_events\nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY repo_name\nORDER BY num_repos DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "efarbereger/tmp_clock_repo",
          "num_repos": 276269
        },
        {
          "repo_name": "aws-risk-analysis/ddrepo-prod",
          "num_repos": 155730
        },
        {
          "repo_name": "/",
          "num_repos": 108866
        },
        {
          "repo_name": "efarbereger/historyclockimage",
          "num_repos": 72267
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-ap-northeast-2",
          "num_repos": 47150
        },
        {
          "repo_name": "codestar-github-bot-1/user-public-seeded-repo-ap-northeast-2",
          "num_repos": 47116
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-2",
          "num_repos": 46850
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-3",
          "num_repos": 46838
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-1",
          "num_repos": 46816
        },
        {
          "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-central-1",
          "num_repos": 46759
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 14.036379438,
        "rows_read": 448167202,
        "bytes_read": 1761967917
      },
      "executionTime": 14.085,
      "requestId": "01JTG1S6HYS8YQEX3JXTZGVGWW",
      "length": 742
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.755,
      "totalDuration": 1.179,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 56,
        "totalTokens": 4280
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS num_repos\nFROM github_events\nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY repo_name\nORDER BY num_repos DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "efarbereger/tmp_clock_repo",
              "num_repos": 276269
            },
            {
              "repo_name": "aws-risk-analysis/ddrepo-prod",
              "num_repos": 155730
            },
            {
              "repo_name": "/",
              "num_repos": 108866
            },
            {
              "repo_name": "efarbereger/historyclockimage",
              "num_repos": 72267
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-ap-northeast-2",
              "num_repos": 47150
            },
            {
              "repo_name": "codestar-github-bot-1/user-public-seeded-repo-ap-northeast-2",
              "num_repos": 47116
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-2",
              "num_repos": 46850
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-3",
              "num_repos": 46838
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-west-1",
              "num_repos": 46816
            },
            {
              "repo_name": "devhub-blue-sea/org-public-empty-repo-eu-central-1",
              "num_repos": 46759
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_repos",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 14.036379438,
            "rows_read": 448167202,
            "bytes_read": 1761967917
          },
          "executionTime": 14.085,
          "requestId": "01JTG1S6HYS8YQEX3JXTZGVGWW",
          "length": 742
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.755,
          "totalDuration": 1.179,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 56,
            "totalTokens": 4280
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n    repo_name\nORDER BY\n    community_size DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 271179
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 216556
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 180087
        },
        {
          "repo_name": "facebook/react",
          "community_size": 173769
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 163395
        },
        {
          "repo_name": "sindresorhus/awesome",
          "community_size": 153931
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "community_size": 142116
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "community_size": 137256
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "community_size": 132134
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 117467
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 17.157648521,
        "rows_read": 232190399,
        "bytes_read": 1160752532
      },
      "executionTime": 17.226,
      "requestId": "01JTG1SQV5CTH62145Q4PN796B",
      "length": 607
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.715,
      "totalDuration": 1.095,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 58,
        "totalTokens": 4282
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n    repo_name\nORDER BY\n    community_size DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 271179
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 216556
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 180087
            },
            {
              "repo_name": "facebook/react",
              "community_size": 173769
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 163395
            },
            {
              "repo_name": "sindresorhus/awesome",
              "community_size": 153931
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "community_size": 142116
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "community_size": 137256
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "community_size": 132134
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 117467
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 17.157648521,
            "rows_read": 232190399,
            "bytes_read": 1160752532
          },
          "executionTime": 17.226,
          "requestId": "01JTG1SQV5CTH62145Q4PN796B",
          "length": 607
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.715,
          "totalDuration": 1.095,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 58,
            "totalTokens": 4282
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    sum(additions) AS total_additions,\n    sum(deletions) AS total_deletions,\n    sum(additions) + sum(deletions) AS total_modified_code\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY total_modified_code DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "fakegit/cdnjs",
          "total_additions": 6222756523,
          "total_deletions": 971500,
          "total_modified_code": 6223728023
        },
        {
          "repo_name": "Qwerty0x64/cdnjs",
          "total_additions": 5706948901,
          "total_deletions": 702152,
          "total_modified_code": 5707651053
        },
        {
          "repo_name": "srz-zumix/iutest-ci-results",
          "total_additions": 3176317839,
          "total_deletions": 1006504276,
          "total_modified_code": 4182822115
        },
        {
          "repo_name": "ikingye/cdnjs",
          "total_additions": 1999629310,
          "total_deletions": 234869,
          "total_modified_code": 1999864179
        },
        {
          "repo_name": "Azure/azure-powershell",
          "total_additions": 714587109,
          "total_deletions": 567893162,
          "total_modified_code": 1282480271
        },
        {
          "repo_name": "tomekw/whatever",
          "total_additions": 323298837,
          "total_deletions": 943026794,
          "total_modified_code": 1266325631
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_additions": 434066544,
          "total_deletions": 766055610,
          "total_modified_code": 1200122154
        },
        {
          "repo_name": "robertoDiaz/liferay-portal",
          "total_additions": 551152902,
          "total_deletions": 414840747,
          "total_modified_code": 965993649
        },
        {
          "repo_name": "silky/whatever",
          "total_additions": 2397,
          "total_deletions": 941459364,
          "total_modified_code": 941461761
        },
        {
          "repo_name": "viliml/whatever",
          "total_additions": 10,
          "total_deletions": 941451334,
          "total_modified_code": 941451344
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        },
        {
          "name": "total_modified_code",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.781880292,
        "rows_read": 214762171,
        "bytes_read": 2361573638
      },
      "executionTime": 1.801,
      "requestId": "01JTG1TC9HMT08HQWVDR4FX91Q",
      "length": 1239
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.706,
      "totalDuration": 1.259,
      "tokens": {
        "promptTokens": 4242,
        "completionTokens": 88,
        "totalTokens": 4330
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    sum(additions) AS total_additions,\n    sum(deletions) AS total_deletions,\n    sum(additions) + sum(deletions) AS total_modified_code\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY total_modified_code DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "fakegit/cdnjs",
              "total_additions": 6222756523,
              "total_deletions": 971500,
              "total_modified_code": 6223728023
            },
            {
              "repo_name": "Qwerty0x64/cdnjs",
              "total_additions": 5706948901,
              "total_deletions": 702152,
              "total_modified_code": 5707651053
            },
            {
              "repo_name": "srz-zumix/iutest-ci-results",
              "total_additions": 3176317839,
              "total_deletions": 1006504276,
              "total_modified_code": 4182822115
            },
            {
              "repo_name": "ikingye/cdnjs",
              "total_additions": 1999629310,
              "total_deletions": 234869,
              "total_modified_code": 1999864179
            },
            {
              "repo_name": "Azure/azure-powershell",
              "total_additions": 714587109,
              "total_deletions": 567893162,
              "total_modified_code": 1282480271
            },
            {
              "repo_name": "tomekw/whatever",
              "total_additions": 323298837,
              "total_deletions": 943026794,
              "total_modified_code": 1266325631
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_additions": 434066544,
              "total_deletions": 766055610,
              "total_modified_code": 1200122154
            },
            {
              "repo_name": "robertoDiaz/liferay-portal",
              "total_additions": 551152902,
              "total_deletions": 414840747,
              "total_modified_code": 965993649
            },
            {
              "repo_name": "silky/whatever",
              "total_additions": 2397,
              "total_deletions": 941459364,
              "total_modified_code": 941461761
            },
            {
              "repo_name": "viliml/whatever",
              "total_additions": 10,
              "total_deletions": 941451334,
              "total_modified_code": 941451344
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            },
            {
              "name": "total_modified_code",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.781880292,
            "rows_read": 214762171,
            "bytes_read": 2361573638
          },
          "executionTime": 1.801,
          "requestId": "01JTG1TC9HMT08HQWVDR4FX91Q",
          "length": 1239
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.706,
          "totalDuration": 1.259,
          "tokens": {
            "promptTokens": 4242,
            "completionTokens": 88,
            "totalTokens": 4330
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() AS pushes FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY pushes DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "pushes": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "pushes": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "pushes": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "pushes": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "pushes": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "pushes": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "pushes": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "pushes": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "pushes": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "pushes": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 12.202698268,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 12.245,
      "requestId": "01JTG1THENRQ0Z4KKHVBJHWMG4",
      "length": 531
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.667,
      "totalDuration": 0.96,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 35,
        "totalTokens": 4260
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() AS pushes FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY pushes DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "pushes": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "pushes": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "pushes": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "pushes": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "pushes": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "pushes": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "pushes": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "pushes": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "pushes": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "pushes": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 12.202698268,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 12.245,
          "requestId": "01JTG1THENRQ0Z4KKHVBJHWMG4",
          "length": 531
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.667,
          "totalDuration": 0.96,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 35,
            "totalTokens": 4260
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS review_count\nFROM github_events\nWHERE\n    event_type = 'PullRequestReviewEvent'\nGROUP BY\n    actor_login\nORDER BY\n    review_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "github-learning-lab[bot]",
          "review_count": 104542
        },
        {
          "actor_login": "github-actions[bot]",
          "review_count": 89676
        },
        {
          "actor_login": "bot-monkey-2",
          "review_count": 31702
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "review_count": 29429
        },
        {
          "actor_login": "foreign-sub",
          "review_count": 17630
        },
        {
          "actor_login": "renovate-approve[bot]",
          "review_count": 16563
        },
        {
          "actor_login": "kodiakhq[bot]",
          "review_count": 10876
        },
        {
          "actor_login": "Katsuno0814",
          "review_count": 6966
        },
        {
          "actor_login": "BrewTestBot",
          "review_count": 6718
        },
        {
          "actor_login": "accesslint[bot]",
          "review_count": 6668
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.030904467,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.051,
      "requestId": "01JTG1V0TC36VDTWF0FVTPA2AM",
      "length": 557
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.624,
      "totalDuration": 1.012,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 56,
        "totalTokens": 4280
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS review_count\nFROM github_events\nWHERE\n    event_type = 'PullRequestReviewEvent'\nGROUP BY\n    actor_login\nORDER BY\n    review_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "github-learning-lab[bot]",
              "review_count": 104542
            },
            {
              "actor_login": "github-actions[bot]",
              "review_count": 89676
            },
            {
              "actor_login": "bot-monkey-2",
              "review_count": 31702
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "review_count": 29429
            },
            {
              "actor_login": "foreign-sub",
              "review_count": 17630
            },
            {
              "actor_login": "renovate-approve[bot]",
              "review_count": 16563
            },
            {
              "actor_login": "kodiakhq[bot]",
              "review_count": 10876
            },
            {
              "actor_login": "Katsuno0814",
              "review_count": 6966
            },
            {
              "actor_login": "BrewTestBot",
              "review_count": 6718
            },
            {
              "actor_login": "accesslint[bot]",
              "review_count": 6668
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.030904467,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.051,
          "requestId": "01JTG1V0TC36VDTWF0FVTPA2AM",
          "length": 557
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.624,
          "totalDuration": 1.012,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 56,
            "totalTokens": 4280
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    labels,\n    count() AS count\nFROM github_events\nWHERE\n    event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY\n    labels\nORDER BY\n    count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [],
          "count": 274083977
        },
        {
          "labels": [
            "dependencies"
          ],
          "count": 8152801
        },
        {
          "labels": [
            "enhancement"
          ],
          "count": 4771004
        },
        {
          "labels": [
            ":arrow_heading_down: pull"
          ],
          "count": 4099386
        },
        {
          "labels": [
            "bug"
          ],
          "count": 3852960
        },
        {
          "labels": [
            "question"
          ],
          "count": 624874
        },
        {
          "labels": [
            "greenkeeper"
          ],
          "count": 481091
        },
        {
          "labels": [
            "dependencies",
            "javascript"
          ],
          "count": 454885
        },
        {
          "labels": [
            "cla: yes"
          ],
          "count": 426664
        },
        {
          "labels": [
            "feature"
          ],
          "count": 379913
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.428331862,
        "rows_read": 326129279,
        "bytes_read": 3089461441
      },
      "executionTime": 1.447,
      "requestId": "01JTG1V4QPA1JWNTS6VN8JX5AS",
      "length": 426
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.085,
      "totalDuration": 1.459,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 51,
        "totalTokens": 4277
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    labels,\n    count() AS count\nFROM github_events\nWHERE\n    event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY\n    labels\nORDER BY\n    count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [],
              "count": 274083977
            },
            {
              "labels": [
                "dependencies"
              ],
              "count": 8152801
            },
            {
              "labels": [
                "enhancement"
              ],
              "count": 4771004
            },
            {
              "labels": [
                ":arrow_heading_down: pull"
              ],
              "count": 4099386
            },
            {
              "labels": [
                "bug"
              ],
              "count": 3852960
            },
            {
              "labels": [
                "question"
              ],
              "count": 624874
            },
            {
              "labels": [
                "greenkeeper"
              ],
              "count": 481091
            },
            {
              "labels": [
                "dependencies",
                "javascript"
              ],
              "count": 454885
            },
            {
              "labels": [
                "cla: yes"
              ],
              "count": 426664
            },
            {
              "labels": [
                "feature"
              ],
              "count": 379913
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.428331862,
            "rows_read": 326129279,
            "bytes_read": 3089461441
          },
          "executionTime": 1.447,
          "requestId": "01JTG1V4QPA1JWNTS6VN8JX5AS",
          "length": 426
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.085,
          "totalDuration": 1.459,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 51,
            "totalTokens": 4277
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    labels,\n    count() AS c\nFROM github_events\nWHERE\n    event_type IN ('IssuesEvent', 'PullRequestEvent') AND (arrayExists(x -> x IN ('bug', 'feature'), labels))\nGROUP BY labels\nORDER BY c DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [
            "bug"
          ],
          "c": 3852960
        },
        {
          "labels": [
            "feature"
          ],
          "c": 379913
        },
        {
          "labels": [
            "bug",
            "enhancement"
          ],
          "c": 117769
        },
        {
          "labels": [
            "bug",
            "help wanted"
          ],
          "c": 56915
        },
        {
          "labels": [
            "bug",
            "fixed"
          ],
          "c": 33848
        },
        {
          "labels": [
            "bug",
            "in progress"
          ],
          "c": 27926
        },
        {
          "labels": [
            "bug",
            "question"
          ],
          "c": 21910
        },
        {
          "labels": [
            "bug",
            "good first issue"
          ],
          "c": 21756
        },
        {
          "labels": [
            "Severity 1",
            "bug"
          ],
          "c": 18644
        },
        {
          "labels": [
            "bug",
            "wontfix"
          ],
          "c": 17943
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "c",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.957636767,
        "rows_read": 326129279,
        "bytes_read": 3089486744
      },
      "executionTime": 0.977,
      "requestId": "01JTG1V9KEXVX9XERJ596CWQ0S",
      "length": 402
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 0.54,
      "totalDuration": 1.036,
      "tokens": {
        "promptTokens": 4232,
        "completionTokens": 64,
        "totalTokens": 4296
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    labels,\n    count() AS c\nFROM github_events\nWHERE\n    event_type IN ('IssuesEvent', 'PullRequestEvent') AND (arrayExists(x -> x IN ('bug', 'feature'), labels))\nGROUP BY labels\nORDER BY c DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [
                "bug"
              ],
              "c": 3852960
            },
            {
              "labels": [
                "feature"
              ],
              "c": 379913
            },
            {
              "labels": [
                "bug",
                "enhancement"
              ],
              "c": 117769
            },
            {
              "labels": [
                "bug",
                "help wanted"
              ],
              "c": 56915
            },
            {
              "labels": [
                "bug",
                "fixed"
              ],
              "c": 33848
            },
            {
              "labels": [
                "bug",
                "in progress"
              ],
              "c": 27926
            },
            {
              "labels": [
                "bug",
                "question"
              ],
              "c": 21910
            },
            {
              "labels": [
                "bug",
                "good first issue"
              ],
              "c": 21756
            },
            {
              "labels": [
                "Severity 1",
                "bug"
              ],
              "c": 18644
            },
            {
              "labels": [
                "bug",
                "wontfix"
              ],
              "c": 17943
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "c",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.957636767,
            "rows_read": 326129279,
            "bytes_read": 3089486744
          },
          "executionTime": 0.977,
          "requestId": "01JTG1V9KEXVX9XERJ596CWQ0S",
          "length": 402
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 0.54,
          "totalDuration": 1.036,
          "tokens": {
            "promptTokens": 4232,
            "completionTokens": 64,
            "totalTokens": 4296
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name FROM github_events ORDER BY length(repo_name) DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
        },
        {
          "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039"
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
        },
        {
          "repo_name": "7fe2752182d43f856b49a802e36d597c78ae87b/e24df9d857604b10bd97e59eb34fc95061f91cc6a7818d0e411b452593186767d783414260a26ceeb1c9c52e91dd31f2c5fb"
        },
        {
          "repo_name": "7fe2752182d43f856b49a802e36d597c78ae87b/e24df9d857604b10bd97e59eb34fc95061f91cc6a7818d0e411b452593186767d783414260a26ceeb1c9c52e91dd31f2c5fb"
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 7.31996472,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.386,
      "requestId": "01JTG1VEBPK15ATW2TFJHFVF2S",
      "length": 1571
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.247,
      "totalDuration": 1.346,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 21,
        "totalTokens": 4242
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name FROM github_events ORDER BY length(repo_name) DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
            },
            {
              "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039"
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
            },
            {
              "repo_name": "7fe2752182d43f856b49a802e36d597c78ae87b/e24df9d857604b10bd97e59eb34fc95061f91cc6a7818d0e411b452593186767d783414260a26ceeb1c9c52e91dd31f2c5fb"
            },
            {
              "repo_name": "7fe2752182d43f856b49a802e36d597c78ae87b/e24df9d857604b10bd97e59eb34fc95061f91cc6a7818d0e411b452593186767d783414260a26ceeb1c9c52e91dd31f2c5fb"
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 7.31996472,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.386,
          "requestId": "01JTG1VEBPK15ATW2TFJHFVF2S",
          "length": 1571
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.247,
          "totalDuration": 1.346,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 21,
            "totalTokens": 4242
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name FROM github_events ORDER BY length(repo_name) ASC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 7.325666114,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.344,
      "requestId": "01JTG1VSA0FZZPM65913H92JJY",
      "length": 181
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.26,
      "totalDuration": 1.368,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 21,
        "totalTokens": 4242
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name FROM github_events ORDER BY length(repo_name) ASC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 7.325666114,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.344,
          "requestId": "01JTG1VSA0FZZPM65913H92JJY",
          "length": 181
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.26,
          "totalDuration": 1.368,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 21,
            "totalTokens": 4242
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 3203
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 1155
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 359
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 248
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 178
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 104
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 87
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 76
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 71
        },
        {
          "repo_name": "frontendbr/forum",
          "comment_count": 63
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 10.373694791,
        "rows_read": 218620144,
        "bytes_read": 91676124860
      },
      "executionTime": 10.415,
      "requestId": "01JTG1W4KTT482FPST509Y0ZVQ",
      "length": 613
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.263,
      "totalDuration": 1.708,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 59,
        "totalTokens": 4285
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 3203
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 1155
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 359
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 248
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 178
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 104
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 87
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 76
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 71
            },
            {
              "repo_name": "frontendbr/forum",
              "comment_count": 63
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 10.373694791,
            "rows_read": 218620144,
            "bytes_read": 91676124860
          },
          "executionTime": 10.415,
          "requestId": "01JTG1W4KTT482FPST509Y0ZVQ",
          "length": 613
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.263,
          "totalDuration": 1.708,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 59,
            "totalTokens": 4285
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS comments\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comments": 3203
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comments": 1155
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comments": 359
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comments": 248
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comments": 178
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comments": 104
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comments": 87
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comments": 76
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comments": 71
        },
        {
          "repo_name": "frontendbr/forum",
          "comments": 63
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.926538899,
        "rows_read": 218620144,
        "bytes_read": 91676124350
      },
      "executionTime": 8.973,
      "requestId": "01JTG1WJQ79BWVE20MBBAKJ3C2",
      "length": 563
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.139,
      "totalDuration": 1.524,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 55,
        "totalTokens": 4286
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS comments\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND body LIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comments": 3203
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comments": 1155
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comments": 359
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comments": 248
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comments": 178
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comments": 104
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comments": 87
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comments": 76
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comments": 71
            },
            {
              "repo_name": "frontendbr/forum",
              "comments": 63
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.926538899,
            "rows_read": 218620144,
            "bytes_read": 91676124350
          },
          "executionTime": 8.973,
          "requestId": "01JTG1WJQ79BWVE20MBBAKJ3C2",
          "length": 563
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.139,
          "totalDuration": 1.524,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 55,
            "totalTokens": 4286
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    actor_login,\n    body,\n    comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "comments": 2512
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 10.004848343,
        "rows_read": 218620144,
        "bytes_read": 93399975956
      },
      "executionTime": 10.05,
      "requestId": "01JTG1WZF6XPSQBDHWMP19P4MK",
      "length": 1551
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "gemini-2.5-flash-preview",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 1.371,
      "totalDuration": 1.581,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 46,
        "totalTokens": 4269
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    actor_login,\n    body,\n    comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "comments": 2512
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 10.004848343,
            "rows_read": 218620144,
            "bytes_read": 93399975956
          },
          "executionTime": 10.05,
          "requestId": "01JTG1WZF6XPSQBDHWMP19P4MK",
          "length": 1551
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "gemini-2.5-flash-preview",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 1.371,
          "totalDuration": 1.581,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 46,
            "totalTokens": 4269
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT count(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "count()": 232118474
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004530267,
        "rows_read": 134879,
        "bytes_read": 134894
      },
      "executionTime": 0.022,
      "requestId": "01JTG1XE76SNHNWCMZJMB5K1S0",
      "length": 23
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.537,
      "totalDuration": 2.559,
      "tokens": {
        "promptTokens": 4233,
        "completionTokens": 143,
        "totalTokens": 4376
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT count(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "count()": 232118474
            }
          ],
          "meta": [
            {
              "name": "count()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.004530267,
            "rows_read": 134879,
            "bytes_read": 134894
          },
          "executionTime": 0.022,
          "requestId": "01JTG1XE76SNHNWCMZJMB5K1S0",
          "length": 23
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.537,
          "totalDuration": 2.559,
          "tokens": {
            "promptTokens": 4233,
            "completionTokens": 143,
            "totalTokens": 4376
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.200720064,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.219,
      "requestId": "01JTG1XKDSNXY3GAMJJ3DDXKFF",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.702,
      "totalDuration": 2.807,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 205,
        "totalTokens": 4426
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.200720064,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.219,
          "requestId": "01JTG1XKDSNXY3GAMJJ3DDXKFF",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.702,
          "totalDuration": 2.807,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 205,
            "totalTokens": 4426
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    concat(toString(bucket_start), '-', toString(bucket_end)) AS stars_range,\n    count() AS repository_count\nFROM (\n    SELECT\n        repo_name,\n        count() AS stars,\n        floor((count() - 1) / 10) * 10 + 1 AS bucket_start,\n        floor((count() - 1) / 10) * 10 + 10 AS bucket_end\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nWHERE stars >= 1 AND stars <= 100000\nGROUP BY bucket_start, bucket_end\nORDER BY bucket_start\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars_range": "1-10",
          "repository_count": 15141280
        },
        {
          "stars_range": "11-20",
          "repository_count": 519257
        },
        {
          "stars_range": "21-30",
          "repository_count": 208754
        },
        {
          "stars_range": "31-40",
          "repository_count": 116866
        },
        {
          "stars_range": "41-50",
          "repository_count": 75603
        },
        {
          "stars_range": "51-60",
          "repository_count": 53765
        },
        {
          "stars_range": "61-70",
          "repository_count": 40494
        },
        {
          "stars_range": "71-80",
          "repository_count": 31659
        },
        {
          "stars_range": "81-90",
          "repository_count": 25570
        },
        {
          "stars_range": "91-100",
          "repository_count": 21208
        }
      ],
      "meta": [
        {
          "name": "stars_range",
          "type": "String"
        },
        {
          "name": "repository_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.233480878,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.254,
      "requestId": "01JTG1YDH1XR135QADW8324RA8",
      "length": 497
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 21.852,
      "totalDuration": 23.005,
      "tokens": {
        "promptTokens": 4240,
        "completionTokens": 2393,
        "totalTokens": 6633
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    concat(toString(bucket_start), '-', toString(bucket_end)) AS stars_range,\n    count() AS repository_count\nFROM (\n    SELECT\n        repo_name,\n        count() AS stars,\n        floor((count() - 1) / 10) * 10 + 1 AS bucket_start,\n        floor((count() - 1) / 10) * 10 + 10 AS bucket_end\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nWHERE stars >= 1 AND stars <= 100000\nGROUP BY bucket_start, bucket_end\nORDER BY bucket_start\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars_range": "1-10",
              "repository_count": 15141280
            },
            {
              "stars_range": "11-20",
              "repository_count": 519257
            },
            {
              "stars_range": "21-30",
              "repository_count": 208754
            },
            {
              "stars_range": "31-40",
              "repository_count": 116866
            },
            {
              "stars_range": "41-50",
              "repository_count": 75603
            },
            {
              "stars_range": "51-60",
              "repository_count": 53765
            },
            {
              "stars_range": "61-70",
              "repository_count": 40494
            },
            {
              "stars_range": "71-80",
              "repository_count": 31659
            },
            {
              "stars_range": "81-90",
              "repository_count": 25570
            },
            {
              "stars_range": "91-100",
              "repository_count": 21208
            }
          ],
          "meta": [
            {
              "name": "stars_range",
              "type": "String"
            },
            {
              "name": "repository_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.233480878,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.254,
          "requestId": "01JTG1YDH1XR135QADW8324RA8",
          "length": 497
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 21.852,
          "totalDuration": 23.005,
          "tokens": {
            "promptTokens": 4240,
            "completionTokens": 2393,
            "totalTokens": 6633
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    count(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_repositories": 165611259
        }
      ],
      "meta": [
        {
          "name": "total_repositories",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.329147328,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.37,
      "requestId": "01JTG1YMZ2X8JF8Z1GRTHGEW10",
      "length": 34
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.833,
      "totalDuration": 3.84,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 240,
        "totalTokens": 4461
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    count(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_repositories": 165611259
            }
          ],
          "meta": [
            {
              "name": "total_repositories",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.329147328,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.37,
          "requestId": "01JTG1YMZ2X8JF8Z1GRTHGEW10",
          "length": 34
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.833,
          "totalDuration": 3.84,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 240,
            "totalTokens": 4461
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01 00:00:00' AND repo_name != ''\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year ASC,\n    event_count DESC\nLIMIT 10 BY year\nLIMIT 100\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo_name": "direwolf-github/my-app",
          "event_count": 659546
        },
        {
          "year": 2015,
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 510424
        },
        {
          "year": 2015,
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "event_count": 310733
        },
        {
          "year": 2015,
          "repo_name": "sakai-mirror/melete",
          "event_count": 256758
        },
        {
          "year": 2015,
          "repo_name": "Door43/d43-en",
          "event_count": 226907
        },
        {
          "year": 2015,
          "repo_name": "apache/spark",
          "event_count": 223230
        },
        {
          "year": 2015,
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 189974
        },
        {
          "year": 2015,
          "repo_name": "dchekhonin/testDM",
          "event_count": 151983
        },
        {
          "year": 2015,
          "repo_name": "docker/docker",
          "event_count": 132956
        },
        {
          "year": 2015,
          "repo_name": "kubernetes/kubernetes",
          "event_count": 129690
        },
        {
          "year": 2016,
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 1029890
        },
        {
          "year": 2016,
          "repo_name": "direwolf-github/my-app",
          "event_count": 808919
        },
        {
          "year": 2016,
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 788479
        },
        {
          "year": 2016,
          "repo_name": "kubernetes/kubernetes",
          "event_count": 414235
        },
        {
          "year": 2016,
          "repo_name": "digimatic/ogre",
          "event_count": 365824
        },
        {
          "year": 2016,
          "repo_name": "sauron-demo/sauron",
          "event_count": 354128
        },
        {
          "year": 2016,
          "repo_name": "OpenLocalizationTestOrg/olhandback-e2e",
          "event_count": 303484
        },
        {
          "year": 2016,
          "repo_name": "OpenLocalizationTestOrg/olhandoff-e2e",
          "event_count": 301481
        },
        {
          "year": 2016,
          "repo_name": "dchekhonin/testDM",
          "event_count": 291227
        },
        {
          "year": 2016,
          "repo_name": "Lombiq/Associativy-Core",
          "event_count": 244124
        },
        {
          "year": 2017,
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 918850
        },
        {
          "year": 2017,
          "repo_name": "direwolf-github/my-app",
          "event_count": 741287
        },
        {
          "year": 2017,
          "repo_name": "abodiab/OOS",
          "event_count": 622399
        },
        {
          "year": 2017,
          "repo_name": "shenzhouzd/update",
          "event_count": 557407
        },
        {
          "year": 2017,
          "repo_name": "g0v-data/mirror",
          "event_count": 511219
        },
        {
          "year": 2017,
          "repo_name": "robertbrook/robertbrook.github.io",
          "event_count": 486049
        },
        {
          "year": 2017,
          "repo_name": "kubernetes/kubernetes",
          "event_count": 474225
        },
        {
          "year": 2017,
          "repo_name": "nicopeters/sigrhtest",
          "event_count": 462560
        },
        {
          "year": 2017,
          "repo_name": "argo-testing/prod-autobuild-prober",
          "event_count": 452126
        },
        {
          "year": 2017,
          "repo_name": "everypolitician/everypolitician-data",
          "event_count": 440311
        },
        {
          "year": 2018,
          "repo_name": "unitydemo2/Docworks",
          "event_count": 1789118
        },
        {
          "year": 2018,
          "repo_name": "dipper-github-fra-sin-syd-nrt/test-python-sample",
          "event_count": 776790
        },
        {
          "year": 2018,
          "repo_name": "ntbpm/testv",
          "event_count": 774508
        },
        {
          "year": 2018,
          "repo_name": "dipper-github-lhr-yul-sfo-icn/test-python-sample",
          "event_count": 746402
        },
        {
          "year": 2018,
          "repo_name": "direwolf-github/my-app",
          "event_count": 585164
        },
        {
          "year": 2018,
          "repo_name": "shenzhouzd/update",
          "event_count": 578917
        },
        {
          "year": 2018,
          "repo_name": "chuan12/shenzhouzd",
          "event_count": 558123
        },
        {
          "year": 2018,
          "repo_name": "unitydemo2/AssetPullTest",
          "event_count": 554755
        },
        {
          "year": 2018,
          "repo_name": "dotclear/dotclear",
          "event_count": 532776
        },
        {
          "year": 2018,
          "repo_name": "nicopeters/sigrhtest",
          "event_count": 524246
        },
        {
          "year": 2019,
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "event_count": 1635604
        },
        {
          "year": 2019,
          "repo_name": "othhotro/Roo.Exe",
          "event_count": 1437711
        },
        {
          "year": 2019,
          "repo_name": "willcbaker-ext/subt",
          "event_count": 869959
        },
        {
          "year": 2019,
          "repo_name": "CircleCITestOrg/smoke-test-test-repo",
          "event_count": 791844
        },
        {
          "year": 2019,
          "repo_name": "bossm/chancechat",
          "event_count": 781822
        },
        {
          "year": 2019,
          "repo_name": "geos4s/18w856162",
          "event_count": 734109
        },
        {
          "year": 2019,
          "repo_name": "direwolf-github/my-app",
          "event_count": 723257
        },
        {
          "year": 2019,
          "repo_name": "chuan12/shenzhouzd",
          "event_count": 649214
        },
        {
          "year": 2019,
          "repo_name": "himobi/hotspot",
          "event_count": 529347
        },
        {
          "year": 2019,
          "repo_name": "dotclear/dotclear",
          "event_count": 507613
        },
        {
          "year": 2020,
          "repo_name": "peter-clifford/grax-hd-trial",
          "event_count": 3097267
        },
        {
          "year": 2020,
          "repo_name": "commit-b0t/commit-b0t",
          "event_count": 1688192
        },
        {
          "year": 2020,
          "repo_name": "Lombiq/Orchard",
          "event_count": 1212893
        },
        {
          "year": 2020,
          "repo_name": "otiny/up",
          "event_count": 1053095
        },
        {
          "year": 2020,
          "repo_name": "regro/releases",
          "event_count": 943517
        },
        {
          "year": 2020,
          "repo_name": "CLSPhila/DocketScraperAPI",
          "event_count": 878775
        },
        {
          "year": 2020,
          "repo_name": "breakingheatmap/breakingheatmap",
          "event_count": 878499
        },
        {
          "year": 2020,
          "repo_name": "CircleCITestOrg/smoke-test-test-repo",
          "event_count": 810200
        },
        {
          "year": 2020,
          "repo_name": "infaautovcs/DependencyUIAuto",
          "event_count": 704468
        },
        {
          "year": 2020,
          "repo_name": "wix-incubator/wix-rest-docs",
          "event_count": 652535
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 91.7756189,
        "rows_read": 2843662884,
        "bytes_read": 17048943283
      },
      "executionTime": 91.816,
      "requestId": "01JTG1ZXK9P76WX1RV6SKDHD5K",
      "length": 4383
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 14.055,
      "totalDuration": 14.734,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 1448,
        "totalTokens": 5679
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01 00:00:00' AND repo_name != ''\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year ASC,\n    event_count DESC\nLIMIT 10 BY year\nLIMIT 100\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2015,
              "repo_name": "direwolf-github/my-app",
              "event_count": 659546
            },
            {
              "year": 2015,
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 510424
            },
            {
              "year": 2015,
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "event_count": 310733
            },
            {
              "year": 2015,
              "repo_name": "sakai-mirror/melete",
              "event_count": 256758
            },
            {
              "year": 2015,
              "repo_name": "Door43/d43-en",
              "event_count": 226907
            },
            {
              "year": 2015,
              "repo_name": "apache/spark",
              "event_count": 223230
            },
            {
              "year": 2015,
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 189974
            },
            {
              "year": 2015,
              "repo_name": "dchekhonin/testDM",
              "event_count": 151983
            },
            {
              "year": 2015,
              "repo_name": "docker/docker",
              "event_count": 132956
            },
            {
              "year": 2015,
              "repo_name": "kubernetes/kubernetes",
              "event_count": 129690
            },
            {
              "year": 2016,
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 1029890
            },
            {
              "year": 2016,
              "repo_name": "direwolf-github/my-app",
              "event_count": 808919
            },
            {
              "year": 2016,
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 788479
            },
            {
              "year": 2016,
              "repo_name": "kubernetes/kubernetes",
              "event_count": 414235
            },
            {
              "year": 2016,
              "repo_name": "digimatic/ogre",
              "event_count": 365824
            },
            {
              "year": 2016,
              "repo_name": "sauron-demo/sauron",
              "event_count": 354128
            },
            {
              "year": 2016,
              "repo_name": "OpenLocalizationTestOrg/olhandback-e2e",
              "event_count": 303484
            },
            {
              "year": 2016,
              "repo_name": "OpenLocalizationTestOrg/olhandoff-e2e",
              "event_count": 301481
            },
            {
              "year": 2016,
              "repo_name": "dchekhonin/testDM",
              "event_count": 291227
            },
            {
              "year": 2016,
              "repo_name": "Lombiq/Associativy-Core",
              "event_count": 244124
            },
            {
              "year": 2017,
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 918850
            },
            {
              "year": 2017,
              "repo_name": "direwolf-github/my-app",
              "event_count": 741287
            },
            {
              "year": 2017,
              "repo_name": "abodiab/OOS",
              "event_count": 622399
            },
            {
              "year": 2017,
              "repo_name": "shenzhouzd/update",
              "event_count": 557407
            },
            {
              "year": 2017,
              "repo_name": "g0v-data/mirror",
              "event_count": 511219
            },
            {
              "year": 2017,
              "repo_name": "robertbrook/robertbrook.github.io",
              "event_count": 486049
            },
            {
              "year": 2017,
              "repo_name": "kubernetes/kubernetes",
              "event_count": 474225
            },
            {
              "year": 2017,
              "repo_name": "nicopeters/sigrhtest",
              "event_count": 462560
            },
            {
              "year": 2017,
              "repo_name": "argo-testing/prod-autobuild-prober",
              "event_count": 452126
            },
            {
              "year": 2017,
              "repo_name": "everypolitician/everypolitician-data",
              "event_count": 440311
            },
            {
              "year": 2018,
              "repo_name": "unitydemo2/Docworks",
              "event_count": 1789118
            },
            {
              "year": 2018,
              "repo_name": "dipper-github-fra-sin-syd-nrt/test-python-sample",
              "event_count": 776790
            },
            {
              "year": 2018,
              "repo_name": "ntbpm/testv",
              "event_count": 774508
            },
            {
              "year": 2018,
              "repo_name": "dipper-github-lhr-yul-sfo-icn/test-python-sample",
              "event_count": 746402
            },
            {
              "year": 2018,
              "repo_name": "direwolf-github/my-app",
              "event_count": 585164
            },
            {
              "year": 2018,
              "repo_name": "shenzhouzd/update",
              "event_count": 578917
            },
            {
              "year": 2018,
              "repo_name": "chuan12/shenzhouzd",
              "event_count": 558123
            },
            {
              "year": 2018,
              "repo_name": "unitydemo2/AssetPullTest",
              "event_count": 554755
            },
            {
              "year": 2018,
              "repo_name": "dotclear/dotclear",
              "event_count": 532776
            },
            {
              "year": 2018,
              "repo_name": "nicopeters/sigrhtest",
              "event_count": 524246
            },
            {
              "year": 2019,
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "event_count": 1635604
            },
            {
              "year": 2019,
              "repo_name": "othhotro/Roo.Exe",
              "event_count": 1437711
            },
            {
              "year": 2019,
              "repo_name": "willcbaker-ext/subt",
              "event_count": 869959
            },
            {
              "year": 2019,
              "repo_name": "CircleCITestOrg/smoke-test-test-repo",
              "event_count": 791844
            },
            {
              "year": 2019,
              "repo_name": "bossm/chancechat",
              "event_count": 781822
            },
            {
              "year": 2019,
              "repo_name": "geos4s/18w856162",
              "event_count": 734109
            },
            {
              "year": 2019,
              "repo_name": "direwolf-github/my-app",
              "event_count": 723257
            },
            {
              "year": 2019,
              "repo_name": "chuan12/shenzhouzd",
              "event_count": 649214
            },
            {
              "year": 2019,
              "repo_name": "himobi/hotspot",
              "event_count": 529347
            },
            {
              "year": 2019,
              "repo_name": "dotclear/dotclear",
              "event_count": 507613
            },
            {
              "year": 2020,
              "repo_name": "peter-clifford/grax-hd-trial",
              "event_count": 3097267
            },
            {
              "year": 2020,
              "repo_name": "commit-b0t/commit-b0t",
              "event_count": 1688192
            },
            {
              "year": 2020,
              "repo_name": "Lombiq/Orchard",
              "event_count": 1212893
            },
            {
              "year": 2020,
              "repo_name": "otiny/up",
              "event_count": 1053095
            },
            {
              "year": 2020,
              "repo_name": "regro/releases",
              "event_count": 943517
            },
            {
              "year": 2020,
              "repo_name": "CLSPhila/DocketScraperAPI",
              "event_count": 878775
            },
            {
              "year": 2020,
              "repo_name": "breakingheatmap/breakingheatmap",
              "event_count": 878499
            },
            {
              "year": 2020,
              "repo_name": "CircleCITestOrg/smoke-test-test-repo",
              "event_count": 810200
            },
            {
              "year": 2020,
              "repo_name": "infaautovcs/DependencyUIAuto",
              "event_count": 704468
            },
            {
              "year": 2020,
              "repo_name": "wix-incubator/wix-rest-docs",
              "event_count": 652535
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 91.7756189,
            "rows_read": 2843662884,
            "bytes_read": 17048943283
          },
          "executionTime": 91.816,
          "requestId": "01JTG1ZXK9P76WX1RV6SKDHD5K",
          "length": 4383
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 14.055,
          "totalDuration": 14.734,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 1448,
            "totalTokens": 5679
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    DATE_TRUNC('day', created_at) AS day,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY day DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day": "2020-12-06 00:00:00",
          "stars_count": 97089
        },
        {
          "day": "2020-12-05 00:00:00",
          "stars_count": 113274
        },
        {
          "day": "2020-12-04 00:00:00",
          "stars_count": 152361
        },
        {
          "day": "2020-12-03 00:00:00",
          "stars_count": 159567
        },
        {
          "day": "2020-12-02 00:00:00",
          "stars_count": 159705
        },
        {
          "day": "2020-12-01 00:00:00",
          "stars_count": 158770
        },
        {
          "day": "2020-11-30 00:00:00",
          "stars_count": 157000
        },
        {
          "day": "2020-11-29 00:00:00",
          "stars_count": 114341
        },
        {
          "day": "2020-11-28 00:00:00",
          "stars_count": 111064
        },
        {
          "day": "2020-11-27 00:00:00",
          "stars_count": 140156
        }
      ],
      "meta": [
        {
          "name": "day",
          "type": "DateTime"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.25764027,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.276,
      "requestId": "01JTG2356R0VGSPNGGZQZTVXRA",
      "length": 510
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 11.569,
      "totalDuration": 11.797,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 1087,
        "totalTokens": 5312
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    DATE_TRUNC('day', created_at) AS day,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY day DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day": "2020-12-06 00:00:00",
              "stars_count": 97089
            },
            {
              "day": "2020-12-05 00:00:00",
              "stars_count": 113274
            },
            {
              "day": "2020-12-04 00:00:00",
              "stars_count": 152361
            },
            {
              "day": "2020-12-03 00:00:00",
              "stars_count": 159567
            },
            {
              "day": "2020-12-02 00:00:00",
              "stars_count": 159705
            },
            {
              "day": "2020-12-01 00:00:00",
              "stars_count": 158770
            },
            {
              "day": "2020-11-30 00:00:00",
              "stars_count": 157000
            },
            {
              "day": "2020-11-29 00:00:00",
              "stars_count": 114341
            },
            {
              "day": "2020-11-28 00:00:00",
              "stars_count": 111064
            },
            {
              "day": "2020-11-27 00:00:00",
              "stars_count": 140156
            }
          ],
          "meta": [
            {
              "name": "day",
              "type": "DateTime"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.25764027,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.276,
          "requestId": "01JTG2356R0VGSPNGGZQZTVXRA",
          "length": 510
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 11.569,
          "totalDuration": 11.797,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 1087,
            "totalTokens": 5312
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY actor_login\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "stars": 232492
        },
        {
          "actor_login": "salifm",
          "stars": 202534
        },
        {
          "actor_login": "x0rzkov",
          "stars": 73531
        },
        {
          "actor_login": "fly51fly",
          "stars": 57756
        },
        {
          "actor_login": "PCOffline",
          "stars": 56725
        },
        {
          "actor_login": "baslr",
          "stars": 50363
        },
        {
          "actor_login": "gkze",
          "stars": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "stars": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "stars": 44715
        },
        {
          "actor_login": "mcanthony",
          "stars": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.737458641,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 5.782,
      "requestId": "01JTG23BH1ECV93S4SC9FS49K1",
      "length": 410
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.663,
      "totalDuration": 3.67,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 256,
        "totalTokens": 4480
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY actor_login\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "stars": 232492
            },
            {
              "actor_login": "salifm",
              "stars": 202534
            },
            {
              "actor_login": "x0rzkov",
              "stars": 73531
            },
            {
              "actor_login": "fly51fly",
              "stars": 57756
            },
            {
              "actor_login": "PCOffline",
              "stars": 56725
            },
            {
              "actor_login": "baslr",
              "stars": 50363
            },
            {
              "actor_login": "gkze",
              "stars": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "stars": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "stars": 44715
            },
            {
              "actor_login": "mcanthony",
              "stars": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.737458641,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 5.782,
          "requestId": "01JTG23BH1ECV93S4SC9FS49K1",
          "length": 410
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.663,
          "totalDuration": 3.67,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 256,
            "totalTokens": 4480
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    t2.repo_name,\n    count(DISTINCT t2.actor_login) AS stars_from_fcc_stargazers\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.actor_login = t2.actor_login\nWHERE t1.event_type = 'WatchEvent' AND t1.repo_name = 'freecodecamp/freecodecamp' AND t2.event_type = 'WatchEvent' AND t2.repo_name != 'freecodecamp/freecodecamp'\nGROUP BY t2.repo_name\nORDER BY stars_from_fcc_stargazers DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "t2.repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_from_fcc_stargazers",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 41.265510642,
        "rows_read": 232317017,
        "bytes_read": 1160903451
      },
      "executionTime": 41.332,
      "requestId": "01JTG23ZHR5TWWNVE8DJV3X0ZX",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 11.495,
      "totalDuration": 12.219,
      "tokens": {
        "promptTokens": 4242,
        "completionTokens": 1283,
        "totalTokens": 5525
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    t2.repo_name,\n    count(DISTINCT t2.actor_login) AS stars_from_fcc_stargazers\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.actor_login = t2.actor_login\nWHERE t1.event_type = 'WatchEvent' AND t1.repo_name = 'freecodecamp/freecodecamp' AND t2.event_type = 'WatchEvent' AND t2.repo_name != 'freecodecamp/freecodecamp'\nGROUP BY t2.repo_name\nORDER BY stars_from_fcc_stargazers DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "t2.repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_from_fcc_stargazers",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 41.265510642,
            "rows_read": 232317017,
            "bytes_read": 1160903451
          },
          "executionTime": 41.332,
          "requestId": "01JTG23ZHR5TWWNVE8DJV3X0ZX",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 11.495,
          "totalDuration": 12.219,
          "tokens": {
            "promptTokens": 4242,
            "completionTokens": 1283,
            "totalTokens": 5525
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    t2.actor_login AS friend_login,\n    count(DISTINCT t1.repo_name) AS common_stars\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.repo_name = t2.repo_name\nWHERE t1.event_type = 'WatchEvent' AND t2.event_type = 'WatchEvent' AND t1.actor_login = 'javisantana' AND t2.actor_login != 'javisantana'\nGROUP BY friend_login\nORDER BY common_stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "friend_login": "gkze",
          "common_stars": 16
        },
        {
          "friend_login": "fly51fly",
          "common_stars": 15
        },
        {
          "friend_login": "4148",
          "common_stars": 15
        },
        {
          "friend_login": "salifm",
          "common_stars": 14
        },
        {
          "friend_login": "nikolay",
          "common_stars": 14
        },
        {
          "friend_login": "redaready",
          "common_stars": 13
        },
        {
          "friend_login": "hcilab",
          "common_stars": 13
        },
        {
          "friend_login": "ThomasG77",
          "common_stars": 13
        },
        {
          "friend_login": "vulcangz",
          "common_stars": 13
        },
        {
          "friend_login": "jiangplus",
          "common_stars": 12
        }
      ],
      "meta": [
        {
          "name": "friend_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "common_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 16.778394208,
        "rows_read": 464380798,
        "bytes_read": 1857639765
      },
      "executionTime": 16.846,
      "requestId": "01JTG25KS9MZVQF1TDX4NWQQZH",
      "length": 451
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 9.027,
      "totalDuration": 9.659,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 1084,
        "totalTokens": 5312
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    t2.actor_login AS friend_login,\n    count(DISTINCT t1.repo_name) AS common_stars\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.repo_name = t2.repo_name\nWHERE t1.event_type = 'WatchEvent' AND t2.event_type = 'WatchEvent' AND t1.actor_login = 'javisantana' AND t2.actor_login != 'javisantana'\nGROUP BY friend_login\nORDER BY common_stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "friend_login": "gkze",
              "common_stars": 16
            },
            {
              "friend_login": "fly51fly",
              "common_stars": 15
            },
            {
              "friend_login": "4148",
              "common_stars": 15
            },
            {
              "friend_login": "salifm",
              "common_stars": 14
            },
            {
              "friend_login": "nikolay",
              "common_stars": 14
            },
            {
              "friend_login": "redaready",
              "common_stars": 13
            },
            {
              "friend_login": "hcilab",
              "common_stars": 13
            },
            {
              "friend_login": "ThomasG77",
              "common_stars": 13
            },
            {
              "friend_login": "vulcangz",
              "common_stars": 13
            },
            {
              "friend_login": "jiangplus",
              "common_stars": 12
            }
          ],
          "meta": [
            {
              "name": "friend_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "common_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 16.778394208,
            "rows_read": 464380798,
            "bytes_read": 1857639765
          },
          "executionTime": 16.846,
          "requestId": "01JTG25KS9MZVQF1TDX4NWQQZH",
          "length": 451
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 9.027,
          "totalDuration": 9.659,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 1084,
            "totalTokens": 5312
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT DISTINCT repo_name\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freecodecamp/freecodecamp'\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n) AND repo_name != 'freecodecamp/freecodecamp'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 7.367170217,
        "rows_read": 3127355383,
        "bytes_read": 6250293479
      },
      "executionTime": 7.412,
      "requestId": "01JTG26XQTA84133F4ZRTWBX4X",
      "length": 2
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 22.965,
      "totalDuration": 23.61,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 2373,
        "totalTokens": 6604
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT DISTINCT repo_name\nFROM github_events\nWHERE actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE repo_name = 'freecodecamp/freecodecamp'\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n) AND repo_name != 'freecodecamp/freecodecamp'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 7.367170217,
            "rows_read": 3127355383,
            "bytes_read": 6250293479
          },
          "executionTime": 7.412,
          "requestId": "01JTG26XQTA84133F4ZRTWBX4X",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 22.965,
          "totalDuration": 23.61,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 2373,
            "totalTokens": 6604
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT DISTINCT\n    actor_login,\n    repo_name\nFROM github_events\nWHERE actor_login IN (\n    SELECT\n        actor_login\n    FROM github_events\n    WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n)\nAND event_type = 'IssuesEvent'\nAND action = 'opened'\nAND repo_name != 'freecodecamp/freecodecamp'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.286752135,
        "rows_read": 111599101,
        "bytes_read": 222933293
      },
      "executionTime": 0.306,
      "requestId": "01JTG27TZQXMYX2Z43VPFXFV6D",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 19.338,
      "totalDuration": 20.058,
      "tokens": {
        "promptTokens": 4234,
        "completionTokens": 2078,
        "totalTokens": 6312
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT DISTINCT\n    actor_login,\n    repo_name\nFROM github_events\nWHERE actor_login IN (\n    SELECT\n        actor_login\n    FROM github_events\n    WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n)\nAND event_type = 'IssuesEvent'\nAND action = 'opened'\nAND repo_name != 'freecodecamp/freecodecamp'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 0.286752135,
            "rows_read": 111599101,
            "bytes_read": 222933293
          },
          "executionTime": 0.306,
          "requestId": "01JTG27TZQXMYX2Z43VPFXFV6D",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 19.338,
          "totalDuration": 20.058,
          "tokens": {
            "promptTokens": 4234,
            "completionTokens": 2078,
            "totalTokens": 6312
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    DATE(created_at) AS day,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n    repo_name,\n    day\nORDER BY stars_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-03-28",
          "stars_count": 76056
        },
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-03-29",
          "stars_count": 66269
        },
        {
          "repo_name": "M4cs/BabySploit",
          "day": "2019-09-08",
          "stars_count": 46985
        },
        {
          "repo_name": "x64dbg/x64dbg",
          "day": "2018-01-06",
          "stars_count": 26459
        },
        {
          "repo_name": "M4cs/BabySploit",
          "day": "2019-09-09",
          "stars_count": 23716
        },
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-04-01",
          "stars_count": 17217
        },
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-03-30",
          "stars_count": 16066
        },
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-04-03",
          "stars_count": 15635
        },
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-03-27",
          "stars_count": 14904
        },
        {
          "repo_name": "996icu/996.ICU",
          "day": "2019-04-02",
          "stars_count": 14745
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "day",
          "type": "Date"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 17.046716561,
        "rows_read": 232190399,
        "bytes_read": 1625133330
      },
      "executionTime": 17.091,
      "requestId": "01JTG282P0N3FK32W5GMPKRFBP",
      "length": 702
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 4.991,
      "totalDuration": 5.046,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 412,
        "totalTokens": 4639
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    DATE(created_at) AS day,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n    repo_name,\n    day\nORDER BY stars_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-03-28",
              "stars_count": 76056
            },
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-03-29",
              "stars_count": 66269
            },
            {
              "repo_name": "M4cs/BabySploit",
              "day": "2019-09-08",
              "stars_count": 46985
            },
            {
              "repo_name": "x64dbg/x64dbg",
              "day": "2018-01-06",
              "stars_count": 26459
            },
            {
              "repo_name": "M4cs/BabySploit",
              "day": "2019-09-09",
              "stars_count": 23716
            },
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-04-01",
              "stars_count": 17217
            },
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-03-30",
              "stars_count": 16066
            },
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-04-03",
              "stars_count": 15635
            },
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-03-27",
              "stars_count": 14904
            },
            {
              "repo_name": "996icu/996.ICU",
              "day": "2019-04-02",
              "stars_count": 14745
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "day",
              "type": "Date"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 17.046716561,
            "rows_read": 232190399,
            "bytes_read": 1625133330
          },
          "executionTime": 17.091,
          "requestId": "01JTG282P0N3FK32W5GMPKRFBP",
          "length": 702
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 4.991,
          "totalDuration": 5.046,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 412,
            "totalTokens": 4639
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(event_type, toYear(created_at) = 2019) AS count_2019,\n    countIf(event_type, toYear(created_at) = 2020) AS count_2020,\n    count_2020 / count_2019 AS growth_factor\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020) AND repo_name != ''\nGROUP BY repo_name\nHAVING count_2019 > 100 AND count_2020 > 0\nORDER BY growth_factor DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "coringao/blastem",
          "count_2019": 150,
          "count_2020": 279807,
          "growth_factor": 1865.38
        },
        {
          "repo_name": "CLSPhila/DocketScraperAPI",
          "count_2019": 770,
          "count_2020": 878775,
          "growth_factor": 1141.2662337662337
        },
        {
          "repo_name": "asmodehn/aiokraken",
          "count_2019": 464,
          "count_2020": 163386,
          "growth_factor": 352.125
        },
        {
          "repo_name": "eugenelabzov/mp3lib",
          "count_2019": 150,
          "count_2020": 40343,
          "growth_factor": 268.9533333333333
        },
        {
          "repo_name": "lannonbr/LC-Heatmap",
          "count_2019": 180,
          "count_2020": 41601,
          "growth_factor": 231.11666666666667
        },
        {
          "repo_name": "willmcgugan/rich",
          "count_2019": 102,
          "count_2020": 20791,
          "growth_factor": 203.83333333333334
        },
        {
          "repo_name": "57r4n63r/archlinux-repository",
          "count_2019": 136,
          "count_2020": 27068,
          "growth_factor": 199.02941176470588
        },
        {
          "repo_name": "BarthJr/eventex",
          "count_2019": 638,
          "count_2020": 126770,
          "growth_factor": 198.69905956112854
        },
        {
          "repo_name": "getselfstudy/builder-course-5e04d15a34d8ce0009845bc5",
          "count_2019": 143,
          "count_2020": 26541,
          "growth_factor": 185.6013986013986
        },
        {
          "repo_name": "JetBrains/MPS",
          "count_2019": 1051,
          "count_2020": 192938,
          "growth_factor": 183.57564224548048
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count_2019",
          "type": "UInt64"
        },
        {
          "name": "count_2020",
          "type": "UInt64"
        },
        {
          "name": "growth_factor",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 25.044619904,
        "rows_read": 1416377712,
        "bytes_read": 9906033135
      },
      "executionTime": 25.093,
      "requestId": "01JTG2936HFZPKSBWK19XAD2MT",
      "length": 1085
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 12.626,
      "totalDuration": 13.7,
      "tokens": {
        "promptTokens": 4237,
        "completionTokens": 1449,
        "totalTokens": 5686
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(event_type, toYear(created_at) = 2019) AS count_2019,\n    countIf(event_type, toYear(created_at) = 2020) AS count_2020,\n    count_2020 / count_2019 AS growth_factor\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020) AND repo_name != ''\nGROUP BY repo_name\nHAVING count_2019 > 100 AND count_2020 > 0\nORDER BY growth_factor DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "coringao/blastem",
              "count_2019": 150,
              "count_2020": 279807,
              "growth_factor": 1865.38
            },
            {
              "repo_name": "CLSPhila/DocketScraperAPI",
              "count_2019": 770,
              "count_2020": 878775,
              "growth_factor": 1141.2662337662337
            },
            {
              "repo_name": "asmodehn/aiokraken",
              "count_2019": 464,
              "count_2020": 163386,
              "growth_factor": 352.125
            },
            {
              "repo_name": "eugenelabzov/mp3lib",
              "count_2019": 150,
              "count_2020": 40343,
              "growth_factor": 268.9533333333333
            },
            {
              "repo_name": "lannonbr/LC-Heatmap",
              "count_2019": 180,
              "count_2020": 41601,
              "growth_factor": 231.11666666666667
            },
            {
              "repo_name": "willmcgugan/rich",
              "count_2019": 102,
              "count_2020": 20791,
              "growth_factor": 203.83333333333334
            },
            {
              "repo_name": "57r4n63r/archlinux-repository",
              "count_2019": 136,
              "count_2020": 27068,
              "growth_factor": 199.02941176470588
            },
            {
              "repo_name": "BarthJr/eventex",
              "count_2019": 638,
              "count_2020": 126770,
              "growth_factor": 198.69905956112854
            },
            {
              "repo_name": "getselfstudy/builder-course-5e04d15a34d8ce0009845bc5",
              "count_2019": 143,
              "count_2020": 26541,
              "growth_factor": 185.6013986013986
            },
            {
              "repo_name": "JetBrains/MPS",
              "count_2019": 1051,
              "count_2020": 192938,
              "growth_factor": 183.57564224548048
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count_2019",
              "type": "UInt64"
            },
            {
              "name": "count_2020",
              "type": "UInt64"
            },
            {
              "name": "growth_factor",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 25.044619904,
            "rows_read": 1416377712,
            "bytes_read": 9906033135
          },
          "executionTime": 25.093,
          "requestId": "01JTG2936HFZPKSBWK19XAD2MT",
          "length": 1085
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 12.626,
          "totalDuration": 13.7,
          "tokens": {
            "promptTokens": 4237,
            "completionTokens": 1449,
            "totalTokens": 5686
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(toYear(created_at) = 2019) AS events_2019,\n    countIf(toYear(created_at) = 2020) AS events_2020,\n    events_2019 - events_2020 AS stagnation_decrease,\n    if(events_2019 = 0, 0, (events_2019 - events_2020) / events_2019) AS relative_stagnation\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020) AND repo_name != ''\nGROUP BY repo_name\nHAVING events_2019 > 100 AND events_2020 > 0\nORDER BY relative_stagnation DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "SophieDeBenedetto/learn-co-sandbox",
          "events_2019": 417058,
          "events_2020": 1,
          "stagnation_decrease": 417057,
          "relative_stagnation": 0.999997602251965
        },
        {
          "repo_name": "easy-websocket/www",
          "events_2019": 69264,
          "events_2020": 1,
          "stagnation_decrease": 69263,
          "relative_stagnation": 0.9999855624855625
        },
        {
          "repo_name": "open-data-city-census/open-data-city-census.github.io",
          "events_2019": 30791,
          "events_2020": 1,
          "stagnation_decrease": 30790,
          "relative_stagnation": 0.9999675229774935
        },
        {
          "repo_name": "sfu-natlang/gpu-monitor",
          "events_2019": 48053,
          "events_2020": 2,
          "stagnation_decrease": 48051,
          "relative_stagnation": 0.9999583792895345
        },
        {
          "repo_name": "ceylanb/erciyes_duyuru",
          "events_2019": 22176,
          "events_2020": 1,
          "stagnation_decrease": 22175,
          "relative_stagnation": 0.9999549062049062
        },
        {
          "repo_name": "AMDS123/amds123.github.io",
          "events_2019": 20674,
          "events_2020": 1,
          "stagnation_decrease": 20673,
          "relative_stagnation": 0.9999516300667505
        },
        {
          "repo_name": "humera987/FXLabs-Test-Automation",
          "events_2019": 32318,
          "events_2020": 2,
          "stagnation_decrease": 32316,
          "relative_stagnation": 0.9999381149823627
        },
        {
          "repo_name": "one-million-repo/one-million-repo",
          "events_2019": 13152,
          "events_2020": 1,
          "stagnation_decrease": 13151,
          "relative_stagnation": 0.9999239659367397
        },
        {
          "repo_name": "concourse/charts",
          "events_2019": 12902,
          "events_2020": 1,
          "stagnation_decrease": 12901,
          "relative_stagnation": 0.9999224926368004
        },
        {
          "repo_name": "mludowise/sketch-plugin-directory-plus",
          "events_2019": 12784,
          "events_2020": 1,
          "stagnation_decrease": 12783,
          "relative_stagnation": 0.9999217772215269
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "events_2019",
          "type": "UInt64"
        },
        {
          "name": "events_2020",
          "type": "UInt64"
        },
        {
          "name": "stagnation_decrease",
          "type": "Int64"
        },
        {
          "name": "relative_stagnation",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 23.534604542,
        "rows_read": 1416377712,
        "bytes_read": 8489655423
      },
      "executionTime": 23.581,
      "requestId": "01JTG2ADQWB7TET2CVS187J0RJ",
      "length": 1516
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 14.728,
      "totalDuration": 15.969,
      "tokens": {
        "promptTokens": 4236,
        "completionTokens": 1747,
        "totalTokens": 5983
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(toYear(created_at) = 2019) AS events_2019,\n    countIf(toYear(created_at) = 2020) AS events_2020,\n    events_2019 - events_2020 AS stagnation_decrease,\n    if(events_2019 = 0, 0, (events_2019 - events_2020) / events_2019) AS relative_stagnation\nFROM github_events\nWHERE toYear(created_at) IN (2019, 2020) AND repo_name != ''\nGROUP BY repo_name\nHAVING events_2019 > 100 AND events_2020 > 0\nORDER BY relative_stagnation DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "SophieDeBenedetto/learn-co-sandbox",
              "events_2019": 417058,
              "events_2020": 1,
              "stagnation_decrease": 417057,
              "relative_stagnation": 0.999997602251965
            },
            {
              "repo_name": "easy-websocket/www",
              "events_2019": 69264,
              "events_2020": 1,
              "stagnation_decrease": 69263,
              "relative_stagnation": 0.9999855624855625
            },
            {
              "repo_name": "open-data-city-census/open-data-city-census.github.io",
              "events_2019": 30791,
              "events_2020": 1,
              "stagnation_decrease": 30790,
              "relative_stagnation": 0.9999675229774935
            },
            {
              "repo_name": "sfu-natlang/gpu-monitor",
              "events_2019": 48053,
              "events_2020": 2,
              "stagnation_decrease": 48051,
              "relative_stagnation": 0.9999583792895345
            },
            {
              "repo_name": "ceylanb/erciyes_duyuru",
              "events_2019": 22176,
              "events_2020": 1,
              "stagnation_decrease": 22175,
              "relative_stagnation": 0.9999549062049062
            },
            {
              "repo_name": "AMDS123/amds123.github.io",
              "events_2019": 20674,
              "events_2020": 1,
              "stagnation_decrease": 20673,
              "relative_stagnation": 0.9999516300667505
            },
            {
              "repo_name": "humera987/FXLabs-Test-Automation",
              "events_2019": 32318,
              "events_2020": 2,
              "stagnation_decrease": 32316,
              "relative_stagnation": 0.9999381149823627
            },
            {
              "repo_name": "one-million-repo/one-million-repo",
              "events_2019": 13152,
              "events_2020": 1,
              "stagnation_decrease": 13151,
              "relative_stagnation": 0.9999239659367397
            },
            {
              "repo_name": "concourse/charts",
              "events_2019": 12902,
              "events_2020": 1,
              "stagnation_decrease": 12901,
              "relative_stagnation": 0.9999224926368004
            },
            {
              "repo_name": "mludowise/sketch-plugin-directory-plus",
              "events_2019": 12784,
              "events_2020": 1,
              "stagnation_decrease": 12783,
              "relative_stagnation": 0.9999217772215269
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "events_2019",
              "type": "UInt64"
            },
            {
              "name": "events_2020",
              "type": "UInt64"
            },
            {
              "name": "stagnation_decrease",
              "type": "Int64"
            },
            {
              "name": "relative_stagnation",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 23.534604542,
            "rows_read": 1416377712,
            "bytes_read": 8489655423
          },
          "executionTime": 23.581,
          "requestId": "01JTG2ADQWB7TET2CVS187J0RJ",
          "length": 1516
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 14.728,
          "totalDuration": 15.969,
          "tokens": {
            "promptTokens": 4236,
            "completionTokens": 1747,
            "totalTokens": 5983
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT toStartOfMonth(created_at)) AS active_months\nFROM github_events\nGROUP BY repo_name\nORDER BY active_months DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "adamfisk/LittleProxy",
          "active_months": 119
        },
        {
          "repo_name": "purcell/emacs.d",
          "active_months": 119
        },
        {
          "repo_name": "tpope/vim-pathogen",
          "active_months": 119
        },
        {
          "repo_name": "davatron5000/Lettering.js",
          "active_months": 119
        },
        {
          "repo_name": "openstack/nova",
          "active_months": 119
        },
        {
          "repo_name": "doctrine/migrations",
          "active_months": 119
        },
        {
          "repo_name": "pennersr/django-allauth",
          "active_months": 119
        },
        {
          "repo_name": "seajs/seajs",
          "active_months": 119
        },
        {
          "repo_name": "macournoyer/thin",
          "active_months": 119
        },
        {
          "repo_name": "blueimp/jQuery-File-Upload",
          "active_months": 119
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "active_months",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 69.292488971,
        "rows_read": 3124889133,
        "bytes_read": 18732847102
      },
      "executionTime": 69.339,
      "requestId": "01JTG2BSPQZBR878YQYECWFXTV",
      "length": 558
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 18.908,
      "totalDuration": 18.938,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 1767,
        "totalTokens": 5994
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT toStartOfMonth(created_at)) AS active_months\nFROM github_events\nGROUP BY repo_name\nORDER BY active_months DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "adamfisk/LittleProxy",
              "active_months": 119
            },
            {
              "repo_name": "purcell/emacs.d",
              "active_months": 119
            },
            {
              "repo_name": "tpope/vim-pathogen",
              "active_months": 119
            },
            {
              "repo_name": "davatron5000/Lettering.js",
              "active_months": 119
            },
            {
              "repo_name": "openstack/nova",
              "active_months": 119
            },
            {
              "repo_name": "doctrine/migrations",
              "active_months": 119
            },
            {
              "repo_name": "pennersr/django-allauth",
              "active_months": 119
            },
            {
              "repo_name": "seajs/seajs",
              "active_months": 119
            },
            {
              "repo_name": "macournoyer/thin",
              "active_months": 119
            },
            {
              "repo_name": "blueimp/jQuery-File-Upload",
              "active_months": 119
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "active_months",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 69.292488971,
            "rows_read": 3124889133,
            "bytes_read": 18732847102
          },
          "executionTime": 69.339,
          "requestId": "01JTG2BSPQZBR878YQYECWFXTV",
          "length": 558
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 18.908,
          "totalDuration": 18.938,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 1767,
            "totalTokens": 5994
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    DAYOFWEEK(created_at) AS day_of_week,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "stars": 38094378
        },
        {
          "day_of_week": 3,
          "stars": 37570733
        },
        {
          "day_of_week": 4,
          "stars": 37208005
        },
        {
          "day_of_week": 1,
          "stars": 36491986
        },
        {
          "day_of_week": 5,
          "stars": 34924484
        },
        {
          "day_of_week": 7,
          "stars": 24102566
        },
        {
          "day_of_week": 6,
          "stars": 23726322
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.207756214,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.227,
      "requestId": "01JTG2E5YYM8DT3WAW9W6XFWKZ",
      "length": 246
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 6.226,
      "totalDuration": 6.269,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 338,
        "totalTokens": 4565
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    DAYOFWEEK(created_at) AS day_of_week,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "stars": 38094378
            },
            {
              "day_of_week": 3,
              "stars": 37570733
            },
            {
              "day_of_week": 4,
              "stars": 37208005
            },
            {
              "day_of_week": 1,
              "stars": 36491986
            },
            {
              "day_of_week": 5,
              "stars": 34924484
            },
            {
              "day_of_week": 7,
              "stars": 24102566
            },
            {
              "day_of_week": 6,
              "stars": 23726322
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.207756214,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.227,
          "requestId": "01JTG2E5YYM8DT3WAW9W6XFWKZ",
          "length": 246
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.226,
          "totalDuration": 6.269,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 338,
            "totalTokens": 4565
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 34099240
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.94180914,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.983,
      "requestId": "01JTG2EAYX82GGC6PNYJT38TY9",
      "length": 41
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.324,
      "totalDuration": 2.369,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 73,
        "totalTokens": 4294
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 34099240
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.94180914,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.983,
          "requestId": "01JTG2EAYX82GGC6PNYJT38TY9",
          "length": 41
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.324,
          "totalDuration": 2.369,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 73,
            "totalTokens": 4294
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent'",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 10131322
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.894545881,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 4.939,
      "requestId": "01JTG2F2JJ92KDJFWRSGZC0E8P",
      "length": 41
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.655,
      "totalDuration": 2.691,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 180,
        "totalTokens": 4404
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent'",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 10131322
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.894545881,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 4.939,
          "requestId": "01JTG2F2JJ92KDJFWRSGZC0E8P",
          "length": 41
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.655,
          "totalDuration": 2.691,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 180,
            "totalTokens": 4404
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    count(DISTINCT actor_login)\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 18808891
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.773416602,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.815,
      "requestId": "01JTG2FCVNY48APDPQEAQJKK1K",
      "length": 41
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.853,
      "totalDuration": 3.093,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 165,
        "totalTokens": 4388
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    count(DISTINCT actor_login)\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 18808891
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.773416602,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.815,
          "requestId": "01JTG2FCVNY48APDPQEAQJKK1K",
          "length": 41
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.853,
          "totalDuration": 3.093,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 165,
            "totalTokens": 4388
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login)\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 1",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 6418718
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.232826604,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.252,
      "requestId": "01JTG2FQC3MTHZWGGSJJXBKPG9",
      "length": 40
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.435,
      "totalDuration": 3.471,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 244,
        "totalTokens": 4468
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login)\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 1",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 6418718
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.232826604,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.252,
          "requestId": "01JTG2FQC3MTHZWGGSJJXBKPG9",
          "length": 40
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.435,
          "totalDuration": 3.471,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 244,
            "totalTokens": 4468
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND actor_login GLOBAL IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars": 121976
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 109518
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars": 109244
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 106729
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 102997
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 96960
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 93499
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 89246
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 81594
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars": 79909
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 9.805258492,
        "rows_read": 446952570,
        "bytes_read": 2019582993
      },
      "executionTime": 9.852,
      "requestId": "01JTG2GG0CEMQGHY1XB8VEEZ5F",
      "length": 522
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 21.228,
      "totalDuration": 21.443,
      "tokens": {
        "promptTokens": 4241,
        "completionTokens": 2314,
        "totalTokens": 6555
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND actor_login GLOBAL IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars": 121976
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 109518
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars": 109244
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 106729
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 102997
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 96960
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 93499
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 89246
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 81594
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars": 79909
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 9.805258492,
            "rows_read": 446952570,
            "bytes_read": 2019582993
          },
          "executionTime": 9.852,
          "requestId": "01JTG2GG0CEMQGHY1XB8VEEZ5F",
          "length": 522
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 21.228,
          "totalDuration": 21.443,
          "tokens": {
            "promptTokens": 4241,
            "completionTokens": 2314,
            "totalTokens": 6555
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY actor_login\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 19655845
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 4695741
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 4140801
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 1675452
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 1186691
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 562383
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545186
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 521087
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "imgbot[bot]",
          "pr_count": 171285
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.243613736,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.262,
      "requestId": "01JTG2GZGQQBSGES0ZP9V1RVAG",
      "length": 512
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.32,
      "totalDuration": 3.554,
      "tokens": {
        "promptTokens": 4230,
        "completionTokens": 291,
        "totalTokens": 4521
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY actor_login\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 19655845
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 4695741
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 4140801
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 1675452
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 1186691
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 562383
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545186
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 521087
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "imgbot[bot]",
              "pr_count": 171285
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.243613736,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.262,
          "requestId": "01JTG2GZGQQBSGES0ZP9V1RVAG",
          "length": 512
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.32,
          "totalDuration": 3.554,
          "tokens": {
            "promptTokens": 4230,
            "completionTokens": 291,
            "totalTokens": 4521
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pr_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pr_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pr_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pr_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pr_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pr_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pr_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pr_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pr_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pr_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.704085579,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.723,
      "requestId": "01JTG2H6EBH6VR0QQTMX959THX",
      "length": 606
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.157,
      "totalDuration": 3.327,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 221,
        "totalTokens": 4448
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pr_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pr_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pr_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pr_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pr_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pr_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pr_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pr_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pr_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pr_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.704085579,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.723,
          "requestId": "01JTG2H6EBH6VR0QQTMX959THX",
          "length": 606
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.157,
          "totalDuration": 3.327,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 221,
            "totalTokens": 4448
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    uniq(actor_login) AS contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.395832267,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 2.446,
      "requestId": "01JTG2HFDHSNZJCT91EJW9AHAC",
      "length": 660
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 4.611,
      "totalDuration": 4.94,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 379,
        "totalTokens": 4607
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    uniq(actor_login) AS contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.395832267,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 2.446,
          "requestId": "01JTG2HFDHSNZJCT91EJW9AHAC",
          "length": 660
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 4.611,
          "totalDuration": 4.94,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 379,
            "totalTokens": 4607
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.467419455,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.492,
      "requestId": "01JTG2HQAY57CRCTVYQ4XGJR1N",
      "length": 573
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.899,
      "totalDuration": 3.184,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 223,
        "totalTokens": 4449
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.467419455,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.492,
          "requestId": "01JTG2HQAY57CRCTVYQ4XGJR1N",
          "length": 573
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.899,
          "totalDuration": 3.184,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 223,
            "totalTokens": 4449
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened' AND actor_login NOT LIKE '%[bot]' AND actor_login NOT LIKE '%bot%'\nGROUP BY repo_name\nORDER BY issues_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issues_count": 379379
        },
        {
          "repo_name": "pddemo/demo",
          "issues_count": 216215
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issues_count": 173986
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issues_count": 157014
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issues_count": 149264
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issues_count": 130920
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issues_count": 126712
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "issues_count": 108096
        },
        {
          "repo_name": "BoltunovOleg/ChatRoulette",
          "issues_count": 69970
        },
        {
          "repo_name": "Microsoft/vscode",
          "issues_count": 65082
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.672855689,
        "rows_read": 111439849,
        "bytes_read": 667302845
      },
      "executionTime": 0.698,
      "requestId": "01JTG2J0NT8ART3F9E08NCT74Q",
      "length": 580
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 6.025,
      "totalDuration": 6.569,
      "tokens": {
        "promptTokens": 4244,
        "completionTokens": 606,
        "totalTokens": 4850
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened' AND actor_login NOT LIKE '%[bot]' AND actor_login NOT LIKE '%bot%'\nGROUP BY repo_name\nORDER BY issues_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issues_count": 379379
            },
            {
              "repo_name": "pddemo/demo",
              "issues_count": 216215
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issues_count": 173986
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issues_count": 157014
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issues_count": 149264
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issues_count": 130920
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issues_count": 126712
            },
            {
              "repo_name": "Ramos-dev/jniwebshell",
              "issues_count": 108096
            },
            {
              "repo_name": "BoltunovOleg/ChatRoulette",
              "issues_count": 69970
            },
            {
              "repo_name": "Microsoft/vscode",
              "issues_count": 65082
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.672855689,
            "rows_read": 111439849,
            "bytes_read": 667302845
          },
          "executionTime": 0.698,
          "requestId": "01JTG2J0NT8ART3F9E08NCT74Q",
          "length": 580
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.025,
          "totalDuration": 6.569,
          "tokens": {
            "promptTokens": 4244,
            "completionTokens": 606,
            "totalTokens": 4850
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS issue_authors\nFROM github_events\nWHERE (event_type = 'IssuesEvent') AND (NOT endsWith(actor_login, '[bot]'))\nGROUP BY repo_name\nORDER BY issue_authors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "issue_authors": 27148
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "issue_authors": 21207
        },
        {
          "repo_name": "microsoft/vscode",
          "issue_authors": 19559
        },
        {
          "repo_name": "flutter/flutter",
          "issue_authors": 16770
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "issue_authors": 16688
        },
        {
          "repo_name": "ansible/ansible",
          "issue_authors": 13095
        },
        {
          "repo_name": "996icu/996.ICU",
          "issue_authors": 12826
        },
        {
          "repo_name": "FortAwesome/Font-Awesome",
          "issue_authors": 12784
        },
        {
          "repo_name": "facebook/react-native",
          "issue_authors": 11949
        },
        {
          "repo_name": "npm/npm",
          "issue_authors": 11469
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.053312012,
        "rows_read": 111439849,
        "bytes_read": 556535454
      },
      "executionTime": 1.077,
      "requestId": "01JTG2JEF4YCV7R2RE346QN1Q2",
      "length": 564
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 10.42,
      "totalDuration": 10.924,
      "tokens": {
        "promptTokens": 4251,
        "completionTokens": 1059,
        "totalTokens": 5310
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS issue_authors\nFROM github_events\nWHERE (event_type = 'IssuesEvent') AND (NOT endsWith(actor_login, '[bot]'))\nGROUP BY repo_name\nORDER BY issue_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Microsoft/vscode",
              "issue_authors": 27148
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "issue_authors": 21207
            },
            {
              "repo_name": "microsoft/vscode",
              "issue_authors": 19559
            },
            {
              "repo_name": "flutter/flutter",
              "issue_authors": 16770
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "issue_authors": 16688
            },
            {
              "repo_name": "ansible/ansible",
              "issue_authors": 13095
            },
            {
              "repo_name": "996icu/996.ICU",
              "issue_authors": 12826
            },
            {
              "repo_name": "FortAwesome/Font-Awesome",
              "issue_authors": 12784
            },
            {
              "repo_name": "facebook/react-native",
              "issue_authors": 11949
            },
            {
              "repo_name": "npm/npm",
              "issue_authors": 11469
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.053312012,
            "rows_read": 111439849,
            "bytes_read": 556535454
          },
          "executionTime": 1.077,
          "requestId": "01JTG2JEF4YCV7R2RE346QN1Q2",
          "length": 564
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 10.42,
          "totalDuration": 10.924,
          "tokens": {
            "promptTokens": 4251,
            "completionTokens": 1059,
            "totalTokens": 5310
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    uniq(actor_login) AS pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushers DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "pushers": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "pushers": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "pushers": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "pushers": 826
        },
        {
          "repo_name": "lifo/docrails",
          "pushers": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "pushers": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "pushers": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "pushers": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "pushers": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "pushers": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushers",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.715839061,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 24.764,
      "requestId": "01JTG2JMRBAM3M2F6SSGX88QYJ",
      "length": 562
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.765,
      "totalDuration": 2.837,
      "tokens": {
        "promptTokens": 4228,
        "completionTokens": 161,
        "totalTokens": 4389
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    uniq(actor_login) AS pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushers DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "pushers": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "pushers": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "pushers": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "pushers": 826
            },
            {
              "repo_name": "lifo/docrails",
              "pushers": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "pushers": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "pushers": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "pushers": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "pushers": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "pushers": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushers",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.715839061,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 24.764,
          "requestId": "01JTG2JMRBAM3M2F6SSGX88QYJ",
          "length": 562
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.765,
          "totalDuration": 2.837,
          "tokens": {
            "promptTokens": 4228,
            "completionTokens": 161,
            "totalTokens": 4389
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_actors\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_actors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
          "push_actors": 218
        },
        {
          "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
          "push_actors": 127
        },
        {
          "repo_name": "ministryofjustice/cloud-platform-environments",
          "push_actors": 68
        },
        {
          "repo_name": "sourcegraph/about",
          "push_actors": 64
        },
        {
          "repo_name": "apple/swift",
          "push_actors": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "push_actors": 52
        },
        {
          "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
          "push_actors": 51
        },
        {
          "repo_name": "SPM587FA20/SCM587FA20",
          "push_actors": 43
        },
        {
          "repo_name": "mks65/05_pointers",
          "push_actors": 38
        },
        {
          "repo_name": "mks65/09_construction",
          "push_actors": 38
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_actors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.618431559,
        "rows_read": 1601472977,
        "bytes_read": 49175592159
      },
      "executionTime": 3.665,
      "requestId": "01JTG2KNR9E1HHYGR8M5YH85G6",
      "length": 612
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 6.368,
      "totalDuration": 6.523,
      "tokens": {
        "promptTokens": 4232,
        "completionTokens": 547,
        "totalTokens": 4779
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_actors\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_actors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
              "push_actors": 218
            },
            {
              "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
              "push_actors": 127
            },
            {
              "repo_name": "ministryofjustice/cloud-platform-environments",
              "push_actors": 68
            },
            {
              "repo_name": "sourcegraph/about",
              "push_actors": 64
            },
            {
              "repo_name": "apple/swift",
              "push_actors": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "push_actors": 52
            },
            {
              "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
              "push_actors": 51
            },
            {
              "repo_name": "SPM587FA20/SCM587FA20",
              "push_actors": 43
            },
            {
              "repo_name": "mks65/05_pointers",
              "push_actors": 38
            },
            {
              "repo_name": "mks65/09_construction",
              "push_actors": 38
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_actors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.618431559,
            "rows_read": 1601472977,
            "bytes_read": 49175592159
          },
          "executionTime": 3.665,
          "requestId": "01JTG2KNR9E1HHYGR8M5YH85G6",
          "length": 612
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.368,
          "totalDuration": 6.523,
          "tokens": {
            "promptTokens": 4232,
            "completionTokens": 547,
            "totalTokens": 4779
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinctIf(actor_login, event_type = 'PushEvent' AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 93.642,
      "requestId": "01JTG2W79SYZ787DVBBCJM0HVE",
      "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinct(CASE\n        WHEN event_type = 'PushEvent' THEN actor_login\n        WHEN event_type = 'MemberEvent' AND action = 'added' THEN member_login\n        WHEN event_type = 'PullRequestEvent' AND merged = 1 AND merged_by IS NOT NULL AND merged_by != '' THEN merged_by\n        WHEN event_type = 'CreateEvent' AND ref_type = 'repository' THEN actor_login\n        ELSE NULL\n    END) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinctIf(actor_login, event_type = 'PushEvent' AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 11.396,
      "totalDuration": 12.085,
      "tokens": {
        "promptTokens": 4653,
        "completionTokens": 1208,
        "totalTokens": 5861
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinct(CASE\n        WHEN event_type = 'PushEvent' THEN actor_login\n        WHEN event_type = 'MemberEvent' AND action = 'added' THEN member_login\n        WHEN event_type = 'PullRequestEvent' AND merged = 1 AND merged_by IS NOT NULL AND merged_by != '' THEN merged_by\n        WHEN event_type = 'CreateEvent' AND ref_type = 'repository' THEN actor_login\n        ELSE NULL\n    END) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 112.179,
          "requestId": "01JTG2MFYTVRATPHJY75EVQ3X0",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 19.64,
          "totalDuration": 20.666,
          "tokens": {
            "promptTokens": 4246,
            "completionTokens": 2114,
            "totalTokens": 6360
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinctIf(actor_login, event_type = 'PushEvent' AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 107.52,
          "requestId": "01JTG2RG2078M1FVR4C2CEBQE6",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinct(CASE\n        WHEN event_type = 'PushEvent' THEN actor_login\n        WHEN event_type = 'MemberEvent' AND action = 'added' THEN member_login\n        WHEN event_type = 'PullRequestEvent' AND merged = 1 AND merged_by IS NOT NULL AND merged_by != '' THEN merged_by\n        WHEN event_type = 'CreateEvent' AND ref_type = 'repository' THEN actor_login\n        ELSE NULL\n    END) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 15.869,
          "totalDuration": 16.493,
          "tokens": {
            "promptTokens": 4484,
            "completionTokens": 1600,
            "totalTokens": 6084
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinctIf(actor_login, event_type = 'PushEvent' AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 93.642,
          "requestId": "01JTG2W79SYZ787DVBBCJM0HVE",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinct(CASE\n        WHEN event_type = 'PushEvent' THEN actor_login\n        WHEN event_type = 'MemberEvent' AND action = 'added' THEN member_login\n        WHEN event_type = 'PullRequestEvent' AND merged = 1 AND merged_by IS NOT NULL AND merged_by != '' THEN merged_by\n        WHEN event_type = 'CreateEvent' AND ref_type = 'repository' THEN actor_login\n        ELSE NULL\n    END) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    countDistinctIf(actor_login, event_type = 'WatchEvent') AS stars,\n    countDistinctIf(actor_login, event_type = 'PushEvent' AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')) AS pushers_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY pushers_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 11.396,
          "totalDuration": 12.085,
          "tokens": {
            "promptTokens": 4653,
            "completionTokens": 1208,
            "totalTokens": 5861
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS invitations_accepted\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitations_accepted DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "invitations_accepted": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "invitations_accepted": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "invitations_accepted": 3161
        },
        {
          "repo_name": "/",
          "invitations_accepted": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "invitations_accepted": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "invitations_accepted": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "invitations_accepted": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "invitations_accepted": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "invitations_accepted": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "invitations_accepted": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "invitations_accepted",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.442314908,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.461,
      "requestId": "01JTG2Z8AGZRWRXKKJ2M1FJ2C5",
      "length": 752
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.087,
      "totalDuration": 3.229,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 211,
        "totalTokens": 4438
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS invitations_accepted\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitations_accepted DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "invitations_accepted": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "invitations_accepted": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "invitations_accepted": 3161
            },
            {
              "repo_name": "/",
              "invitations_accepted": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "invitations_accepted": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "invitations_accepted": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "invitations_accepted": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "invitations_accepted": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "invitations_accepted": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "invitations_accepted": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "invitations_accepted",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.442314908,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.461,
          "requestId": "01JTG2Z8AGZRWRXKKJ2M1FJ2C5",
          "length": 752
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.087,
          "totalDuration": 3.229,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 211,
            "totalTokens": 4438
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.893064662,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.911,
      "requestId": "01JTG2ZEA1BJMP3T3V32H998PZ",
      "length": 542
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.135,
      "totalDuration": 3.165,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 206,
        "totalTokens": 4427
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.893064662,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.911,
          "requestId": "01JTG2ZEA1BJMP3T3V32H998PZ",
          "length": 542
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.135,
          "totalDuration": 3.165,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 206,
            "totalTokens": 4427
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    if(forks = 0, 0, stars / forks) AS ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "stars": 8190,
          "forks": 1,
          "ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "stars": 6042,
          "forks": 1,
          "ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "stars": 3069,
          "forks": 1,
          "ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "stars": 2288,
          "forks": 1,
          "ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "stars": 2088,
          "forks": 1,
          "ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "stars": 1822,
          "forks": 1,
          "ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "stars": 1801,
          "forks": 1,
          "ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "stars": 1795,
          "forks": 1,
          "ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "stars": 1759,
          "forks": 1,
          "ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "stars": 1752,
          "forks": 1,
          "ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 2.167947965,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.19,
      "requestId": "01JTG2ZV27FW2FJSY507BB5EHT",
      "length": 752
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 8.924,
      "totalDuration": 9.648,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 1020,
        "totalTokens": 5247
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    if(forks = 0, 0, stars / forks) AS ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "stars": 8190,
              "forks": 1,
              "ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "stars": 6042,
              "forks": 1,
              "ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "stars": 3069,
              "forks": 1,
              "ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "stars": 2288,
              "forks": 1,
              "ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "stars": 2088,
              "forks": 1,
              "ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "stars": 1822,
              "forks": 1,
              "ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "stars": 1801,
              "forks": 1,
              "ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "stars": 1795,
              "forks": 1,
              "ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "stars": 1759,
              "forks": 1,
              "ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "stars": 1752,
              "forks": 1,
              "ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 2.167947965,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.19,
          "requestId": "01JTG2ZV27FW2FJSY507BB5EHT",
          "length": 752
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 8.924,
          "totalDuration": 9.648,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 1020,
            "totalTokens": 5247
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars,\n    forks + stars AS total_score\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY total_score DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "forks": 27101,
          "stars": 354850,
          "total_score": 381951
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681,
          "total_score": 271907
        },
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364,
          "total_score": 269290
        },
        {
          "repo_name": "vuejs/vue",
          "forks": 37441,
          "stars": 199731,
          "total_score": 237172
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "forks": 9442,
          "stars": 225490,
          "total_score": 234932
        },
        {
          "repo_name": "facebook/react",
          "forks": 44678,
          "stars": 188575,
          "total_score": 233253
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371,
          "total_score": 219249
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322,
          "total_score": 203397
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601,
          "total_score": 202632
        },
        {
          "repo_name": "sindresorhus/awesome",
          "forks": 23708,
          "stars": 160542,
          "total_score": 184250
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "total_score",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.177166469,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.198,
      "requestId": "01JTG30B3KH8VSRXDQS5JNP65C",
      "length": 838
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 11.4,
      "totalDuration": 11.737,
      "tokens": {
        "promptTokens": 4233,
        "completionTokens": 1155,
        "totalTokens": 5388
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars,\n    forks + stars AS total_score\nFROM github_events\nWHERE event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY repo_name\nORDER BY total_score DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "forks": 27101,
              "stars": 354850,
              "total_score": 381951
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681,
              "total_score": 271907
            },
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364,
              "total_score": 269290
            },
            {
              "repo_name": "vuejs/vue",
              "forks": 37441,
              "stars": 199731,
              "total_score": 237172
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "forks": 9442,
              "stars": 225490,
              "total_score": 234932
            },
            {
              "repo_name": "facebook/react",
              "forks": 44678,
              "stars": 188575,
              "total_score": 233253
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371,
              "total_score": 219249
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322,
              "total_score": 203397
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601,
              "total_score": 202632
            },
            {
              "repo_name": "sindresorhus/awesome",
              "forks": 23708,
              "stars": 160542,
              "total_score": 184250
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "total_score",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.177166469,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.198,
          "requestId": "01JTG30B3KH8VSRXDQS5JNP65C",
          "length": 838
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 11.4,
          "totalDuration": 11.737,
          "tokens": {
            "promptTokens": 4233,
            "completionTokens": 1155,
            "totalTokens": 5388
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nORDER BY\n    forks DESC,\n    stars ASC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 51.448328494,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 51.496,
      "requestId": "01JTG30PD4DX68F028HM6HBFQV",
      "length": 676
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 6.535,
      "totalDuration": 6.845,
      "tokens": {
        "promptTokens": 4227,
        "completionTokens": 635,
        "totalTokens": 4862
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'ForkEvent') AS forks,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nORDER BY\n    forks DESC,\n    stars ASC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 51.448328494,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 51.496,
          "requestId": "01JTG30PD4DX68F028HM6HBFQV",
          "length": 676
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.535,
          "totalDuration": 6.845,
          "tokens": {
            "promptTokens": 4227,
            "completionTokens": 635,
            "totalTokens": 4862
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    divide(countIf(event_type = 'WatchEvent'), countIf(event_type = 'ForkEvent')) AS stars_per_fork\nFROM github_events\nLIMIT 1\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars": 232118474,
          "forks": 84709181,
          "stars_per_fork": 2.7401808311663407
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars_per_fork",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.282409899,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.301,
      "requestId": "01JTG32HF24ZNNMD5QWBC96WBH",
      "length": 74
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 5.949,
      "totalDuration": 6.499,
      "tokens": {
        "promptTokens": 4220,
        "completionTokens": 524,
        "totalTokens": 4744
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    divide(countIf(event_type = 'WatchEvent'), countIf(event_type = 'ForkEvent')) AS stars_per_fork\nFROM github_events\nLIMIT 1\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars": 232118474,
              "forks": 84709181,
              "stars_per_fork": 2.7401808311663407
            }
          ],
          "meta": [
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars_per_fork",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.282409899,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.301,
          "requestId": "01JTG32HF24ZNNMD5QWBC96WBH",
          "length": 74
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 5.949,
          "totalDuration": 6.499,
          "tokens": {
            "promptTokens": 4220,
            "completionTokens": 524,
            "totalTokens": 4744
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT count(DISTINCT (repo_name, number)) AS total_issues FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 1\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_issues": 65158794
        }
      ],
      "meta": [
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.596473163,
        "rows_read": 111439849,
        "bytes_read": 890651089
      },
      "executionTime": 1.618,
      "requestId": "01JTG32TD86SJ0817Y5H3DKV4D",
      "length": 27
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 6.2,
      "totalDuration": 6.355,
      "tokens": {
        "promptTokens": 4220,
        "completionTokens": 558,
        "totalTokens": 4778
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT count(DISTINCT (repo_name, number)) AS total_issues FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 1\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_issues": 65158794
            }
          ],
          "meta": [
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.596473163,
            "rows_read": 111439849,
            "bytes_read": 890651089
          },
          "executionTime": 1.618,
          "requestId": "01JTG32TD86SJ0817Y5H3DKV4D",
          "length": 27
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.2,
          "totalDuration": 6.355,
          "tokens": {
            "promptTokens": 4220,
            "completionTokens": 558,
            "totalTokens": 4778
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS comments_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comments_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "comments_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "comments_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "comments_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "comments_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "comments_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "comments_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "comments_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "comments_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "comments_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "comments_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.538019678,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.557,
      "requestId": "01JTG331DKXYSYHW1AFBD2YNB8",
      "length": 589
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.755,
      "totalDuration": 3.059,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 230,
        "totalTokens": 4453
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS comments_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comments_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "comments_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "comments_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "comments_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "comments_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "comments_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "comments_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "comments_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "comments_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "comments_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "comments_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.538019678,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.557,
          "requestId": "01JTG331DKXYSYHW1AFBD2YNB8",
          "length": 589
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.755,
          "totalDuration": 3.059,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 230,
            "totalTokens": 4453
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues,\n    if(issues = 0, 0, issue_comments / issues) AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments": 477302,
          "issues": 2,
          "ratio": 238651
        },
        {
          "repo_name": "sauron-demo/sauron",
          "issue_comments": 132338,
          "issues": 1,
          "ratio": 132338
        },
        {
          "repo_name": "apache/flink",
          "issue_comments": 58428,
          "issues": 1,
          "ratio": 58428
        },
        {
          "repo_name": "jbosstm/narayana",
          "issue_comments": 27020,
          "issues": 1,
          "ratio": 27020
        },
        {
          "repo_name": "php/php-src",
          "issue_comments": 25578,
          "issues": 1,
          "ratio": 25578
        },
        {
          "repo_name": "jenkinsci/jenkins",
          "issue_comments": 25431,
          "issues": 1,
          "ratio": 25431
        },
        {
          "repo_name": "apple/swift",
          "issue_comments": 175983,
          "issues": 7,
          "ratio": 25140.428571428572
        },
        {
          "repo_name": "dolphin-emu/dolphin",
          "issue_comments": 37761,
          "issues": 2,
          "ratio": 18880.5
        },
        {
          "repo_name": "gafusion/regression_notifications",
          "issue_comments": 16160,
          "issues": 1,
          "ratio": 16160
        },
        {
          "repo_name": "liferay/com-liferay-commerce",
          "issue_comments": 15010,
          "issues": 1,
          "ratio": 15010
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 1.350641542,
        "rows_read": 329902046,
        "bytes_read": 1318871326
      },
      "executionTime": 1.369,
      "requestId": "01JTG33ENE39V0DEZNTZWKWXDJ",
      "length": 866
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 9.896,
      "totalDuration": 10.502,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 1152,
        "totalTokens": 5378
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues,\n    if(issues = 0, 0, issue_comments / issues) AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments": 477302,
              "issues": 2,
              "ratio": 238651
            },
            {
              "repo_name": "sauron-demo/sauron",
              "issue_comments": 132338,
              "issues": 1,
              "ratio": 132338
            },
            {
              "repo_name": "apache/flink",
              "issue_comments": 58428,
              "issues": 1,
              "ratio": 58428
            },
            {
              "repo_name": "jbosstm/narayana",
              "issue_comments": 27020,
              "issues": 1,
              "ratio": 27020
            },
            {
              "repo_name": "php/php-src",
              "issue_comments": 25578,
              "issues": 1,
              "ratio": 25578
            },
            {
              "repo_name": "jenkinsci/jenkins",
              "issue_comments": 25431,
              "issues": 1,
              "ratio": 25431
            },
            {
              "repo_name": "apple/swift",
              "issue_comments": 175983,
              "issues": 7,
              "ratio": 25140.428571428572
            },
            {
              "repo_name": "dolphin-emu/dolphin",
              "issue_comments": 37761,
              "issues": 2,
              "ratio": 18880.5
            },
            {
              "repo_name": "gafusion/regression_notifications",
              "issue_comments": 16160,
              "issues": 1,
              "ratio": 16160
            },
            {
              "repo_name": "liferay/com-liferay-commerce",
              "issue_comments": 15010,
              "issues": 1,
              "ratio": 15010
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            },
            {
              "name": "issues",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 1.350641542,
            "rows_read": 329902046,
            "bytes_read": 1318871326
          },
          "executionTime": 1.369,
          "requestId": "01JTG33ENE39V0DEZNTZWKWXDJ",
          "length": 866
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 9.896,
          "totalDuration": 10.502,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 1152,
            "totalTokens": 5378
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS activity_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nORDER BY activity_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "activity_count": 1517643
        },
        {
          "repo_name": "apache/spark",
          "activity_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "activity_count": 556755
        },
        {
          "repo_name": "cms-sw/cmssw",
          "activity_count": 483468
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "activity_count": 477304
        },
        {
          "repo_name": "openshift/origin",
          "activity_count": 464990
        },
        {
          "repo_name": "Khan/khan-exercises",
          "activity_count": 421186
        },
        {
          "repo_name": "Microsoft/vscode",
          "activity_count": 400080
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "activity_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "activity_count": 384292
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "activity_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.219154023,
        "rows_read": 329902046,
        "bytes_read": 989046767
      },
      "executionTime": 1.239,
      "requestId": "01JTG33S8QHHEHQR0H1A5MHC0K",
      "length": 595
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 6.974,
      "totalDuration": 6.984,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 589,
        "totalTokens": 4814
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS activity_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nORDER BY activity_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "activity_count": 1517643
            },
            {
              "repo_name": "apache/spark",
              "activity_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "activity_count": 556755
            },
            {
              "repo_name": "cms-sw/cmssw",
              "activity_count": 483468
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "activity_count": 477304
            },
            {
              "repo_name": "openshift/origin",
              "activity_count": 464990
            },
            {
              "repo_name": "Khan/khan-exercises",
              "activity_count": 421186
            },
            {
              "repo_name": "Microsoft/vscode",
              "activity_count": 400080
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "activity_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "activity_count": 384292
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "activity_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.219154023,
            "rows_read": 329902046,
            "bytes_read": 989046767
          },
          "executionTime": 1.239,
          "requestId": "01JTG33S8QHHEHQR0H1A5MHC0K",
          "length": 595
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.974,
          "totalDuration": 6.984,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 589,
            "totalTokens": 4814
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (lower(title) LIKE '%epic bugs%' OR lower(body) LIKE '%epic bugs%')\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.013,
      "requestId": "01JTG34NP1Q9BF9ADPDWSFTDQF",
      "error": "{\"error\": \"Syntax error: unknown operator: 'endif' at line 9\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (title ILIKE '%epic bugs%' OR body ILIKE '%epic bugs%')\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (ilike(title, '%epic bugs%') OR ilike(body, '%epic bugs%'))\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.381,
      "totalDuration": 3.998,
      "tokens": {
        "promptTokens": 4556,
        "completionTokens": 352,
        "totalTokens": 4908
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (title ILIKE '%epic bugs%' OR body ILIKE '%epic bugs%')\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG3440WBP6M5F17ZTD87EFK",
          "error": "{\"error\": \"Syntax error: unknown operator: 'endif' at line 9\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 6.751,
          "totalDuration": 7.272,
          "tokens": {
            "promptTokens": 4230,
            "completionTokens": 736,
            "totalTokens": 4966
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (ilike(title, '%epic bugs%') OR ilike(body, '%epic bugs%'))\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG34FAGX787S3SD8V3NG32B",
          "error": "{\"error\": \"Syntax error: unknown operator: 'endif' at line 9\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (title ILIKE '%epic bugs%' OR body ILIKE '%epic bugs%')\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 8.552,
          "totalDuration": 9.055,
          "tokens": {
            "promptTokens": 4391,
            "completionTokens": 862,
            "totalTokens": 5253
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (lower(title) LIKE '%epic bugs%' OR lower(body) LIKE '%epic bugs%')\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG34NP1Q9BF9ADPDWSFTDQF",
          "error": "{\"error\": \"Syntax error: unknown operator: 'endif' at line 9\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (title ILIKE '%epic bugs%' OR body ILIKE '%epic bugs%')\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND (ilike(title, '%epic bugs%') OR ilike(body, '%epic bugs%'))\n{% if defined(issue_number_param) %}\nAND number = {{UInt32(issue_number_param, 0)}}\n{% endif %}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.381,
          "totalDuration": 3.998,
          "tokens": {
            "promptTokens": 4556,
            "completionTokens": 352,
            "totalTokens": 4908
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT\n    repo_name,\n    countDistinctIf(number, event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) AS epic_bug_count,\n    countDistinctIf(actor_login, event_type = 'IssueCommentEvent') AS comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{{{UInt64(min_comment_authors, 1)}}}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG374DGN12MFV0R2K8K2AY4",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 369 ('{') (line 9, col 56): {toUInt64('1')}}\\nORDER BY epic_bug_count DESC\\nLIMIT 10\\n FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count(distinct number) FILTER(WHERE event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) as epic_bug_count,\n    count(distinct actor_login) FILTER(WHERE event_type = 'IssueCommentEvent') as comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{{{UInt64(min_comment_authors, 1)}}}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    countDistinctIf(number, event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) AS epic_bug_count,\n    countDistinctIf(actor_login, event_type = 'IssueCommentEvent') AS comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{% if defined(min_comment_authors) %}} {{{{UInt64(min_comment_authors)}}}} {{% else %}} 1 {{% end %}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 12.664,
      "totalDuration": 13.515,
      "tokens": {
        "promptTokens": 4668,
        "completionTokens": 1314,
        "totalTokens": 5982
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\n%\nSELECT\n    repo_name,\n    count(distinct number) FILTER(WHERE event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) as epic_bug_count,\n    count(distinct actor_login) FILTER(WHERE event_type = 'IssueCommentEvent') as comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{{{UInt64(min_comment_authors, 1)}}}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.016,
          "requestId": "01JTG3660YA74ZVSXZ70KFK28P",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 393 ('{') (line 9, col 56): {toUInt64('1')}}\\nORDER BY epic_bug_count DESC\\nLIMIT 10\\n FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 46.003,
          "totalDuration": 46.985,
          "tokens": {
            "promptTokens": 4245,
            "completionTokens": 2494,
            "totalTokens": 6739
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    repo_name,\n    countDistinctIf(number, event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) AS epic_bug_count,\n    countDistinctIf(actor_login, event_type = 'IssueCommentEvent') AS comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{% if defined(min_comment_authors) %}} {{{{UInt64(min_comment_authors)}}}} {{% else %}} 1 {{% end %}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG36MRGNYPTQEQ8YPYAEQR2",
          "error": "{\"error\": \"Syntax error: invalid syntax\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count(distinct number) FILTER(WHERE event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) as epic_bug_count,\n    count(distinct actor_login) FILTER(WHERE event_type = 'IssueCommentEvent') as comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{{{UInt64(min_comment_authors, 1)}}}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 11.634,
          "totalDuration": 12.571,
          "tokens": {
            "promptTokens": 4448,
            "completionTokens": 1258,
            "totalTokens": 5706
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT\n    repo_name,\n    countDistinctIf(number, event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) AS epic_bug_count,\n    countDistinctIf(actor_login, event_type = 'IssueCommentEvent') AS comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{{{UInt64(min_comment_authors, 1)}}}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG374DGN12MFV0R2K8K2AY4",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 369 ('{') (line 9, col 56): {toUInt64('1')}}\\nORDER BY epic_bug_count DESC\\nLIMIT 10\\n FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    count(distinct number) FILTER(WHERE event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) as epic_bug_count,\n    count(distinct actor_login) FILTER(WHERE event_type = 'IssueCommentEvent') as comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{{{UInt64(min_comment_authors, 1)}}}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT\n    repo_name,\n    countDistinctIf(number, event_type = 'IssuesEvent' AND has(labels, 'epic bugs')) AS epic_bug_count,\n    countDistinctIf(actor_login, event_type = 'IssueCommentEvent') AS comment_author_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING epic_bug_count > 0 AND comment_author_count >= {{% if defined(min_comment_authors) %}} {{{{UInt64(min_comment_authors)}}}} {{% else %}} 1 {{% end %}}\nORDER BY epic_bug_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 12.664,
          "totalDuration": 13.515,
          "tokens": {
            "promptTokens": 4668,
            "completionTokens": 1314,
            "totalTokens": 5982
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    number,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY\n    repo_name,\n    number\nORDER BY comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "owncloud/core",
          "number": 0,
          "comment_count": 108577
        },
        {
          "repo_name": "Khan/khan-exercises",
          "number": 0,
          "comment_count": 101482
        },
        {
          "repo_name": "rails/rails",
          "number": 0,
          "comment_count": 76448
        },
        {
          "repo_name": "mapserver/mapserver",
          "number": 0,
          "comment_count": 74124
        },
        {
          "repo_name": "mxcl/homebrew",
          "number": 0,
          "comment_count": 67318
        },
        {
          "repo_name": "JuliaLang/julia",
          "number": 0,
          "comment_count": 61788
        },
        {
          "repo_name": "saltstack/salt",
          "number": 0,
          "comment_count": 60944
        },
        {
          "repo_name": "apache/spark",
          "number": 0,
          "comment_count": 59661
        },
        {
          "repo_name": "mozilla-b2g/gaia",
          "number": 0,
          "comment_count": 49467
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "number": 0,
          "comment_count": 48898
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.232395781,
        "rows_read": 218620144,
        "bytes_read": 1529337405
      },
      "executionTime": 5.288,
      "requestId": "01JTG37A93ZFM39REF7C13SSHZ",
      "length": 658
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.196,
      "totalDuration": 3.464,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 302,
        "totalTokens": 4526
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    number,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY\n    repo_name,\n    number\nORDER BY comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "owncloud/core",
              "number": 0,
              "comment_count": 108577
            },
            {
              "repo_name": "Khan/khan-exercises",
              "number": 0,
              "comment_count": 101482
            },
            {
              "repo_name": "rails/rails",
              "number": 0,
              "comment_count": 76448
            },
            {
              "repo_name": "mapserver/mapserver",
              "number": 0,
              "comment_count": 74124
            },
            {
              "repo_name": "mxcl/homebrew",
              "number": 0,
              "comment_count": 67318
            },
            {
              "repo_name": "JuliaLang/julia",
              "number": 0,
              "comment_count": 61788
            },
            {
              "repo_name": "saltstack/salt",
              "number": 0,
              "comment_count": 60944
            },
            {
              "repo_name": "apache/spark",
              "number": 0,
              "comment_count": 59661
            },
            {
              "repo_name": "mozilla-b2g/gaia",
              "number": 0,
              "comment_count": 49467
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "number": 0,
              "comment_count": 48898
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.232395781,
            "rows_read": 218620144,
            "bytes_read": 1529337405
          },
          "executionTime": 5.288,
          "requestId": "01JTG37A93ZFM39REF7C13SSHZ",
          "length": 658
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.196,
          "totalDuration": 3.464,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 302,
            "totalTokens": 4526
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "comment_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "comment_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "comment_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "comment_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "comment_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "comment_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "comment_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "comment_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "comment_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "comment_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.115899373,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.135,
      "requestId": "01JTG37MPSBNZB920J0QNSTJBQ",
      "length": 579
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.56,
      "totalDuration": 2.91,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 245,
        "totalTokens": 4470
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "comment_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "comment_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "comment_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "comment_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "comment_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "comment_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "comment_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "comment_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "comment_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "comment_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.115899373,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.135,
          "requestId": "01JTG37MPSBNZB920J0QNSTJBQ",
          "length": 579
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.56,
          "totalDuration": 2.91,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 245,
            "totalTokens": 4470
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    commit_id,\n    count() AS comments\nFROM github_events\nWHERE event_type IN ('CommitCommentEvent', 'PullRequestReviewCommentEvent') AND commit_id IS NOT NULL AND commit_id != ''\nGROUP BY commit_id\nORDER BY comments DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "commit_id": "145bcb0761fcfb3363642f15429af5653ae50be8",
          "comments": 83873
        },
        {
          "commit_id": "093d063f4faf48d749155b219d53165b82e0877a",
          "comments": 29464
        },
        {
          "commit_id": "7cf75dcf9b6594dc8d9689c1fc5a1b44a1f5df18",
          "comments": 11205
        },
        {
          "commit_id": "1aeb503d3a584d1c5de7bdf31f979e64be495f69",
          "comments": 9307
        },
        {
          "commit_id": "a25e5a013b03a4a47c116e111a0652505abce954",
          "comments": 7477
        },
        {
          "commit_id": "92740017782eb730c821cda0172999cf30049ad5",
          "comments": 6408
        },
        {
          "commit_id": "0539cf89944849de504c1b10a59b547606d7657e",
          "comments": 5755
        },
        {
          "commit_id": "b3dccc88f8b8c2dcfc7ecd821a656e03e17caa2d",
          "comments": 5160
        },
        {
          "commit_id": "ad9dc7a6fbe2bd7918c00e6077cf53bf122dc693",
          "comments": 5061
        },
        {
          "commit_id": "890bbee0f0550ea577dc1204aac0331e8a8981a1",
          "comments": 4825
        }
      ],
      "meta": [
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.951412879,
        "rows_read": 66068710,
        "bytes_read": 3204257577
      },
      "executionTime": 0.971,
      "requestId": "01JTG37WK4AH67NNNRW3TXNGAW",
      "length": 734
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 5.077,
      "totalDuration": 5.436,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 447,
        "totalTokens": 4670
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    commit_id,\n    count() AS comments\nFROM github_events\nWHERE event_type IN ('CommitCommentEvent', 'PullRequestReviewCommentEvent') AND commit_id IS NOT NULL AND commit_id != ''\nGROUP BY commit_id\nORDER BY comments DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "commit_id": "145bcb0761fcfb3363642f15429af5653ae50be8",
              "comments": 83873
            },
            {
              "commit_id": "093d063f4faf48d749155b219d53165b82e0877a",
              "comments": 29464
            },
            {
              "commit_id": "7cf75dcf9b6594dc8d9689c1fc5a1b44a1f5df18",
              "comments": 11205
            },
            {
              "commit_id": "1aeb503d3a584d1c5de7bdf31f979e64be495f69",
              "comments": 9307
            },
            {
              "commit_id": "a25e5a013b03a4a47c116e111a0652505abce954",
              "comments": 7477
            },
            {
              "commit_id": "92740017782eb730c821cda0172999cf30049ad5",
              "comments": 6408
            },
            {
              "commit_id": "0539cf89944849de504c1b10a59b547606d7657e",
              "comments": 5755
            },
            {
              "commit_id": "b3dccc88f8b8c2dcfc7ecd821a656e03e17caa2d",
              "comments": 5160
            },
            {
              "commit_id": "ad9dc7a6fbe2bd7918c00e6077cf53bf122dc693",
              "comments": 5061
            },
            {
              "commit_id": "890bbee0f0550ea577dc1204aac0331e8a8981a1",
              "comments": 4825
            }
          ],
          "meta": [
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.951412879,
            "rows_read": 66068710,
            "bytes_read": 3204257577
          },
          "executionTime": 0.971,
          "requestId": "01JTG37WK4AH67NNNRW3TXNGAW",
          "length": 734
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 5.077,
          "totalDuration": 5.436,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 447,
            "totalTokens": 4670
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    number,\n    title,\n    comments + review_comments AS total_comments\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'closed'\nORDER BY total_comments DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "abc1763613206/ccxt",
          "number": 1,
          "title": "[pull] master from ccxt:master",
          "total_comments": 4843
        },
        {
          "repo_name": "steviebeenz/postwoman",
          "number": 265,
          "title": "[pull] master from liyasthomas:master",
          "total_comments": 4069
        },
        {
          "repo_name": "dchbx/enroll",
          "number": 2515,
          "title": "40068",
          "total_comments": 3158
        },
        {
          "repo_name": "jlord/patchwork",
          "number": 6762,
          "title": "Burger",
          "total_comments": 2500
        },
        {
          "repo_name": "jlord/patchwork",
          "number": 8914,
          "title": "My first pull request",
          "total_comments": 2500
        },
        {
          "repo_name": "MicrosoftDocs/E2E_MicrosoftDocs_Dynamic",
          "number": 1,
          "title": "Update index.md",
          "total_comments": 2500
        },
        {
          "repo_name": "MicrosoftDocs/E2E_MicrosoftDocs_Dynamic",
          "number": 1,
          "title": "Update index.md",
          "total_comments": 2500
        },
        {
          "repo_name": "alistairjcbrown/mock-repo",
          "number": 7,
          "title": "Update to readme file",
          "total_comments": 2500
        },
        {
          "repo_name": "Zeroshi/COVID-19",
          "number": 1,
          "title": "[pull] master from CSSEGISandData:master",
          "total_comments": 2500
        },
        {
          "repo_name": "Zeroshi/Docs",
          "number": 1367,
          "title": "[pull] master from aspnet:master",
          "total_comments": 2500
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "total_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.436225409,
        "rows_read": 214762171,
        "bytes_read": 12770807007
      },
      "executionTime": 2.477,
      "requestId": "01JTG38A2GH9DXMJ978H682C2M",
      "length": 1059
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 10.176,
      "totalDuration": 10.309,
      "tokens": {
        "promptTokens": 4222,
        "completionTokens": 1003,
        "totalTokens": 5225
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    number,\n    title,\n    comments + review_comments AS total_comments\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'closed'\nORDER BY total_comments DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "abc1763613206/ccxt",
              "number": 1,
              "title": "[pull] master from ccxt:master",
              "total_comments": 4843
            },
            {
              "repo_name": "steviebeenz/postwoman",
              "number": 265,
              "title": "[pull] master from liyasthomas:master",
              "total_comments": 4069
            },
            {
              "repo_name": "dchbx/enroll",
              "number": 2515,
              "title": "40068",
              "total_comments": 3158
            },
            {
              "repo_name": "jlord/patchwork",
              "number": 6762,
              "title": "Burger",
              "total_comments": 2500
            },
            {
              "repo_name": "jlord/patchwork",
              "number": 8914,
              "title": "My first pull request",
              "total_comments": 2500
            },
            {
              "repo_name": "MicrosoftDocs/E2E_MicrosoftDocs_Dynamic",
              "number": 1,
              "title": "Update index.md",
              "total_comments": 2500
            },
            {
              "repo_name": "MicrosoftDocs/E2E_MicrosoftDocs_Dynamic",
              "number": 1,
              "title": "Update index.md",
              "total_comments": 2500
            },
            {
              "repo_name": "alistairjcbrown/mock-repo",
              "number": 7,
              "title": "Update to readme file",
              "total_comments": 2500
            },
            {
              "repo_name": "Zeroshi/COVID-19",
              "number": 1,
              "title": "[pull] master from CSSEGISandData:master",
              "total_comments": 2500
            },
            {
              "repo_name": "Zeroshi/Docs",
              "number": 1367,
              "title": "[pull] master from aspnet:master",
              "total_comments": 2500
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "total_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.436225409,
            "rows_read": 214762171,
            "bytes_read": 12770807007
          },
          "executionTime": 2.477,
          "requestId": "01JTG38A2GH9DXMJ978H682C2M",
          "length": 1059
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 10.176,
          "totalDuration": 10.309,
          "tokens": {
            "promptTokens": 4222,
            "completionTokens": 1003,
            "totalTokens": 5225
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    actor_login,\n    count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY pushes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "pushes": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "pushes": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "pushes": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "pushes": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "pushes": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "pushes": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "pushes": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "pushes": 3139278
        },
        {
          "actor_login": "newstools",
          "pushes": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "pushes": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.779303395,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.826,
      "requestId": "01JTG38K1P4N1BR4BAH7122YYW",
      "length": 492
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 4.063,
      "totalDuration": 4.207,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 224,
        "totalTokens": 4447
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    actor_login,\n    count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "pushes": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "pushes": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "pushes": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "pushes": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "pushes": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "pushes": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "pushes": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "pushes": 3139278
            },
            {
              "actor_login": "newstools",
              "pushes": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "pushes": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.779303395,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.826,
          "requestId": "01JTG38K1P4N1BR4BAH7122YYW",
          "length": 492
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 4.063,
          "totalDuration": 4.207,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 224,
            "totalTokens": 4447
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT\n    actor_login,\n    countIf(event_type = 'PushEvent') AS pushes,\n    uniqExactIf(repo_name, event_type = 'PushEvent') AS distinct_repos_pushed,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues_opened,\n    countIf(event_type = 'WatchEvent' AND action = 'started') AS stars_given,\n    argMaxIf(repo_name, created_at, event_type = 'PushEvent') AS last_repo_pushed_to\nFROM github_events\nWHERE actor_login NOT LIKE '%[bot]' AND actor_login NOT LIKE '%bot%'\nGROUP BY actor_login\nHAVING pushes > 0 AND distinct_repos_pushed >= {{UInt8(min_repos_pushed, 2)}} AND issues_opened >= 2 AND stars_given >= 2\nORDER BY pushes DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "tmtmtmtm",
          "pushes": 2313315,
          "distinct_repos_pushed": 1111,
          "issues_opened": 2283,
          "stars_given": 19,
          "last_repo_pushed_to": "tmtmtmtm/wikidata-position-history"
        },
        {
          "actor_login": "Dids",
          "pushes": 1679560,
          "distinct_repos_pushed": 162,
          "issues_opened": 290,
          "stars_given": 514,
          "last_repo_pushed_to": "Didstopia/physfs"
        },
        {
          "actor_login": "KenanSulayman",
          "pushes": 1597624,
          "distinct_repos_pushed": 285,
          "issues_opened": 160,
          "stars_given": 469,
          "last_repo_pushed_to": "KenanSulayman/heartbeat"
        },
        {
          "actor_login": "gugod",
          "pushes": 1343006,
          "distinct_repos_pushed": 241,
          "issues_opened": 59,
          "stars_given": 601,
          "last_repo_pushed_to": "gugod/advent-of-code"
        },
        {
          "actor_login": "scriptzteam",
          "pushes": 1314351,
          "distinct_repos_pushed": 103,
          "issues_opened": 223,
          "stars_given": 3426,
          "last_repo_pushed_to": "scriptzteam/BitCoin-MemPool-Fees-v1.2"
        },
        {
          "actor_login": "franck-paul",
          "pushes": 1313061,
          "distinct_repos_pushed": 83,
          "issues_opened": 13,
          "stars_given": 18,
          "last_repo_pushed_to": "dotclear/dotclear"
        },
        {
          "actor_login": "nicopeters",
          "pushes": 1224007,
          "distinct_repos_pushed": 5,
          "issues_opened": 2,
          "stars_given": 5,
          "last_repo_pushed_to": "nicopeters/sigrhtest"
        },
        {
          "actor_login": "yath",
          "pushes": 838607,
          "distinct_repos_pushed": 67,
          "issues_opened": 12,
          "stars_given": 6,
          "last_repo_pushed_to": "yath/vigor165"
        },
        {
          "actor_login": "funilrys",
          "pushes": 787492,
          "distinct_repos_pushed": 243,
          "issues_opened": 276,
          "stars_given": 117,
          "last_repo_pushed_to": "dead-hosts/CoinBlockersLists-hosts_browser_git_ZeroDot1"
        },
        {
          "actor_login": "Mr-Steal-Your-Script",
          "pushes": 778357,
          "distinct_repos_pushed": 111,
          "issues_opened": 19,
          "stars_given": 147,
          "last_repo_pushed_to": "Mr-Steal-Your-Script/bwfForum"
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes",
          "type": "UInt64"
        },
        {
          "name": "distinct_repos_pushed",
          "type": "UInt64"
        },
        {
          "name": "issues_opened",
          "type": "UInt64"
        },
        {
          "name": "stars_given",
          "type": "UInt64"
        },
        {
          "name": "last_repo_pushed_to",
          "type": "String"
        }
      ],
      "statistics": {
        "elapsed": 91.438818887,
        "rows_read": 3124889133,
        "bytes_read": 31136704380
      },
      "executionTime": 91.49,
      "requestId": "01JTG3BMSY8J4MPB9YWGJK9M5Q",
      "length": 1613
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 93.047,
      "totalDuration": 94.776,
      "tokens": {
        "promptTokens": 4300,
        "completionTokens": 4631,
        "totalTokens": 8931
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\n%\nSELECT\n    actor_login,\n    countIf(event_type = 'PushEvent') AS pushes,\n    uniqExactIf(repo_name, event_type = 'PushEvent') AS distinct_repos_pushed,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues_opened,\n    countIf(event_type = 'WatchEvent' AND action = 'started') AS stars_given,\n    argMaxIf(repo_name, created_at, event_type = 'PushEvent') AS last_repo_pushed_to\nFROM github_events\nWHERE actor_login NOT LIKE '%[bot]' AND actor_login NOT LIKE '%bot%'\nGROUP BY actor_login\nHAVING pushes > 0 AND distinct_repos_pushed >= {{UInt8(min_repos_pushed, 2)}} AND issues_opened >= 2 AND stars_given >= 2\nORDER BY pushes DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "tmtmtmtm",
              "pushes": 2313315,
              "distinct_repos_pushed": 1111,
              "issues_opened": 2283,
              "stars_given": 19,
              "last_repo_pushed_to": "tmtmtmtm/wikidata-position-history"
            },
            {
              "actor_login": "Dids",
              "pushes": 1679560,
              "distinct_repos_pushed": 162,
              "issues_opened": 290,
              "stars_given": 514,
              "last_repo_pushed_to": "Didstopia/physfs"
            },
            {
              "actor_login": "KenanSulayman",
              "pushes": 1597624,
              "distinct_repos_pushed": 285,
              "issues_opened": 160,
              "stars_given": 469,
              "last_repo_pushed_to": "KenanSulayman/heartbeat"
            },
            {
              "actor_login": "gugod",
              "pushes": 1343006,
              "distinct_repos_pushed": 241,
              "issues_opened": 59,
              "stars_given": 601,
              "last_repo_pushed_to": "gugod/advent-of-code"
            },
            {
              "actor_login": "scriptzteam",
              "pushes": 1314351,
              "distinct_repos_pushed": 103,
              "issues_opened": 223,
              "stars_given": 3426,
              "last_repo_pushed_to": "scriptzteam/BitCoin-MemPool-Fees-v1.2"
            },
            {
              "actor_login": "franck-paul",
              "pushes": 1313061,
              "distinct_repos_pushed": 83,
              "issues_opened": 13,
              "stars_given": 18,
              "last_repo_pushed_to": "dotclear/dotclear"
            },
            {
              "actor_login": "nicopeters",
              "pushes": 1224007,
              "distinct_repos_pushed": 5,
              "issues_opened": 2,
              "stars_given": 5,
              "last_repo_pushed_to": "nicopeters/sigrhtest"
            },
            {
              "actor_login": "yath",
              "pushes": 838607,
              "distinct_repos_pushed": 67,
              "issues_opened": 12,
              "stars_given": 6,
              "last_repo_pushed_to": "yath/vigor165"
            },
            {
              "actor_login": "funilrys",
              "pushes": 787492,
              "distinct_repos_pushed": 243,
              "issues_opened": 276,
              "stars_given": 117,
              "last_repo_pushed_to": "dead-hosts/CoinBlockersLists-hosts_browser_git_ZeroDot1"
            },
            {
              "actor_login": "Mr-Steal-Your-Script",
              "pushes": 778357,
              "distinct_repos_pushed": 111,
              "issues_opened": 19,
              "stars_given": 147,
              "last_repo_pushed_to": "Mr-Steal-Your-Script/bwfForum"
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes",
              "type": "UInt64"
            },
            {
              "name": "distinct_repos_pushed",
              "type": "UInt64"
            },
            {
              "name": "issues_opened",
              "type": "UInt64"
            },
            {
              "name": "stars_given",
              "type": "UInt64"
            },
            {
              "name": "last_repo_pushed_to",
              "type": "String"
            }
          ],
          "statistics": {
            "elapsed": 91.438818887,
            "rows_read": 3124889133,
            "bytes_read": 31136704380
          },
          "executionTime": 91.49,
          "requestId": "01JTG3BMSY8J4MPB9YWGJK9M5Q",
          "length": 1613
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 93.047,
          "totalDuration": 94.776,
          "tokens": {
            "promptTokens": 4300,
            "completionTokens": 4631,
            "totalTokens": 8931
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS org,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY org\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "org": "google",
          "stars": 1414877
        },
        {
          "org": "facebook",
          "stars": 1123380
        },
        {
          "org": "Microsoft",
          "stars": 691865
        },
        {
          "org": "microsoft",
          "stars": 669438
        },
        {
          "org": "alibaba",
          "stars": 580707
        },
        {
          "org": "sindresorhus",
          "stars": 565535
        },
        {
          "org": "apache",
          "stars": 553204
        },
        {
          "org": "vuejs",
          "stars": 494824
        },
        {
          "org": "tensorflow",
          "stars": 425613
        },
        {
          "org": "fossasia",
          "stars": 398255
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.533571318,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.552,
      "requestId": "01JTG3EM6TRPMDTB1JY8WW1Q46",
      "length": 343
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.355,
      "totalDuration": 3.725,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 315,
        "totalTokens": 4539
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS org,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY org\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "org": "google",
              "stars": 1414877
            },
            {
              "org": "facebook",
              "stars": 1123380
            },
            {
              "org": "Microsoft",
              "stars": 691865
            },
            {
              "org": "microsoft",
              "stars": 669438
            },
            {
              "org": "alibaba",
              "stars": 580707
            },
            {
              "org": "sindresorhus",
              "stars": 565535
            },
            {
              "org": "apache",
              "stars": 553204
            },
            {
              "org": "vuejs",
              "stars": 494824
            },
            {
              "org": "tensorflow",
              "stars": 425613
            },
            {
              "org": "fossasia",
              "stars": 398255
            }
          ],
          "meta": [
            {
              "name": "org",
              "type": "String"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.533571318,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.552,
          "requestId": "01JTG3EM6TRPMDTB1JY8WW1Q46",
          "length": 343
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.355,
          "totalDuration": 3.725,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 315,
            "totalTokens": 4539
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS org,\n    count(DISTINCT repo_name) AS num_repos\nFROM github_events\nGROUP BY org\nORDER BY num_repos DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "org": "direwolf-github",
          "num_repos": 1476731
        },
        {
          "org": "Likj128",
          "num_repos": 409130
        },
        {
          "org": "circle-test-organization",
          "num_repos": 340186
        },
        {
          "org": "learn-co-students",
          "num_repos": 325329
        },
        {
          "org": "botcopado",
          "num_repos": 136118
        },
        {
          "org": "idsqat1",
          "num_repos": 130217
        },
        {
          "org": "dvcsconnectortest",
          "num_repos": 128338
        },
        {
          "org": "mathias7777",
          "num_repos": 128099
        },
        {
          "org": "autotester-one",
          "num_repos": 125910
        },
        {
          "org": "isisliu",
          "num_repos": 121787
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "num_repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 50.62616144,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 50.671,
      "requestId": "01JTG3EX3QM2GR1SZHSKSGE2N6",
      "length": 430
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 5.017,
      "totalDuration": 5.038,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 387,
        "totalTokens": 4611
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS org,\n    count(DISTINCT repo_name) AS num_repos\nFROM github_events\nGROUP BY org\nORDER BY num_repos DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "org": "direwolf-github",
              "num_repos": 1476731
            },
            {
              "org": "Likj128",
              "num_repos": 409130
            },
            {
              "org": "circle-test-organization",
              "num_repos": 340186
            },
            {
              "org": "learn-co-students",
              "num_repos": 325329
            },
            {
              "org": "botcopado",
              "num_repos": 136118
            },
            {
              "org": "idsqat1",
              "num_repos": 130217
            },
            {
              "org": "dvcsconnectortest",
              "num_repos": 128338
            },
            {
              "org": "mathias7777",
              "num_repos": 128099
            },
            {
              "org": "autotester-one",
              "num_repos": 125910
            },
            {
              "org": "isisliu",
              "num_repos": 121787
            }
          ],
          "meta": [
            {
              "name": "org",
              "type": "String"
            },
            {
              "name": "num_repos",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 50.62616144,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 50.671,
          "requestId": "01JTG3EX3QM2GR1SZHSKSGE2N6",
          "length": 430
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 5.017,
          "totalDuration": 5.038,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 387,
            "totalTokens": 4611
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    arrayElement(splitByChar('/', repo_name), 1) AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.019,
      "requestId": "01JTG3HJ2QBAG3MENSE0BHRCJR",
      "error": "{\"error\": \"[Error] First argument for function indexOf must be an array. Actual LowCardinality(String): In scope SELECT splitByChar('/', repo_name)[1] AS organization, countDistinct(actor_login) AS community_size FROM github_llm_bench.github_events AS github_events WHERE indexOf(repo_name, '/') > 0 GROUP BY organization ORDER BY community_size DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Organizations by the size of community\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    arrayElement(splitByChar('/', repo_name), 1) AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE repo_name IS NOT NULL AND repo_name != '' AND indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 12.287,
      "totalDuration": 12.504,
      "tokens": {
        "promptTokens": 4484,
        "completionTokens": 1151,
        "totalTokens": 5635
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG3GR8773W5AC88D2X4T8M4",
          "error": "{\"error\": \"[Error] First argument for function indexOf must be an array. Actual LowCardinality(String): In scope SELECT splitByChar('/', repo_name)[1] AS organization, countDistinct(actor_login) AS community_size FROM github_llm_bench.github_events AS github_events WHERE indexOf(repo_name, '/') > 0 GROUP BY organization ORDER BY community_size DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 7.127,
          "totalDuration": 7.409,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 699,
            "totalTokens": 4923
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    arrayElement(splitByChar('/', repo_name), 1) AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE repo_name IS NOT NULL AND repo_name != '' AND indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG3H3D3N5106RHHAAPK3DN7",
          "error": "{\"error\": \"[Error] First argument for function indexOf must be an array. Actual LowCardinality(String): In scope SELECT splitByChar('/', repo_name)[1] AS organization, countDistinct(actor_login) AS community_size FROM github_llm_bench.github_events AS github_events WHERE (repo_name IS NOT NULL) AND (repo_name != '') AND (indexOf(repo_name, '/') > 0) GROUP BY organization ORDER BY community_size DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/q",
          "length": 2
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Organizations by the size of community\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 8.478,
          "totalDuration": 8.898,
          "tokens": {
            "promptTokens": 4346,
            "completionTokens": 795,
            "totalTokens": 5141
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    arrayElement(splitByChar('/', repo_name), 1) AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG3HJ2QBAG3MENSE0BHRCJR",
          "error": "{\"error\": \"[Error] First argument for function indexOf must be an array. Actual LowCardinality(String): In scope SELECT splitByChar('/', repo_name)[1] AS organization, countDistinct(actor_login) AS community_size FROM github_llm_bench.github_events AS github_events WHERE indexOf(repo_name, '/') > 0 GROUP BY organization ORDER BY community_size DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Organizations by the size of community\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    arrayElement(splitByChar('/', repo_name), 1) AS organization,\n    count(DISTINCT actor_login) AS community_size\nFROM github_events\nWHERE repo_name IS NOT NULL AND repo_name != '' AND indexOf(repo_name, '/') > 0\nGROUP BY organization\nORDER BY community_size DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 12.287,
          "totalDuration": 12.504,
          "tokens": {
            "promptTokens": 4484,
            "completionTokens": 1151,
            "totalTokens": 5635
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    sum(additions) + sum(deletions) AS total_modifications\nFROM github_events\nGROUP BY repo_name\nORDER BY total_modifications DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "fakegit/cdnjs",
          "total_modifications": 6223728023
        },
        {
          "repo_name": "Qwerty0x64/cdnjs",
          "total_modifications": 5707651053
        },
        {
          "repo_name": "srz-zumix/iutest-ci-results",
          "total_modifications": 4182822115
        },
        {
          "repo_name": "ikingye/cdnjs",
          "total_modifications": 1999864179
        },
        {
          "repo_name": "Azure/azure-powershell",
          "total_modifications": 1282480271
        },
        {
          "repo_name": "tomekw/whatever",
          "total_modifications": 1266325631
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_modifications": 1200122154
        },
        {
          "repo_name": "robertoDiaz/liferay-portal",
          "total_modifications": 965993649
        },
        {
          "repo_name": "silky/whatever",
          "total_modifications": 941461761
        },
        {
          "repo_name": "viliml/whatever",
          "total_modifications": 941451344
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_modifications",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 53.311449431,
        "rows_read": 3124889133,
        "bytes_read": 31231946651
      },
      "executionTime": 53.38,
      "requestId": "01JTG3HQVEEBDGA0S0VWGR199N",
      "length": 695
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 2.95,
      "totalDuration": 3.343,
      "tokens": {
        "promptTokens": 4242,
        "completionTokens": 255,
        "totalTokens": 4497
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    sum(additions) + sum(deletions) AS total_modifications\nFROM github_events\nGROUP BY repo_name\nORDER BY total_modifications DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "fakegit/cdnjs",
              "total_modifications": 6223728023
            },
            {
              "repo_name": "Qwerty0x64/cdnjs",
              "total_modifications": 5707651053
            },
            {
              "repo_name": "srz-zumix/iutest-ci-results",
              "total_modifications": 4182822115
            },
            {
              "repo_name": "ikingye/cdnjs",
              "total_modifications": 1999864179
            },
            {
              "repo_name": "Azure/azure-powershell",
              "total_modifications": 1282480271
            },
            {
              "repo_name": "tomekw/whatever",
              "total_modifications": 1266325631
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_modifications": 1200122154
            },
            {
              "repo_name": "robertoDiaz/liferay-portal",
              "total_modifications": 965993649
            },
            {
              "repo_name": "silky/whatever",
              "total_modifications": 941461761
            },
            {
              "repo_name": "viliml/whatever",
              "total_modifications": 941451344
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_modifications",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 53.311449431,
            "rows_read": 3124889133,
            "bytes_read": 31231946651
          },
          "executionTime": 53.38,
          "requestId": "01JTG3HQVEEBDGA0S0VWGR199N",
          "length": 695
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 2.95,
          "totalDuration": 3.343,
          "tokens": {
            "promptTokens": 4242,
            "completionTokens": 255,
            "totalTokens": 4497
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushes DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "pushes": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "pushes": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "pushes": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "pushes": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "pushes": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "pushes": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "pushes": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "pushes": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "pushes": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "pushes": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.12542546,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 26.168,
      "requestId": "01JTG3KHWR1FZK8PS095D084YD",
      "length": 531
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.252,
      "totalDuration": 3.578,
      "tokens": {
        "promptTokens": 4225,
        "completionTokens": 236,
        "totalTokens": 4461
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushes DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "pushes": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "pushes": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "pushes": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "pushes": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "pushes": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "pushes": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "pushes": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "pushes": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "pushes": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "pushes": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.12542546,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 26.168,
          "requestId": "01JTG3KHWR1FZK8PS095D084YD",
          "length": 531
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.252,
          "totalDuration": 3.578,
          "tokens": {
            "promptTokens": 4225,
            "completionTokens": 236,
            "totalTokens": 4461
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    actor_login,\n    count() AS reviews_count\nFROM github_events\nWHERE event_type IN ('PullRequestReviewEvent', 'PullRequestReviewCommentEvent')\nGROUP BY actor_login\nORDER BY reviews_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "houndci-bot",
          "reviews_count": 992988
        },
        {
          "actor_login": "houndci",
          "reviews_count": 358016
        },
        {
          "actor_login": "codacy-bot",
          "reviews_count": 327712
        },
        {
          "actor_login": "hound[bot]",
          "reviews_count": 230041
        },
        {
          "actor_login": "github-learning-lab[bot]",
          "reviews_count": 168995
        },
        {
          "actor_login": "github-actions[bot]",
          "reviews_count": 127892
        },
        {
          "actor_login": "codeclimate[bot]",
          "reviews_count": 97200
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "reviews_count": 59254
        },
        {
          "actor_login": "stickler-ci",
          "reviews_count": 56327
        },
        {
          "actor_login": "foreign-sub",
          "reviews_count": 51037
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "reviews_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.255800804,
        "rows_read": 63495733,
        "bytes_read": 190280765
      },
      "executionTime": 0.274,
      "requestId": "01JTG3MHS8J1S86PRSRRGCNFV3",
      "length": 557
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.734,
      "totalDuration": 4.006,
      "tokens": {
        "promptTokens": 4224,
        "completionTokens": 300,
        "totalTokens": 4524
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    actor_login,\n    count() AS reviews_count\nFROM github_events\nWHERE event_type IN ('PullRequestReviewEvent', 'PullRequestReviewCommentEvent')\nGROUP BY actor_login\nORDER BY reviews_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "houndci-bot",
              "reviews_count": 992988
            },
            {
              "actor_login": "houndci",
              "reviews_count": 358016
            },
            {
              "actor_login": "codacy-bot",
              "reviews_count": 327712
            },
            {
              "actor_login": "hound[bot]",
              "reviews_count": 230041
            },
            {
              "actor_login": "github-learning-lab[bot]",
              "reviews_count": 168995
            },
            {
              "actor_login": "github-actions[bot]",
              "reviews_count": 127892
            },
            {
              "actor_login": "codeclimate[bot]",
              "reviews_count": 97200
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "reviews_count": 59254
            },
            {
              "actor_login": "stickler-ci",
              "reviews_count": 56327
            },
            {
              "actor_login": "foreign-sub",
              "reviews_count": 51037
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "reviews_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.255800804,
            "rows_read": 63495733,
            "bytes_read": 190280765
          },
          "executionTime": 0.274,
          "requestId": "01JTG3MHS8J1S86PRSRRGCNFV3",
          "length": 557
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.734,
          "totalDuration": 4.006,
          "tokens": {
            "promptTokens": 4224,
            "completionTokens": 300,
            "totalTokens": 4524
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    arrayJoin(labels) AS label,\n    count() AS count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND arrayExists(x -> x != '', labels)\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "dependencies",
          "count": 9458518
        },
        {
          "label": "enhancement",
          "count": 6805408
        },
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": ":arrow_heading_down: pull",
          "count": 4124651
        },
        {
          "label": "question",
          "count": 934878
        },
        {
          "label": "help wanted",
          "count": 757775
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "cla: yes",
          "count": 653842
        },
        {
          "label": "documentation",
          "count": 512616
        },
        {
          "label": "javascript",
          "count": 507441
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.944132339,
        "rows_read": 326129279,
        "bytes_read": 3089508231
      },
      "executionTime": 0.964,
      "requestId": "01JTG3MRK0SWYN506B9PMG0QH0",
      "length": 393
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.921,
      "totalDuration": 4.191,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 296,
        "totalTokens": 4522
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    arrayJoin(labels) AS label,\n    count() AS count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND arrayExists(x -> x != '', labels)\nGROUP BY label\nORDER BY count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "dependencies",
              "count": 9458518
            },
            {
              "label": "enhancement",
              "count": 6805408
            },
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": ":arrow_heading_down: pull",
              "count": 4124651
            },
            {
              "label": "question",
              "count": 934878
            },
            {
              "label": "help wanted",
              "count": 757775
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "cla: yes",
              "count": 653842
            },
            {
              "label": "documentation",
              "count": 512616
            },
            {
              "label": "javascript",
              "count": 507441
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.944132339,
            "rows_read": 326129279,
            "bytes_read": 3089508231
          },
          "executionTime": 0.964,
          "requestId": "01JTG3MRK0SWYN506B9PMG0QH0",
          "length": 393
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.921,
          "totalDuration": 4.191,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 296,
            "totalTokens": 4522
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    arrayJoin(labels) AS label,\n    count() AS count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND regexp_matches(label, '(?i)(bug|feature)')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "Bug",
          "count": 501959
        },
        {
          "label": "kind/bug",
          "count": 164302
        },
        {
          "label": "Feature",
          "count": 159482
        },
        {
          "label": "feature request",
          "count": 139669
        },
        {
          "label": "type: bug",
          "count": 138342
        },
        {
          "label": "Type: Bug",
          "count": 116961
        },
        {
          "label": "new feature",
          "count": 76433
        },
        {
          "label": "type:bug",
          "count": 66866
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.908968058,
        "rows_read": 326129279,
        "bytes_read": 3089461446
      },
      "executionTime": 0.929,
      "requestId": "01JTG3N5FTY56PFTQ7D0Q8578D",
      "length": 360
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 9.592,
      "totalDuration": 9.742,
      "tokens": {
        "promptTokens": 4232,
        "completionTokens": 879,
        "totalTokens": 5111
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    arrayJoin(labels) AS label,\n    count() AS count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent') AND regexp_matches(label, '(?i)(bug|feature)')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "Bug",
              "count": 501959
            },
            {
              "label": "kind/bug",
              "count": 164302
            },
            {
              "label": "Feature",
              "count": 159482
            },
            {
              "label": "feature request",
              "count": 139669
            },
            {
              "label": "type: bug",
              "count": 138342
            },
            {
              "label": "Type: Bug",
              "count": 116961
            },
            {
              "label": "new feature",
              "count": 76433
            },
            {
              "label": "type:bug",
              "count": 66866
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.908968058,
            "rows_read": 326129279,
            "bytes_read": 3089461446
          },
          "executionTime": 0.929,
          "requestId": "01JTG3N5FTY56PFTQ7D0Q8578D",
          "length": 360
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 9.592,
          "totalDuration": 9.742,
          "tokens": {
            "promptTokens": 4232,
            "completionTokens": 879,
            "totalTokens": 5111
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT repo_name, CHAR_LENGTH(repo_name) AS len FROM github_events GROUP BY repo_name ORDER BY len DESC LIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "696969696969696969696969696969696969696/6969696969696969696969696969696969696966969696969696969696969696969696969696966969696969696969696969",
          "len": 140
        },
        {
          "repo_name": "JonathanJonathanJonathanJonathanJonatha/JonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJona",
          "len": 140
        },
        {
          "repo_name": "OOOOOOOOOOOOOOOOOOOOOOOOOOOO0OOOOOOOOOO/OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
          "len": 140
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UUID-FJ3338IE8FJwIDUsSe3",
          "len": 140
        },
        {
          "repo_name": "GiT0WOalVjZ6ZhToNFeqLpdYByfodiQ4nksWmTL/SMp7RImOgmQphQXOSzcnX9Q4tvtFfBHYdnu2wXB3Xi3WgNKi8digOgrd6aMF5a7HeLjGLWSiEycf0mPlG4p95EJBU1gSdKEd89Ev",
          "len": 140
        },
        {
          "repo_name": "67d97qysgdayWUUedyaysybdu74389eywaysd89/gfydiasuiahgutsfya8oup9iufogyyshdoufpaighvjcghuashgvjdhouihgcfdyuaousgjcdgiyoup9ashvgiudipuiahgvcvsj",
          "len": 140
        },
        {
          "repo_name": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz/1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
          "len": 140
        },
        {
          "repo_name": "trewqetiiiiiiiii2SCjjjiIUYiIIIIIIT45UIi/iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiihggggggggggggggggggjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj",
          "len": 140
        },
        {
          "repo_name": "jfhuisdhfudhkjshdkjfhuildfhiugfjzgzugeh/xkvylkn-fjkbngdjkfbkjdnfbjndkfjbn-jknkjcvnxkbjbngljhbnuidyvfiljfjkhkjjjfnjnvjkfnjvnjvnjnfjsnjvfnjkds",
          "len": 140
        },
        {
          "repo_name": "eg-data-platform-streaming-component-12/long-name-1234567890-1234567890-1234567890-1234567890-1234567890-1234567890-1234567890-1234567890-12",
          "len": 140
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "len",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 42.648835115,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 42.721,
      "requestId": "01JTG3NDX1A9TD6HJBASS2HDA1",
      "length": 1671
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 4.977,
      "totalDuration": 5.134,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 411,
        "totalTokens": 4632
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT repo_name, CHAR_LENGTH(repo_name) AS len FROM github_events GROUP BY repo_name ORDER BY len DESC LIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "696969696969696969696969696969696969696/6969696969696969696969696969696969696966969696969696969696969696969696969696966969696969696969696969",
              "len": 140
            },
            {
              "repo_name": "JonathanJonathanJonathanJonathanJonatha/JonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJona",
              "len": 140
            },
            {
              "repo_name": "OOOOOOOOOOOOOOOOOOOOOOOOOOOO0OOOOOOOOOO/OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO",
              "len": 140
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UUID-FJ3338IE8FJwIDUsSe3",
              "len": 140
            },
            {
              "repo_name": "GiT0WOalVjZ6ZhToNFeqLpdYByfodiQ4nksWmTL/SMp7RImOgmQphQXOSzcnX9Q4tvtFfBHYdnu2wXB3Xi3WgNKi8digOgrd6aMF5a7HeLjGLWSiEycf0mPlG4p95EJBU1gSdKEd89Ev",
              "len": 140
            },
            {
              "repo_name": "67d97qysgdayWUUedyaysybdu74389eywaysd89/gfydiasuiahgutsfya8oup9iufogyyshdoufpaighvjcghuashgvjdhouihgcfdyuaousgjcdgiyoup9ashvgiudipuiahgvcvsj",
              "len": 140
            },
            {
              "repo_name": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz/1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
              "len": 140
            },
            {
              "repo_name": "trewqetiiiiiiiii2SCjjjiIUYiIIIIIIT45UIi/iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiihggggggggggggggggggjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj",
              "len": 140
            },
            {
              "repo_name": "jfhuisdhfudhkjshdkjfhuildfhiugfjzgzugeh/xkvylkn-fjkbngdjkfbkjdnfbjndkfjbn-jknkjcvnxkbjbngljhbnuidyvfiljfjkhkjjjfnjnvjkfnjvnjvnjnfjsnjvfnjkds",
              "len": 140
            },
            {
              "repo_name": "eg-data-platform-streaming-component-12/long-name-1234567890-1234567890-1234567890-1234567890-1234567890-1234567890-1234567890-1234567890-12",
              "len": 140
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "len",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 42.648835115,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 42.721,
          "requestId": "01JTG3NDX1A9TD6HJBASS2HDA1",
          "length": 1671
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 4.977,
          "totalDuration": 5.134,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 411,
            "totalTokens": 4632
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS len\nFROM github_events\nORDER BY len ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        },
        {
          "repo_name": "/",
          "len": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "len",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 7.701297789,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.746,
      "requestId": "01JTG3PXWYZA4235ZT5E050D48",
      "length": 261
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 3.85,
      "totalDuration": 3.951,
      "tokens": {
        "promptTokens": 4221,
        "completionTokens": 276,
        "totalTokens": 4497
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS len\nFROM github_events\nORDER BY len ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            },
            {
              "repo_name": "/",
              "len": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "len",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 7.701297789,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.746,
          "requestId": "01JTG3PXWYZA4235ZT5E050D48",
          "length": 261
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 3.85,
          "totalDuration": 3.951,
          "tokens": {
            "promptTokens": 4221,
            "completionTokens": 276,
            "totalTokens": 4497
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type IN ('CommitCommentEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent') AND body ILIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 11811
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 6775
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 1555
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 671
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 485
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 443
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "comment_count": 380
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 276
        },
        {
          "repo_name": "bugron/TestPrBot",
          "comment_count": 249
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 215
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 12.604138266,
        "rows_read": 284616113,
        "bytes_read": 102862595294
      },
      "executionTime": 12.647,
      "requestId": "01JTG3QCDAKYNXWG8MP7DPYK7A",
      "length": 606
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 4.293,
      "totalDuration": 4.613,
      "tokens": {
        "promptTokens": 4226,
        "completionTokens": 372,
        "totalTokens": 4598
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    count() AS comment_count\nFROM github_events\nWHERE event_type IN ('CommitCommentEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent') AND body ILIKE '%freecodecamp%'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 11811
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 6775
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 1555
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 671
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 485
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 443
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "comment_count": 380
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 276
            },
            {
              "repo_name": "bugron/TestPrBot",
              "comment_count": 249
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 215
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 12.604138266,
            "rows_read": 284616113,
            "bytes_read": 102862595294
          },
          "executionTime": 12.647,
          "requestId": "01JTG3QCDAKYNXWG8MP7DPYK7A",
          "length": 606
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 4.293,
          "totalDuration": 4.613,
          "tokens": {
            "promptTokens": 4226,
            "completionTokens": 372,
            "totalTokens": 4598
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nHAVING countIf(event_type IN ('CommitCommentEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent') AND body LIKE '%freecodecamp%') > 0\nORDER BY stars DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "flutter/flutter",
          "stars": 116303
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 115651
        },
        {
          "repo_name": "facebook/react-native",
          "stars": 105346
        },
        {
          "repo_name": "TheAlgorithms/Python",
          "stars": 102067
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 100.597984887,
        "rows_read": 3124889133,
        "bytes_read": 521307136331
      },
      "executionTime": 100.645,
      "requestId": "01JTG3RAKXC2YW497AP6CJAVZ9",
      "length": 522
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 15.496,
      "totalDuration": 15.78,
      "tokens": {
        "promptTokens": 4231,
        "completionTokens": 1609,
        "totalTokens": 5840
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nHAVING countIf(event_type IN ('CommitCommentEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent') AND body LIKE '%freecodecamp%') > 0\nORDER BY stars DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "flutter/flutter",
              "stars": 116303
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 115651
            },
            {
              "repo_name": "facebook/react-native",
              "stars": 105346
            },
            {
              "repo_name": "TheAlgorithms/Python",
              "stars": 102067
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 100.597984887,
            "rows_read": 3124889133,
            "bytes_read": 521307136331
          },
          "executionTime": 100.645,
          "requestId": "01JTG3RAKXC2YW497AP6CJAVZ9",
          "length": 522
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 15.496,
          "totalDuration": 15.78,
          "tokens": {
            "promptTokens": 4231,
            "completionTokens": 1609,
            "totalTokens": 5840
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    comment_id,\n    body,\n    actor_login,\n    repo_name,\n    number,\n    created_at,\n    comments\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PullRequestReviewEvent') AND body IS NOT NULL AND body != ''\nORDER BY comments DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "comment_id": 122528255,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528261,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528251,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528257,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528249,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528262,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528258,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528263,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528270,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        },
        {
          "comment_id": 122528269,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "number": 10,
          "created_at": "2015-07-18 10:39:02",
          "comments": 2512
        }
      ],
      "meta": [
        {
          "name": "comment_id",
          "type": "UInt64"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 11.707032036,
        "rows_read": 282043136,
        "bytes_read": 109156382885
      },
      "executionTime": 11.758,
      "requestId": "01JTG3W31E5QSW4AZP6ADPSEGB",
      "length": 2251
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "gemini-2.5-pro-preview-03-25",
    "provider": "google",
    "metrics": {
      "timeToFirstToken": 19.632,
      "totalDuration": 20.162,
      "tokens": {
        "promptTokens": 4223,
        "completionTokens": 1907,
        "totalTokens": 6130
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    comment_id,\n    body,\n    actor_login,\n    repo_name,\n    number,\n    created_at,\n    comments\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PullRequestReviewEvent') AND body IS NOT NULL AND body != ''\nORDER BY comments DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "comment_id": 122528255,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528261,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528251,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528257,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528249,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528262,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528258,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528263,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528270,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            },
            {
              "comment_id": 122528269,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "number": 10,
              "created_at": "2015-07-18 10:39:02",
              "comments": 2512
            }
          ],
          "meta": [
            {
              "name": "comment_id",
              "type": "UInt64"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 11.707032036,
            "rows_read": 282043136,
            "bytes_read": 109156382885
          },
          "executionTime": 11.758,
          "requestId": "01JTG3W31E5QSW4AZP6ADPSEGB",
          "length": 2251
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "gemini-2.5-pro-preview-03-25",
        "provider": "google",
        "metrics": {
          "timeToFirstToken": 19.632,
          "totalDuration": 20.162,
          "tokens": {
            "promptTokens": 4223,
            "completionTokens": 1907,
            "totalTokens": 6130
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as star_count \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY star_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "star_count": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "star_count": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "star_count": 199731
        },
        {
          "repo_name": "facebook/react",
          "star_count": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "star_count": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "star_count": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "star_count": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "star_count": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "star_count": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "star_count": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.202729519,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.22,
      "requestId": "01JTG3WJ4JR0G8YMN6DZ8088J9",
      "length": 567
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.84,
      "totalDuration": 1.206,
      "tokens": {
        "promptTokens": 3778,
        "completionTokens": 38,
        "totalTokens": 3816
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as star_count \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY star_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "star_count": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "star_count": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "star_count": 199731
            },
            {
              "repo_name": "facebook/react",
              "star_count": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "star_count": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "star_count": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "star_count": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "star_count": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "star_count": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "star_count": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.202729519,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.22,
          "requestId": "01JTG3WJ4JR0G8YMN6DZ8088J9",
          "length": 567
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.84,
          "totalDuration": 1.206,
          "tokens": {
            "promptTokens": 3778,
            "completionTokens": 38,
            "totalTokens": 3816
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY num_stars DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "num_stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "num_stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "num_stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "num_stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "num_stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "num_stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "num_stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "num_stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.227193097,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.246,
      "requestId": "01JTG3WPVRY1GWSTJRFV14HZSJ",
      "length": 557
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.53,
      "totalDuration": 1.116,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 40,
        "totalTokens": 3805
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY num_stars DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "num_stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "num_stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "num_stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "num_stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "num_stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "num_stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "num_stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "num_stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.227193097,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.246,
          "requestId": "01JTG3WPVRY1GWSTJRFV14HZSJ",
          "length": 557
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.53,
          "totalDuration": 1.116,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 40,
            "totalTokens": 3805
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range,\n  count(*) count,\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage\nFROM (\n  SELECT \n    repo_name, \n    max(JSONExtractInt(body, 'stargazers_count')) AS stars\n  FROM github_events \n  WHERE event_type = 'ReleaseEvent' AND body != ''\n  GROUP BY repo_name\n  HAVING max(JSONExtractInt(body, 'stargazers_count')) > 0 AND max(JSONExtractInt(body, 'stargazers_count')) <= 100000\n)\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.016,
      "requestId": "01JTG3X7AK508HBXDGZVVJXSDV",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 27 ('{') (line 3, col 18): {toUInt32('10')}}) * {{toUInt32('10')}} AS stars_range,\\n  count(*) count,\\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  count(*) count,\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage\nFROM (\n  SELECT \n    repo_name, \n    max(stars) AS stars\n  FROM (\n    SELECT \n      repo_name, \n      JSONExtractInt(body, 'stargazers_count') AS stars\n    FROM github_events \n    WHERE event_type = 'ReleaseEvent' AND body != ''\n  )\n  GROUP BY repo_name\n)\nWHERE stars > 0\nGROUP BY \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range\nORDER BY stars_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range,\n  count(*) count\nFROM (\n  SELECT \n    repo_name, \n    max(JSONExtractInt(body, 'stargazers_count')) AS stars\n  FROM github_events \n  WHERE event_type = 'ReleaseEvent' AND body != ''\n  GROUP BY repo_name\n  HAVING max(JSONExtractInt(body, 'stargazers_count')) > 0\n)\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.461,
      "totalDuration": 1.997,
      "tokens": {
        "promptTokens": 4160,
        "completionTokens": 165,
        "totalTokens": 4325
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  count(*) count,\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage\nFROM (\n  SELECT \n    repo_name, \n    max(stars) AS stars\n  FROM (\n    SELECT \n      repo_name, \n      JSONExtractInt(body, 'stargazers_count') AS stars\n    FROM github_events \n    WHERE event_type = 'ReleaseEvent' AND body != ''\n  )\n  GROUP BY repo_name\n)\nWHERE stars > 0\nGROUP BY \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range\nORDER BY stars_range\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG3WYHARA201EVCHVTZQW49",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 413 ('{') (line 19, col 18): {{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range\\nORDER BY stars_range\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.712,
          "totalDuration": 4.107,
          "tokens": {
            "promptTokens": 3780,
            "completionTokens": 152,
            "totalTokens": 3932
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range,\n  count(*) count\nFROM (\n  SELECT \n    repo_name, \n    max(JSONExtractInt(body, 'stargazers_count')) AS stars\n  FROM github_events \n  WHERE event_type = 'ReleaseEvent' AND body != ''\n  GROUP BY repo_name\n  HAVING max(JSONExtractInt(body, 'stargazers_count')) > 0\n)\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG3X2XKWKQ26463CV00Y069",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 27 ('{') (line 3, col 18): {toUInt32('10')}}) * {{toUInt32('10')}} AS stars_range,\\n  count(*) count\\nFROM (\\n  SELECT \\n    repo_name, \\n    max(JSONExtractInt(body, 'stargazers_count')) AS s. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  count(*) count,\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage\nFROM (\n  SELECT \n    repo_name, \n    max(stars) AS stars\n  FROM (\n    SELECT \n      repo_name, \n      JSONExtractInt(body, 'stargazers_count') AS stars\n    FROM github_events \n    WHERE event_type = 'ReleaseEvent' AND body != ''\n  )\n  GROUP BY repo_name\n)\nWHERE stars > 0\nGROUP BY \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range\nORDER BY stars_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.818,
          "totalDuration": 1.974,
          "tokens": {
            "promptTokens": 3984,
            "completionTokens": 130,
            "totalTokens": 4114
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range,\n  count(*) count,\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage\nFROM (\n  SELECT \n    repo_name, \n    max(JSONExtractInt(body, 'stargazers_count')) AS stars\n  FROM github_events \n  WHERE event_type = 'ReleaseEvent' AND body != ''\n  GROUP BY repo_name\n  HAVING max(JSONExtractInt(body, 'stargazers_count')) > 0 AND max(JSONExtractInt(body, 'stargazers_count')) <= 100000\n)\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.016,
          "requestId": "01JTG3X7AK508HBXDGZVVJXSDV",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 27 ('{') (line 3, col 18): {toUInt32('10')}}) * {{toUInt32('10')}} AS stars_range,\\n  count(*) count,\\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  count(*) count,\n  count(*) / (SELECT count(DISTINCT repo_name) FROM github_events) * 100 AS percentage\nFROM (\n  SELECT \n    repo_name, \n    max(stars) AS stars\n  FROM (\n    SELECT \n      repo_name, \n      JSONExtractInt(body, 'stargazers_count') AS stars\n    FROM github_events \n    WHERE event_type = 'ReleaseEvent' AND body != ''\n  )\n  GROUP BY repo_name\n)\nWHERE stars > 0\nGROUP BY \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range\nORDER BY stars_range\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT \n  intDiv(stars, {{{{UInt32(bin_size, 10)}}}}) * {{{{UInt32(bin_size, 10)}}}} AS stars_range,\n  count(*) count\nFROM (\n  SELECT \n    repo_name, \n    max(JSONExtractInt(body, 'stargazers_count')) AS stars\n  FROM github_events \n  WHERE event_type = 'ReleaseEvent' AND body != ''\n  GROUP BY repo_name\n  HAVING max(JSONExtractInt(body, 'stargazers_count')) > 0\n)\nGROUP BY stars_range\nORDER BY stars_range\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.461,
          "totalDuration": 1.997,
          "tokens": {
            "promptTokens": 4160,
            "completionTokens": 165,
            "totalTokens": 4325
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(repo_name)": 165611259
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(repo_name)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.277713381,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.352,
      "requestId": "01JTG3XAV1RGBDTZVDWV48VC9J",
      "length": 40
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.815,
      "totalDuration": 1.023,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 15,
        "totalTokens": 3782
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(repo_name)": 165611259
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(repo_name)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.277713381,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.352,
          "requestId": "01JTG3XAV1RGBDTZVDWV48VC9J",
          "length": 40
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.815,
          "totalDuration": 1.023,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 15,
            "totalTokens": 3782
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  toYear(created_at) AS year,\n  repo_name,\n  count() AS num_events\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND created_at >= '2015-01-01'\nGROUP BY \n  year, repo_name\nORDER BY \n  year ASC, num_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "num_events": 38485
        },
        {
          "year": 2015,
          "repo_name": "facebook/react-native",
          "num_events": 25888
        },
        {
          "year": 2015,
          "repo_name": "apple/swift",
          "num_events": 25834
        },
        {
          "year": 2015,
          "repo_name": "sindresorhus/awesome",
          "num_events": 24420
        },
        {
          "year": 2015,
          "repo_name": "facebook/react",
          "num_events": 22977
        },
        {
          "year": 2015,
          "repo_name": "jlevy/the-art-of-command-line",
          "num_events": 22105
        },
        {
          "year": 2015,
          "repo_name": "NARKOZ/hacker-scripts",
          "num_events": 20450
        },
        {
          "year": 2015,
          "repo_name": "twbs/bootstrap",
          "num_events": 19775
        },
        {
          "year": 2015,
          "repo_name": "google/material-design-lite",
          "num_events": 17904
        },
        {
          "year": 2015,
          "repo_name": "airbnb/javascript",
          "num_events": 17586
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_events",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.890466647,
        "rows_read": 206893429,
        "bytes_read": 1447906947
      },
      "executionTime": 1.911,
      "requestId": "01JTG3Y75DXS5MM1T83A4V2JS8",
      "length": 680
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.731,
      "totalDuration": 2.206,
      "tokens": {
        "promptTokens": 3774,
        "completionTokens": 76,
        "totalTokens": 3850
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  toYear(created_at) AS year,\n  repo_name,\n  count() AS num_events\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND created_at >= '2015-01-01'\nGROUP BY \n  year, repo_name\nORDER BY \n  year ASC, num_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year": 2015,
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "num_events": 38485
            },
            {
              "year": 2015,
              "repo_name": "facebook/react-native",
              "num_events": 25888
            },
            {
              "year": 2015,
              "repo_name": "apple/swift",
              "num_events": 25834
            },
            {
              "year": 2015,
              "repo_name": "sindresorhus/awesome",
              "num_events": 24420
            },
            {
              "year": 2015,
              "repo_name": "facebook/react",
              "num_events": 22977
            },
            {
              "year": 2015,
              "repo_name": "jlevy/the-art-of-command-line",
              "num_events": 22105
            },
            {
              "year": 2015,
              "repo_name": "NARKOZ/hacker-scripts",
              "num_events": 20450
            },
            {
              "year": 2015,
              "repo_name": "twbs/bootstrap",
              "num_events": 19775
            },
            {
              "year": 2015,
              "repo_name": "google/material-design-lite",
              "num_events": 17904
            },
            {
              "year": 2015,
              "repo_name": "airbnb/javascript",
              "num_events": 17586
            }
          ],
          "meta": [
            {
              "name": "year",
              "type": "UInt16"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_events",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.890466647,
            "rows_read": 206893429,
            "bytes_read": 1447906947
          },
          "executionTime": 1.911,
          "requestId": "01JTG3Y75DXS5MM1T83A4V2JS8",
          "length": 680
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.731,
          "totalDuration": 2.206,
          "tokens": {
            "promptTokens": 3774,
            "completionTokens": 76,
            "totalTokens": 3850
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  toStartOfMonth(created_at) AS month, \n  count() AS total_stars \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' AND action = 'started' \nGROUP BY \n  month \nORDER BY \n  month \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "month": "2011-02-01",
          "total_stars": 70433
        },
        {
          "month": "2011-03-01",
          "total_stars": 144981
        },
        {
          "month": "2011-04-01",
          "total_stars": 151883
        },
        {
          "month": "2011-05-01",
          "total_stars": 158780
        },
        {
          "month": "2011-06-01",
          "total_stars": 154525
        },
        {
          "month": "2011-07-01",
          "total_stars": 167971
        },
        {
          "month": "2011-08-01",
          "total_stars": 187851
        },
        {
          "month": "2011-09-01",
          "total_stars": 200671
        },
        {
          "month": "2011-10-01",
          "total_stars": 195250
        },
        {
          "month": "2011-11-01",
          "total_stars": 187448
        }
      ],
      "meta": [
        {
          "name": "month",
          "type": "Date"
        },
        {
          "name": "total_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.274749838,
        "rows_read": 232190399,
        "bytes_read": 1393142394
      },
      "executionTime": 0.293,
      "requestId": "01JTG3YCYGJ37N158XS3NTGJPN",
      "length": 440
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.782,
      "totalDuration": 1.512,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 61,
        "totalTokens": 3831
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  toStartOfMonth(created_at) AS month, \n  count() AS total_stars \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' AND action = 'started' \nGROUP BY \n  month \nORDER BY \n  month \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "month": "2011-02-01",
              "total_stars": 70433
            },
            {
              "month": "2011-03-01",
              "total_stars": 144981
            },
            {
              "month": "2011-04-01",
              "total_stars": 151883
            },
            {
              "month": "2011-05-01",
              "total_stars": 158780
            },
            {
              "month": "2011-06-01",
              "total_stars": 154525
            },
            {
              "month": "2011-07-01",
              "total_stars": 167971
            },
            {
              "month": "2011-08-01",
              "total_stars": 187851
            },
            {
              "month": "2011-09-01",
              "total_stars": 200671
            },
            {
              "month": "2011-10-01",
              "total_stars": 195250
            },
            {
              "month": "2011-11-01",
              "total_stars": 187448
            }
          ],
          "meta": [
            {
              "name": "month",
              "type": "Date"
            },
            {
              "name": "total_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.274749838,
            "rows_read": 232190399,
            "bytes_read": 1393142394
          },
          "executionTime": 0.293,
          "requestId": "01JTG3YCYGJ37N158XS3NTGJPN",
          "length": 440
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.782,
          "totalDuration": 1.512,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 61,
            "totalTokens": 3831
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, COUNT(*) as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY actor_login\nORDER BY num_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "num_stars": 232492
        },
        {
          "actor_login": "salifm",
          "num_stars": 202534
        },
        {
          "actor_login": "x0rzkov",
          "num_stars": 73531
        },
        {
          "actor_login": "fly51fly",
          "num_stars": 57756
        },
        {
          "actor_login": "PCOffline",
          "num_stars": 56725
        },
        {
          "actor_login": "baslr",
          "num_stars": 50363
        },
        {
          "actor_login": "gkze",
          "num_stars": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "num_stars": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "num_stars": 44715
        },
        {
          "actor_login": "mcanthony",
          "num_stars": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.495353448,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 5.543,
      "requestId": "01JTG3YHHDXAP0NYDD2Y6TNT4V",
      "length": 450
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.139,
      "totalDuration": 1.879,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 45,
        "totalTokens": 3813
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, COUNT(*) as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY actor_login\nORDER BY num_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "num_stars": 232492
            },
            {
              "actor_login": "salifm",
              "num_stars": 202534
            },
            {
              "actor_login": "x0rzkov",
              "num_stars": 73531
            },
            {
              "actor_login": "fly51fly",
              "num_stars": 57756
            },
            {
              "actor_login": "PCOffline",
              "num_stars": 56725
            },
            {
              "actor_login": "baslr",
              "num_stars": 50363
            },
            {
              "actor_login": "gkze",
              "num_stars": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "num_stars": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "num_stars": 44715
            },
            {
              "actor_login": "mcanthony",
              "num_stars": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.495353448,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 5.543,
          "requestId": "01JTG3YHHDXAP0NYDD2Y6TNT4V",
          "length": 450
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.139,
          "totalDuration": 1.879,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 45,
            "totalTokens": 3813
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  count() as star_count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'WatchEvent' \n      AND repo_name = 'freeCodeCamp/freeCodeCamp'\n  )\nGROUP BY \n  repo_name\nORDER BY \n  star_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "star_count": 140027
        },
        {
          "repo_name": "facebook/react",
          "star_count": 16917
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "star_count": 16596
        },
        {
          "repo_name": "vuejs/vue",
          "star_count": 16438
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "star_count": 16027
        },
        {
          "repo_name": "sindresorhus/awesome",
          "star_count": 14822
        },
        {
          "repo_name": "airbnb/javascript",
          "star_count": 12363
        },
        {
          "repo_name": "jwasham/coding-interview-university",
          "star_count": 12249
        },
        {
          "repo_name": "twbs/bootstrap",
          "star_count": 12239
        },
        {
          "repo_name": "996icu/996.ICU",
          "star_count": 11927
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.561077557,
        "rows_read": 232456281,
        "bytes_read": 1161558994
      },
      "executionTime": 2.627,
      "requestId": "01JTG3YTZZYZTT97AX4TCMF5SQ",
      "length": 564
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.637,
      "totalDuration": 1.617,
      "tokens": {
        "promptTokens": 3785,
        "completionTokens": 98,
        "totalTokens": 3883
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  count() as star_count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'WatchEvent' \n      AND repo_name = 'freeCodeCamp/freeCodeCamp'\n  )\nGROUP BY \n  repo_name\nORDER BY \n  star_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "star_count": 140027
            },
            {
              "repo_name": "facebook/react",
              "star_count": 16917
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "star_count": 16596
            },
            {
              "repo_name": "vuejs/vue",
              "star_count": 16438
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "star_count": 16027
            },
            {
              "repo_name": "sindresorhus/awesome",
              "star_count": 14822
            },
            {
              "repo_name": "airbnb/javascript",
              "star_count": 12363
            },
            {
              "repo_name": "jwasham/coding-interview-university",
              "star_count": 12249
            },
            {
              "repo_name": "twbs/bootstrap",
              "star_count": 12239
            },
            {
              "repo_name": "996icu/996.ICU",
              "star_count": 11927
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.561077557,
            "rows_read": 232456281,
            "bytes_read": 1161558994
          },
          "executionTime": 2.627,
          "requestId": "01JTG3YTZZYZTT97AX4TCMF5SQ",
          "length": 564
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.637,
          "totalDuration": 1.617,
          "tokens": {
            "promptTokens": 3785,
            "completionTokens": 98,
            "totalTokens": 3883
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count(*) as num_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND actor_login = 'javisantana'\nGROUP BY \n  repo_name\nORDER BY \n  num_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "leeoniya/uPlot",
          "num_stars": 1
        },
        {
          "repo_name": "learnk8s/xlskubectl",
          "num_stars": 1
        },
        {
          "repo_name": "alex-krash/spark-clickhouse-example",
          "num_stars": 1
        },
        {
          "repo_name": "rsms/inter",
          "num_stars": 1
        },
        {
          "repo_name": "duointeractive/django-fabtastic",
          "num_stars": 1
        },
        {
          "repo_name": "apresta/tagger",
          "num_stars": 1
        },
        {
          "repo_name": "sebastien/watchdog",
          "num_stars": 1
        },
        {
          "repo_name": "einhverfr/pg_titanides",
          "num_stars": 1
        },
        {
          "repo_name": "stamen/modestmaps-js",
          "num_stars": 1
        },
        {
          "repo_name": "madrobby/microjs.com",
          "num_stars": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.559641161,
        "rows_read": 232190399,
        "bytes_read": 697019642
      },
      "executionTime": 1.579,
      "requestId": "01JTG3Z18D3JA55VTY92H6JZ1D",
      "length": 514
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.67,
      "totalDuration": 1.33,
      "tokens": {
        "promptTokens": 3772,
        "completionTokens": 62,
        "totalTokens": 3834
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count(*) as num_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND actor_login = 'javisantana'\nGROUP BY \n  repo_name\nORDER BY \n  num_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "leeoniya/uPlot",
              "num_stars": 1
            },
            {
              "repo_name": "learnk8s/xlskubectl",
              "num_stars": 1
            },
            {
              "repo_name": "alex-krash/spark-clickhouse-example",
              "num_stars": 1
            },
            {
              "repo_name": "rsms/inter",
              "num_stars": 1
            },
            {
              "repo_name": "duointeractive/django-fabtastic",
              "num_stars": 1
            },
            {
              "repo_name": "apresta/tagger",
              "num_stars": 1
            },
            {
              "repo_name": "sebastien/watchdog",
              "num_stars": 1
            },
            {
              "repo_name": "einhverfr/pg_titanides",
              "num_stars": 1
            },
            {
              "repo_name": "stamen/modestmaps-js",
              "num_stars": 1
            },
            {
              "repo_name": "madrobby/microjs.com",
              "num_stars": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.559641161,
            "rows_read": 232190399,
            "bytes_read": 697019642
          },
          "executionTime": 1.579,
          "requestId": "01JTG3Z18D3JA55VTY92H6JZ1D",
          "length": 514
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.67,
          "totalDuration": 1.33,
          "tokens": {
            "promptTokens": 3772,
            "completionTokens": 62,
            "totalTokens": 3834
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  count() as total_contributions\nFROM \n  github_events\nWHERE \n  actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\n    GROUP BY \n      actor_login\n    ORDER BY \n      count() DESC\n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\n  AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\nGROUP BY \n  repo_name\nORDER BY \n  total_contributions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "trumpsaid-ai/trumpsaid-ai",
          "total_contributions": 7651
        },
        {
          "repo_name": "alt-how/altinn-studio",
          "total_contributions": 7174
        },
        {
          "repo_name": "willdonner/Ionic-In-Development-Issues-Feature",
          "total_contributions": 5012
        },
        {
          "repo_name": "DenysVuika/developing-with-angular",
          "total_contributions": 4869
        },
        {
          "repo_name": "electron/electronjs.org",
          "total_contributions": 4421
        },
        {
          "repo_name": "nplusp/test_gemfile",
          "total_contributions": 4052
        },
        {
          "repo_name": "coreyja/glassy-collections",
          "total_contributions": 3820
        },
        {
          "repo_name": "exercism/csharp",
          "total_contributions": 3772
        },
        {
          "repo_name": "ajtorres9/andrewjtorr.es",
          "total_contributions": 3769
        },
        {
          "repo_name": "neinteractiveliterature/intercode",
          "total_contributions": 3312
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_contributions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.970467362,
        "rows_read": 1927899296,
        "bytes_read": 5863808440
      },
      "executionTime": 4.017,
      "requestId": "01JTG3ZDRCV6P3CTX00K45P8C7",
      "length": 707
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Authors that contributed to freecodecamp also contributed to what repositories?\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login, \n  count() as total_contributions, \n  groupArray(repo_name) as repos_contributed_to\nFROM \n  github_events\nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\nGROUP BY \n  actor_login\nORDER BY \n  total_contributions DESC\nLIMIT 10\nOFFSET 0\nSELECT \n  repo_name, \n  count() as total_contributions\nFROM \n  github_events\nWHERE \n  actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\n    GROUP BY \n      actor_login\n    ORDER BY \n      count() DESC\n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name\nORDER BY \n  total_contributions DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.567,
      "totalDuration": 2.553,
      "tokens": {
        "promptTokens": 4052,
        "completionTokens": 152,
        "totalTokens": 4204
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  actor_login, \n  count() as total_contributions, \n  groupArray(repo_name) as repos_contributed_to\nFROM \n  github_events\nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\nGROUP BY \n  actor_login\nORDER BY \n  total_contributions DESC\nLIMIT 10\nOFFSET 0\nSELECT \n  repo_name, \n  count() as total_contributions\nFROM \n  github_events\nWHERE \n  actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\n    GROUP BY \n      actor_login\n    ORDER BY \n      count() DESC\n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name\nORDER BY \n  total_contributions DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG3Z8S73M56ZGAA3YV2NDFG",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 329 ('SELECT') (line 17, col 1): SELECT \\n  repo_name, \\n  count() as total_contributions\\nFROM \\n  github_events\\nWHERE \\n  actor_login IN (\\n    SELECT \\n      actor_login\\n    FROM \\n      github_even. Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, BY, LIMIT, SETTINGS, UN",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.937,
          "totalDuration": 3.624,
          "tokens": {
            "promptTokens": 3775,
            "completionTokens": 225,
            "totalTokens": 4000
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  count() as total_contributions\nFROM \n  github_events\nWHERE \n  actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\n    GROUP BY \n      actor_login\n    ORDER BY \n      count() DESC\n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\n  AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\nGROUP BY \n  repo_name\nORDER BY \n  total_contributions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "trumpsaid-ai/trumpsaid-ai",
              "total_contributions": 7651
            },
            {
              "repo_name": "alt-how/altinn-studio",
              "total_contributions": 7174
            },
            {
              "repo_name": "willdonner/Ionic-In-Development-Issues-Feature",
              "total_contributions": 5012
            },
            {
              "repo_name": "DenysVuika/developing-with-angular",
              "total_contributions": 4869
            },
            {
              "repo_name": "electron/electronjs.org",
              "total_contributions": 4421
            },
            {
              "repo_name": "nplusp/test_gemfile",
              "total_contributions": 4052
            },
            {
              "repo_name": "coreyja/glassy-collections",
              "total_contributions": 3820
            },
            {
              "repo_name": "exercism/csharp",
              "total_contributions": 3772
            },
            {
              "repo_name": "ajtorres9/andrewjtorr.es",
              "total_contributions": 3769
            },
            {
              "repo_name": "neinteractiveliterature/intercode",
              "total_contributions": 3312
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_contributions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.970467362,
            "rows_read": 1927899296,
            "bytes_read": 5863808440
          },
          "executionTime": 4.017,
          "requestId": "01JTG3ZDRCV6P3CTX00K45P8C7",
          "length": 707
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Authors that contributed to freecodecamp also contributed to what repositories?\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login, \n  count() as total_contributions, \n  groupArray(repo_name) as repos_contributed_to\nFROM \n  github_events\nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\nGROUP BY \n  actor_login\nORDER BY \n  total_contributions DESC\nLIMIT 10\nOFFSET 0\nSELECT \n  repo_name, \n  count() as total_contributions\nFROM \n  github_events\nWHERE \n  actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type IN ('PullRequestEvent', 'IssuesEvent', 'PushEvent')\n    GROUP BY \n      actor_login\n    ORDER BY \n      count() DESC\n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name\nORDER BY \n  total_contributions DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.567,
          "totalDuration": 2.553,
          "tokens": {
            "promptTokens": 4052,
            "completionTokens": 152,
            "totalTokens": 4204
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type = 'IssuesEvent' \n      AND action = 'opened'\n    GROUP BY \n      actor_login \n    ORDER BY \n      count() DESC \n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name \nORDER BY \n  issue_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "issue_count": 391
        },
        {
          "repo_name": "FreeCodeCamp/hikes",
          "issue_count": 248
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "issue_count": 111
        },
        {
          "repo_name": "FreeCodeCamp/CurriculumExpansion",
          "issue_count": 73
        },
        {
          "repo_name": "Greenheart/swipeforfuture.com",
          "issue_count": 73
        },
        {
          "repo_name": "FreeCodeCamp/TranslationExpansion",
          "issue_count": 62
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "issue_count": 52
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "issue_count": 41
        },
        {
          "repo_name": "freeCodeCamp/learn",
          "issue_count": 36
        },
        {
          "repo_name": "teknik-eksjo/chronos",
          "issue_count": 34
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.349682223,
        "rows_read": 111610728,
        "bytes_read": 448741556
      },
      "executionTime": 0.369,
      "requestId": "01JTG3ZYXYZY3WJRTA4J90W08C",
      "length": 596
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  assignee, \n  count() as issue_count, \n  groupArray(repo_name) as repos \nFROM \n  github_events \nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND assignee != '' \nGROUP BY \n  assignee \nORDER BY \n  issue_count DESC \nLIMIT 10\n -> No, the query is not correct. We need to find the repos for the top 10 authors.\n\nLet's break it down into 2 queries.\n\nQuery 1: Get top 10 authors who filed issues in freecodecamp\n\nSELECT \n  actor_login, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type = 'IssuesEvent' \n  AND action = 'opened'\nGROUP BY \n  actor_login \nORDER BY \n  issue_count DESC \nLIMIT 10\n\n\nQuery 2 (the final one): Get the repos where these top 10 authors filed issues\n\n%\nSELECT \n  repo_name, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type = 'IssuesEvent' \n      AND action = 'opened'\n    GROUP BY \n      actor_login \n    ORDER BY \n      count() DESC \n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name \nORDER BY \n  issue_count DESC \nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.967,
      "totalDuration": 4.071,
      "tokens": {
        "promptTokens": 4208,
        "completionTokens": 149,
        "totalTokens": 4357
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  assignee, \n  count() as issue_count, \n  groupArray(repo_name) as repos \nFROM \n  github_events \nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND assignee != '' \nGROUP BY \n  assignee \nORDER BY \n  issue_count DESC \nLIMIT 10\n -> No, the query is not correct. We need to find the repos for the top 10 authors.\n\nLet's break it down into 2 queries.\n\nQuery 1: Get top 10 authors who filed issues in freecodecamp\n\nSELECT \n  actor_login, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type = 'IssuesEvent' \n  AND action = 'opened'\nGROUP BY \n  actor_login \nORDER BY \n  issue_count DESC \nLIMIT 10\n\n\nQuery 2 (the final one): Get the repos where these top 10 authors filed issues\n\n%\nSELECT \n  repo_name, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type = 'IssuesEvent' \n      AND action = 'opened'\n    GROUP BY \n      actor_login \n    ORDER BY \n      count() DESC \n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name \nORDER BY \n  issue_count DESC \nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG3ZRG12X2D3FTS9JTE5GCT",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1281 (''\\nGROUP BY \\n  repo_name \\nORDER BY \\n  issue_count DESC \\nLIMIT 10\\n FORMAT JSON') (line 66, col 46): '\\nGROUP BY \\n  repo_name \\nORDER BY \\n  issue_count DESC \\nLIMIT 10\\n FORMAT JSON. Single quoted string is not closed: ''\\nGROUP BY \\n  repo_name \\nORDER BY \\n  issue_count DESC \\nLIMIT 10\\n FORMAT JSON'\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.798,
          "totalDuration": 4.502,
          "tokens": {
            "promptTokens": 3778,
            "completionTokens": 388,
            "totalTokens": 4166
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type = 'IssuesEvent' \n      AND action = 'opened'\n    GROUP BY \n      actor_login \n    ORDER BY \n      count() DESC \n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name \nORDER BY \n  issue_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "issue_count": 391
            },
            {
              "repo_name": "FreeCodeCamp/hikes",
              "issue_count": 248
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "issue_count": 111
            },
            {
              "repo_name": "FreeCodeCamp/CurriculumExpansion",
              "issue_count": 73
            },
            {
              "repo_name": "Greenheart/swipeforfuture.com",
              "issue_count": 73
            },
            {
              "repo_name": "FreeCodeCamp/TranslationExpansion",
              "issue_count": 62
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "issue_count": 52
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "issue_count": 41
            },
            {
              "repo_name": "freeCodeCamp/learn",
              "issue_count": 36
            },
            {
              "repo_name": "teknik-eksjo/chronos",
              "issue_count": 34
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.349682223,
            "rows_read": 111610728,
            "bytes_read": 448741556
          },
          "executionTime": 0.369,
          "requestId": "01JTG3ZYXYZY3WJRTA4J90W08C",
          "length": 596
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  assignee, \n  count() as issue_count, \n  groupArray(repo_name) as repos \nFROM \n  github_events \nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND assignee != '' \nGROUP BY \n  assignee \nORDER BY \n  issue_count DESC \nLIMIT 10\n -> No, the query is not correct. We need to find the repos for the top 10 authors.\n\nLet's break it down into 2 queries.\n\nQuery 1: Get top 10 authors who filed issues in freecodecamp\n\nSELECT \n  actor_login, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  repo_name = 'freeCodeCamp/freeCodeCamp' \n  AND event_type = 'IssuesEvent' \n  AND action = 'opened'\nGROUP BY \n  actor_login \nORDER BY \n  issue_count DESC \nLIMIT 10\n\n\nQuery 2 (the final one): Get the repos where these top 10 authors filed issues\n\n%\nSELECT \n  repo_name, \n  count() as issue_count\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      repo_name = 'freeCodeCamp/freeCodeCamp' \n      AND event_type = 'IssuesEvent' \n      AND action = 'opened'\n    GROUP BY \n      actor_login \n    ORDER BY \n      count() DESC \n    LIMIT 10\n  )\n  AND repo_name != 'freeCodeCamp/freeCodeCamp'\nGROUP BY \n  repo_name \nORDER BY \n  issue_count DESC \nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.967,
          "totalDuration": 4.071,
          "tokens": {
            "promptTokens": 4208,
            "completionTokens": 149,
            "totalTokens": 4357
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY repo_name\nORDER BY num_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "num_stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "num_stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "num_stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "num_stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "num_stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "num_stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "num_stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "num_stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.256572264,
        "rows_read": 232190399,
        "bytes_read": 928496724
      },
      "executionTime": 1.275,
      "requestId": "01JTG4055SKMK7CG4SV1M9AT8B",
      "length": 557
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.656,
      "totalDuration": 3.523,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 45,
        "totalTokens": 3816
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY repo_name\nORDER BY num_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "num_stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "num_stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "num_stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "num_stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "num_stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "num_stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "num_stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "num_stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.256572264,
            "rows_read": 232190399,
            "bytes_read": 928496724
          },
          "executionTime": 1.275,
          "requestId": "01JTG4055SKMK7CG4SV1M9AT8B",
          "length": 557
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.656,
          "totalDuration": 3.523,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 45,
            "totalTokens": 3816
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  countIf(year(created_at) = 2019) as count_2019, \n  countIf(year(created_at) = 2020) as count_2020, \n  (count_2020 - count_2019) / count_2019 * 100 as growth_yoy\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND created_at >= '2019-01-01' \n  AND created_at < '2021-01-01'\nGROUP BY \n  repo_name\nHAVING \n  count_2019 > 0 AND count_2020 > 0\nORDER BY \n  growth_yoy DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "evanw/esbuild",
          "count_2019": 1,
          "count_2020": 16621,
          "growth_yoy": 1662000
        },
        {
          "repo_name": "VGraupera/1on1-questions",
          "count_2019": 3,
          "count_2020": 8355,
          "growth_yoy": 278400
        },
        {
          "repo_name": "pycaret/pycaret",
          "count_2019": 1,
          "count_2020": 2712,
          "growth_yoy": 271100
        },
        {
          "repo_name": "willmcgugan/rich",
          "count_2019": 7,
          "count_2020": 16627,
          "growth_yoy": 237428.57142857142
        },
        {
          "repo_name": "ksindi/managers-playbook",
          "count_2019": 2,
          "count_2020": 3610,
          "growth_yoy": 180400
        },
        {
          "repo_name": "beefytech/Beef",
          "count_2019": 1,
          "count_2020": 1770,
          "growth_yoy": 176900
        },
        {
          "repo_name": "twilco/kosmonaut",
          "count_2019": 1,
          "count_2020": 1475,
          "growth_yoy": 147400
        },
        {
          "repo_name": "nomi-sec/PoC-in-GitHub",
          "count_2019": 1,
          "count_2020": 1428,
          "growth_yoy": 142700
        },
        {
          "repo_name": "datawhalechina/team-learning",
          "count_2019": 1,
          "count_2020": 1328,
          "growth_yoy": 132700
        },
        {
          "repo_name": "yuanqing/vdx",
          "count_2019": 1,
          "count_2020": 1316,
          "growth_yoy": 131500
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count_2019",
          "type": "UInt64"
        },
        {
          "name": "count_2020",
          "type": "UInt64"
        },
        {
          "name": "growth_yoy",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.673717888,
        "rows_read": 91998350,
        "bytes_read": 643906549
      },
      "executionTime": 0.694,
      "requestId": "01JTG40B96145VFBEBFSYG3W76",
      "length": 900
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.702,
      "totalDuration": 2.475,
      "tokens": {
        "promptTokens": 3777,
        "completionTokens": 155,
        "totalTokens": 3932
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(year(created_at) = 2019) as count_2019, \n  countIf(year(created_at) = 2020) as count_2020, \n  (count_2020 - count_2019) / count_2019 * 100 as growth_yoy\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND created_at >= '2019-01-01' \n  AND created_at < '2021-01-01'\nGROUP BY \n  repo_name\nHAVING \n  count_2019 > 0 AND count_2020 > 0\nORDER BY \n  growth_yoy DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "evanw/esbuild",
              "count_2019": 1,
              "count_2020": 16621,
              "growth_yoy": 1662000
            },
            {
              "repo_name": "VGraupera/1on1-questions",
              "count_2019": 3,
              "count_2020": 8355,
              "growth_yoy": 278400
            },
            {
              "repo_name": "pycaret/pycaret",
              "count_2019": 1,
              "count_2020": 2712,
              "growth_yoy": 271100
            },
            {
              "repo_name": "willmcgugan/rich",
              "count_2019": 7,
              "count_2020": 16627,
              "growth_yoy": 237428.57142857142
            },
            {
              "repo_name": "ksindi/managers-playbook",
              "count_2019": 2,
              "count_2020": 3610,
              "growth_yoy": 180400
            },
            {
              "repo_name": "beefytech/Beef",
              "count_2019": 1,
              "count_2020": 1770,
              "growth_yoy": 176900
            },
            {
              "repo_name": "twilco/kosmonaut",
              "count_2019": 1,
              "count_2020": 1475,
              "growth_yoy": 147400
            },
            {
              "repo_name": "nomi-sec/PoC-in-GitHub",
              "count_2019": 1,
              "count_2020": 1428,
              "growth_yoy": 142700
            },
            {
              "repo_name": "datawhalechina/team-learning",
              "count_2019": 1,
              "count_2020": 1328,
              "growth_yoy": 132700
            },
            {
              "repo_name": "yuanqing/vdx",
              "count_2019": 1,
              "count_2020": 1316,
              "growth_yoy": 131500
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count_2019",
              "type": "UInt64"
            },
            {
              "name": "count_2020",
              "type": "UInt64"
            },
            {
              "name": "growth_yoy",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.673717888,
            "rows_read": 91998350,
            "bytes_read": 643906549
          },
          "executionTime": 0.694,
          "requestId": "01JTG40B96145VFBEBFSYG3W76",
          "length": 900
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.702,
          "totalDuration": 2.475,
          "tokens": {
            "promptTokens": 3777,
            "completionTokens": 155,
            "totalTokens": 3932
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'PushEvent', toYear(created_at) = 2019) as pushes_2019,\n  countIf(event_type = 'PushEvent', toYear(created_at) = 2020) as pushes_2020,\n  (pushes_2019 - pushes_2020) / pushes_2019 as stagnation_ratio\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND (toYear(created_at) = 2019 OR toYear(created_at) = 2020)\nGROUP BY \n  repo_name\nORDER BY \n  stagnation_ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "yshua5631/Linux",
          "pushes_2019": 9,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "sweetmilk2030/heroku-api",
          "pushes_2019": 3,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "paradisetob/ruby-class-variables-and-class-methods-lab-online-web-pt-090919",
          "pushes_2019": 10,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "luckysym/Everest",
          "pushes_2019": 2,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "abdorahmane/reposit1",
          "pushes_2019": 27,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "andreina-proyectos/did-thanos-kill-you-",
          "pushes_2019": 1,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "Snake-Tn/metro-guestbook",
          "pushes_2019": 13,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "nmannan97/COMSC76_HW10",
          "pushes_2019": 1,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "szymon-chyzy/Warsztaty_01",
          "pushes_2019": 3,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        },
        {
          "repo_name": "Systool/Smart",
          "pushes_2019": 23,
          "pushes_2020": 0,
          "stagnation_ratio": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes_2019",
          "type": "UInt64"
        },
        {
          "name": "pushes_2020",
          "type": "UInt64"
        },
        {
          "name": "stagnation_ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 4.174747968,
        "rows_read": 716542169,
        "bytes_read": 5011268599
      },
      "executionTime": 4.219,
      "requestId": "01JTG40GXRGGPDJHMM49PXE03P",
      "length": 978
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.547,
      "totalDuration": 2.562,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 141,
        "totalTokens": 3917
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'PushEvent', toYear(created_at) = 2019) as pushes_2019,\n  countIf(event_type = 'PushEvent', toYear(created_at) = 2020) as pushes_2020,\n  (pushes_2019 - pushes_2020) / pushes_2019 as stagnation_ratio\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND (toYear(created_at) = 2019 OR toYear(created_at) = 2020)\nGROUP BY \n  repo_name\nORDER BY \n  stagnation_ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "yshua5631/Linux",
              "pushes_2019": 9,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "sweetmilk2030/heroku-api",
              "pushes_2019": 3,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "paradisetob/ruby-class-variables-and-class-methods-lab-online-web-pt-090919",
              "pushes_2019": 10,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "luckysym/Everest",
              "pushes_2019": 2,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "abdorahmane/reposit1",
              "pushes_2019": 27,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "andreina-proyectos/did-thanos-kill-you-",
              "pushes_2019": 1,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "Snake-Tn/metro-guestbook",
              "pushes_2019": 13,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "nmannan97/COMSC76_HW10",
              "pushes_2019": 1,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "szymon-chyzy/Warsztaty_01",
              "pushes_2019": 3,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            },
            {
              "repo_name": "Systool/Smart",
              "pushes_2019": 23,
              "pushes_2020": 0,
              "stagnation_ratio": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushes_2019",
              "type": "UInt64"
            },
            {
              "name": "pushes_2020",
              "type": "UInt64"
            },
            {
              "name": "stagnation_ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 4.174747968,
            "rows_read": 716542169,
            "bytes_read": 5011268599
          },
          "executionTime": 4.219,
          "requestId": "01JTG40GXRGGPDJHMM49PXE03P",
          "length": 978
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.547,
          "totalDuration": 2.562,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 141,
            "totalTokens": 3917
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  COUNT(*) as num_commits, \n  COUNT(DISTINCT created_at) as num_days,\n  num_commits / num_days as avg_commits_per_day\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nGROUP BY \n  repo_name\nORDER BY \n  avg_commits_per_day DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "mrswadge/showcase",
          "num_commits": 74,
          "num_days": 1,
          "avg_commits_per_day": 74
        },
        {
          "repo_name": "j10-G7/pitch-perfect",
          "num_commits": 30,
          "num_days": 1,
          "avg_commits_per_day": 30
        },
        {
          "repo_name": "yasirBkhan/pitch-perfect",
          "num_commits": 29,
          "num_days": 1,
          "avg_commits_per_day": 29
        },
        {
          "repo_name": "HCSanderson/getting-started-with-html",
          "num_commits": 25,
          "num_days": 1,
          "avg_commits_per_day": 25
        },
        {
          "repo_name": "LuaDist-test/stdlib",
          "num_commits": 23,
          "num_days": 1,
          "avg_commits_per_day": 23
        },
        {
          "repo_name": "andrashari/classic-arcade-game-clone",
          "num_commits": 22,
          "num_days": 1,
          "avg_commits_per_day": 22
        },
        {
          "repo_name": "Hasentree/classic-arcade-game-clone",
          "num_commits": 22,
          "num_days": 1,
          "avg_commits_per_day": 22
        },
        {
          "repo_name": "corywam/pitch-perfect_1",
          "num_commits": 20,
          "num_days": 1,
          "avg_commits_per_day": 20
        },
        {
          "repo_name": "TheChronicMonster/website-optimization",
          "num_commits": 20,
          "num_days": 1,
          "avg_commits_per_day": 20
        },
        {
          "repo_name": "hananizzi/website-optimization_4",
          "num_commits": 20,
          "num_days": 1,
          "avg_commits_per_day": 20
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_commits",
          "type": "UInt64"
        },
        {
          "name": "num_days",
          "type": "UInt64"
        },
        {
          "name": "avg_commits_per_day",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 42.964084904,
        "rows_read": 1601472977,
        "bytes_read": 11203619891
      },
      "executionTime": 43.009,
      "requestId": "01JTG40T9K177FKNWXDRPQ6QVT",
      "length": 1002
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.262,
      "totalDuration": 2.873,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 81,
        "totalTokens": 3852
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  COUNT(*) as num_commits, \n  COUNT(DISTINCT created_at) as num_days,\n  num_commits / num_days as avg_commits_per_day\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nGROUP BY \n  repo_name\nORDER BY \n  avg_commits_per_day DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "mrswadge/showcase",
              "num_commits": 74,
              "num_days": 1,
              "avg_commits_per_day": 74
            },
            {
              "repo_name": "j10-G7/pitch-perfect",
              "num_commits": 30,
              "num_days": 1,
              "avg_commits_per_day": 30
            },
            {
              "repo_name": "yasirBkhan/pitch-perfect",
              "num_commits": 29,
              "num_days": 1,
              "avg_commits_per_day": 29
            },
            {
              "repo_name": "HCSanderson/getting-started-with-html",
              "num_commits": 25,
              "num_days": 1,
              "avg_commits_per_day": 25
            },
            {
              "repo_name": "LuaDist-test/stdlib",
              "num_commits": 23,
              "num_days": 1,
              "avg_commits_per_day": 23
            },
            {
              "repo_name": "andrashari/classic-arcade-game-clone",
              "num_commits": 22,
              "num_days": 1,
              "avg_commits_per_day": 22
            },
            {
              "repo_name": "Hasentree/classic-arcade-game-clone",
              "num_commits": 22,
              "num_days": 1,
              "avg_commits_per_day": 22
            },
            {
              "repo_name": "corywam/pitch-perfect_1",
              "num_commits": 20,
              "num_days": 1,
              "avg_commits_per_day": 20
            },
            {
              "repo_name": "TheChronicMonster/website-optimization",
              "num_commits": 20,
              "num_days": 1,
              "avg_commits_per_day": 20
            },
            {
              "repo_name": "hananizzi/website-optimization_4",
              "num_commits": 20,
              "num_days": 1,
              "avg_commits_per_day": 20
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_commits",
              "type": "UInt64"
            },
            {
              "name": "num_days",
              "type": "UInt64"
            },
            {
              "name": "avg_commits_per_day",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 42.964084904,
            "rows_read": 1601472977,
            "bytes_read": 11203619891
          },
          "executionTime": 43.009,
          "requestId": "01JTG40T9K177FKNWXDRPQ6QVT",
          "length": 1002
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.262,
          "totalDuration": 2.873,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 81,
            "totalTokens": 3852
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  DAYOFWEEK(created_at) AS day_of_week, \n  COUNT(*) AS count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 1",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "count": 38094378
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.195151665,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.214,
      "requestId": "01JTG42CCAPCEYGB92D54W4MV2",
      "length": 36
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  DAYOFWEEK(created_at) AS day_of_week, \n  COUNT(*) AS count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 1 LIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.141,
      "totalDuration": 1.851,
      "tokens": {
        "promptTokens": 3884,
        "completionTokens": 57,
        "totalTokens": 3941
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  DAYOFWEEK(created_at) AS day_of_week, \n  COUNT(*) AS count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 1 LIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG4283Y6NAM1TVC1HKZXFX5",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 188 ('10') (line 12, col 15): 10 FORMAT JSON. Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.574,
          "totalDuration": 1.432,
          "tokens": {
            "promptTokens": 3772,
            "completionTokens": 60,
            "totalTokens": 3832
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n  DAYOFWEEK(created_at) AS day_of_week, \n  COUNT(*) AS count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 1",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "count": 38094378
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.195151665,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.214,
          "requestId": "01JTG42CCAPCEYGB92D54W4MV2",
          "length": 36
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "I previously asked: \"What is the best day of the week to catch a star?\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  DAYOFWEEK(created_at) AS day_of_week, \n  COUNT(*) AS count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 1 LIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.141,
          "totalDuration": 1.851,
          "tokens": {
            "promptTokens": 3884,
            "completionTokens": 57,
            "totalTokens": 3941
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 34099240
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.800113438,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.847,
      "requestId": "01JTG42FGVPGARMAGX452JNKK7",
      "length": 41
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.289,
      "totalDuration": 0.469,
      "tokens": {
        "promptTokens": 3557,
        "completionTokens": 15,
        "totalTokens": 3572
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 34099240
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.800113438,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.847,
          "requestId": "01JTG42FGVPGARMAGX452JNKK7",
          "length": 41
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.289,
          "totalDuration": 0.469,
          "tokens": {
            "promptTokens": 3557,
            "completionTokens": 15,
            "totalTokens": 3572
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' AND action = 'started' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 10131322
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.792561307,
        "rows_read": 232190399,
        "bytes_read": 928761596
      },
      "executionTime": 4.865,
      "requestId": "01JTG435YXKTBGVAGFAZ2P765H",
      "length": 41
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.653,
      "totalDuration": 1.604,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 29,
        "totalTokens": 3798
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' AND action = 'started' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 10131322
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.792561307,
            "rows_read": 232190399,
            "bytes_read": 928761596
          },
          "executionTime": 4.865,
          "requestId": "01JTG435YXKTBGVAGFAZ2P765H",
          "length": 41
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.653,
          "totalDuration": 1.604,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 29,
            "totalTokens": 3798
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 18808891
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.65319908,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.672,
      "requestId": "01JTG43EG8HWANV2NC33RZ0JJH",
      "length": 41
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.085,
      "totalDuration": 1.434,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 23,
        "totalTokens": 3791
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 18808891
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.65319908,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.672,
          "requestId": "01JTG43EG8HWANV2NC33RZ0JJH",
          "length": 41
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.085,
          "totalDuration": 1.434,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 23,
            "totalTokens": 3791
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 6418718
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.220814722,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.239,
      "requestId": "01JTG43PNA8RPMR36FTW48YH0K",
      "length": 40
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.651,
      "totalDuration": 1.182,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 30,
        "totalTokens": 3799
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 6418718
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.220814722,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.239,
          "requestId": "01JTG43PNA8RPMR36FTW48YH0K",
          "length": 40
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.651,
          "totalDuration": 1.182,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 30,
            "totalTokens": 3799
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() as count\nFROM github_events \nWHERE event_type = 'WatchEvent' AND actor_login IN (\n  SELECT actor_login \n  FROM github_events \n  WHERE event_type = 'PullRequestEvent' \n  GROUP BY actor_login \n  HAVING count() > 0\n)\nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "count": 127332
        },
        {
          "repo_name": "996icu/996.ICU",
          "count": 116642
        },
        {
          "repo_name": "vuejs/vue",
          "count": 115419
        },
        {
          "repo_name": "sindresorhus/awesome",
          "count": 110521
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "count": 106673
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "count": 101015
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "count": 97585
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "count": 91891
        },
        {
          "repo_name": "airbnb/javascript",
          "count": 84730
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "count": 82794
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.615129412,
        "rows_read": 446952570,
        "bytes_read": 1804735431
      },
      "executionTime": 6.66,
      "requestId": "01JTG43VV4H3RC36HYTFJZ6729",
      "length": 523
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.86,
      "totalDuration": 1.54,
      "tokens": {
        "promptTokens": 3785,
        "completionTokens": 77,
        "totalTokens": 3862
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() as count\nFROM github_events \nWHERE event_type = 'WatchEvent' AND actor_login IN (\n  SELECT actor_login \n  FROM github_events \n  WHERE event_type = 'PullRequestEvent' \n  GROUP BY actor_login \n  HAVING count() > 0\n)\nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "count": 127332
            },
            {
              "repo_name": "996icu/996.ICU",
              "count": 116642
            },
            {
              "repo_name": "vuejs/vue",
              "count": 115419
            },
            {
              "repo_name": "sindresorhus/awesome",
              "count": 110521
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "count": 106673
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "count": 101015
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "count": 97585
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "count": 91891
            },
            {
              "repo_name": "airbnb/javascript",
              "count": 84730
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "count": 82794
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 6.615129412,
            "rows_read": 446952570,
            "bytes_read": 1804735431
          },
          "executionTime": 6.66,
          "requestId": "01JTG43VV4H3RC36HYTFJZ6729",
          "length": 523
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.86,
          "totalDuration": 1.54,
          "tokens": {
            "promptTokens": 3785,
            "completionTokens": 77,
            "totalTokens": 3862
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, COUNT(*) as num_prs \nFROM github_events \nWHERE event_type = 'PullRequestEvent' AND action = 'opened' \nGROUP BY actor_login \nHAVING num_prs >= 10 \nORDER BY num_prs DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "num_prs": 19655845
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "num_prs": 4695741
        },
        {
          "actor_login": "pull[bot]",
          "num_prs": 4140801
        },
        {
          "actor_login": "renovate[bot]",
          "num_prs": 1675452
        },
        {
          "actor_login": "direwolf-github",
          "num_prs": 1186691
        },
        {
          "actor_login": "greenkeeper[bot]",
          "num_prs": 562383
        },
        {
          "actor_login": "snyk-bot",
          "num_prs": 545186
        },
        {
          "actor_login": "pyup-bot",
          "num_prs": 521087
        },
        {
          "actor_login": "greenkeeperio-bot",
          "num_prs": 461471
        },
        {
          "actor_login": "imgbot[bot]",
          "num_prs": 171285
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_prs",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.108238841,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.128,
      "requestId": "01JTG445SB9RVFY8EJVY3ASVJG",
      "length": 502
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.523,
      "totalDuration": 1.046,
      "tokens": {
        "promptTokens": 3773,
        "completionTokens": 56,
        "totalTokens": 3829
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, COUNT(*) as num_prs \nFROM github_events \nWHERE event_type = 'PullRequestEvent' AND action = 'opened' \nGROUP BY actor_login \nHAVING num_prs >= 10 \nORDER BY num_prs DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "num_prs": 19655845
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "num_prs": 4695741
            },
            {
              "actor_login": "pull[bot]",
              "num_prs": 4140801
            },
            {
              "actor_login": "renovate[bot]",
              "num_prs": 1675452
            },
            {
              "actor_login": "direwolf-github",
              "num_prs": 1186691
            },
            {
              "actor_login": "greenkeeper[bot]",
              "num_prs": 562383
            },
            {
              "actor_login": "snyk-bot",
              "num_prs": 545186
            },
            {
              "actor_login": "pyup-bot",
              "num_prs": 521087
            },
            {
              "actor_login": "greenkeeperio-bot",
              "num_prs": 461471
            },
            {
              "actor_login": "imgbot[bot]",
              "num_prs": 171285
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_prs",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.108238841,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.128,
          "requestId": "01JTG445SB9RVFY8EJVY3ASVJG",
          "length": 502
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.523,
          "totalDuration": 1.046,
          "tokens": {
            "promptTokens": 3773,
            "completionTokens": 56,
            "totalTokens": 3829
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as pull_request_count \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nGROUP BY repo_name \nORDER BY pull_request_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_request_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_request_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_request_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_request_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_request_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_request_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_request_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_request_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_request_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_request_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_request_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.673560751,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.693,
      "requestId": "01JTG44AGCDNG03EWZQ0B2NXK6",
      "length": 706
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.683,
      "totalDuration": 1.203,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 41,
        "totalTokens": 3812
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as pull_request_count \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nGROUP BY repo_name \nORDER BY pull_request_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_request_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_request_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_request_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_request_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_request_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_request_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_request_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_request_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_request_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_request_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_request_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.673560751,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.693,
          "requestId": "01JTG44AGCDNG03EWZQ0B2NXK6",
          "length": 706
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.683,
          "totalDuration": 1.203,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 41,
            "totalTokens": 3812
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors_count": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors_count": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors_count": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors_count": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors_count": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors_count": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors_count": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors_count": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors_count": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors_count": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.672156492,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 2.714,
      "requestId": "01JTG44FC9RGMPGEZRED48BA7N",
      "length": 720
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.341,
      "totalDuration": 0.773,
      "tokens": {
        "promptTokens": 3561,
        "completionTokens": 55,
        "totalTokens": 3616
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors_count": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors_count": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors_count": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors_count": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors_count": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors_count": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors_count": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors_count": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors_count": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors_count": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.672156492,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 2.714,
          "requestId": "01JTG44FC9RGMPGEZRED48BA7N",
          "length": 720
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.341,
          "totalDuration": 0.773,
          "tokens": {
            "promptTokens": 3561,
            "completionTokens": 55,
            "totalTokens": 3616
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as issues_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY issues_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issues_count": 379379
        },
        {
          "repo_name": "pddemo/demo",
          "issues_count": 216215
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issues_count": 173986
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issues_count": 157016
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issues_count": 149264
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issues_count": 130920
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issues_count": 127029
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "issues_count": 108096
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issues_count": 91086
        },
        {
          "repo_name": "debricked/debricked-test-integration",
          "issues_count": 83341
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.498449077,
        "rows_read": 111439849,
        "bytes_read": 445340560
      },
      "executionTime": 0.517,
      "requestId": "01JTG44NVESSR2BE843NC368P1",
      "length": 596
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.671,
      "totalDuration": 1.436,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 44,
        "totalTokens": 3814
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as issues_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY issues_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issues_count": 379379
            },
            {
              "repo_name": "pddemo/demo",
              "issues_count": 216215
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issues_count": 173986
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issues_count": 157016
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issues_count": 149264
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issues_count": 130920
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issues_count": 127029
            },
            {
              "repo_name": "Ramos-dev/jniwebshell",
              "issues_count": 108096
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issues_count": 91086
            },
            {
              "repo_name": "debricked/debricked-test-integration",
              "issues_count": 83341
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.498449077,
            "rows_read": 111439849,
            "bytes_read": 445340560
          },
          "executionTime": 0.517,
          "requestId": "01JTG44NVESSR2BE843NC368P1",
          "length": 596
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.671,
          "totalDuration": 1.436,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 44,
            "totalTokens": 3814
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  countIf(action = 'opened' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(action = 'opened' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.014,
      "requestId": "01JTG453W4GXH4DXF9X6SMDFQX",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 424 ('{') (line 16, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  real_issues_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(action = 'opened' AND event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(action = 'opened' AND event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.784,
      "totalDuration": 2.525,
      "tokens": {
        "promptTokens": 4206,
        "completionTokens": 152,
        "totalTokens": 4358
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG44THY7ZN9A1RF5E1F3G9J",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 418 ('{') (line 15, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  real_issues_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.677,
          "totalDuration": 1.796,
          "tokens": {
            "promptTokens": 3786,
            "completionTokens": 149,
            "totalTokens": 3935
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(action = 'opened' AND event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(action = 'opened' AND event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG44YYKE0Z3WJWZCPKZSJ38",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 486 ('{') (line 16, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  real_issues_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.427,
          "totalDuration": 1.986,
          "tokens": {
            "promptTokens": 3987,
            "completionTokens": 168,
            "totalTokens": 4155
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(action = 'opened' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(action = 'opened' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG453W4GXH4DXF9X6SMDFQX",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 424 ('{') (line 16, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  real_issues_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(action = 'opened' AND event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  countIf(action = 'opened' AND event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  real_issues_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.784,
          "totalDuration": 2.525,
          "tokens": {
            "promptTokens": 4206,
            "completionTokens": 152,
            "totalTokens": 4358
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  countIf(actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG46B2E9HFYV29WQMPT9EKB",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 435 ('{') (line 17, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  issue_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 25.137,
      "totalDuration": 26.749,
      "tokens": {
        "promptTokens": 4238,
        "completionTokens": 155,
        "totalTokens": 4393
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG458HS06MS4FBNDKS2PKG2",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 497 ('{') (line 17, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  issue_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.63,
          "totalDuration": 2.274,
          "tokens": {
            "promptTokens": 3793,
            "completionTokens": 171,
            "totalTokens": 3964
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG45EFV4EJ9TRMZPK50BTQG",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 497 ('{') (line 17, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  issue_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.833,
          "totalDuration": 3.565,
          "tokens": {
            "promptTokens": 4016,
            "completionTokens": 171,
            "totalTokens": 4187
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG46B2E9HFYV29WQMPT9EKB",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 435 ('{') (line 17, col 23): {toUInt32('1000')}}\\n  )\\nGROUP BY \\n  repo_name\\nORDER BY \\n  issue_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND actor_login NOT LIKE '%[bot]%') AS real_issues_count,\n  count(DISTINCT actor_login) AS issue_authors_count,\n  countIf(event_type = 'IssuesEvent' AND actor_login LIKE '%[bot]%') AS robot_issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > {{{{UInt32(min_stars, 1000)}}}}\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 25.137,
          "totalDuration": 26.749,
          "tokens": {
            "promptTokens": 4238,
            "completionTokens": 155,
            "totalTokens": 4393
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(DISTINCT actor_login) as count FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "count": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "count": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "count": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "count": 826
        },
        {
          "repo_name": "lifo/docrails",
          "count": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "count": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "count": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "count": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "count": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "count": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.524298033,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 26.577,
      "requestId": "01JTG46E3V6E27CV4F60K2HHEJ",
      "length": 542
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.397,
      "totalDuration": 0.568,
      "tokens": {
        "promptTokens": 3561,
        "completionTokens": 36,
        "totalTokens": 3597
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(DISTINCT actor_login) as count FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "count": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "count": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "count": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "count": 826
            },
            {
              "repo_name": "lifo/docrails",
              "count": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "count": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "count": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "count": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "count": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "count": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.524298033,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 26.577,
          "requestId": "01JTG46E3V6E27CV4F60K2HHEJ",
          "length": 542
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.397,
          "totalDuration": 0.568,
          "tokens": {
            "promptTokens": 3561,
            "completionTokens": 36,
            "totalTokens": 3597
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  repo_name, \n  count(DISTINCT actor_login) as count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND ref = 'refs/heads/main'\nGROUP BY \n  repo_name\nORDER BY \n  count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
          "count": 218
        },
        {
          "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
          "count": 127
        },
        {
          "repo_name": "ministryofjustice/cloud-platform-environments",
          "count": 68
        },
        {
          "repo_name": "sourcegraph/about",
          "count": 64
        },
        {
          "repo_name": "apple/swift",
          "count": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "count": 52
        },
        {
          "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
          "count": 51
        },
        {
          "repo_name": "SPM587FA20/SCM587FA20",
          "count": 43
        },
        {
          "repo_name": "mks65/09_construction",
          "count": 38
        },
        {
          "repo_name": "microsoft/azuredatastudio",
          "count": 38
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.539834359,
        "rows_read": 1601472977,
        "bytes_read": 49175592159
      },
      "executionTime": 3.56,
      "requestId": "01JTG47BHN2SYVF6HKNDN8GCD1",
      "length": 560
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.454,
      "totalDuration": 1.092,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 68,
        "totalTokens": 3844
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  repo_name, \n  count(DISTINCT actor_login) as count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND ref = 'refs/heads/main'\nGROUP BY \n  repo_name\nORDER BY \n  count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "nus-cs2103-AY2021S1/pe-dev-response",
              "count": 218
            },
            {
              "repo_name": "nus-cs2113-AY2021S1/pe-dev-response",
              "count": 127
            },
            {
              "repo_name": "ministryofjustice/cloud-platform-environments",
              "count": 68
            },
            {
              "repo_name": "sourcegraph/about",
              "count": 64
            },
            {
              "repo_name": "apple/swift",
              "count": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "count": 52
            },
            {
              "repo_name": "serg4kostiuk/devops-crash-course-autumn-2020",
              "count": 51
            },
            {
              "repo_name": "SPM587FA20/SCM587FA20",
              "count": 43
            },
            {
              "repo_name": "mks65/09_construction",
              "count": 38
            },
            {
              "repo_name": "microsoft/azuredatastudio",
              "count": 38
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.539834359,
            "rows_read": 1601472977,
            "bytes_read": 49175592159
          },
          "executionTime": 3.56,
          "requestId": "01JTG47BHN2SYVF6HKNDN8GCD1",
          "length": 560
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.454,
          "totalDuration": 1.092,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 68,
            "totalTokens": 3844
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as pushers_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND ref = 'refs/heads/main' \n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > 99\n  )\nGROUP BY \n  repo_name\nORDER BY \n  pushers_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "apple/swift",
          "pushers_count": 61
        },
        {
          "repo_name": "sourcegraph/sourcegraph",
          "pushers_count": 52
        },
        {
          "repo_name": "microsoft/azuredatastudio",
          "pushers_count": 38
        },
        {
          "repo_name": "guardian/frontend",
          "pushers_count": 35
        },
        {
          "repo_name": "cerner/fhir.cerner.com",
          "pushers_count": 33
        },
        {
          "repo_name": "github/codeql",
          "pushers_count": 29
        },
        {
          "repo_name": "guardian/dotcom-rendering",
          "pushers_count": 29
        },
        {
          "repo_name": "woocommerce/woocommerce-admin",
          "pushers_count": 26
        },
        {
          "repo_name": "microsoft/FluidFramework",
          "pushers_count": 25
        },
        {
          "repo_name": "awslabs/s2n",
          "pushers_count": 23
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushers_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.928479982,
        "rows_read": 1536349523,
        "bytes_read": 39743348818
      },
      "executionTime": 4.996,
      "requestId": "01JTG47K05GE4ZXGDN0V07JKSF",
      "length": 561
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.481,
      "totalDuration": 1.523,
      "tokens": {
        "promptTokens": 3789,
        "completionTokens": 111,
        "totalTokens": 3900
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as pushers_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND ref = 'refs/heads/main' \n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > 99\n  )\nGROUP BY \n  repo_name\nORDER BY \n  pushers_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "apple/swift",
              "pushers_count": 61
            },
            {
              "repo_name": "sourcegraph/sourcegraph",
              "pushers_count": 52
            },
            {
              "repo_name": "microsoft/azuredatastudio",
              "pushers_count": 38
            },
            {
              "repo_name": "guardian/frontend",
              "pushers_count": 35
            },
            {
              "repo_name": "cerner/fhir.cerner.com",
              "pushers_count": 33
            },
            {
              "repo_name": "github/codeql",
              "pushers_count": 29
            },
            {
              "repo_name": "guardian/dotcom-rendering",
              "pushers_count": 29
            },
            {
              "repo_name": "woocommerce/woocommerce-admin",
              "pushers_count": 26
            },
            {
              "repo_name": "microsoft/FluidFramework",
              "pushers_count": 25
            },
            {
              "repo_name": "awslabs/s2n",
              "pushers_count": 23
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pushers_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.928479982,
            "rows_read": 1536349523,
            "bytes_read": 39743348818
          },
          "executionTime": 4.996,
          "requestId": "01JTG47K05GE4ZXGDN0V07JKSF",
          "length": 561
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.481,
          "totalDuration": 1.523,
          "tokens": {
            "promptTokens": 3789,
            "completionTokens": 111,
            "totalTokens": 3900
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as num_invitations \nFROM github_events \nWHERE event_type = 'MemberEvent' AND action = 'added' \nGROUP BY repo_name \nORDER BY num_invitations DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "num_invitations": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "num_invitations": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "num_invitations": 3161
        },
        {
          "repo_name": "/",
          "num_invitations": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "num_invitations": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "num_invitations": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "num_invitations": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "num_invitations": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "num_invitations": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "num_invitations": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.431488448,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.452,
      "requestId": "01JTG47VSRS76DE33MZ6XYHHKV",
      "length": 702
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.771,
      "totalDuration": 1.559,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 47,
        "totalTokens": 3818
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as num_invitations \nFROM github_events \nWHERE event_type = 'MemberEvent' AND action = 'added' \nGROUP BY repo_name \nORDER BY num_invitations DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "num_invitations": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "num_invitations": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "num_invitations": 3161
            },
            {
              "repo_name": "/",
              "num_invitations": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "num_invitations": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "num_invitations": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "num_invitations": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "num_invitations": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "num_invitations": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "num_invitations": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.431488448,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.452,
          "requestId": "01JTG47VSRS76DE33MZ6XYHHKV",
          "length": 702
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.771,
          "totalDuration": 1.559,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 47,
            "totalTokens": 3818
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as num_forks \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY num_forks DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "num_forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "num_forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "num_forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "num_forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "num_forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "num_forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "num_forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "num_forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.844976623,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.865,
      "requestId": "01JTG47ZK26CS1N5D2FZ87N1PP",
      "length": 582
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.506,
      "totalDuration": 0.927,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 40,
        "totalTokens": 3806
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as num_forks \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY num_forks DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "num_forks": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "num_forks": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "num_forks": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_forks": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_forks": 92878
            },
            {
              "repo_name": "github/gitignore",
              "num_forks": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "num_forks": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "num_forks": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "num_forks": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "num_forks": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_forks",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.844976623,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.865,
          "requestId": "01JTG47ZK26CS1N5D2FZ87N1PP",
          "length": 582
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.506,
          "totalDuration": 0.927,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 40,
            "totalTokens": 3806
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS stars, \n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS forks, \n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) / COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS ratio\nFROM \n  github_events\nGROUP BY \n  repo_name\nHAVING \n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) > 0\nORDER BY \n  ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "stars": 8190,
          "forks": 1,
          "ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "stars": 6042,
          "forks": 1,
          "ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "stars": 3069,
          "forks": 1,
          "ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "stars": 2288,
          "forks": 1,
          "ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "stars": 2088,
          "forks": 1,
          "ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "stars": 1822,
          "forks": 1,
          "ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "stars": 1801,
          "forks": 1,
          "ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "stars": 1795,
          "forks": 1,
          "ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "stars": 1759,
          "forks": 1,
          "ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "stars": 1752,
          "forks": 1,
          "ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 54.290152227,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 54.336,
      "requestId": "01JTG484G657GHT7AQJ320C3HZ",
      "length": 752
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.632,
      "totalDuration": 1.638,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 134,
        "totalTokens": 3905
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS stars, \n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS forks, \n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) / COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS ratio\nFROM \n  github_events\nGROUP BY \n  repo_name\nHAVING \n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) > 0\nORDER BY \n  ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "stars": 8190,
              "forks": 1,
              "ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "stars": 6042,
              "forks": 1,
              "ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "stars": 3069,
              "forks": 1,
              "ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "stars": 2288,
              "forks": 1,
              "ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "stars": 2088,
              "forks": 1,
              "ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "stars": 1822,
              "forks": 1,
              "ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "stars": 1801,
              "forks": 1,
              "ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "stars": 1795,
              "forks": 1,
              "ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "stars": 1759,
              "forks": 1,
              "ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "stars": 1752,
              "forks": 1,
              "ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 54.290152227,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 54.336,
          "requestId": "01JTG484G657GHT7AQJ320C3HZ",
          "length": 752
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.632,
          "totalDuration": 1.638,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 134,
            "totalTokens": 3905
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'ForkEvent') AS forks_count, \n  countIf(event_type = 'WatchEvent') AS stars_count\nFROM \n  github_events\nWHERE \n  event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY \n  repo_name\nORDER BY \n  forks_count DESC, \n  stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks_count": 262926,
          "stars_count": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks_count": 198031,
          "stars_count": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks_count": 160794,
          "stars_count": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks_count": 98226,
          "stars_count": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks_count": 92878,
          "stars_count": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks_count": 84075,
          "stars_count": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks_count": 78551,
          "stars_count": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks_count": 68601,
          "stars_count": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks_count": 67182,
          "stars_count": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks_count": 59420,
          "stars_count": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks_count",
          "type": "UInt64"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.233725317,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.255,
      "requestId": "01JTG49X71NKDDRRQHYZ6XYJHW",
      "length": 796
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.504,
      "totalDuration": 1.261,
      "tokens": {
        "promptTokens": 3777,
        "completionTokens": 81,
        "totalTokens": 3858
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'ForkEvent') AS forks_count, \n  countIf(event_type = 'WatchEvent') AS stars_count\nFROM \n  github_events\nWHERE \n  event_type IN ('ForkEvent', 'WatchEvent')\nGROUP BY \n  repo_name\nORDER BY \n  forks_count DESC, \n  stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks_count": 262926,
              "stars_count": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks_count": 198031,
              "stars_count": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks_count": 160794,
              "stars_count": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks_count": 98226,
              "stars_count": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks_count": 92878,
              "stars_count": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks_count": 84075,
              "stars_count": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks_count": 78551,
              "stars_count": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks_count": 68601,
              "stars_count": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks_count": 67182,
              "stars_count": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks_count": 59420,
              "stars_count": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks_count",
              "type": "UInt64"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.233725317,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.255,
          "requestId": "01JTG49X71NKDDRRQHYZ6XYJHW",
          "length": 796
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.504,
          "totalDuration": 1.261,
          "tokens": {
            "promptTokens": 3777,
            "completionTokens": 81,
            "totalTokens": 3858
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, countIf(event_type = 'ForkEvent') AS forks, countIf(event_type = 'WatchEvent') AS stars \nFROM github_events \nWHERE event_type IN ('ForkEvent', 'WatchEvent') \nGROUP BY repo_name \nORDER BY forks DESC, stars ASC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.02064272,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.039,
      "requestId": "01JTG4A8ADY043AAVKY44FC06W",
      "length": 676
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 3.696,
      "totalDuration": 6.615,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 62,
        "totalTokens": 3833
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, countIf(event_type = 'ForkEvent') AS forks, countIf(event_type = 'WatchEvent') AS stars \nFROM github_events \nWHERE event_type IN ('ForkEvent', 'WatchEvent') \nGROUP BY repo_name \nORDER BY forks DESC, stars ASC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.02064272,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.039,
          "requestId": "01JTG4A8ADY043AAVKY44FC06W",
          "length": 676
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 3.696,
          "totalDuration": 6.615,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 62,
            "totalTokens": 3833
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  sumIf(push_distinct_size, event_type = 'WatchEvent') AS stars,\n  sumIf(push_distinct_size, event_type = 'ForkEvent') AS forks,\n  stars / forks AS proportion\nFROM github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars": 0,
          "forks": 0,
          "proportion": null
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "proportion",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.720477116,
        "rows_read": 3124889133,
        "bytes_read": 15624445665
      },
      "executionTime": 0.739,
      "requestId": "01JTG4AQ2BYVK87VV2SYH9PY3Y",
      "length": 41
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 9.32,
      "totalDuration": 10.56,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 53,
        "totalTokens": 3818
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  sumIf(push_distinct_size, event_type = 'WatchEvent') AS stars,\n  sumIf(push_distinct_size, event_type = 'ForkEvent') AS forks,\n  stars / forks AS proportion\nFROM github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars": 0,
              "forks": 0,
              "proportion": null
            }
          ],
          "meta": [
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "proportion",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.720477116,
            "rows_read": 3124889133,
            "bytes_read": 15624445665
          },
          "executionTime": 0.739,
          "requestId": "01JTG4AQ2BYVK87VV2SYH9PY3Y",
          "length": 41
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 9.32,
          "totalDuration": 10.56,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 53,
            "totalTokens": 3818
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNT()": 111265504
        }
      ],
      "meta": [
        {
          "name": "COUNT()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005249254,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.023,
      "requestId": "01JTG4B6RD4STWNZE2H8J1RFHK",
      "length": 23
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 12.483,
      "totalDuration": 12.824,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 18,
        "totalTokens": 3784
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNT()": 111265504
            }
          ],
          "meta": [
            {
              "name": "COUNT()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005249254,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.023,
          "requestId": "01JTG4B6RD4STWNZE2H8J1RFHK",
          "length": 23
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 12.483,
          "totalDuration": 12.824,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 18,
            "totalTokens": 3784
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() as issue_comments_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \nGROUP BY repo_name \nORDER BY issue_comments_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comments_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comments_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comments_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comments_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comments_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comments_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comments_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comments_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comments_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.527434087,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.547,
      "requestId": "01JTG4BAKJP87ATSFCB2TPSWAC",
      "length": 649
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.578,
      "totalDuration": 1.416,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 41,
        "totalTokens": 3808
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() as issue_comments_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \nGROUP BY repo_name \nORDER BY issue_comments_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comments_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comments_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comments_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comments_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comments_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comments_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comments_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comments_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comments_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.527434087,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.547,
          "requestId": "01JTG4BAKJP87ATSFCB2TPSWAC",
          "length": 649
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.578,
          "totalDuration": 1.416,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 41,
            "totalTokens": 3808
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent') AS issues_count, \n  countIf(event_type = 'IssueCommentEvent') AS comments_count, \n  comments_count / issues_count AS ratio\nFROM \n  github_events\nWHERE \n  event_type IN ['IssuesEvent', 'IssueCommentEvent']\nGROUP BY \n  repo_name\nHAVING \n  issues_count > 0\nORDER BY \n  ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issues_count": 2,
          "comments_count": 477302,
          "ratio": 238651
        },
        {
          "repo_name": "sauron-demo/sauron",
          "issues_count": 2,
          "comments_count": 132338,
          "ratio": 66169
        },
        {
          "repo_name": "apache/flink",
          "issues_count": 1,
          "comments_count": 58428,
          "ratio": 58428
        },
        {
          "repo_name": "jbosstm/narayana",
          "issues_count": 1,
          "comments_count": 27020,
          "ratio": 27020
        },
        {
          "repo_name": "php/php-src",
          "issues_count": 1,
          "comments_count": 25578,
          "ratio": 25578
        },
        {
          "repo_name": "jenkinsci/jenkins",
          "issues_count": 1,
          "comments_count": 25431,
          "ratio": 25431
        },
        {
          "repo_name": "apple/swift",
          "issues_count": 7,
          "comments_count": 175983,
          "ratio": 25140.428571428572
        },
        {
          "repo_name": "dolphin-emu/dolphin",
          "issues_count": 2,
          "comments_count": 37761,
          "ratio": 18880.5
        },
        {
          "repo_name": "liferay/com-liferay-commerce",
          "issues_count": 1,
          "comments_count": 15010,
          "ratio": 15010
        },
        {
          "repo_name": "python/cpython",
          "issues_count": 7,
          "comments_count": 70575,
          "ratio": 10082.142857142857
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        },
        {
          "name": "comments_count",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 1.264408705,
        "rows_read": 329902046,
        "bytes_read": 989046767
      },
      "executionTime": 1.285,
      "requestId": "01JTG4BF5687J30JGW5VWWV9WM",
      "length": 919
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.553,
      "totalDuration": 1.611,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 97,
        "totalTokens": 3867
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent') AS issues_count, \n  countIf(event_type = 'IssueCommentEvent') AS comments_count, \n  comments_count / issues_count AS ratio\nFROM \n  github_events\nWHERE \n  event_type IN ['IssuesEvent', 'IssueCommentEvent']\nGROUP BY \n  repo_name\nHAVING \n  issues_count > 0\nORDER BY \n  ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issues_count": 2,
              "comments_count": 477302,
              "ratio": 238651
            },
            {
              "repo_name": "sauron-demo/sauron",
              "issues_count": 2,
              "comments_count": 132338,
              "ratio": 66169
            },
            {
              "repo_name": "apache/flink",
              "issues_count": 1,
              "comments_count": 58428,
              "ratio": 58428
            },
            {
              "repo_name": "jbosstm/narayana",
              "issues_count": 1,
              "comments_count": 27020,
              "ratio": 27020
            },
            {
              "repo_name": "php/php-src",
              "issues_count": 1,
              "comments_count": 25578,
              "ratio": 25578
            },
            {
              "repo_name": "jenkinsci/jenkins",
              "issues_count": 1,
              "comments_count": 25431,
              "ratio": 25431
            },
            {
              "repo_name": "apple/swift",
              "issues_count": 7,
              "comments_count": 175983,
              "ratio": 25140.428571428572
            },
            {
              "repo_name": "dolphin-emu/dolphin",
              "issues_count": 2,
              "comments_count": 37761,
              "ratio": 18880.5
            },
            {
              "repo_name": "liferay/com-liferay-commerce",
              "issues_count": 1,
              "comments_count": 15010,
              "ratio": 15010
            },
            {
              "repo_name": "python/cpython",
              "issues_count": 7,
              "comments_count": 70575,
              "ratio": 10082.142857142857
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            },
            {
              "name": "comments_count",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 1.264408705,
            "rows_read": 329902046,
            "bytes_read": 989046767
          },
          "executionTime": 1.285,
          "requestId": "01JTG4BF5687J30JGW5VWWV9WM",
          "length": 919
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.553,
          "totalDuration": 1.611,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 97,
            "totalTokens": 3867
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() as issues_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY issues_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issues_count": 379379
        },
        {
          "repo_name": "pddemo/demo",
          "issues_count": 216215
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issues_count": 173986
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issues_count": 157016
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issues_count": 149264
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issues_count": 130920
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issues_count": 127029
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "issues_count": 108096
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issues_count": 91086
        },
        {
          "repo_name": "debricked/debricked-test-integration",
          "issues_count": 83341
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.465218291,
        "rows_read": 111439849,
        "bytes_read": 445340560
      },
      "executionTime": 0.484,
      "requestId": "01JTG4BM328VEDA6FNR4EAJQ24",
      "length": 596
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.838,
      "totalDuration": 1.264,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 44,
        "totalTokens": 3813
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() as issues_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY issues_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issues_count": 379379
            },
            {
              "repo_name": "pddemo/demo",
              "issues_count": 216215
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issues_count": 173986
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issues_count": 157016
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issues_count": 149264
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issues_count": 130920
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issues_count": 127029
            },
            {
              "repo_name": "Ramos-dev/jniwebshell",
              "issues_count": 108096
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issues_count": 91086
            },
            {
              "repo_name": "debricked/debricked-test-integration",
              "issues_count": 83341
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.465218291,
            "rows_read": 111439849,
            "bytes_read": 445340560
          },
          "executionTime": 0.484,
          "requestId": "01JTG4BM328VEDA6FNR4EAJQ24",
          "length": 596
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.838,
          "totalDuration": 1.264,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 44,
            "totalTokens": 3813
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    count() as issue_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND lower(title) LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nORDER BY \n    issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.49721951,
        "rows_read": 111439849,
        "bytes_read": 5201774537
      },
      "executionTime": 0.516,
      "requestId": "01JTG4BR4MZGYX8K8PM7XK97BT",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.819,
      "totalDuration": 1.161,
      "tokens": {
        "promptTokens": 3564,
        "completionTokens": 61,
        "totalTokens": 3625
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    count() as issue_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND lower(title) LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nORDER BY \n    issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.49721951,
            "rows_read": 111439849,
            "bytes_read": 5201774537
          },
          "executionTime": 0.516,
          "requestId": "01JTG4BR4MZGYX8K8PM7XK97BT",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.819,
          "totalDuration": 1.161,
          "tokens": {
            "promptTokens": 3564,
            "completionTokens": 61,
            "totalTokens": 3625
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_authors_count > {{{{Int(comment_authors_threshold, 5)}}}}\nORDER BY \n  comment_authors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG4C643R1R003VKRF9B0QN6",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 208 ('{') (line 11, col 17): {1000}}\\nGROUP BY \\n  repo_name, \\n  number\\nHAVING \\n  comment_authors_count > {{5}}\\nORDER BY \\n  comment_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND lower(title) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_authors_count > {{{{Int(comment_authors_threshold, 5)}}}\nORDER BY \n  comment_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  COUNT(DISTINCT actor_login) > {{{{Int(comment_authors_threshold, 5)}}}}\nORDER BY \n  COUNT(DISTINCT actor_login) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.728,
      "totalDuration": 1.836,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 117,
        "totalTokens": 4255
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND lower(title) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_authors_count > {{{{Int(comment_authors_threshold, 5)}}}\nORDER BY \n  comment_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG4BX1EDGG55KW6HVQB9RKM",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 228 ('{') (line 12, col 17): {1000}\\nGROUP BY \\n  repo_name, \\n  number\\nHAVING \\n  comment_authors_count > {{5}\\nORDER BY \\n  comment_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.537,
          "totalDuration": 2,
          "tokens": {
            "promptTokens": 3788,
            "completionTokens": 124,
            "totalTokens": 3912
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  COUNT(DISTINCT actor_login) > {{{{Int(comment_authors_threshold, 5)}}}}\nORDER BY \n  COUNT(DISTINCT actor_login) DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG4C1W3SN5S1QX23H0PYMN0",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 208 ('{') (line 11, col 17): {1000}}\\nGROUP BY \\n  repo_name, \\n  number\\nHAVING \\n  COUNT(DISTINCT actor_login) > {{5}}\\nORDER BY \\n  COUNT(DISTINCT actor_login) DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND lower(title) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_authors_count > {{{{Int(comment_authors_threshold, 5)}}}\nORDER BY \n  comment_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.99,
          "totalDuration": 2.433,
          "tokens": {
            "promptTokens": 3964,
            "completionTokens": 123,
            "totalTokens": 4087
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_authors_count > {{{{Int(comment_authors_threshold, 5)}}}}\nORDER BY \n  comment_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG4C643R1R003VKRF9B0QN6",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 208 ('{') (line 11, col 17): {1000}}\\nGROUP BY \\n  repo_name, \\n  number\\nHAVING \\n  comment_authors_count > {{5}}\\nORDER BY \\n  comment_authors_count DESC\\nLIMIT 10 FORMAT JSON. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND lower(title) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_authors_count > {{{{Int(comment_authors_threshold, 5)}}}\nORDER BY \n  comment_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  number, \n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%epic bug%' \n  AND number > {{{{Int(number_threshold, 1000)}}}}\nGROUP BY \n  repo_name, \n  number\nHAVING \n  COUNT(DISTINCT actor_login) > {{{{Int(comment_authors_threshold, 5)}}}}\nORDER BY \n  COUNT(DISTINCT actor_login) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.728,
          "totalDuration": 1.836,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 117,
            "totalTokens": 4255
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  number, \n  title, \n  comments \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' AND action = 'opened' \nORDER BY \n  comments DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "sinara-hw/Shuttler",
          "number": 2,
          "title": "[RFC] New AMC: Shuttler (high-speed multi-channel DAC)",
          "comments": 317
        },
        {
          "repo_name": "dresden-elektronik/deconz-serial-protocol",
          "number": 2,
          "title": "Native serial UART protocol support for RaspBee and ConBee in Home Assistant without deCONZ software",
          "comments": 292
        },
        {
          "repo_name": "sinara-hw/Sayma_RTM",
          "number": 52,
          "title": "Sayma RTM - version 1 errata & tests",
          "comments": 286
        },
        {
          "repo_name": "dresden-elektronik/phoscon-app-beta",
          "number": 119,
          "title": "Support for Aqara Smart Vibration Sensor DJT11LM",
          "comments": 198
        },
        {
          "repo_name": "dresden-elektronik/deconz-ota-plugin",
          "number": 10,
          "title": "Hue Firmware Update",
          "comments": 194
        },
        {
          "repo_name": "Suicide-Squirrel/issues_pie",
          "number": 41,
          "title": "vs986: no RIL/cell service on Verizon networks",
          "comments": 161
        },
        {
          "repo_name": "MichalLytek/typegraphql-prisma",
          "number": 1,
          "title": "Prisma 2 integration",
          "comments": 146
        },
        {
          "repo_name": "sinara-hw/Thermostat",
          "number": 5,
          "title": "Thermostat: request for comment",
          "comments": 142
        },
        {
          "repo_name": "m4saka/ksh2kson",
          "number": 4,
          "title": "Better chart formats? (feedback is welcome!)",
          "comments": 138
        },
        {
          "repo_name": "microsoft/vscode-jupyter",
          "number": 1732,
          "title": "In a notebook (.ipynb file) paste double pastes.",
          "comments": 138
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 0.904967467,
        "rows_read": 111439849,
        "bytes_read": 6421980564
      },
      "executionTime": 0.925,
      "requestId": "01JTG4C93JW8PV37JB1TAK3RQT",
      "length": 1260
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.347,
      "totalDuration": 0.539,
      "tokens": {
        "promptTokens": 3557,
        "completionTokens": 52,
        "totalTokens": 3609
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  number, \n  title, \n  comments \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' AND action = 'opened' \nORDER BY \n  comments DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "sinara-hw/Shuttler",
              "number": 2,
              "title": "[RFC] New AMC: Shuttler (high-speed multi-channel DAC)",
              "comments": 317
            },
            {
              "repo_name": "dresden-elektronik/deconz-serial-protocol",
              "number": 2,
              "title": "Native serial UART protocol support for RaspBee and ConBee in Home Assistant without deCONZ software",
              "comments": 292
            },
            {
              "repo_name": "sinara-hw/Sayma_RTM",
              "number": 52,
              "title": "Sayma RTM - version 1 errata & tests",
              "comments": 286
            },
            {
              "repo_name": "dresden-elektronik/phoscon-app-beta",
              "number": 119,
              "title": "Support for Aqara Smart Vibration Sensor DJT11LM",
              "comments": 198
            },
            {
              "repo_name": "dresden-elektronik/deconz-ota-plugin",
              "number": 10,
              "title": "Hue Firmware Update",
              "comments": 194
            },
            {
              "repo_name": "Suicide-Squirrel/issues_pie",
              "number": 41,
              "title": "vs986: no RIL/cell service on Verizon networks",
              "comments": 161
            },
            {
              "repo_name": "MichalLytek/typegraphql-prisma",
              "number": 1,
              "title": "Prisma 2 integration",
              "comments": 146
            },
            {
              "repo_name": "sinara-hw/Thermostat",
              "number": 5,
              "title": "Thermostat: request for comment",
              "comments": 142
            },
            {
              "repo_name": "m4saka/ksh2kson",
              "number": 4,
              "title": "Better chart formats? (feedback is welcome!)",
              "comments": 138
            },
            {
              "repo_name": "microsoft/vscode-jupyter",
              "number": 1732,
              "title": "In a notebook (.ipynb file) paste double pastes.",
              "comments": 138
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 0.904967467,
            "rows_read": 111439849,
            "bytes_read": 6421980564
          },
          "executionTime": 0.925,
          "requestId": "01JTG4C93JW8PV37JB1TAK3RQT",
          "length": 1260
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.347,
          "totalDuration": 0.539,
          "tokens": {
            "promptTokens": 3557,
            "completionTokens": 52,
            "totalTokens": 3609
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() as num_commit_comments \nFROM github_events \nWHERE event_type = 'CommitCommentEvent' \nGROUP BY repo_name \nORDER BY num_commit_comments DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "num_commit_comments": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "num_commit_comments": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "num_commit_comments": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "num_commit_comments": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "num_commit_comments": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "num_commit_comments": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "num_commit_comments": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "num_commit_comments": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "num_commit_comments": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "num_commit_comments": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_commit_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.125754929,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.145,
      "requestId": "01JTG4CDDQJKM9MNERAGPTJDXT",
      "length": 639
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.366,
      "totalDuration": 0.993,
      "tokens": {
        "promptTokens": 3558,
        "completionTokens": 41,
        "totalTokens": 3599
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() as num_commit_comments \nFROM github_events \nWHERE event_type = 'CommitCommentEvent' \nGROUP BY repo_name \nORDER BY num_commit_comments DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "num_commit_comments": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "num_commit_comments": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "num_commit_comments": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "num_commit_comments": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "num_commit_comments": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "num_commit_comments": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "num_commit_comments": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "num_commit_comments": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "num_commit_comments": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "num_commit_comments": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_commit_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.125754929,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.145,
          "requestId": "01JTG4CDDQJKM9MNERAGPTJDXT",
          "length": 639
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.366,
          "totalDuration": 0.993,
          "tokens": {
            "promptTokens": 3558,
            "completionTokens": 41,
            "totalTokens": 3599
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  commit_id, \n  count(*) as comment_count \nFROM \n  github_events \nWHERE \n  event_type = 'CommitCommentEvent' \nGROUP BY \n  commit_id \nORDER BY \n  comment_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "commit_id": "",
          "comment_count": 2284628
        },
        {
          "commit_id": "145bcb0761fcfb3363642f15429af5653ae50be8",
          "comment_count": 83873
        },
        {
          "commit_id": "a25e5a013b03a4a47c116e111a0652505abce954",
          "comment_count": 7477
        },
        {
          "commit_id": "0539cf89944849de504c1b10a59b547606d7657e",
          "comment_count": 5755
        },
        {
          "commit_id": "b3dccc88f8b8c2dcfc7ecd821a656e03e17caa2d",
          "comment_count": 5160
        },
        {
          "commit_id": "890bbee0f0550ea577dc1204aac0331e8a8981a1",
          "comment_count": 4825
        },
        {
          "commit_id": "bfce064b53862aa7d534d70dfb1d48ee6bd29a51",
          "comment_count": 4720
        },
        {
          "commit_id": "bddb98100402f26117ae5e900c7b54cc9a9b6976",
          "comment_count": 4583
        },
        {
          "commit_id": "aad9704de1f9affe46e68f31d0ea67c0eae85130",
          "comment_count": 4579
        },
        {
          "commit_id": "d548619bb38583d88e07069842938c4d5fe4b149",
          "comment_count": 4548
        }
      ],
      "meta": [
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.202956013,
        "rows_read": 9974466,
        "bytes_read": 406542100
      },
      "executionTime": 0.222,
      "requestId": "01JTG4CGY8XFVTY221G4F3P83G",
      "length": 745
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.421,
      "totalDuration": 0.952,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 51,
        "totalTokens": 3818
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  commit_id, \n  count(*) as comment_count \nFROM \n  github_events \nWHERE \n  event_type = 'CommitCommentEvent' \nGROUP BY \n  commit_id \nORDER BY \n  comment_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "commit_id": "",
              "comment_count": 2284628
            },
            {
              "commit_id": "145bcb0761fcfb3363642f15429af5653ae50be8",
              "comment_count": 83873
            },
            {
              "commit_id": "a25e5a013b03a4a47c116e111a0652505abce954",
              "comment_count": 7477
            },
            {
              "commit_id": "0539cf89944849de504c1b10a59b547606d7657e",
              "comment_count": 5755
            },
            {
              "commit_id": "b3dccc88f8b8c2dcfc7ecd821a656e03e17caa2d",
              "comment_count": 5160
            },
            {
              "commit_id": "890bbee0f0550ea577dc1204aac0331e8a8981a1",
              "comment_count": 4825
            },
            {
              "commit_id": "bfce064b53862aa7d534d70dfb1d48ee6bd29a51",
              "comment_count": 4720
            },
            {
              "commit_id": "bddb98100402f26117ae5e900c7b54cc9a9b6976",
              "comment_count": 4583
            },
            {
              "commit_id": "aad9704de1f9affe46e68f31d0ea67c0eae85130",
              "comment_count": 4579
            },
            {
              "commit_id": "d548619bb38583d88e07069842938c4d5fe4b149",
              "comment_count": 4548
            }
          ],
          "meta": [
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.202956013,
            "rows_read": 9974466,
            "bytes_read": 406542100
          },
          "executionTime": 0.222,
          "requestId": "01JTG4CGY8XFVTY221G4F3P83G",
          "length": 745
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.421,
          "totalDuration": 0.952,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 51,
            "totalTokens": 3818
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count() as review_count, \n  avg(review_comments) as avg_comments_per_review\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent'\nGROUP BY \n  repo_name\nORDER BY \n  avg_comments_per_review DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "flagbit/akeneo-reference-entity-table-bundle",
          "review_count": 7,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "CodecoolBP20161/python-school-system-with-orm-l4me-1",
          "review_count": 1,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "DmitryVdovichencko/continuous-integration-circle",
          "review_count": 5,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "MrPartik/gitflow",
          "review_count": 2,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "britlogic/OrderBookService",
          "review_count": 2,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "octokit/request.js",
          "review_count": 17,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "alanis514/cp1404practicals",
          "review_count": 1,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "kamesh-msft/DurableTask",
          "review_count": 55,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "Shipmee/Shipmee",
          "review_count": 16,
          "avg_comments_per_review": 0
        },
        {
          "repo_name": "mailgun/manners",
          "review_count": 17,
          "avg_comments_per_review": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        },
        {
          "name": "avg_comments_per_review",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.124117508,
        "rows_read": 56094244,
        "bytes_read": 392039265
      },
      "executionTime": 0.143,
      "requestId": "01JTG4CMNT6C29VQ17K7X7SCM0",
      "length": 908
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.993,
      "totalDuration": 1.104,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 65,
        "totalTokens": 3831
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count() as review_count, \n  avg(review_comments) as avg_comments_per_review\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent'\nGROUP BY \n  repo_name\nORDER BY \n  avg_comments_per_review DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "flagbit/akeneo-reference-entity-table-bundle",
              "review_count": 7,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "CodecoolBP20161/python-school-system-with-orm-l4me-1",
              "review_count": 1,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "DmitryVdovichencko/continuous-integration-circle",
              "review_count": 5,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "MrPartik/gitflow",
              "review_count": 2,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "britlogic/OrderBookService",
              "review_count": 2,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "octokit/request.js",
              "review_count": 17,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "alanis514/cp1404practicals",
              "review_count": 1,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "kamesh-msft/DurableTask",
              "review_count": 55,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "Shipmee/Shipmee",
              "review_count": 16,
              "avg_comments_per_review": 0
            },
            {
              "repo_name": "mailgun/manners",
              "review_count": 17,
              "avg_comments_per_review": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            },
            {
              "name": "avg_comments_per_review",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.124117508,
            "rows_read": 56094244,
            "bytes_read": 392039265
          },
          "executionTime": 0.143,
          "requestId": "01JTG4CMNT6C29VQ17K7X7SCM0",
          "length": 908
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.993,
          "totalDuration": 1.104,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 65,
            "totalTokens": 3831
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, COUNT(*) as num_pushes \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY actor_login \nORDER BY num_pushes DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "num_pushes": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "num_pushes": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "num_pushes": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "num_pushes": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "num_pushes": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "num_pushes": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "num_pushes": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "num_pushes": 3139278
        },
        {
          "actor_login": "newstools",
          "num_pushes": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "num_pushes": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.704812969,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.816,
      "requestId": "01JTG4CR8T6GXYG7N48F4870WE",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.537,
      "totalDuration": 0.943,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 40,
        "totalTokens": 3807
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, COUNT(*) as num_pushes \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY actor_login \nORDER BY num_pushes DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "num_pushes": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "num_pushes": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "num_pushes": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "num_pushes": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "num_pushes": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "num_pushes": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "num_pushes": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "num_pushes": 3139278
            },
            {
              "actor_login": "newstools",
              "num_pushes": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "num_pushes": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.704812969,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.816,
          "requestId": "01JTG4CR8T6GXYG7N48F4870WE",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.537,
          "totalDuration": 0.943,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 40,
            "totalTokens": 3807
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT \n    actor_login author,\n    COUNT(DISTINCT repo_name) repos_count,\n    COUNT(*) pushes_count,\n    argMax(repo_name, count_pushes) favorite_repo\nFROM (\n    SELECT \n        actor_login,\n        repo_name,\n        COUNT(*) count_pushes\n    FROM \n        github_events\n    WHERE \n        event_type = 'PushEvent'\n        AND actor_login NOT LIKE '%bot%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            WHERE event_type = 'PushEvent'\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'IssuesEvent' AND action = 'opened'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'WatchEvent' AND action = 'started'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n    GROUP BY \n        actor_login, repo_name\n)\nGROUP BY \n    actor_login\nORDER BY \n    pushes_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "author": "Piedone",
          "repos_count": 72,
          "pushes_count": 72,
          "favorite_repo": "Lombiq/Orchard-Training-Demo-Module"
        },
        {
          "author": "funilrys",
          "repos_count": 63,
          "pushes_count": 63,
          "favorite_repo": "Ultimate-Hosts-Blacklist/BadIPs.com_Level_3"
        },
        {
          "author": "tmtmtmtm",
          "repos_count": 54,
          "pushes_count": 54,
          "favorite_repo": "everypolitician-scrapers/romanian-parliament"
        },
        {
          "author": "bcoe",
          "repos_count": 52,
          "pushes_count": 52,
          "favorite_repo": "googleapis/google-cloud-php"
        },
        {
          "author": "rralf",
          "repos_count": 36,
          "pushes_count": 36,
          "favorite_repo": "linux-mailinglist-archives/netdev.vger.kernel.org.0"
        },
        {
          "author": "JustinBeckwith",
          "repos_count": 35,
          "pushes_count": 35,
          "favorite_repo": "GoogleCloudPlatform/nodejs-docs-samples"
        },
        {
          "author": "ondenman",
          "repos_count": 30,
          "pushes_count": 30,
          "favorite_repo": "everypolitician-scrapers/kazakhstan-mazhilis"
        },
        {
          "author": "mitchellkrogza",
          "repos_count": 29,
          "pushes_count": 29,
          "favorite_repo": "mitchellkrogza/Phishing.Database"
        },
        {
          "author": "thomasdelhomenie",
          "repos_count": 28,
          "pushes_count": 28,
          "favorite_repo": "exodev/social"
        },
        {
          "author": "boubaker",
          "repos_count": 27,
          "pushes_count": 27,
          "favorite_repo": "exodev/social"
        }
      ],
      "meta": [
        {
          "name": "author",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repos_count",
          "type": "UInt64"
        },
        {
          "name": "pushes_count",
          "type": "UInt64"
        },
        {
          "name": "favorite_repo",
          "type": "String"
        }
      ],
      "statistics": {
        "elapsed": 47.262057846,
        "rows_read": 2599282334,
        "bytes_read": 9384682553
      },
      "executionTime": 47.309,
      "requestId": "01JTG4D6BB7R49AFCNT7TBG858",
      "length": 1114
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    actor_login author,\n    COUNT(DISTINCT repo_name) repos_count,\n    COUNT(*) pushes_count,\n    argMax(repo_name, count_pushes) favorite_repo\nFROM (\n    SELECT \n        actor_login,\n        repo_name,\n        COUNT(*) count_pushes\n    FROM \n        github_events\n    WHERE \n        event_type = 'PushEvent'\n        AND actor_login NOT LIKE '%bot%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            WHERE event_type = 'PushEvent'\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'IssuesEvent' AND action = 'opened'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'WatchEvent' AND action = 'started'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n    GROUP BY \n        actor_login, repo_name\n)\nGROUP BY \n    actor_login\nORDER BY \n    pushes_count DESC\nLIMIT 10\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.612,
      "totalDuration": 5.123,
      "tokens": {
        "promptTokens": 4133,
        "completionTokens": 263,
        "totalTokens": 4396
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    actor_login author,\n    COUNT(DISTINCT repo_name) repos_count,\n    COUNT(*) pushes_count,\n    argMax(repo_name, count_pushes) favorite_repo\nFROM (\n    SELECT \n        actor_login,\n        repo_name,\n        COUNT(*) count_pushes\n    FROM \n        github_events\n    WHERE \n        event_type = 'PushEvent'\n        AND actor_login NOT LIKE '%bot%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            WHERE event_type = 'PushEvent'\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'IssuesEvent' AND action = 'opened'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'WatchEvent' AND action = 'started'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n    GROUP BY \n        actor_login, repo_name\n)\nGROUP BY \n    actor_login\nORDER BY \n    pushes_count DESC\nLIMIT 10\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG4CYVW5J0T8Y6D277G4TZ7",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1178 ('10') (line 47, col 7): 10 FORMAT JSON. Expected one of: token, DoubleColon, OR, AND, IS NOT DISTINCT FROM, IS NULL, IS NOT NULL, BETWEEN, NOT BETWEEN, LIKE, ILIKE, NOT LIKE, NOT ILIKE, REGEXP, IN, NOT IN, GLOBAL IN, GLOBAL NOT IN, MOD, DIV, alias, AS, Comma, OFFSET, WITH TIES, BY, FETCH, LIMIT\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.35,
          "totalDuration": 1.528,
          "tokens": {
            "promptTokens": 3608,
            "completionTokens": 262,
            "totalTokens": 3870
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT \n    actor_login author,\n    COUNT(DISTINCT repo_name) repos_count,\n    COUNT(*) pushes_count,\n    argMax(repo_name, count_pushes) favorite_repo\nFROM (\n    SELECT \n        actor_login,\n        repo_name,\n        COUNT(*) count_pushes\n    FROM \n        github_events\n    WHERE \n        event_type = 'PushEvent'\n        AND actor_login NOT LIKE '%bot%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            WHERE event_type = 'PushEvent'\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'IssuesEvent' AND action = 'opened'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'WatchEvent' AND action = 'started'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n    GROUP BY \n        actor_login, repo_name\n)\nGROUP BY \n    actor_login\nORDER BY \n    pushes_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "author": "Piedone",
              "repos_count": 72,
              "pushes_count": 72,
              "favorite_repo": "Lombiq/Orchard-Training-Demo-Module"
            },
            {
              "author": "funilrys",
              "repos_count": 63,
              "pushes_count": 63,
              "favorite_repo": "Ultimate-Hosts-Blacklist/BadIPs.com_Level_3"
            },
            {
              "author": "tmtmtmtm",
              "repos_count": 54,
              "pushes_count": 54,
              "favorite_repo": "everypolitician-scrapers/romanian-parliament"
            },
            {
              "author": "bcoe",
              "repos_count": 52,
              "pushes_count": 52,
              "favorite_repo": "googleapis/google-cloud-php"
            },
            {
              "author": "rralf",
              "repos_count": 36,
              "pushes_count": 36,
              "favorite_repo": "linux-mailinglist-archives/netdev.vger.kernel.org.0"
            },
            {
              "author": "JustinBeckwith",
              "repos_count": 35,
              "pushes_count": 35,
              "favorite_repo": "GoogleCloudPlatform/nodejs-docs-samples"
            },
            {
              "author": "ondenman",
              "repos_count": 30,
              "pushes_count": 30,
              "favorite_repo": "everypolitician-scrapers/kazakhstan-mazhilis"
            },
            {
              "author": "mitchellkrogza",
              "repos_count": 29,
              "pushes_count": 29,
              "favorite_repo": "mitchellkrogza/Phishing.Database"
            },
            {
              "author": "thomasdelhomenie",
              "repos_count": 28,
              "pushes_count": 28,
              "favorite_repo": "exodev/social"
            },
            {
              "author": "boubaker",
              "repos_count": 27,
              "pushes_count": 27,
              "favorite_repo": "exodev/social"
            }
          ],
          "meta": [
            {
              "name": "author",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repos_count",
              "type": "UInt64"
            },
            {
              "name": "pushes_count",
              "type": "UInt64"
            },
            {
              "name": "favorite_repo",
              "type": "String"
            }
          ],
          "statistics": {
            "elapsed": 47.262057846,
            "rows_read": 2599282334,
            "bytes_read": 9384682553
          },
          "executionTime": 47.309,
          "requestId": "01JTG4D6BB7R49AFCNT7TBG858",
          "length": 1114
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    actor_login author,\n    COUNT(DISTINCT repo_name) repos_count,\n    COUNT(*) pushes_count,\n    argMax(repo_name, count_pushes) favorite_repo\nFROM (\n    SELECT \n        actor_login,\n        repo_name,\n        COUNT(*) count_pushes\n    FROM \n        github_events\n    WHERE \n        event_type = 'PushEvent'\n        AND actor_login NOT LIKE '%bot%'\n        AND repo_name IN (\n            SELECT repo_name\n            FROM github_events\n            WHERE event_type = 'PushEvent'\n            GROUP BY repo_name\n            ORDER BY COUNT(*) DESC\n            LIMIT 10000\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'IssuesEvent' AND action = 'opened'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n        AND actor_login IN (\n            SELECT actor_login\n            FROM github_events\n            WHERE event_type = 'WatchEvent' AND action = 'started'\n            GROUP BY actor_login\n            HAVING COUNT(*) >= 2\n        )\n    GROUP BY \n        actor_login, repo_name\n)\nGROUP BY \n    actor_login\nORDER BY \n    pushes_count DESC\nLIMIT 10\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.612,
          "totalDuration": 5.123,
          "tokens": {
            "promptTokens": 4133,
            "completionTokens": 263,
            "totalTokens": 4396
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_stars \nFROM github_events \nWHERE event_type = 'WatchEvent' AND action = 'started' \nGROUP BY repo_name \nORDER BY num_stars DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "num_stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "num_stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "num_stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "num_stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "num_stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "num_stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "num_stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "num_stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.41189099,
        "rows_read": 232190399,
        "bytes_read": 928496724
      },
      "executionTime": 1.434,
      "requestId": "01JTG4ES3RQWCWW5EGG54XHBJ2",
      "length": 557
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.372,
      "totalDuration": 2.196,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 45,
        "totalTokens": 3813
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_stars \nFROM github_events \nWHERE event_type = 'WatchEvent' AND action = 'started' \nGROUP BY repo_name \nORDER BY num_stars DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "num_stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "num_stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "num_stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "num_stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "num_stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "num_stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "num_stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "num_stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.41189099,
            "rows_read": 232190399,
            "bytes_read": 928496724
          },
          "executionTime": 1.434,
          "requestId": "01JTG4ES3RQWCWW5EGG54XHBJ2",
          "length": 557
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.372,
          "totalDuration": 2.196,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 45,
            "totalTokens": 3813
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(DISTINCT repo_name) as num_repos\nFROM github_events \nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY repo_name\nORDER BY num_repos DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "graco911/aspnetmvc",
          "num_repos": 1
        },
        {
          "repo_name": "yinboya/git-study",
          "num_repos": 1
        },
        {
          "repo_name": "wchao18/test",
          "num_repos": 1
        },
        {
          "repo_name": "guilhermebpereira/crediport",
          "num_repos": 1
        },
        {
          "repo_name": "alexmos1994/thesis_repository",
          "num_repos": 1
        },
        {
          "repo_name": "jcconde/testproject",
          "num_repos": 1
        },
        {
          "repo_name": "MrBusiness87/Michelles_Boutique",
          "num_repos": 1
        },
        {
          "repo_name": "gianluca24/rails-longest-word-game",
          "num_repos": 1
        },
        {
          "repo_name": "sebzapata/EmptyProject",
          "num_repos": 1
        },
        {
          "repo_name": "alexveritas/blog",
          "num_repos": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 25.761311899,
        "rows_read": 448167202,
        "bytes_read": 1761967917
      },
      "executionTime": 25.803,
      "requestId": "01JTG4EY59X2SPHNFAZCZMB0ZR",
      "length": 536
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.486,
      "totalDuration": 1.21,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 51,
        "totalTokens": 3819
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(DISTINCT repo_name) as num_repos\nFROM github_events \nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY repo_name\nORDER BY num_repos DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "graco911/aspnetmvc",
              "num_repos": 1
            },
            {
              "repo_name": "yinboya/git-study",
              "num_repos": 1
            },
            {
              "repo_name": "wchao18/test",
              "num_repos": 1
            },
            {
              "repo_name": "guilhermebpereira/crediport",
              "num_repos": 1
            },
            {
              "repo_name": "alexmos1994/thesis_repository",
              "num_repos": 1
            },
            {
              "repo_name": "jcconde/testproject",
              "num_repos": 1
            },
            {
              "repo_name": "MrBusiness87/Michelles_Boutique",
              "num_repos": 1
            },
            {
              "repo_name": "gianluca24/rails-longest-word-game",
              "num_repos": 1
            },
            {
              "repo_name": "sebzapata/EmptyProject",
              "num_repos": 1
            },
            {
              "repo_name": "alexveritas/blog",
              "num_repos": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_repos",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 25.761311899,
            "rows_read": 448167202,
            "bytes_read": 1761967917
          },
          "executionTime": 25.803,
          "requestId": "01JTG4EY59X2SPHNFAZCZMB0ZR",
          "length": 536
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.486,
          "totalDuration": 1.21,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 51,
            "totalTokens": 3819
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as community_size\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  repo_name\nORDER BY \n  community_size DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 271179
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 216556
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 180087
        },
        {
          "repo_name": "facebook/react",
          "community_size": 173769
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 163395
        },
        {
          "repo_name": "sindresorhus/awesome",
          "community_size": 153931
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "community_size": 142116
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "community_size": 137256
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "community_size": 132134
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 117467
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 14.7324673,
        "rows_read": 232190399,
        "bytes_read": 1160752532
      },
      "executionTime": 14.779,
      "requestId": "01JTG4FV7HP0JVJW11Q62QKBMC",
      "length": 607
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.976,
      "totalDuration": 1.459,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 54,
        "totalTokens": 3822
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as community_size\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  repo_name\nORDER BY \n  community_size DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 271179
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 216556
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 180087
            },
            {
              "repo_name": "facebook/react",
              "community_size": 173769
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 163395
            },
            {
              "repo_name": "sindresorhus/awesome",
              "community_size": 153931
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "community_size": 142116
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "community_size": 137256
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "community_size": 132134
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 117467
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 14.7324673,
            "rows_read": 232190399,
            "bytes_read": 1160752532
          },
          "executionTime": 14.779,
          "requestId": "01JTG4FV7HP0JVJW11Q62QKBMC",
          "length": 607
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.976,
          "totalDuration": 1.459,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 54,
            "totalTokens": 3822
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  sum(additions) as total_additions, \n  sum(deletions) as total_deletions \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nGROUP BY \n  repo_name \nORDER BY \n  total_additions + total_deletions DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "HelloTech/meteor-moment-timezone",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "stephencweiss/javascript-streams-example",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "rreicher/rreicher.github.io",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "Alisa-Modeste/col-wis",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "BitexXBX/tokens",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "jain-prateek/cartoonify-video-using-opencv",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "B-14HKR001/ctetguru.com",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "alexroemerdeveloper/LoadingSpinner",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "gtibrett/tesla-dash",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "mwwasswa/mosesw.github.io",
          "total_additions": 0,
          "total_deletions": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 17.501383166,
        "rows_read": 1601472977,
        "bytes_read": 17609324555
      },
      "executionTime": 17.522,
      "requestId": "01JTG4GDAVGAA8SV7FHM0SWH9M",
      "length": 849
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.079,
      "totalDuration": 1.284,
      "tokens": {
        "promptTokens": 3786,
        "completionTokens": 71,
        "totalTokens": 3857
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  sum(additions) as total_additions, \n  sum(deletions) as total_deletions \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nGROUP BY \n  repo_name \nORDER BY \n  total_additions + total_deletions DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "HelloTech/meteor-moment-timezone",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "stephencweiss/javascript-streams-example",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "rreicher/rreicher.github.io",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "Alisa-Modeste/col-wis",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "BitexXBX/tokens",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "jain-prateek/cartoonify-video-using-opencv",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "B-14HKR001/ctetguru.com",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "alexroemerdeveloper/LoadingSpinner",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "gtibrett/tesla-dash",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "mwwasswa/mosesw.github.io",
              "total_additions": 0,
              "total_deletions": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 17.501383166,
            "rows_read": 1601472977,
            "bytes_read": 17609324555
          },
          "executionTime": 17.522,
          "requestId": "01JTG4GDAVGAA8SV7FHM0SWH9M",
          "length": 849
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.079,
          "totalDuration": 1.284,
          "tokens": {
            "promptTokens": 3786,
            "completionTokens": 71,
            "totalTokens": 3857
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as push_count \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY repo_name \nORDER BY push_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "push_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "push_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "push_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "push_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "push_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "push_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "push_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "push_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "push_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "push_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.362942833,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 18.383,
      "requestId": "01JTG4H2746R8SHXWANCW6APWA",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.071,
      "totalDuration": 1.362,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 38,
        "totalTokens": 3807
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as push_count \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY repo_name \nORDER BY push_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "push_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "push_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "push_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "push_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "push_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "push_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "push_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "push_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "push_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "push_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.362942833,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 18.383,
          "requestId": "01JTG4H2746R8SHXWANCW6APWA",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.071,
          "totalDuration": 1.362,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 38,
            "totalTokens": 3807
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, count() as num_reviews \nFROM github_events \nWHERE event_type = 'PullRequestReviewCommentEvent' \nGROUP BY actor_login \nORDER BY num_reviews DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "houndci-bot",
          "num_reviews": 991954
        },
        {
          "actor_login": "houndci",
          "num_reviews": 358016
        },
        {
          "actor_login": "codacy-bot",
          "num_reviews": 327712
        },
        {
          "actor_login": "hound[bot]",
          "num_reviews": 224854
        },
        {
          "actor_login": "codeclimate[bot]",
          "num_reviews": 90778
        },
        {
          "actor_login": "github-learning-lab[bot]",
          "num_reviews": 64453
        },
        {
          "actor_login": "stickler-ci",
          "num_reviews": 56022
        },
        {
          "actor_login": "golangcibot",
          "num_reviews": 40329
        },
        {
          "actor_login": "github-actions[bot]",
          "num_reviews": 38216
        },
        {
          "actor_login": "accesslint[bot]",
          "num_reviews": 37459
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_reviews",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.149519996,
        "rows_read": 56094244,
        "bytes_read": 168068800
      },
      "executionTime": 0.169,
      "requestId": "01JTG4HQF4XEPEQMQA3DRD4TXC",
      "length": 529
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.416,
      "totalDuration": 0.874,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 43,
        "totalTokens": 3811
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, count() as num_reviews \nFROM github_events \nWHERE event_type = 'PullRequestReviewCommentEvent' \nGROUP BY actor_login \nORDER BY num_reviews DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "houndci-bot",
              "num_reviews": 991954
            },
            {
              "actor_login": "houndci",
              "num_reviews": 358016
            },
            {
              "actor_login": "codacy-bot",
              "num_reviews": 327712
            },
            {
              "actor_login": "hound[bot]",
              "num_reviews": 224854
            },
            {
              "actor_login": "codeclimate[bot]",
              "num_reviews": 90778
            },
            {
              "actor_login": "github-learning-lab[bot]",
              "num_reviews": 64453
            },
            {
              "actor_login": "stickler-ci",
              "num_reviews": 56022
            },
            {
              "actor_login": "golangcibot",
              "num_reviews": 40329
            },
            {
              "actor_login": "github-actions[bot]",
              "num_reviews": 38216
            },
            {
              "actor_login": "accesslint[bot]",
              "num_reviews": 37459
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_reviews",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.149519996,
            "rows_read": 56094244,
            "bytes_read": 168068800
          },
          "executionTime": 0.169,
          "requestId": "01JTG4HQF4XEPEQMQA3DRD4TXC",
          "length": 529
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.416,
          "totalDuration": 0.874,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 43,
            "totalTokens": 3811
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  label, \n  count() as count\nFROM \n(\n  SELECT \n    arrayJoin(labels) as label\n  FROM \n    github_events \n  WHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent') \n    AND labels != []\n)\nGROUP BY \n  label\nORDER BY \n  count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "dependencies",
          "count": 9458518
        },
        {
          "label": "enhancement",
          "count": 6805408
        },
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": ":arrow_heading_down: pull",
          "count": 4124651
        },
        {
          "label": "question",
          "count": 934878
        },
        {
          "label": "help wanted",
          "count": 757775
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "cla: yes",
          "count": 653842
        },
        {
          "label": "documentation",
          "count": 512616
        },
        {
          "label": "javascript",
          "count": 507441
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.964674373,
        "rows_read": 326129279,
        "bytes_read": 3089508231
      },
      "executionTime": 0.985,
      "requestId": "01JTG4HV4DWEPFSH2WS7H651VF",
      "length": 393
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.38,
      "totalDuration": 1.083,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 73,
        "totalTokens": 3843
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  label, \n  count() as count\nFROM \n(\n  SELECT \n    arrayJoin(labels) as label\n  FROM \n    github_events \n  WHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent') \n    AND labels != []\n)\nGROUP BY \n  label\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "dependencies",
              "count": 9458518
            },
            {
              "label": "enhancement",
              "count": 6805408
            },
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": ":arrow_heading_down: pull",
              "count": 4124651
            },
            {
              "label": "question",
              "count": 934878
            },
            {
              "label": "help wanted",
              "count": 757775
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "cla: yes",
              "count": 653842
            },
            {
              "label": "documentation",
              "count": 512616
            },
            {
              "label": "javascript",
              "count": 507441
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.964674373,
            "rows_read": 326129279,
            "bytes_read": 3089508231
          },
          "executionTime": 0.985,
          "requestId": "01JTG4HV4DWEPFSH2WS7H651VF",
          "length": 393
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.38,
          "totalDuration": 1.083,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 73,
            "totalTokens": 3843
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  labels, \n  count() as count\nFROM \n  github_events\nWHERE \n  event_type IN ['IssuesEvent', 'PullRequestEvent'] \n  AND labels IN ['bug', 'feature', 'enhancement']\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.576761767,
        "rows_read": 326129279,
        "bytes_read": 3089485949
      },
      "executionTime": 1.595,
      "requestId": "01JTG4HZR1MPPZ4MSCGM3FJ2HZ",
      "length": 2
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.631,
      "totalDuration": 1.237,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 66,
        "totalTokens": 3842
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  labels, \n  count() as count\nFROM \n  github_events\nWHERE \n  event_type IN ['IssuesEvent', 'PullRequestEvent'] \n  AND labels IN ['bug', 'feature', 'enhancement']\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.576761767,
            "rows_read": 326129279,
            "bytes_read": 3089485949
          },
          "executionTime": 1.595,
          "requestId": "01JTG4HZR1MPPZ4MSCGM3FJ2HZ",
          "length": 2
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.631,
          "totalDuration": 1.237,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 66,
            "totalTokens": 3842
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, LENGTH(repo_name) AS length FROM github_events ORDER BY length DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
          "length": 140
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
          "length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "length": 140
        },
        {
          "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
          "length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "length": 140
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
          "length": 140
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
          "length": 140
        },
        {
          "repo_name": "accounts-inheritance-finders-of-america/eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
          "length": 140
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 7.258619446,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.302,
      "requestId": "01JTG4J4BP4N502SAGP501QYBT",
      "length": 1701
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.332,
      "totalDuration": 0.604,
      "tokens": {
        "promptTokens": 3554,
        "completionTokens": 21,
        "totalTokens": 3575
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, LENGTH(repo_name) AS length FROM github_events ORDER BY length DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
              "length": 140
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
              "length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "length": 140
            },
            {
              "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
              "length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "length": 140
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
              "length": 140
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf",
              "length": 140
            },
            {
              "repo_name": "accounts-inheritance-finders-of-america/eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
              "length": 140
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 7.258619446,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.302,
          "requestId": "01JTG4J4BP4N502SAGP501QYBT",
          "length": 1701
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.332,
          "totalDuration": 0.604,
          "tokens": {
            "promptTokens": 3554,
            "completionTokens": 21,
            "totalTokens": 3575
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, LENGTH(repo_name) as length FROM github_events ORDER BY length ASC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        },
        {
          "repo_name": "/",
          "length": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 9.329109618,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 9.348,
      "requestId": "01JTG4JF0JGWZPVCGT3HZGTEXT",
      "length": 291
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.644,
      "totalDuration": 1.13,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 21,
        "totalTokens": 3786
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, LENGTH(repo_name) as length FROM github_events ORDER BY length ASC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            },
            {
              "repo_name": "/",
              "length": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 9.329109618,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 9.348,
          "requestId": "01JTG4JF0JGWZPVCGT3HZGTEXT",
          "length": 291
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.644,
          "totalDuration": 1.13,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 21,
            "totalTokens": 3786
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count() as comment_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' AND lower(body) LIKE '%freecodecamp%' \nGROUP BY repo_name \nORDER BY comment_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 11489
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 6694
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 1517
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 664
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 481
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "comment_count": 362
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 355
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 273
        },
        {
          "repo_name": "bugron/TestPrBot",
          "comment_count": 249
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 206
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 12.163749367,
        "rows_read": 218620144,
        "bytes_read": 91679642960
      },
      "executionTime": 12.212,
      "requestId": "01JTG4JW0558MMVCEBHP7MKD34",
      "length": 606
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.672,
      "totalDuration": 1.422,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 49,
        "totalTokens": 3819
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count() as comment_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' AND lower(body) LIKE '%freecodecamp%' \nGROUP BY repo_name \nORDER BY comment_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 11489
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 6694
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 1517
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 664
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 481
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "comment_count": 362
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 355
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 273
            },
            {
              "repo_name": "bugron/TestPrBot",
              "comment_count": 249
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 206
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 12.163749367,
            "rows_read": 218620144,
            "bytes_read": 91679642960
          },
          "executionTime": 12.212,
          "requestId": "01JTG4JW0558MMVCEBHP7MKD34",
          "length": 606
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.672,
          "totalDuration": 1.422,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 49,
            "totalTokens": 3819
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%freecodecamp%'\nGROUP BY \n  repo_name\nORDER BY \n  comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 11489
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 6694
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 1517
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 664
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 481
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "comment_count": 362
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 355
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 273
        },
        {
          "repo_name": "bugron/TestPrBot",
          "comment_count": 249
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 206
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 12.387035679,
        "rows_read": 218620144,
        "bytes_read": 91679642960
      },
      "executionTime": 12.429,
      "requestId": "01JTG4KGAEDK3HP9BZHZ3NCNF1",
      "length": 606
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Repositories with freecodecamp-related comments, sorted by stars\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  repo_name, \n  COUNT(*) as comment_count, \n  argMax(stars_count, created_at) as stars_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%freecodecamp%'\nGROUP BY \n  repo_name\nORDER BY \n  stars_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.701,
      "totalDuration": 1.247,
      "tokens": {
        "promptTokens": 3903,
        "completionTokens": 62,
        "totalTokens": 3965
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as comment_count, \n  argMax(stars_count, created_at) as stars_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%freecodecamp%'\nGROUP BY \n  repo_name\nORDER BY \n  stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG4KCM1C7ZK3DQTSRHW1XDE",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars_count' in scope SELECT repo_name, COUNT(*) AS comment_count, argMax(stars_count, created_at) AS stars_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssueCommentEvent') AND (lower(body) LIKE '%freecodecamp%') GROUP BY repo_name ORDER BY stars_count DESC LIMIT 10. Maybe you meant: ['stars_count']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v",
          "length": 2
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.803,
          "totalDuration": 2.333,
          "tokens": {
            "promptTokens": 3774,
            "completionTokens": 77,
            "totalTokens": 3851
          }
        },
        "error": null
      },
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%freecodecamp%'\nGROUP BY \n  repo_name\nORDER BY \n  comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 11489
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 6694
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 1517
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 664
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 481
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "comment_count": 362
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 355
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 273
            },
            {
              "repo_name": "bugron/TestPrBot",
              "comment_count": 249
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 206
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 12.387035679,
            "rows_read": 218620144,
            "bytes_read": 91679642960
          },
          "executionTime": 12.429,
          "requestId": "01JTG4KGAEDK3HP9BZHZ3NCNF1",
          "length": 606
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with freecodecamp-related comments, sorted by stars\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  repo_name, \n  COUNT(*) as comment_count, \n  argMax(stars_count, created_at) as stars_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND lower(body) LIKE '%freecodecamp%'\nGROUP BY \n  repo_name\nORDER BY \n  stars_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.701,
          "totalDuration": 1.247,
          "tokens": {
            "promptTokens": 3903,
            "completionTokens": 62,
            "totalTokens": 3965
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT body, count(*) as count FROM github_events WHERE event_type = 'IssueCommentEvent' AND body != '' GROUP BY body ORDER BY count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "body": "Thanks!",
          "count": 430058
        },
        {
          "body": "LGTM",
          "count": 400812
        },
        {
          "body": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.",
          "count": 391323
        },
        {
          "body": "+1",
          "count": 391154
        },
        {
          "body": "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
          "count": 367543
        },
        {
          "body": "## Step 1: Assign yourself\n\nUnassigned issues don't have owners to look after them. When you’re assigned to an issue or pull request, it tells repository visitors and contributors that you'll be facilitating the conversation or task :muscle:.\n\n### :keyboard: Activity\n\n1. On the right side of the screen, under the \"Assignees\" section, click the gear icon and select yourself\n\nFor a printable version of the steps in this course, check out the [Quick Reference Guide](https://lab.github.com/public/introduction-to-github.pdf).\n\n<hr>\n<h3 align=\"center\">I'll respond when I detect you've assigned yourself to this issue.</h3>\n\n> _Sometimes I respond too fast for the page to update! If you perform an expected action and don't see a response from me, wait a few seconds and refresh the page for your next steps._\n",
          "count": 349917
        },
        {
          "body": ":+1: ",
          "count": 314599
        },
        {
          "body": "Superseded by #6.",
          "count": 199058
        },
        {
          "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
          "count": 186390
        },
        {
          "body": "👍 ",
          "count": 180581
        }
      ],
      "meta": [
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 134.989393274,
        "rows_read": 218620144,
        "bytes_read": 91657631921
      },
      "executionTime": 135.008,
      "requestId": "01JTG4M000DNWZCX48C6250GHH",
      "length": 1859
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "llama-4-maverick",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.616,
      "totalDuration": 1.141,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 34,
        "totalTokens": 3802
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT body, count(*) as count FROM github_events WHERE event_type = 'IssueCommentEvent' AND body != '' GROUP BY body ORDER BY count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "body": "Thanks!",
              "count": 430058
            },
            {
              "body": "LGTM",
              "count": 400812
            },
            {
              "body": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.",
              "count": 391323
            },
            {
              "body": "+1",
              "count": 391154
            },
            {
              "body": "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
              "count": 367543
            },
            {
              "body": "## Step 1: Assign yourself\n\nUnassigned issues don't have owners to look after them. When you’re assigned to an issue or pull request, it tells repository visitors and contributors that you'll be facilitating the conversation or task :muscle:.\n\n### :keyboard: Activity\n\n1. On the right side of the screen, under the \"Assignees\" section, click the gear icon and select yourself\n\nFor a printable version of the steps in this course, check out the [Quick Reference Guide](https://lab.github.com/public/introduction-to-github.pdf).\n\n<hr>\n<h3 align=\"center\">I'll respond when I detect you've assigned yourself to this issue.</h3>\n\n> _Sometimes I respond too fast for the page to update! If you perform an expected action and don't see a response from me, wait a few seconds and refresh the page for your next steps._\n",
              "count": 349917
            },
            {
              "body": ":+1: ",
              "count": 314599
            },
            {
              "body": "Superseded by #6.",
              "count": 199058
            },
            {
              "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
              "count": 186390
            },
            {
              "body": "👍 ",
              "count": 180581
            }
          ],
          "meta": [
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 134.989393274,
            "rows_read": 218620144,
            "bytes_read": 91657631921
          },
          "executionTime": 135.008,
          "requestId": "01JTG4M000DNWZCX48C6250GHH",
          "length": 1859
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "llama-4-maverick",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.616,
          "totalDuration": 1.141,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 34,
            "totalTokens": 3802
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n COUNT(*) \nFROM \n github_events \nWHERE \n event_type = 'WatchEvent' \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNT()": 232118474
        }
      ],
      "meta": [
        {
          "name": "COUNT()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004971973,
        "rows_read": 134879,
        "bytes_read": 134894
      },
      "executionTime": 0.023,
      "requestId": "01JTG4R6WQ4WNGJWNPZQHW5KJQ",
      "length": 23
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.443,
      "totalDuration": 0.601,
      "tokens": {
        "promptTokens": 3567,
        "completionTokens": 24,
        "totalTokens": 3591
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n COUNT(*) \nFROM \n github_events \nWHERE \n event_type = 'WatchEvent' \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNT()": 232118474
            }
          ],
          "meta": [
            {
              "name": "COUNT()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.004971973,
            "rows_read": 134879,
            "bytes_read": 134894
          },
          "executionTime": 0.023,
          "requestId": "01JTG4R6WQ4WNGJWNPZQHW5KJQ",
          "length": 23
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.443,
          "totalDuration": 0.601,
          "tokens": {
            "promptTokens": 3567,
            "completionTokens": 24,
            "totalTokens": 3591
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    COUNT(*) as count \nFROM \n    github_events \nWHERE \n    event_type = 'WatchEvent' \nGROUP BY \n    repo_name \nORDER BY \n    count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "count": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "count": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "count": 199731
        },
        {
          "repo_name": "facebook/react",
          "count": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "count": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "count": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "count": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "count": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "count": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "count": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.264359347,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.285,
      "requestId": "01JTG4RA8PA6JS1WPD52PTCZG1",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.414,
      "totalDuration": 0.93,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 49,
        "totalTokens": 3814
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as count \nFROM \n    github_events \nWHERE \n    event_type = 'WatchEvent' \nGROUP BY \n    repo_name \nORDER BY \n    count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "count": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "count": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "count": 199731
            },
            {
              "repo_name": "facebook/react",
              "count": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "count": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "count": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "count": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "count": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "count": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "count": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.264359347,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.285,
          "requestId": "01JTG4RA8PA6JS1WPD52PTCZG1",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.414,
          "totalDuration": 0.93,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 49,
            "totalTokens": 3814
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  (stars - 1) / 10 * 10 + 1 AS stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY (stars - 1) / 10 * 10 + 1\nORDER BY stars_bucket\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.021,
      "requestId": "01JTG4S26F54W8J5ZYH9XZRC2C",
      "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, MAX(stars) AS stars FROM github_llm_bench.github_events AS github_events GROUP BY repo_name. Maybe you meant: ['stars']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  stars - stars % 10 AS stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY stars_bucket\nORDER BY stars_bucket\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY \n  CASE \n    WHEN stars <= 10 THEN '1-10'\n    WHEN stars <= 20 THEN '11-20'\n    WHEN stars <= 30 THEN '21-30'\n    WHEN stars <= 40 THEN '31-40'\n    WHEN stars <= 50 THEN '41-50'\n    WHEN stars <= 60 THEN '51-60'\n    WHEN stars <= 70 THEN '61-70'\n    WHEN stars <= 80 THEN '71-80'\n    WHEN stars <= 90 THEN '81-90'\n    WHEN stars <= 100 THEN '91-100'\n    WHEN stars <= 110 THEN '101-110'\n    WHEN stars <= 120 THEN '111-120'\n    WHEN stars <= 130 THEN '121-130'\n    WHEN stars <= 140 THEN '131-140'\n    WHEN stars <= 150 THEN '141-150'\n    WHEN stars <= 160 THEN '151-160'\n    WHEN stars <= 170 THEN '161-170'\n    WHEN stars <= 180 THEN '171-180'\n    WHEN stars <= 190 THEN '181-190'\n    WHEN stars <= 200 THEN '191-200'\n    WHEN stars <= 300 THEN '201-300'\n    WHEN stars <= 400 THEN '301-400'\n    WHEN stars <= 500 THEN '401-500'\n    WHEN stars <= 600 THEN '501-600'\n    WHEN stars <= 700 THEN '601-700'\n    WHEN stars <= 800 THEN '701-800'\n    WHEN stars <= 900 THEN '801-900'\n    WHEN stars <= 1000 THEN '901-1000'\n    WHEN stars <= 2000 THEN '1001-2000'\n    WHEN stars <= 3000 THEN '2001-3000'\n    WHEN stars <= 4000 THEN '3001-4000'\n    WHEN stars <= 5000 THEN '4001-5000'\n    WHEN stars <= 6000 THEN '5001-6000'\n    WHEN stars <= 7000 THEN '6001-7000'\n    WHEN stars <= 8000 THEN '7001-8000'\n    WHEN stars <= 9000 THEN '8001-9000'\n    WHEN stars <= 10000 THEN '9001-10000'\n    WHEN stars <= 20000 THEN '10001-20000'\n    WHEN stars <= 30000 THEN '20001-30000'\n    WHEN stars <= 40000 THEN '30001-40000'\n    WHEN stars <= 50000 THEN '40001-50000'\n    WHEN stars <= 60000 THEN '50001-60000'\n    WHEN stars <= 70000 THEN '60001-70000'\n    WHEN stars <= 80000 THEN '70001-80000'\n    WHEN stars <= 90000 THEN '80001-90000'\n    WHEN stars <= 100000 THEN '90001-100000'\n  END AS stars_bucket\nGROUP BY stars_bucket\nORDER BY stars_bucket\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.69,
      "totalDuration": 1.949,
      "tokens": {
        "promptTokens": 4646,
        "completionTokens": 104,
        "totalTokens": 4750
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  stars - stars % 10 AS stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY stars_bucket\nORDER BY stars_bucket\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTG4REJ8YQPZ5S6XTDAA4EBT",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, MAX(stars) AS stars FROM github_llm_bench.github_events AS github_events GROUP BY repo_name. Maybe you meant: ['stars']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.302,
          "totalDuration": 0.614,
          "tokens": {
            "promptTokens": 3567,
            "completionTokens": 76,
            "totalTokens": 3643
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY \n  CASE \n    WHEN stars <= 10 THEN '1-10'\n    WHEN stars <= 20 THEN '11-20'\n    WHEN stars <= 30 THEN '21-30'\n    WHEN stars <= 40 THEN '31-40'\n    WHEN stars <= 50 THEN '41-50'\n    WHEN stars <= 60 THEN '51-60'\n    WHEN stars <= 70 THEN '61-70'\n    WHEN stars <= 80 THEN '71-80'\n    WHEN stars <= 90 THEN '81-90'\n    WHEN stars <= 100 THEN '91-100'\n    WHEN stars <= 110 THEN '101-110'\n    WHEN stars <= 120 THEN '111-120'\n    WHEN stars <= 130 THEN '121-130'\n    WHEN stars <= 140 THEN '131-140'\n    WHEN stars <= 150 THEN '141-150'\n    WHEN stars <= 160 THEN '151-160'\n    WHEN stars <= 170 THEN '161-170'\n    WHEN stars <= 180 THEN '171-180'\n    WHEN stars <= 190 THEN '181-190'\n    WHEN stars <= 200 THEN '191-200'\n    WHEN stars <= 300 THEN '201-300'\n    WHEN stars <= 400 THEN '301-400'\n    WHEN stars <= 500 THEN '401-500'\n    WHEN stars <= 600 THEN '501-600'\n    WHEN stars <= 700 THEN '601-700'\n    WHEN stars <= 800 THEN '701-800'\n    WHEN stars <= 900 THEN '801-900'\n    WHEN stars <= 1000 THEN '901-1000'\n    WHEN stars <= 2000 THEN '1001-2000'\n    WHEN stars <= 3000 THEN '2001-3000'\n    WHEN stars <= 4000 THEN '3001-4000'\n    WHEN stars <= 5000 THEN '4001-5000'\n    WHEN stars <= 6000 THEN '5001-6000'\n    WHEN stars <= 7000 THEN '6001-7000'\n    WHEN stars <= 8000 THEN '7001-8000'\n    WHEN stars <= 9000 THEN '8001-9000'\n    WHEN stars <= 10000 THEN '9001-10000'\n    WHEN stars <= 20000 THEN '10001-20000'\n    WHEN stars <= 30000 THEN '20001-30000'\n    WHEN stars <= 40000 THEN '30001-40000'\n    WHEN stars <= 50000 THEN '40001-50000'\n    WHEN stars <= 60000 THEN '50001-60000'\n    WHEN stars <= 70000 THEN '60001-70000'\n    WHEN stars <= 80000 THEN '70001-80000'\n    WHEN stars <= 90000 THEN '80001-90000'\n    WHEN stars <= 100000 THEN '90001-100000'\n  END AS stars_bucket\nGROUP BY stars_bucket\nORDER BY stars_bucket\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG4RXTYMZ2R1RXBDSDG7AG5",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1992 ('GROUP') (line 61, col 1): GROUP BY stars_bucket\\nORDER BY stars_bucket\\nLIMIT 10\\n FORMAT JSON. Expected one of: token, Comma, WITH, HAVING, WINDOW, QUALIFY, ORDER BY, LIMIT, OFFSET, FETCH, SETTINGS, UNION, EXCEPT, INTERSECT, INTO OUTFILE, FORMAT, end of query\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  stars - stars % 10 AS stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY stars_bucket\nORDER BY stars_bucket\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.805,
          "totalDuration": 13.112,
          "tokens": {
            "promptTokens": 3905,
            "completionTokens": 695,
            "totalTokens": 4600
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  (stars - 1) / 10 * 10 + 1 AS stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY (stars - 1) / 10 * 10 + 1\nORDER BY stars_bucket\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG4S26F54W8J5ZYH9XZRC2C",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, MAX(stars) AS stars FROM github_llm_bench.github_events AS github_events GROUP BY repo_name. Maybe you meant: ['stars']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  stars - stars % 10 AS stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY stars_bucket\nORDER BY stars_bucket\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  stars_bucket,\n  COUNT(*) AS count\nFROM (\n  SELECT \n    repo_name,\n    MAX(stars) AS stars\n  FROM github_events\n  GROUP BY repo_name\n) AS repo_stars\nWHERE stars BETWEEN 1 AND 100000\nGROUP BY \n  CASE \n    WHEN stars <= 10 THEN '1-10'\n    WHEN stars <= 20 THEN '11-20'\n    WHEN stars <= 30 THEN '21-30'\n    WHEN stars <= 40 THEN '31-40'\n    WHEN stars <= 50 THEN '41-50'\n    WHEN stars <= 60 THEN '51-60'\n    WHEN stars <= 70 THEN '61-70'\n    WHEN stars <= 80 THEN '71-80'\n    WHEN stars <= 90 THEN '81-90'\n    WHEN stars <= 100 THEN '91-100'\n    WHEN stars <= 110 THEN '101-110'\n    WHEN stars <= 120 THEN '111-120'\n    WHEN stars <= 130 THEN '121-130'\n    WHEN stars <= 140 THEN '131-140'\n    WHEN stars <= 150 THEN '141-150'\n    WHEN stars <= 160 THEN '151-160'\n    WHEN stars <= 170 THEN '161-170'\n    WHEN stars <= 180 THEN '171-180'\n    WHEN stars <= 190 THEN '181-190'\n    WHEN stars <= 200 THEN '191-200'\n    WHEN stars <= 300 THEN '201-300'\n    WHEN stars <= 400 THEN '301-400'\n    WHEN stars <= 500 THEN '401-500'\n    WHEN stars <= 600 THEN '501-600'\n    WHEN stars <= 700 THEN '601-700'\n    WHEN stars <= 800 THEN '701-800'\n    WHEN stars <= 900 THEN '801-900'\n    WHEN stars <= 1000 THEN '901-1000'\n    WHEN stars <= 2000 THEN '1001-2000'\n    WHEN stars <= 3000 THEN '2001-3000'\n    WHEN stars <= 4000 THEN '3001-4000'\n    WHEN stars <= 5000 THEN '4001-5000'\n    WHEN stars <= 6000 THEN '5001-6000'\n    WHEN stars <= 7000 THEN '6001-7000'\n    WHEN stars <= 8000 THEN '7001-8000'\n    WHEN stars <= 9000 THEN '8001-9000'\n    WHEN stars <= 10000 THEN '9001-10000'\n    WHEN stars <= 20000 THEN '10001-20000'\n    WHEN stars <= 30000 THEN '20001-30000'\n    WHEN stars <= 40000 THEN '30001-40000'\n    WHEN stars <= 50000 THEN '40001-50000'\n    WHEN stars <= 60000 THEN '50001-60000'\n    WHEN stars <= 70000 THEN '60001-70000'\n    WHEN stars <= 80000 THEN '70001-80000'\n    WHEN stars <= 90000 THEN '80001-90000'\n    WHEN stars <= 100000 THEN '90001-100000'\n  END AS stars_bucket\nGROUP BY stars_bucket\nORDER BY stars_bucket\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.69,
          "totalDuration": 1.949,
          "tokens": {
            "promptTokens": 4646,
            "completionTokens": 104,
            "totalTokens": 4750
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  COUNT(DISTINCT repo_name) \nFROM \n  github_events \nLIMIT \n  10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(repo_name)": 165611259
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(repo_name)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.450659743,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.512,
      "requestId": "01JTG4S5RYHWG6F679DG4E7P5A",
      "length": 40
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.71,
      "totalDuration": 1.102,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 23,
        "totalTokens": 3790
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  COUNT(DISTINCT repo_name) \nFROM \n  github_events \nLIMIT \n  10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(repo_name)": 165611259
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(repo_name)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.450659743,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.512,
          "requestId": "01JTG4S5RYHWG6F679DG4E7P5A",
          "length": 40
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.71,
          "totalDuration": 1.102,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 23,
            "totalTokens": 3790
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name,\n  COUNT(*) as count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND created_at >= '2015-01-01'\nGROUP BY \n  repo_name\nORDER BY \n  count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "count": 1688188
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "count": 1437709
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "count": 1335795
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "count": 1195243
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 9.762843637,
        "rows_read": 1463949066,
        "bytes_read": 10240803572
      },
      "executionTime": 9.791,
      "requestId": "01JTG4T165YJ6E2R13GA1R563T",
      "length": 521
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.467,
      "totalDuration": 1.096,
      "tokens": {
        "promptTokens": 3774,
        "completionTokens": 60,
        "totalTokens": 3834
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name,\n  COUNT(*) as count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND created_at >= '2015-01-01'\nGROUP BY \n  repo_name\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "count": 1688188
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "count": 1437709
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "count": 1335795
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "count": 1195243
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 9.762843637,
            "rows_read": 1463949066,
            "bytes_read": 10240803572
          },
          "executionTime": 9.791,
          "requestId": "01JTG4T165YJ6E2R13GA1R563T",
          "length": 521
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.467,
          "totalDuration": 1.096,
          "tokens": {
            "promptTokens": 3774,
            "completionTokens": 60,
            "totalTokens": 3834
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  event_type,\n  COUNT(*) as total_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  event_type\nORDER BY \n  total_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "event_type": "WatchEvent",
          "total_stars": 232118474
        }
      ],
      "meta": [
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.119059619,
        "rows_read": 232190399,
        "bytes_read": 232190399
      },
      "executionTime": 0.137,
      "requestId": "01JTG4TE682E0YKB6Z7XVAQNCV",
      "length": 53
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.492,
      "totalDuration": 1.022,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 51,
        "totalTokens": 3821
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  event_type,\n  COUNT(*) as total_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  event_type\nORDER BY \n  total_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "event_type": "WatchEvent",
              "total_stars": 232118474
            }
          ],
          "meta": [
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.119059619,
            "rows_read": 232190399,
            "bytes_read": 232190399
          },
          "executionTime": 0.137,
          "requestId": "01JTG4TE682E0YKB6Z7XVAQNCV",
          "length": 53
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.492,
          "totalDuration": 1.022,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 51,
            "totalTokens": 3821
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  actor_login, \n  COUNT(*) as num_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  actor_login\nORDER BY \n  num_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "num_stars": 232492
        },
        {
          "actor_login": "salifm",
          "num_stars": 202534
        },
        {
          "actor_login": "x0rzkov",
          "num_stars": 73531
        },
        {
          "actor_login": "fly51fly",
          "num_stars": 57756
        },
        {
          "actor_login": "PCOffline",
          "num_stars": 56725
        },
        {
          "actor_login": "baslr",
          "num_stars": 50363
        },
        {
          "actor_login": "gkze",
          "num_stars": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "num_stars": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "num_stars": 44715
        },
        {
          "actor_login": "mcanthony",
          "num_stars": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.150206366,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 5.198,
      "requestId": "01JTG4TJNXZCHCN7BA8YD1T0JX",
      "length": 450
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.056,
      "totalDuration": 1.932,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 52,
        "totalTokens": 3820
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  actor_login, \n  COUNT(*) as num_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  actor_login\nORDER BY \n  num_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "num_stars": 232492
            },
            {
              "actor_login": "salifm",
              "num_stars": 202534
            },
            {
              "actor_login": "x0rzkov",
              "num_stars": 73531
            },
            {
              "actor_login": "fly51fly",
              "num_stars": 57756
            },
            {
              "actor_login": "PCOffline",
              "num_stars": 56725
            },
            {
              "actor_login": "baslr",
              "num_stars": 50363
            },
            {
              "actor_login": "gkze",
              "num_stars": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "num_stars": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "num_stars": 44715
            },
            {
              "actor_login": "mcanthony",
              "num_stars": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.150206366,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 5.198,
          "requestId": "01JTG4TJNXZCHCN7BA8YD1T0JX",
          "length": 450
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.056,
          "totalDuration": 1.932,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 52,
            "totalTokens": 3820
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name, \n    COUNT(*) as star_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND action = 'created' \n    AND actor_login IN (\n        SELECT \n            actor_login \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND action = 'created' \n            AND repo_name = 'freecodecamp/freecodecamp'\n    )\nGROUP BY \n    repo_name \nORDER BY \n    star_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.055496299,
        "rows_read": 232317017,
        "bytes_read": 464622104
      },
      "executionTime": 0.074,
      "requestId": "01JTG4TVVKQNXWCBCDR75MEXQN",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.541,
      "totalDuration": 1.726,
      "tokens": {
        "promptTokens": 3785,
        "completionTokens": 115,
        "totalTokens": 3900
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name, \n    COUNT(*) as star_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND action = 'created' \n    AND actor_login IN (\n        SELECT \n            actor_login \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND action = 'created' \n            AND repo_name = 'freecodecamp/freecodecamp'\n    )\nGROUP BY \n    repo_name \nORDER BY \n    star_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.055496299,
            "rows_read": 232317017,
            "bytes_read": 464622104
          },
          "executionTime": 0.074,
          "requestId": "01JTG4TVVKQNXWCBCDR75MEXQN",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.541,
          "totalDuration": 1.726,
          "tokens": {
            "promptTokens": 3785,
            "completionTokens": 115,
            "totalTokens": 3900
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  actor_login,\n  COUNT(*) as count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND repo_name = 'javisantana/javisantana'\nGROUP BY \n  actor_login\nORDER BY \n  count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.008042711,
        "rows_read": 114688,
        "bytes_read": 344064
      },
      "executionTime": 0.027,
      "requestId": "01JTG4TZE7ECCACBXF1NGAJ95S",
      "length": 2
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.455,
      "totalDuration": 1.093,
      "tokens": {
        "promptTokens": 3772,
        "completionTokens": 60,
        "totalTokens": 3832
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  actor_login,\n  COUNT(*) as count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND repo_name = 'javisantana/javisantana'\nGROUP BY \n  actor_login\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.008042711,
            "rows_read": 114688,
            "bytes_read": 344064
          },
          "executionTime": 0.027,
          "requestId": "01JTG4TZE7ECCACBXF1NGAJ95S",
          "length": 2
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.455,
          "totalDuration": 1.093,
          "tokens": {
            "promptTokens": 3772,
            "completionTokens": 60,
            "totalTokens": 3832
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  github_events.actor_login,\n  github_events.repo_name\nFROM \n  github_events\nWHERE \n  github_events.repo_name != 'freecodecamp' \n  AND github_events.actor_login IN (\n    SELECT \n      github_events.actor_login \n    FROM \n      github_events \n    WHERE \n      github_events.repo_name = 'freecodecamp'\n  )\nGROUP BY \n  github_events.actor_login, \n  github_events.repo_name\nORDER BY \n  COUNT(DISTINCT github_events.repo_name) DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 14.883939215,
        "rows_read": 3127355383,
        "bytes_read": 12484012629
      },
      "executionTime": 14.93,
      "requestId": "01JTG4V4CYGGB2Y4K8P8XWH4HG",
      "length": 2
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.489,
      "totalDuration": 2.526,
      "tokens": {
        "promptTokens": 3775,
        "completionTokens": 112,
        "totalTokens": 3887
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  github_events.actor_login,\n  github_events.repo_name\nFROM \n  github_events\nWHERE \n  github_events.repo_name != 'freecodecamp' \n  AND github_events.actor_login IN (\n    SELECT \n      github_events.actor_login \n    FROM \n      github_events \n    WHERE \n      github_events.repo_name = 'freecodecamp'\n  )\nGROUP BY \n  github_events.actor_login, \n  github_events.repo_name\nORDER BY \n  COUNT(DISTINCT github_events.repo_name) DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 14.883939215,
            "rows_read": 3127355383,
            "bytes_read": 12484012629
          },
          "executionTime": 14.93,
          "requestId": "01JTG4V4CYGGB2Y4K8P8XWH4HG",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.489,
          "totalDuration": 2.526,
          "tokens": {
            "promptTokens": 3775,
            "completionTokens": 112,
            "totalTokens": 3887
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  args.repo_name,\n  count(DISTINCT args.login) \nFROM \n  (\n  SELECT \n    e.repo_name,\n    e.actor_login AS login,\n    count(DISTINCT e.number) \n  FROM \n    github_events e\n  WHERE \n    e.event_type = 'IssuesEvent'\n    AND e.repo_name = 'freecodecamp/freecodecamp' \n  GROUP BY \n    e.repo_name,\n    e.actor_login\n  HAVING \n    count(DISTINCT e.number)  >  1\n) AS args\nGROUP BY \n  args.repo_name\nORDER BY \n  count(DISTINCT args.login) DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "countDistinct(login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.009660671,
        "rows_read": 159252,
        "bytes_read": 332274
      },
      "executionTime": 0.028,
      "requestId": "01JTG4VSM35MNCWBW3405C6SHW",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.566,
      "totalDuration": 4.327,
      "tokens": {
        "promptTokens": 3778,
        "completionTokens": 141,
        "totalTokens": 3919
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  args.repo_name,\n  count(DISTINCT args.login) \nFROM \n  (\n  SELECT \n    e.repo_name,\n    e.actor_login AS login,\n    count(DISTINCT e.number) \n  FROM \n    github_events e\n  WHERE \n    e.event_type = 'IssuesEvent'\n    AND e.repo_name = 'freecodecamp/freecodecamp' \n  GROUP BY \n    e.repo_name,\n    e.actor_login\n  HAVING \n    count(DISTINCT e.number)  >  1\n) AS args\nGROUP BY \n  args.repo_name\nORDER BY \n  count(DISTINCT args.login) DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "countDistinct(login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.009660671,
            "rows_read": 159252,
            "bytes_read": 332274
          },
          "executionTime": 0.028,
          "requestId": "01JTG4VSM35MNCWBW3405C6SHW",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.566,
          "totalDuration": 4.327,
          "tokens": {
            "promptTokens": 3778,
            "completionTokens": 141,
            "totalTokens": 3919
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND action = 'created' \n  AND created_at >= now() - INTERVAL 1 DAY \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003035597,
        "rows_read": 0,
        "bytes_read": 0
      },
      "executionTime": 0.021,
      "requestId": "01JTG4VXHEBNE5E6AEZK8MWZV7",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.732,
      "totalDuration": 1.482,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 70,
        "totalTokens": 3841
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND action = 'created' \n  AND created_at >= now() - INTERVAL 1 DAY \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.003035597,
            "rows_read": 0,
            "bytes_read": 0
          },
          "executionTime": 0.021,
          "requestId": "01JTG4VXHEBNE5E6AEZK8MWZV7",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.732,
          "totalDuration": 1.482,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 70,
            "totalTokens": 3841
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name,\n  SUM(CASE WHEN YEAR(created_at) = 2019 THEN 1 ELSE 0 END) AS growth_2019,\n  SUM(CASE WHEN YEAR(created_at) = 2020 THEN 1 ELSE 0 END) AS growth_2020,\n  (SUM(CASE WHEN YEAR(created_at) = 2020 THEN 1 ELSE 0 END) - \n   SUM(CASE WHEN YEAR(created_at) = 2019 THEN 1 ELSE 0 END)) / \n  SUM(CASE WHEN YEAR(created_at) = 2019 THEN 1 ELSE 0 END) * 100 AS yoy_growth\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND created_at >= '2019-01-01'\n  AND created_at < '2021-01-01'\nGROUP BY \n  repo_name\nORDER BY \n  yoy_growth DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "NovaisGabriel/Information_Retrieval",
          "growth_2019": 0,
          "growth_2020": 1,
          "yoy_growth": null
        },
        {
          "repo_name": "TeBenachi/wordpress-theme-tailwind",
          "growth_2019": 0,
          "growth_2020": 6,
          "yoy_growth": null
        },
        {
          "repo_name": "JainAditi09/MyappTest",
          "growth_2019": 0,
          "growth_2020": 1,
          "yoy_growth": null
        },
        {
          "repo_name": "caubinhphu/QLKS_H2O",
          "growth_2019": 0,
          "growth_2020": 7,
          "yoy_growth": null
        },
        {
          "repo_name": "robinsinghpatiyal/Covid19-Study",
          "growth_2019": 0,
          "growth_2020": 2,
          "yoy_growth": null
        },
        {
          "repo_name": "franc-fwr/Blogsome",
          "growth_2019": 0,
          "growth_2020": 2,
          "yoy_growth": null
        },
        {
          "repo_name": "negovanovicdejan99/movies_laravel",
          "growth_2019": 0,
          "growth_2020": 8,
          "yoy_growth": null
        },
        {
          "repo_name": "marco-knietzsch/ecs-bridge-package",
          "growth_2019": 0,
          "growth_2020": 1,
          "yoy_growth": null
        },
        {
          "repo_name": "NumtraCG/5f855a6c5599aaf13728bdf320201013-074955regressionauto",
          "growth_2019": 0,
          "growth_2020": 1,
          "yoy_growth": null
        },
        {
          "repo_name": "roychowd/synthetic-dataset",
          "growth_2019": 0,
          "growth_2020": 1,
          "yoy_growth": null
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "growth_2019",
          "type": "UInt64"
        },
        {
          "name": "growth_2020",
          "type": "UInt64"
        },
        {
          "name": "yoy_growth",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 4.46866529,
        "rows_read": 716542169,
        "bytes_read": 5011268599
      },
      "executionTime": 4.518,
      "requestId": "01JTG4W2WN3E82NYA4RK62HWTP",
      "length": 984
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.558,
      "totalDuration": 2.933,
      "tokens": {
        "promptTokens": 3777,
        "completionTokens": 202,
        "totalTokens": 3979
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name,\n  SUM(CASE WHEN YEAR(created_at) = 2019 THEN 1 ELSE 0 END) AS growth_2019,\n  SUM(CASE WHEN YEAR(created_at) = 2020 THEN 1 ELSE 0 END) AS growth_2020,\n  (SUM(CASE WHEN YEAR(created_at) = 2020 THEN 1 ELSE 0 END) - \n   SUM(CASE WHEN YEAR(created_at) = 2019 THEN 1 ELSE 0 END)) / \n  SUM(CASE WHEN YEAR(created_at) = 2019 THEN 1 ELSE 0 END) * 100 AS yoy_growth\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND created_at >= '2019-01-01'\n  AND created_at < '2021-01-01'\nGROUP BY \n  repo_name\nORDER BY \n  yoy_growth DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "NovaisGabriel/Information_Retrieval",
              "growth_2019": 0,
              "growth_2020": 1,
              "yoy_growth": null
            },
            {
              "repo_name": "TeBenachi/wordpress-theme-tailwind",
              "growth_2019": 0,
              "growth_2020": 6,
              "yoy_growth": null
            },
            {
              "repo_name": "JainAditi09/MyappTest",
              "growth_2019": 0,
              "growth_2020": 1,
              "yoy_growth": null
            },
            {
              "repo_name": "caubinhphu/QLKS_H2O",
              "growth_2019": 0,
              "growth_2020": 7,
              "yoy_growth": null
            },
            {
              "repo_name": "robinsinghpatiyal/Covid19-Study",
              "growth_2019": 0,
              "growth_2020": 2,
              "yoy_growth": null
            },
            {
              "repo_name": "franc-fwr/Blogsome",
              "growth_2019": 0,
              "growth_2020": 2,
              "yoy_growth": null
            },
            {
              "repo_name": "negovanovicdejan99/movies_laravel",
              "growth_2019": 0,
              "growth_2020": 8,
              "yoy_growth": null
            },
            {
              "repo_name": "marco-knietzsch/ecs-bridge-package",
              "growth_2019": 0,
              "growth_2020": 1,
              "yoy_growth": null
            },
            {
              "repo_name": "NumtraCG/5f855a6c5599aaf13728bdf320201013-074955regressionauto",
              "growth_2019": 0,
              "growth_2020": 1,
              "yoy_growth": null
            },
            {
              "repo_name": "roychowd/synthetic-dataset",
              "growth_2019": 0,
              "growth_2020": 1,
              "yoy_growth": null
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "growth_2019",
              "type": "UInt64"
            },
            {
              "name": "growth_2020",
              "type": "UInt64"
            },
            {
              "name": "yoy_growth",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 4.46866529,
            "rows_read": 716542169,
            "bytes_read": 5011268599
          },
          "executionTime": 4.518,
          "requestId": "01JTG4W2WN3E82NYA4RK62HWTP",
          "length": 984
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.558,
          "totalDuration": 2.933,
          "tokens": {
            "promptTokens": 3777,
            "completionTokens": 202,
            "totalTokens": 3979
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name,\n  COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n  COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n  (COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) * 1.0 / COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - 1) * 100 AS stagnation\nFROM \n  github_events\nWHERE \n  toYear(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nORDER BY \n  stagnation ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "namexiaolu/love",
          "events_2019": 9,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "LeachZhou/node-demo",
          "events_2019": 2,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "egeneralov/generate-mac-address",
          "events_2019": 6,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "chunlei6666/php1803",
          "events_2019": 1,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "jnguyen91/github.com-jnguyen91",
          "events_2019": 2,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "darlok77/test",
          "events_2019": 6,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "Muzammal92/AutoBike-Dealing-System",
          "events_2019": 2,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "carlosrojas/carlosrojas.github.io",
          "events_2019": 11,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "DanielaFerreira/Artigo_EasyCode",
          "events_2019": 3,
          "events_2020": 0,
          "stagnation": -100
        },
        {
          "repo_name": "AlphaG13/TailorMe",
          "events_2019": 2,
          "events_2020": 0,
          "stagnation": -100
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "events_2019",
          "type": "UInt64"
        },
        {
          "name": "events_2020",
          "type": "UInt64"
        },
        {
          "name": "stagnation",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 24.190165363,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 24.237,
      "requestId": "01JTG4WCRPG9KVKHJSABCN6W97",
      "length": 914
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.901,
      "totalDuration": 3.089,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 153,
        "totalTokens": 3929
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name,\n  COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) AS events_2019,\n  COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) AS events_2020,\n  (COUNT(CASE WHEN toYear(created_at) = 2020 THEN 1 END) * 1.0 / COUNT(CASE WHEN toYear(created_at) = 2019 THEN 1 END) - 1) * 100 AS stagnation\nFROM \n  github_events\nWHERE \n  toYear(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nORDER BY \n  stagnation ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "namexiaolu/love",
              "events_2019": 9,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "LeachZhou/node-demo",
              "events_2019": 2,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "egeneralov/generate-mac-address",
              "events_2019": 6,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "chunlei6666/php1803",
              "events_2019": 1,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "jnguyen91/github.com-jnguyen91",
              "events_2019": 2,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "darlok77/test",
              "events_2019": 6,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "Muzammal92/AutoBike-Dealing-System",
              "events_2019": 2,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "carlosrojas/carlosrojas.github.io",
              "events_2019": 11,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "DanielaFerreira/Artigo_EasyCode",
              "events_2019": 3,
              "events_2020": 0,
              "stagnation": -100
            },
            {
              "repo_name": "AlphaG13/TailorMe",
              "events_2019": 2,
              "events_2020": 0,
              "stagnation": -100
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "events_2019",
              "type": "UInt64"
            },
            {
              "name": "events_2020",
              "type": "UInt64"
            },
            {
              "name": "stagnation",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 24.190165363,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 24.237,
          "requestId": "01JTG4WCRPG9KVKHJSABCN6W97",
          "length": 914
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.901,
          "totalDuration": 3.089,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 153,
            "totalTokens": 3929
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name,\n  COUNT(*) as event_count\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  event_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "event_count": 7451541
        },
        {
          "repo_name": "direwolf-github/my-app",
          "event_count": 3955891
        },
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "event_count": 3097267
        },
        {
          "repo_name": "Lombiq/Orchard",
          "event_count": 2471262
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 2191295
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "event_count": 2018701
        },
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "event_count": 1891264
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "event_count": 1789118
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "event_count": 1688192
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "event_count": 1667750
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 45.44091252,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 45.486,
      "requestId": "01JTG4X8HZBSHM9CYASTT8WBVN",
      "length": 611
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.035,
      "totalDuration": 1.72,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 40,
        "totalTokens": 3811
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name,\n  COUNT(*) as event_count\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  event_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "event_count": 7451541
            },
            {
              "repo_name": "direwolf-github/my-app",
              "event_count": 3955891
            },
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "event_count": 3097267
            },
            {
              "repo_name": "Lombiq/Orchard",
              "event_count": 2471262
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 2191295
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "event_count": 2018701
            },
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "event_count": 1891264
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "event_count": 1789118
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "event_count": 1688192
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "event_count": 1667750
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 45.44091252,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 45.486,
          "requestId": "01JTG4X8HZBSHM9CYASTT8WBVN",
          "length": 611
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.035,
          "totalDuration": 1.72,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 40,
            "totalTokens": 3811
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  DAYOFWEEK(created_at) day_of_week,\n  COUNT(*) count\nFROM \n  github_events\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "count": 508678033
        },
        {
          "day_of_week": 3,
          "count": 505561981
        },
        {
          "day_of_week": 4,
          "count": 498971825
        },
        {
          "day_of_week": 1,
          "count": 489342058
        },
        {
          "day_of_week": 5,
          "count": 467059043
        },
        {
          "day_of_week": 7,
          "count": 330960007
        },
        {
          "day_of_week": 6,
          "count": 324316186
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.434623592,
        "rows_read": 3124889133,
        "bytes_read": 12499556532
      },
      "executionTime": 1.453,
      "requestId": "01JTG4YS5T18WX0S18TEGJFVAX",
      "length": 253
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.611,
      "totalDuration": 1.823,
      "tokens": {
        "promptTokens": 3772,
        "completionTokens": 45,
        "totalTokens": 3817
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  DAYOFWEEK(created_at) day_of_week,\n  COUNT(*) count\nFROM \n  github_events\nGROUP BY \n  day_of_week\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "count": 508678033
            },
            {
              "day_of_week": 3,
              "count": 505561981
            },
            {
              "day_of_week": 4,
              "count": 498971825
            },
            {
              "day_of_week": 1,
              "count": 489342058
            },
            {
              "day_of_week": 5,
              "count": 467059043
            },
            {
              "day_of_week": 7,
              "count": 330960007
            },
            {
              "day_of_week": 6,
              "count": 324316186
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.434623592,
            "rows_read": 3124889133,
            "bytes_read": 12499556532
          },
          "executionTime": 1.453,
          "requestId": "01JTG4YS5T18WX0S18TEGJFVAX",
          "length": 253
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.611,
          "totalDuration": 1.823,
          "tokens": {
            "promptTokens": 3772,
            "completionTokens": 45,
            "totalTokens": 3817
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "countDistinct(actor_login)": 34099240
        }
      ],
      "meta": [
        {
          "name": "countDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.945272999,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 18.99,
      "requestId": "01JTG4YXQS5ZA4T1SXVQBGY0E1",
      "length": 41
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.516,
      "totalDuration": 0.694,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 15,
        "totalTokens": 3782
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "countDistinct(actor_login)": 34099240
            }
          ],
          "meta": [
            {
              "name": "countDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.945272999,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 18.99,
          "requestId": "01JTG4YXQS5ZA4T1SXVQBGY0E1",
          "length": 41
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.516,
          "totalDuration": 0.694,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 15,
            "totalTokens": 3782
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  COUNT(DISTINCT actor_login) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 10131322
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.527901919,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 4.547,
      "requestId": "01JTG4ZKHW7RP5FCW907XX031D",
      "length": 41
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.539,
      "totalDuration": 0.874,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 32,
        "totalTokens": 3801
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  COUNT(DISTINCT actor_login) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 10131322
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.527901919,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 4.547,
          "requestId": "01JTG4ZKHW7RP5FCW907XX031D",
          "length": 41
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.539,
          "totalDuration": 0.874,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 32,
            "totalTokens": 3801
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 18808891
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.675931289,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.695,
      "requestId": "01JTG4ZTYHR5ER0T9CYY7YTNWR",
      "length": 41
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.316,
      "totalDuration": 0.524,
      "tokens": {
        "promptTokens": 3558,
        "completionTokens": 23,
        "totalTokens": 3581
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 18808891
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.675931289,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.695,
          "requestId": "01JTG4ZTYHR5ER0T9CYY7YTNWR",
          "length": 41
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.316,
          "totalDuration": 0.524,
          "tokens": {
            "promptTokens": 3558,
            "completionTokens": 23,
            "totalTokens": 3581
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'created' AND (repo_name = 'my-repo' OR repo_name LIKE '%my-repo%')",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 0
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.082447915,
        "rows_read": 214762171,
        "bytes_read": 429439598
      },
      "executionTime": 0.101,
      "requestId": "01JTG5044WYJ0Y3R576N9DMQFP",
      "length": 34
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.135,
      "totalDuration": 2.22,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 45,
        "totalTokens": 3814
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'created' AND (repo_name = 'my-repo' OR repo_name LIKE '%my-repo%')",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 0
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.082447915,
            "rows_read": 214762171,
            "bytes_read": 429439598
          },
          "executionTime": 0.101,
          "requestId": "01JTG5044WYJ0Y3R576N9DMQFP",
          "length": 34
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.135,
          "totalDuration": 2.22,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 45,
            "totalTokens": 3814
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND action = 'created' \n  AND actor_login IN (\n    SELECT DISTINCT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'PullRequestEvent' \n      AND action IN ('opened', 'closed', 'reopened', 'merged')\n  ) \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.759441287,
        "rows_read": 446952570,
        "bytes_read": 1323211259
      },
      "executionTime": 3.806,
      "requestId": "01JTG508NTM4NHF6DANY6NWN2M",
      "length": 2
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.615,
      "totalDuration": 2.008,
      "tokens": {
        "promptTokens": 3785,
        "completionTokens": 112,
        "totalTokens": 3897
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND action = 'created' \n  AND actor_login IN (\n    SELECT DISTINCT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'PullRequestEvent' \n      AND action IN ('opened', 'closed', 'reopened', 'merged')\n  ) \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.759441287,
            "rows_read": 446952570,
            "bytes_read": 1323211259
          },
          "executionTime": 3.806,
          "requestId": "01JTG508NTM4NHF6DANY6NWN2M",
          "length": 2
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.615,
          "totalDuration": 2.008,
          "tokens": {
            "promptTokens": 3785,
            "completionTokens": 112,
            "totalTokens": 3897
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  actor_login, \n  COUNT(*) as pr_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\n  AND action IN ('opened', 'closed', 'reopened')\nGROUP BY \n  actor_login\nHAVING \n  COUNT(*) >= 10\nORDER BY \n  pr_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 642504
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "pr_count": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.407142912,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.426,
      "requestId": "01JTG50GV9FG94MP7MXMX0T7X0",
      "length": 519
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.868,
      "totalDuration": 2.085,
      "tokens": {
        "promptTokens": 3773,
        "completionTokens": 77,
        "totalTokens": 3850
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  actor_login, \n  COUNT(*) as pr_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\n  AND action IN ('opened', 'closed', 'reopened')\nGROUP BY \n  actor_login\nHAVING \n  COUNT(*) >= 10\nORDER BY \n  pr_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 642504
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "pr_count": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.407142912,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.426,
          "requestId": "01JTG50GV9FG94MP7MXMX0T7X0",
          "length": 519
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.868,
          "totalDuration": 2.085,
          "tokens": {
            "promptTokens": 3773,
            "completionTokens": 77,
            "totalTokens": 3850
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as pull_requests_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\nGROUP BY \n  repo_name\nORDER BY \n  pull_requests_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_requests_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_requests_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_requests_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_requests_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_requests_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_requests_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_requests_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_requests_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_requests_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_requests_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_requests_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.324543673,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.343,
      "requestId": "01JTG50PGGC8MCVQDJ28W0NENK",
      "length": 716
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.487,
      "totalDuration": 1.872,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 53,
        "totalTokens": 3824
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as pull_requests_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\nGROUP BY \n  repo_name\nORDER BY \n  pull_requests_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_requests_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_requests_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_requests_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_requests_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_requests_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_requests_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_requests_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_requests_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_requests_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_requests_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_requests_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.324543673,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.343,
          "requestId": "01JTG50PGGC8MCVQDJ28W0NENK",
          "length": 716
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.487,
          "totalDuration": 1.872,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 53,
            "totalTokens": 3824
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as contributors_count\nFROM \n    github_events\nWHERE \n    event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY \n    repo_name\nORDER BY \n    contributors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors_count": 31919
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors_count": 24995
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors_count": 18204
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors_count": 13826
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors_count": 9751
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors_count": 9749
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors_count": 8839
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors_count": 8291
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors_count": 8132
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors_count": 8112
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.440421955,
        "rows_read": 214762171,
        "bytes_read": 1288143912
      },
      "executionTime": 2.459,
      "requestId": "01JTG50TVVEWK8XR7DEQ00NTYJ",
      "length": 720
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.326,
      "totalDuration": 0.615,
      "tokens": {
        "promptTokens": 3561,
        "completionTokens": 63,
        "totalTokens": 3624
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as contributors_count\nFROM \n    github_events\nWHERE \n    event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY \n    repo_name\nORDER BY \n    contributors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors_count": 31919
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors_count": 24995
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors_count": 18204
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors_count": 13826
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors_count": 9751
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors_count": 9749
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors_count": 8839
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors_count": 8291
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors_count": 8132
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors_count": 8112
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.440421955,
            "rows_read": 214762171,
            "bytes_read": 1288143912
          },
          "executionTime": 2.459,
          "requestId": "01JTG50TVVEWK8XR7DEQ00NTYJ",
          "length": 720
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.326,
          "totalDuration": 0.615,
          "tokens": {
            "promptTokens": 3561,
            "completionTokens": 63,
            "totalTokens": 3624
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as issue_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' AND \n  action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 157016
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130920
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 127029
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "issue_count": 108096
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 91086
        },
        {
          "repo_name": "debricked/debricked-test-integration",
          "issue_count": 83341
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.506573582,
        "rows_read": 111439849,
        "bytes_read": 445340560
      },
      "executionTime": 0.524,
      "requestId": "01JTG510XWT4RCJJA7723D7ATP",
      "length": 586
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.537,
      "totalDuration": 1.249,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 58,
        "totalTokens": 3828
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as issue_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' AND \n  action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 157016
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130920
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 127029
            },
            {
              "repo_name": "Ramos-dev/jniwebshell",
              "issue_count": 108096
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 91086
            },
            {
              "repo_name": "debricked/debricked-test-integration",
              "issue_count": 83341
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.506573582,
            "rows_read": 111439849,
            "bytes_read": 445340560
          },
          "executionTime": 0.524,
          "requestId": "01JTG510XWT4RCJJA7723D7ATP",
          "length": 586
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.537,
          "totalDuration": 1.249,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 58,
            "totalTokens": 3828
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(CASE WHEN \n    event_type = 'IssuesEvent' \n    AND action IN ('opened', 'created') \n    AND author_association != 'MANNEQUIN' \n  THEN 1 END) AS issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action IN ('opened', 'created')\n  AND repo_name NOT IN ('robot', 'bot')\n  AND created_at >= now() - INTERVAL 1 YEAR\n  AND (SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' AND repo_name = github_events.repo_name AND action = 'created') >= 1000\nGROUP BY \n  repo_name\nORDER BY \n  issues_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.663416223,
        "rows_read": 232190399,
        "bytes_read": 928357358
      },
      "executionTime": 0.681,
      "requestId": "01JTG516X2FYRY6KVP956S3RFF",
      "length": 2
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.601,
      "totalDuration": 3.091,
      "tokens": {
        "promptTokens": 3786,
        "completionTokens": 162,
        "totalTokens": 3948
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(CASE WHEN \n    event_type = 'IssuesEvent' \n    AND action IN ('opened', 'created') \n    AND author_association != 'MANNEQUIN' \n  THEN 1 END) AS issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action IN ('opened', 'created')\n  AND repo_name NOT IN ('robot', 'bot')\n  AND created_at >= now() - INTERVAL 1 YEAR\n  AND (SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' AND repo_name = github_events.repo_name AND action = 'created') >= 1000\nGROUP BY \n  repo_name\nORDER BY \n  issues_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.663416223,
            "rows_read": 232190399,
            "bytes_read": 928357358
          },
          "executionTime": 0.681,
          "requestId": "01JTG516X2FYRY6KVP956S3RFF",
          "length": 2
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.601,
          "totalDuration": 3.091,
          "tokens": {
            "promptTokens": 3786,
            "completionTokens": 162,
            "totalTokens": 3948
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN actor_login \n    END) AS issue_authors_count,\n    COUNT(DISTINCT issue_id) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'created')\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG51P8E83P1TRWX6Z8HVB5F",
      "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 304 ('{') (line 13, col 10): {1000} <= ( \\n        SELECT \\n            COUNT(*) \\n        FROM \\n            github_events \\n        WHERE \\n            event_type = 'WatchEvent' \\n            AN. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN issue_id \n    END) AS issue_authors_count,\n    COUNT(DISTINCT issue_id) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'created')\n    AND repo_name IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name NOT LIKE '%bot%'\n    )\n    AND repo_name NOT IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name LIKE '%bot%'\n    )\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN actor_login \n    END) AS issue_authors_count,\n    COUNT(DISTINCT CASE \n        WHEN action IN ('opened', 'created') THEN issue_id \n    END) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.502,
      "totalDuration": 2.136,
      "tokens": {
        "promptTokens": 4326,
        "completionTokens": 161,
        "totalTokens": 4487
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN issue_id \n    END) AS issue_authors_count,\n    COUNT(DISTINCT issue_id) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'created')\n    AND repo_name IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name NOT LIKE '%bot%'\n    )\n    AND repo_name NOT IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name LIKE '%bot%'\n    )\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG51D5S7KDDHBS1KZJMRD8T",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 795 ('{') (line 33, col 10): {1000} <= ( \\n        SELECT \\n            COUNT(*) \\n        FROM \\n            github_events \\n        WHERE \\n            event_type = 'WatchEvent' \\n            AN. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.65,
          "totalDuration": 3.24,
          "tokens": {
            "promptTokens": 3793,
            "completionTokens": 264,
            "totalTokens": 4057
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN actor_login \n    END) AS issue_authors_count,\n    COUNT(DISTINCT CASE \n        WHEN action IN ('opened', 'created') THEN issue_id \n    END) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG51HQ2DSMQ3PB5R07ZQT3Z",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 329 ('{') (line 14, col 10): {1000} <= ( \\n        SELECT \\n            COUNT(*) \\n        FROM \\n            github_events \\n        WHERE \\n            event_type = 'WatchEvent' \\n            AN. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN issue_id \n    END) AS issue_authors_count,\n    COUNT(DISTINCT issue_id) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'created')\n    AND repo_name IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name NOT LIKE '%bot%'\n    )\n    AND repo_name NOT IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name LIKE '%bot%'\n    )\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.324,
          "totalDuration": 2.134,
          "tokens": {
            "promptTokens": 4108,
            "completionTokens": 167,
            "totalTokens": 4275
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN actor_login \n    END) AS issue_authors_count,\n    COUNT(DISTINCT issue_id) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'created')\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG51P8E83P1TRWX6Z8HVB5F",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 304 ('{') (line 13, col 10): {1000} <= ( \\n        SELECT \\n            COUNT(*) \\n        FROM \\n            github_events \\n        WHERE \\n            event_type = 'WatchEvent' \\n            AN. Expected substitution name (identifier)\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN issue_id \n    END) AS issue_authors_count,\n    COUNT(DISTINCT issue_id) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'created')\n    AND repo_name IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name NOT LIKE '%bot%'\n    )\n    AND repo_name NOT IN (\n        SELECT \n            repo_name \n        FROM \n            github_events \n        WHERE \n            event_type = 'RepositoryEvent' \n            AND action = 'created' \n            AND repo_name LIKE '%bot%'\n    )\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT CASE \n        WHEN author_association != 'MANNEQUIN' THEN actor_login \n    END) AS issue_authors_count,\n    COUNT(DISTINCT CASE \n        WHEN action IN ('opened', 'created') THEN issue_id \n    END) AS total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND {{{{Int(repo_stars, 1000)}}} <= ( \n        SELECT \n            COUNT(*) \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = github_events.repo_name \n            AND action = 'created'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    issue_authors_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.502,
          "totalDuration": 2.136,
          "tokens": {
            "promptTokens": 4326,
            "completionTokens": 161,
            "totalTokens": 4487
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n repo_name,\n COUNT(DISTINCT actor_login) as contributors \nFROM \n github_events \nWHERE \n event_type = 'PushEvent'\nGROUP BY \n repo_name \nORDER BY \n contributors DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "contributors": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "contributors": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "contributors": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "contributors": 826
        },
        {
          "repo_name": "lifo/docrails",
          "contributors": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "contributors": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "contributors": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "contributors": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "contributors": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "contributors": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 27.135177112,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 27.181,
      "requestId": "01JTG51S892RRZCNP35Z2SN3KA",
      "length": 612
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.296,
      "totalDuration": 0.527,
      "tokens": {
        "promptTokens": 3561,
        "completionTokens": 46,
        "totalTokens": 3607
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n repo_name,\n COUNT(DISTINCT actor_login) as contributors \nFROM \n github_events \nWHERE \n event_type = 'PushEvent'\nGROUP BY \n repo_name \nORDER BY \n contributors DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "contributors": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "contributors": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "contributors": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "contributors": 826
            },
            {
              "repo_name": "lifo/docrails",
              "contributors": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "contributors": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "contributors": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "contributors": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "contributors": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "contributors": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 27.135177112,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 27.181,
          "requestId": "01JTG51S892RRZCNP35Z2SN3KA",
          "length": 612
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.296,
          "totalDuration": 0.527,
          "tokens": {
            "promptTokens": 3561,
            "completionTokens": 46,
            "totalTokens": 3607
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as count \nFROM \n    github_events \nWHERE \n    action = 'push' \n    AND ref_type = 'branch' \n    AND ref = 'main'\nGROUP BY \n    repo_name \nORDER BY \n    count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.284198052,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.304,
      "requestId": "01JTG52RA0KMVNW9P0SDDR4JMP",
      "length": 2
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.812,
      "totalDuration": 2.141,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 67,
        "totalTokens": 3843
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as count \nFROM \n    github_events \nWHERE \n    action = 'push' \n    AND ref_type = 'branch' \n    AND ref = 'main'\nGROUP BY \n    repo_name \nORDER BY \n    count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.284198052,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.304,
          "requestId": "01JTG52RA0KMVNW9P0SDDR4JMP",
          "length": 2
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.812,
          "totalDuration": 2.141,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 67,
            "totalTokens": 3843
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n repo_name,\n COUNT(DISTINCT actor_login) as contributors_count\nFROM \n github_events\nWHERE \n event_type = 'PushEvent'\n AND action = 'created'\n AND ref_type = 'branch'\n AND ref = 'main'\n AND repo_name NOT LIKE '%private'\n AND repo_name NOT LIKE '%forks'\n AND repo_name IN (\n SELECT \n repo_name\n FROM \n github_events\n WHERE \n event_type = 'RepositoryEvent'\n AND action = 'created'\n AND repo_name IN (\n SELECT \n repo_name\n FROM \n github_events\n WHERE \n event_type = 'RepositoryEvent'\n AND action = 'created'\n AND stargazers_count >99\n )\n )\nGROUP BY \n repo_name\nORDER BY \n contributors_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.018,
      "requestId": "01JTG538EVF99W48QK4D0TQMMA",
      "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stargazers_count' in scope (SELECT repo_name FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'RepositoryEvent') AND (action = 'created') AND (stargazers_count > 99)). (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name LIKE '%main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND repo_name NOT LIKE '%forks'\n      )\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND ref_type = 'branch'\n      AND ref = 'main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND repo_name NOT LIKE '%forks'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.341,
      "totalDuration": 0.879,
      "tokens": {
        "promptTokens": 4177,
        "completionTokens": 158,
        "totalTokens": 4335
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name LIKE '%main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND repo_name NOT LIKE '%forks'\n      )\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG52Z7RXV1VSC60XR8H8Q5S",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stargazers_count' in scope (SELECT repo_name FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'RepositoryEvent') AND (action = 'created') AND (stargazers_count > 99)). (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.497,
          "totalDuration": 4.29,
          "tokens": {
            "promptTokens": 3789,
            "completionTokens": 340,
            "totalTokens": 4129
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND ref_type = 'branch'\n      AND ref = 'main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND repo_name NOT LIKE '%forks'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG5354J3XTYVXEDQRB75CNN",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stargazers_count' in scope (SELECT repo_name FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'RepositoryEvent') AND (action = 'created') AND (stargazers_count > 99)). (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name LIKE '%main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND repo_name NOT LIKE '%forks'\n      )\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.379,
          "totalDuration": 3.52,
          "tokens": {
            "promptTokens": 4178,
            "completionTokens": 288,
            "totalTokens": 4466
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n repo_name,\n COUNT(DISTINCT actor_login) as contributors_count\nFROM \n github_events\nWHERE \n event_type = 'PushEvent'\n AND action = 'created'\n AND ref_type = 'branch'\n AND ref = 'main'\n AND repo_name NOT LIKE '%private'\n AND repo_name NOT LIKE '%forks'\n AND repo_name IN (\n SELECT \n repo_name\n FROM \n github_events\n WHERE \n event_type = 'RepositoryEvent'\n AND action = 'created'\n AND repo_name IN (\n SELECT \n repo_name\n FROM \n github_events\n WHERE \n event_type = 'RepositoryEvent'\n AND action = 'created'\n AND stargazers_count >99\n )\n )\nGROUP BY \n repo_name\nORDER BY \n contributors_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTG538EVF99W48QK4D0TQMMA",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stargazers_count' in scope (SELECT repo_name FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'RepositoryEvent') AND (action = 'created') AND (stargazers_count > 99)). (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name LIKE '%main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND repo_name NOT LIKE '%forks'\n      )\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\n  AND action = 'created'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND ref_type = 'branch'\n      AND ref = 'main'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND repo_name NOT LIKE '%private'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'CreateEvent'\n      AND repo_name NOT LIKE '%forks'\n  )\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'RepositoryEvent'\n      AND action = 'created'\n      AND repo_name IN (\n        SELECT \n          repo_name\n        FROM \n          github_events\n        WHERE \n          event_type = 'RepositoryEvent'\n          AND action = 'created'\n          AND stargazers_count > 99\n      )\n  )\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.341,
          "totalDuration": 0.879,
          "tokens": {
            "promptTokens": 4177,
            "completionTokens": 158,
            "totalTokens": 4335
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n repo_name,\n count(*) as num_invitations\nFROM \n github_events\nWHERE \n event_type = 'MemberEvent' \n AND action = 'added'\nGROUP BY \n repo_name\nORDER BY \n num_invitations DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "num_invitations": 10453
        },
        {
          "repo_name": "terryjintry/provisiontest1",
          "num_invitations": 3416
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "num_invitations": 3161
        },
        {
          "repo_name": "/",
          "num_invitations": 3144
        },
        {
          "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
          "num_invitations": 2169
        },
        {
          "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
          "num_invitations": 2166
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "num_invitations": 1733
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "num_invitations": 1616
        },
        {
          "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
          "num_invitations": 1512
        },
        {
          "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
          "num_invitations": 1510
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.451578286,
        "rows_read": 14435721,
        "bytes_read": 57500625
      },
      "executionTime": 0.47,
      "requestId": "01JTG53BJ38PXZBE8MYAG4K0R2",
      "length": 702
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.376,
      "totalDuration": 0.652,
      "tokens": {
        "promptTokens": 3560,
        "completionTokens": 54,
        "totalTokens": 3614
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n repo_name,\n count(*) as num_invitations\nFROM \n github_events\nWHERE \n event_type = 'MemberEvent' \n AND action = 'added'\nGROUP BY \n repo_name\nORDER BY \n num_invitations DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "num_invitations": 10453
            },
            {
              "repo_name": "terryjintry/provisiontest1",
              "num_invitations": 3416
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "num_invitations": 3161
            },
            {
              "repo_name": "/",
              "num_invitations": 3144
            },
            {
              "repo_name": "RepoTransferOrgProd/E2E_TransferRepo_Prod",
              "num_invitations": 2169
            },
            {
              "repo_name": "OPS-E2E-Prod/E2E_TransferRepo_Prod",
              "num_invitations": 2166
            },
            {
              "repo_name": "openjournals/joss-reviews",
              "num_invitations": 1733
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "num_invitations": 1616
            },
            {
              "repo_name": "OPS-E2E-PPE/E2E_TransferRepo01",
              "num_invitations": 1512
            },
            {
              "repo_name": "RepoTransferOrg/E2E_TransferRepo01",
              "num_invitations": 1510
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.451578286,
            "rows_read": 14435721,
            "bytes_read": 57500625
          },
          "executionTime": 0.47,
          "requestId": "01JTG53BJ38PXZBE8MYAG4K0R2",
          "length": 702
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.376,
          "totalDuration": 0.652,
          "tokens": {
            "promptTokens": 3560,
            "completionTokens": 54,
            "totalTokens": 3614
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    COUNT(*) as num_forks \nFROM \n    github_events \nWHERE \n    event_type = 'ForkEvent' \nGROUP BY \n    repo_name \nORDER BY \n    num_forks DESC \nLIMIT \n    10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "num_forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "num_forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "num_forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "num_forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "num_forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "num_forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "num_forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "num_forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.920805339,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.942,
      "requestId": "01JTG53GRDNF0GYF0FNS01YHWN",
      "length": 582
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.282,
      "totalDuration": 2.352,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 55,
        "totalTokens": 3821
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as num_forks \nFROM \n    github_events \nWHERE \n    event_type = 'ForkEvent' \nGROUP BY \n    repo_name \nORDER BY \n    num_forks DESC \nLIMIT \n    10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "num_forks": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "num_forks": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "num_forks": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_forks": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_forks": 92878
            },
            {
              "repo_name": "github/gitignore",
              "num_forks": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "num_forks": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "num_forks": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "num_forks": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "num_forks": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_forks",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.920805339,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.942,
          "requestId": "01JTG53GRDNF0GYF0FNS01YHWN",
          "length": 582
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.282,
          "totalDuration": 2.352,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 55,
            "totalTokens": 3821
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) as watch_count,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) as fork_count,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / \n    NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0) as ratio\nFROM \n    github_events\nWHERE \n    event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY \n    repo_name\nORDER BY \n    ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "amattson21/gitjob",
          "watch_count": 8190,
          "fork_count": 1,
          "ratio": 8190
        },
        {
          "repo_name": "phase/sure",
          "watch_count": 6042,
          "fork_count": 1,
          "ratio": 6042
        },
        {
          "repo_name": "Xiao187/Cto",
          "watch_count": 3069,
          "fork_count": 1,
          "ratio": 3069
        },
        {
          "repo_name": "Xabadu/github-lights",
          "watch_count": 2288,
          "fork_count": 1,
          "ratio": 2288
        },
        {
          "repo_name": "symfony/polyfill-intl-icu",
          "watch_count": 2088,
          "fork_count": 1,
          "ratio": 2088
        },
        {
          "repo_name": "mandatoryprogrammer/Octodog_Invasion",
          "watch_count": 1822,
          "fork_count": 1,
          "ratio": 1822
        },
        {
          "repo_name": "fossasia/fossasia10-drupal",
          "watch_count": 1801,
          "fork_count": 1,
          "ratio": 1801
        },
        {
          "repo_name": "fossasia/perspektive89.com",
          "watch_count": 1795,
          "fork_count": 1,
          "ratio": 1795
        },
        {
          "repo_name": "fossasia/fossasia-webfeeds",
          "watch_count": 1759,
          "fork_count": 1,
          "ratio": 1759
        },
        {
          "repo_name": "fossasia/wp-recent-tweet",
          "watch_count": 1752,
          "fork_count": 1,
          "ratio": 1752
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "watch_count",
          "type": "UInt64"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 2.300489154,
        "rows_read": 317036398,
        "bytes_read": 950835680
      },
      "executionTime": 2.318,
      "requestId": "01JTG53NY65ZPS8237NV3CW5ED",
      "length": 862
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.369,
      "totalDuration": 1.862,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 145,
        "totalTokens": 3916
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) as watch_count,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) as fork_count,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / \n    NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0) as ratio\nFROM \n    github_events\nWHERE \n    event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY \n    repo_name\nORDER BY \n    ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "amattson21/gitjob",
              "watch_count": 8190,
              "fork_count": 1,
              "ratio": 8190
            },
            {
              "repo_name": "phase/sure",
              "watch_count": 6042,
              "fork_count": 1,
              "ratio": 6042
            },
            {
              "repo_name": "Xiao187/Cto",
              "watch_count": 3069,
              "fork_count": 1,
              "ratio": 3069
            },
            {
              "repo_name": "Xabadu/github-lights",
              "watch_count": 2288,
              "fork_count": 1,
              "ratio": 2288
            },
            {
              "repo_name": "symfony/polyfill-intl-icu",
              "watch_count": 2088,
              "fork_count": 1,
              "ratio": 2088
            },
            {
              "repo_name": "mandatoryprogrammer/Octodog_Invasion",
              "watch_count": 1822,
              "fork_count": 1,
              "ratio": 1822
            },
            {
              "repo_name": "fossasia/fossasia10-drupal",
              "watch_count": 1801,
              "fork_count": 1,
              "ratio": 1801
            },
            {
              "repo_name": "fossasia/perspektive89.com",
              "watch_count": 1795,
              "fork_count": 1,
              "ratio": 1795
            },
            {
              "repo_name": "fossasia/fossasia-webfeeds",
              "watch_count": 1759,
              "fork_count": 1,
              "ratio": 1759
            },
            {
              "repo_name": "fossasia/wp-recent-tweet",
              "watch_count": 1752,
              "fork_count": 1,
              "ratio": 1752
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "watch_count",
              "type": "UInt64"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 2.300489154,
            "rows_read": 317036398,
            "bytes_read": 950835680
          },
          "executionTime": 2.318,
          "requestId": "01JTG53NY65ZPS8237NV3CW5ED",
          "length": 862
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.369,
          "totalDuration": 1.862,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 145,
            "totalTokens": 3916
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS forks,\n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS stars\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  forks DESC,\n  stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 54.372357984,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 54.421,
      "requestId": "01JTG53X5FW1HT3X250AJVBZHR",
      "length": 676
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.315,
      "totalDuration": 2.552,
      "tokens": {
        "promptTokens": 3777,
        "completionTokens": 75,
        "totalTokens": 3852
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS forks,\n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS stars\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  forks DESC,\n  stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 54.372357984,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 54.421,
          "requestId": "01JTG53X5FW1HT3X250AJVBZHR",
          "length": 676
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.315,
          "totalDuration": 2.552,
          "tokens": {
            "promptTokens": 3777,
            "completionTokens": 75,
            "totalTokens": 3852
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) as fork_count,\n    COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) as watch_count\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    fork_count DESC, \n    watch_count ASC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926,
          "watch_count": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031,
          "watch_count": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794,
          "watch_count": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226,
          "watch_count": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878,
          "watch_count": 126371
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075,
          "watch_count": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551,
          "watch_count": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601,
          "watch_count": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182,
          "watch_count": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420,
          "watch_count": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        },
        {
          "name": "watch_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 54.599171704,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 54.645,
      "requestId": "01JTG55QJF63BAPXKWQGQ11TJS",
      "length": 786
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.256,
      "totalDuration": 2.887,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 80,
        "totalTokens": 3851
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) as fork_count,\n    COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) as watch_count\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    fork_count DESC, \n    watch_count ASC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926,
              "watch_count": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031,
              "watch_count": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794,
              "watch_count": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226,
              "watch_count": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878,
              "watch_count": 126371
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075,
              "watch_count": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551,
              "watch_count": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601,
              "watch_count": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182,
              "watch_count": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420,
              "watch_count": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            },
            {
              "name": "watch_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 54.599171704,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 54.645,
          "requestId": "01JTG55QJF63BAPXKWQGQ11TJS",
          "length": 786
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.256,
          "totalDuration": 2.887,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 80,
            "totalTokens": 3851
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / \n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS proportion \nFROM github_events \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_stars": 232118474,
          "total_forks": 84709181,
          "proportion": 2.7401808311663407
        }
      ],
      "meta": [
        {
          "name": "total_stars",
          "type": "UInt64"
        },
        {
          "name": "total_forks",
          "type": "UInt64"
        },
        {
          "name": "proportion",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.329392357,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.348,
      "requestId": "01JTG57HHSQEAV8AA6Z216KDFZ",
      "length": 82
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.567,
      "totalDuration": 2.247,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 106,
        "totalTokens": 3871
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / \n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS proportion \nFROM github_events \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_stars": 232118474,
              "total_forks": 84709181,
              "proportion": 2.7401808311663407
            }
          ],
          "meta": [
            {
              "name": "total_stars",
              "type": "UInt64"
            },
            {
              "name": "total_forks",
              "type": "UInt64"
            },
            {
              "name": "proportion",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.329392357,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.348,
          "requestId": "01JTG57HHSQEAV8AA6Z216KDFZ",
          "length": 82
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.567,
          "totalDuration": 2.247,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 106,
            "totalTokens": 3871
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  COUNT(*) \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  OR event_type = 'IssueCommentEvent' \n  OR event_type = 'PullRequestEvent' \n  OR event_type = 'PullRequestReviewCommentEvent' \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNT()": 600286328
        }
      ],
      "meta": [
        {
          "name": "COUNT()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.148069163,
        "rows_read": 600535022,
        "bytes_read": 600535022
      },
      "executionTime": 0.167,
      "requestId": "01JTG57NSRFNHH893YGH5JGY1J",
      "length": 23
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.553,
      "totalDuration": 1.502,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 62,
        "totalTokens": 3828
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  COUNT(*) \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  OR event_type = 'IssueCommentEvent' \n  OR event_type = 'PullRequestEvent' \n  OR event_type = 'PullRequestReviewCommentEvent' \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNT()": 600286328
            }
          ],
          "meta": [
            {
              "name": "COUNT()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.148069163,
            "rows_read": 600535022,
            "bytes_read": 600535022
          },
          "executionTime": 0.167,
          "requestId": "01JTG57NSRFNHH893YGH5JGY1J",
          "length": 23
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.553,
          "totalDuration": 1.502,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 62,
            "totalTokens": 3828
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(comment_id) as issue_comments\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\nGROUP BY \n  repo_name\nORDER BY \n  issue_comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comments": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comments": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comments": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comments": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comments": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comments": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comments": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comments": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comments": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.77801856,
        "rows_read": 218620144,
        "bytes_read": 2403486015
      },
      "executionTime": 0.797,
      "requestId": "01JTG57SRF98D2NPQXX2MCP35B",
      "length": 589
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.583,
      "totalDuration": 1.386,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 53,
        "totalTokens": 3820
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(comment_id) as issue_comments\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\nGROUP BY \n  repo_name\nORDER BY \n  issue_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comments": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comments": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comments": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comments": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comments": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comments": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comments": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comments": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comments": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.77801856,
            "rows_read": 218620144,
            "bytes_read": 2403486015
          },
          "executionTime": 0.797,
          "requestId": "01JTG57SRF98D2NPQXX2MCP35B",
          "length": 589
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.583,
          "totalDuration": 1.386,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 53,
            "totalTokens": 3820
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  repo_name,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comments,\n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issues,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) * 1.0 / \n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS comment_to_issue_ratio\nFROM \n  github_events\nWHERE \n  event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY \n  repo_name\nORDER BY \n  comment_to_issue_ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Egradford/hello-world",
          "issue_comments": 1,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "ludovicgoldak/DojoSocketIOClientWeb",
          "issue_comments": 2,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "MajorTomSec/VitaRW",
          "issue_comments": 3,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "Kyiio/BoBot",
          "issue_comments": 2,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "mksharma009/test2",
          "issue_comments": 1,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "mjfneto/react-neighborhood-map",
          "issue_comments": 3,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "skylible/react-deep-neural-network",
          "issue_comments": 1,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "loggi/postcss-react-native",
          "issue_comments": 4,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "GRA0007/maimai-song-list",
          "issue_comments": 1,
          "issues": 0,
          "comment_to_issue_ratio": null
        },
        {
          "repo_name": "Rouvat/ether_os",
          "issue_comments": 1,
          "issues": 0,
          "comment_to_issue_ratio": null
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "comment_to_issue_ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 1.314677755,
        "rows_read": 329902046,
        "bytes_read": 1318871326
      },
      "executionTime": 1.334,
      "requestId": "01JTG5817D6WRJBPEDR1AXF86S",
      "length": 1002
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.653,
      "totalDuration": 4.346,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 165,
        "totalTokens": 3935
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  repo_name,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comments,\n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issues,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) * 1.0 / \n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS comment_to_issue_ratio\nFROM \n  github_events\nWHERE \n  event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY \n  repo_name\nORDER BY \n  comment_to_issue_ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Egradford/hello-world",
              "issue_comments": 1,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "ludovicgoldak/DojoSocketIOClientWeb",
              "issue_comments": 2,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "MajorTomSec/VitaRW",
              "issue_comments": 3,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "Kyiio/BoBot",
              "issue_comments": 2,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "mksharma009/test2",
              "issue_comments": 1,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "mjfneto/react-neighborhood-map",
              "issue_comments": 3,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "skylible/react-deep-neural-network",
              "issue_comments": 1,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "loggi/postcss-react-native",
              "issue_comments": 4,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "GRA0007/maimai-song-list",
              "issue_comments": 1,
              "issues": 0,
              "comment_to_issue_ratio": null
            },
            {
              "repo_name": "Rouvat/ether_os",
              "issue_comments": 1,
              "issues": 0,
              "comment_to_issue_ratio": null
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            },
            {
              "name": "issues",
              "type": "UInt64"
            },
            {
              "name": "comment_to_issue_ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 1.314677755,
            "rows_read": 329902046,
            "bytes_read": 1318871326
          },
          "executionTime": 1.334,
          "requestId": "01JTG5817D6WRJBPEDR1AXF86S",
          "length": 1002
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.653,
          "totalDuration": 4.346,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 165,
            "totalTokens": 3935
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(*) as issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action IN ('opened', 'closed', 'reopened')\nGROUP BY \n  repo_name\nORDER BY \n  issues_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issues_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issues_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issues_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issues_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issues_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issues_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issues_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issues_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issues_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issues_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issues_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.526072835,
        "rows_read": 111439849,
        "bytes_read": 445385342
      },
      "executionTime": 0.545,
      "requestId": "01JTG586BN8RTZXM1VY8P80RGA",
      "length": 583
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.608,
      "totalDuration": 1.422,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 63,
        "totalTokens": 3832
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(*) as issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action IN ('opened', 'closed', 'reopened')\nGROUP BY \n  repo_name\nORDER BY \n  issues_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issues_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issues_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issues_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issues_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issues_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issues_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issues_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issues_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issues_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issues_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issues_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.526072835,
            "rows_read": 111439849,
            "bytes_read": 445385342
          },
          "executionTime": 0.545,
          "requestId": "01JTG586BN8RTZXM1VY8P80RGA",
          "length": 583
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.608,
          "totalDuration": 1.422,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 63,
            "totalTokens": 3832
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND title LIKE '%epic bug%' \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "WarEmu/WarBugs",
          "count": 1
        },
        {
          "repo_name": "PretentiousPanda/Alex",
          "count": 1
        },
        {
          "repo_name": "mucsi96/nightwatch-cucumber",
          "count": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.511637063,
        "rows_read": 111439849,
        "bytes_read": 5309947602
      },
      "executionTime": 0.531,
      "requestId": "01JTG58BAED7Z7W1KYRC0JENNZ",
      "length": 144
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.678,
      "totalDuration": 2.034,
      "tokens": {
        "promptTokens": 3775,
        "completionTokens": 67,
        "totalTokens": 3842
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND title LIKE '%epic bug%' \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "WarEmu/WarBugs",
              "count": 1
            },
            {
              "repo_name": "PretentiousPanda/Alex",
              "count": 1
            },
            {
              "repo_name": "mucsi96/nightwatch-cucumber",
              "count": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.511637063,
            "rows_read": 111439849,
            "bytes_read": 5309947602
          },
          "executionTime": 0.531,
          "requestId": "01JTG58BAED7Z7W1KYRC0JENNZ",
          "length": 144
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.678,
          "totalDuration": 2.034,
          "tokens": {
            "promptTokens": 3775,
            "completionTokens": 67,
            "totalTokens": 3842
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'reopened')\n    AND title LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nHAVING \n    COUNT(DISTINCT number) > 10\n    AND COUNT(DISTINCT author_login) > 5\nORDER BY \n    issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.02,
      "requestId": "01JTG58R85PYEGDJN5N12V3771",
      "error": "{\"error\": \"[Error] Unknown expression or function identifier 'author_login' in scope SELECT repo_name, COUNTDistinct(number) AS issue_count, COUNTDistinct(author_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (action IN ('opened', 'reopened')) AND (title LIKE '%epic bugs%') GROUP BY repo_name HAVING (COUNTDistinct(number) > 10) AND (COUNTDistinct(author_login) > 5) ORDER BY issue_count DESC LIMIT 10. Maybe you meant: ['",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND title LIKE '%epic bugs%'\n    AND issue_count > 10\nGROUP BY \n    repo_name\nORDER BY \n    issue_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'reopened')\n    AND title LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nHAVING \n    COUNT(DISTINCT number) > 10\n    AND COUNT(DISTINCT author_login) > 5\nORDER BY \n    issue_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.039,
      "totalDuration": 2.747,
      "tokens": {
        "promptTokens": 4096,
        "completionTokens": 114,
        "totalTokens": 4210
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND title LIKE '%epic bugs%'\n    AND issue_count > 10\nGROUP BY \n    repo_name\nORDER BY \n    issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG58EWKPHY7533MSA65AD03",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'author_login' in scope SELECT repo_name, COUNTDistinct(number) AS issue_count, COUNTDistinct(author_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (title LIKE '%epic bugs%') AND (issue_count > 10) GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10. Maybe you meant: ['actor_login']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://do",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.294,
          "totalDuration": 0.619,
          "tokens": {
            "promptTokens": 3577,
            "completionTokens": 92,
            "totalTokens": 3669
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'reopened')\n    AND title LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nHAVING \n    COUNT(DISTINCT number) > 10\n    AND COUNT(DISTINCT author_login) > 5\nORDER BY \n    issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG58K3HERX6Z1APG51CG3QW",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'author_login' in scope SELECT repo_name, COUNTDistinct(number) AS issue_count, COUNTDistinct(author_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (action IN ('opened', 'reopened')) AND (title LIKE '%epic bugs%') GROUP BY repo_name HAVING (COUNTDistinct(number) > 10) AND (COUNTDistinct(author_login) > 5) ORDER BY issue_count DESC LIMIT 10. Maybe you meant: ['",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND title LIKE '%epic bugs%'\n    AND issue_count > 10\nGROUP BY \n    repo_name\nORDER BY \n    issue_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.773,
          "totalDuration": 1.796,
          "tokens": {
            "promptTokens": 3931,
            "completionTokens": 114,
            "totalTokens": 4045
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'reopened')\n    AND title LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nHAVING \n    COUNT(DISTINCT number) > 10\n    AND COUNT(DISTINCT author_login) > 5\nORDER BY \n    issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTG58R85PYEGDJN5N12V3771",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'author_login' in scope SELECT repo_name, COUNTDistinct(number) AS issue_count, COUNTDistinct(author_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (action IN ('opened', 'reopened')) AND (title LIKE '%epic bugs%') GROUP BY repo_name HAVING (COUNTDistinct(number) > 10) AND (COUNTDistinct(author_login) > 5) ORDER BY issue_count DESC LIMIT 10. Maybe you meant: ['",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND title LIKE '%epic bugs%'\n    AND issue_count > 10\nGROUP BY \n    repo_name\nORDER BY \n    issue_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS issue_count,\n    COUNT(DISTINCT author_login) AS comment_authors_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action IN ('opened', 'reopened')\n    AND title LIKE '%epic bugs%'\nGROUP BY \n    repo_name\nHAVING \n    COUNT(DISTINCT number) > 10\n    AND COUNT(DISTINCT author_login) > 5\nORDER BY \n    issue_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.039,
          "totalDuration": 2.747,
          "tokens": {
            "promptTokens": 4096,
            "completionTokens": 114,
            "totalTokens": 4210
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  repo_name,\n  number as issue_number,\n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY \n  repo_name,\n  number\nORDER BY \n  comment_count DESC,\n  repo_name,\n  number\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "sauron-demo/sauron",
          "issue_number": 1,
          "comment_count": 21297
        },
        {
          "repo_name": "gafusion/regression_notifications",
          "issue_number": 1,
          "comment_count": 15677
        },
        {
          "repo_name": "odoo-mergebot-testing-org/repo",
          "issue_number": 1,
          "comment_count": 13315
        },
        {
          "repo_name": "zeit-github-test/github-utils-test",
          "issue_number": 1,
          "comment_count": 9260
        },
        {
          "repo_name": "odoo-mergebot-testing-org/proj",
          "issue_number": 1,
          "comment_count": 7681
        },
        {
          "repo_name": "tphongio/elasticbox-plugin",
          "issue_number": 1,
          "comment_count": 6167
        },
        {
          "repo_name": "openshift/oc",
          "issue_number": 270,
          "comment_count": 5917
        },
        {
          "repo_name": "openfoodfacts/openfoodfacts-server",
          "issue_number": 3767,
          "comment_count": 5098
        },
        {
          "repo_name": "codecov/ci-repo",
          "issue_number": 4,
          "comment_count": 5078
        },
        {
          "repo_name": "openshift/cluster-resource-override-admission-operator",
          "issue_number": 29,
          "comment_count": 4562
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_number",
          "type": "Int32"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.243155991,
        "rows_read": 218620144,
        "bytes_read": 1631793237
      },
      "executionTime": 5.295,
      "requestId": "01JTG58ZCGWNRG1B4PCMC1NRBM",
      "length": 846
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"Top 10 commented issues for the top repositories\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name,\n  issue_number,\n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY \n  repo_name,\n  issue_number\nORDER BY \n  comment_count DESC,\n  repo_name,\n  issue_number\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.343,
      "totalDuration": 1.103,
      "tokens": {
        "promptTokens": 3893,
        "completionTokens": 73,
        "totalTokens": 3966
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name,\n  issue_number,\n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY \n  repo_name,\n  issue_number\nORDER BY \n  comment_count DESC,\n  repo_name,\n  issue_number\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG58VTGGGFNPP2GKET9TMRJ",
          "error": "{\"error\": \"[Error] Unknown expression identifier 'issue_number' in scope \\nSELECT \\n  repo_name,\\n  issue_number,\\n  COUNT(*) as comment_count\\nFROM \\n  github_events\\nWHERE \\n  event_type = 'IssueCommentEvent'\\n  AND action = 'created'\\nGROUP BY \\n  repo_name,\\n  issue_number\\nORDER BY \\n  comment_count DESC,\\n  repo_name,\\n  issue_number\\nLIMIT 10 FORMAT JSON. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.354,
          "totalDuration": 1.138,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 73,
            "totalTokens": 3841
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  repo_name,\n  number as issue_number,\n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY \n  repo_name,\n  number\nORDER BY \n  comment_count DESC,\n  repo_name,\n  number\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "sauron-demo/sauron",
              "issue_number": 1,
              "comment_count": 21297
            },
            {
              "repo_name": "gafusion/regression_notifications",
              "issue_number": 1,
              "comment_count": 15677
            },
            {
              "repo_name": "odoo-mergebot-testing-org/repo",
              "issue_number": 1,
              "comment_count": 13315
            },
            {
              "repo_name": "zeit-github-test/github-utils-test",
              "issue_number": 1,
              "comment_count": 9260
            },
            {
              "repo_name": "odoo-mergebot-testing-org/proj",
              "issue_number": 1,
              "comment_count": 7681
            },
            {
              "repo_name": "tphongio/elasticbox-plugin",
              "issue_number": 1,
              "comment_count": 6167
            },
            {
              "repo_name": "openshift/oc",
              "issue_number": 270,
              "comment_count": 5917
            },
            {
              "repo_name": "openfoodfacts/openfoodfacts-server",
              "issue_number": 3767,
              "comment_count": 5098
            },
            {
              "repo_name": "codecov/ci-repo",
              "issue_number": 4,
              "comment_count": 5078
            },
            {
              "repo_name": "openshift/cluster-resource-override-admission-operator",
              "issue_number": 29,
              "comment_count": 4562
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_number",
              "type": "Int32"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.243155991,
            "rows_read": 218620144,
            "bytes_read": 1631793237
          },
          "executionTime": 5.295,
          "requestId": "01JTG58ZCGWNRG1B4PCMC1NRBM",
          "length": 846
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"Top 10 commented issues for the top repositories\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name,\n  issue_number,\n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY \n  repo_name,\n  issue_number\nORDER BY \n  comment_count DESC,\n  repo_name,\n  issue_number\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.343,
          "totalDuration": 1.103,
          "tokens": {
            "promptTokens": 3893,
            "completionTokens": 73,
            "totalTokens": 3966
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n repo_name, \n COUNT(*) as num_commit_comments\nFROM \n github_events\nWHERE \n event_type = 'CommitCommentEvent'\nGROUP BY \n repo_name\nORDER BY \n num_commit_comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "num_commit_comments": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "num_commit_comments": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "num_commit_comments": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "num_commit_comments": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "num_commit_comments": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "num_commit_comments": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "num_commit_comments": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "num_commit_comments": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "num_commit_comments": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "num_commit_comments": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_commit_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.113058994,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.131,
      "requestId": "01JTG597R9DV26PTY0JSP777SV",
      "length": 639
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.565,
      "totalDuration": 0.798,
      "tokens": {
        "promptTokens": 3558,
        "completionTokens": 47,
        "totalTokens": 3605
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n repo_name, \n COUNT(*) as num_commit_comments\nFROM \n github_events\nWHERE \n event_type = 'CommitCommentEvent'\nGROUP BY \n repo_name\nORDER BY \n num_commit_comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "num_commit_comments": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "num_commit_comments": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "num_commit_comments": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "num_commit_comments": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "num_commit_comments": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "num_commit_comments": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "num_commit_comments": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "num_commit_comments": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "num_commit_comments": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "num_commit_comments": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_commit_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.113058994,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.131,
          "requestId": "01JTG597R9DV26PTY0JSP777SV",
          "length": 639
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.565,
          "totalDuration": 0.798,
          "tokens": {
            "promptTokens": 3558,
            "completionTokens": 47,
            "totalTokens": 3605
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(*) as commit_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nGROUP BY \n  repo_name\nORDER BY \n  commit_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "commit_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "commit_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "commit_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "commit_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "commit_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "commit_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "commit_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "commit_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "commit_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "commit_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 23.342009339,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 23.389,
      "requestId": "01JTG59BVW9CFWQ0C17KV1MQ6Q",
      "length": 591
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.585,
      "totalDuration": 1.552,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 49,
        "totalTokens": 3816
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(*) as commit_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nGROUP BY \n  repo_name\nORDER BY \n  commit_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "commit_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "commit_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "commit_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "commit_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "commit_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "commit_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "commit_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "commit_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "commit_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "commit_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 23.342009339,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 23.389,
          "requestId": "01JTG59BVW9CFWQ0C17KV1MQ6Q",
          "length": 591
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.585,
          "totalDuration": 1.552,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 49,
            "totalTokens": 3816
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(*) as num_reviews\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewEvent'\n  AND action = 'created'\n  AND review_state = 'changes_requested'\nGROUP BY \n  repo_name\nORDER BY \n  num_reviews DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "num_reviews": 4854
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "num_reviews": 4839
        },
        {
          "repo_name": "qmk/qmk_firmware",
          "num_reviews": 1746
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "num_reviews": 1653
        },
        {
          "repo_name": "pandas-dev/pandas",
          "num_reviews": 1608
        },
        {
          "repo_name": "zephyrproject-rtos/zephyr",
          "num_reviews": 1547
        },
        {
          "repo_name": "daos-stack/daos",
          "num_reviews": 1428
        },
        {
          "repo_name": "oppia/oppia",
          "num_reviews": 1045
        },
        {
          "repo_name": "Dufuna-CodeCamp/Dufuna-CodeCamp20",
          "num_reviews": 1038
        },
        {
          "repo_name": "tldr-pages/tldr",
          "num_reviews": 981
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_reviews",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.025736717,
        "rows_read": 7561606,
        "bytes_read": 37200330
      },
      "executionTime": 0.044,
      "requestId": "01JTG5A70845Q0ZJXMTQHSPP3F",
      "length": 577
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.086,
      "totalDuration": 1.924,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 70,
        "totalTokens": 3836
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(*) as num_reviews\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewEvent'\n  AND action = 'created'\n  AND review_state = 'changes_requested'\nGROUP BY \n  repo_name\nORDER BY \n  num_reviews DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "num_reviews": 4854
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "num_reviews": 4839
            },
            {
              "repo_name": "qmk/qmk_firmware",
              "num_reviews": 1746
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "num_reviews": 1653
            },
            {
              "repo_name": "pandas-dev/pandas",
              "num_reviews": 1608
            },
            {
              "repo_name": "zephyrproject-rtos/zephyr",
              "num_reviews": 1547
            },
            {
              "repo_name": "daos-stack/daos",
              "num_reviews": 1428
            },
            {
              "repo_name": "oppia/oppia",
              "num_reviews": 1045
            },
            {
              "repo_name": "Dufuna-CodeCamp/Dufuna-CodeCamp20",
              "num_reviews": 1038
            },
            {
              "repo_name": "tldr-pages/tldr",
              "num_reviews": 981
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_reviews",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.025736717,
            "rows_read": 7561606,
            "bytes_read": 37200330
          },
          "executionTime": 0.044,
          "requestId": "01JTG5A70845Q0ZJXMTQHSPP3F",
          "length": 577
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.086,
          "totalDuration": 1.924,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 70,
            "totalTokens": 3836
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  actor_login, \n  COUNT(*) as num_pushes \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nGROUP BY \n  actor_login \nORDER BY \n  num_pushes DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "num_pushes": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "num_pushes": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "num_pushes": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "num_pushes": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "num_pushes": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "num_pushes": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "num_pushes": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "num_pushes": 3139278
        },
        {
          "actor_login": "newstools",
          "num_pushes": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "num_pushes": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.961143782,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 3.007,
      "requestId": "01JTG5AAXGFKGQ2EFE0GX78JG9",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.646,
      "totalDuration": 1.436,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 53,
        "totalTokens": 3820
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  actor_login, \n  COUNT(*) as num_pushes \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nGROUP BY \n  actor_login \nORDER BY \n  num_pushes DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "num_pushes": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "num_pushes": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "num_pushes": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "num_pushes": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "num_pushes": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "num_pushes": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "num_pushes": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "num_pushes": 3139278
            },
            {
              "actor_login": "newstools",
              "num_pushes": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "num_pushes": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.961143782,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 3.007,
          "requestId": "01JTG5AAXGFKGQ2EFE0GX78JG9",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.646,
          "totalDuration": 1.436,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 53,
            "totalTokens": 3820
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n  ge1.actor_login,\n  COUNT(DISTINCT ge1.repo_name) as repos,\n  SUM(ge1.issues) as issues,\n  SUM(ge1.stars) as stars,\n  SUM(ge1.pushes) as pushes,\n  ge2.repo_name as favorite_repo\nFROM \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action IN ('opened', 'created') THEN 1 END) as issues,\n      COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN 1 END) as stars,\n      COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN 1 END) as pushes\n    FROM \n      github_events\n    WHERE \n      event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n      AND action IN ('created', 'opened', 'added')\n      AND repo_name IN (\n        SELECT \n          repo_name \n        FROM \n          github_events \n        WHERE \n          event_type = 'PushEvent' \n        GROUP BY \n          repo_name \n        ORDER BY \n          COUNT(DISTINCT actor_login) DESC \n        LIMIT \n          10000\n      )\n      AND actor_login NOT IN (\n        SELECT \n          actor_login \n        FROM \n          github_events \n        WHERE \n          event_type = 'MembershipEvent' \n          AND action = 'added' \n          AND repo_name LIKE '%bot%'\n      )\n    GROUP BY \n      actor_login, \n      repo_name\n  ) ge1\n  INNER JOIN \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      ROW_NUMBER() OVER (PARTITION BY actor_login ORDER BY COUNT(*) DESC) as row_num\n    FROM \n      github_events\n    WHERE \n      event_type = 'PushEvent'\n    GROUP BY \n      actor_login,\n      repo_name\n  ) ge2\n  ON ge1.actor_login = ge2.actor_login AND ge2.row_num = 1\nGROUP BY \n  ge1.actor_login,\n  ge2.repo_name\nHAVING \n  COUNT(DISTINCT ge1.repo_name) > 5\n  AND SUM(ge1.issues) >= 2\n  AND SUM(ge1.stars) >= 2\n  AND SUM(ge1.pushes) > 0\nORDER BY \n  SUM(ge1.pushes) DESC\nLIMIT \n  10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 60.101,
      "requestId": "01JTG5D2EXEPCR6VT1EPGZJ7QC",
      "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
      "length": 2
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login,\n  COUNT(DISTINCT repo_name) as repos,\n  COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) as issues,\n  COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) as stars,\n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) as pushes,\n  JSONExtractString(favorite_repo, 'repo_name') as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n  AND action IN ('created', 'opened', 'added')\n  AND repo_name IN (\n    SELECT \n      repo_name \n    FROM \n      github_events \n    WHERE \n      event_type = 'PushEvent' \n    GROUP BY \n      repo_name \n    ORDER BY \n      COUNT(DISTINCT actor_login) DESC \n    LIMIT \n      10000\n  )\n  AND actor_login NOT IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'MembershipEvent' \n      AND action = 'added' \n      AND repo_name LIKE '%bot%'\n  )\nGROUP BY \n  actor_login, \n  favorite_repo\nHAVING \n  COUNT(DISTINCT repo_name) > 5\n  AND COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) > 0\nORDER BY \n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) DESC\nLIMIT \n  10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  ge1.actor_login,\n  COUNT(DISTINCT ge1.repo_name) as repos,\n  SUM(ge1.issues) as issues,\n  SUM(ge1.stars) as stars,\n  SUM(ge1.pushes) as pushes,\n  ge2.repo_name as favorite_repo\nFROM \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action IN ('opened', 'created') THEN 1 END) as issues,\n      COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN 1 END) as stars,\n      COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN 1 END) as pushes\n    FROM \n      github_events\n    WHERE \n      event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n      AND action IN ('created', 'opened', 'added')\n      AND repo_name IN (\n        SELECT \n          repo_name \n        FROM \n          github_events \n        WHERE \n          event_type = 'PushEvent' \n        GROUP BY \n          repo_name \n        ORDER BY \n          COUNT(DISTINCT actor_login) DESC \n        LIMIT \n          10000\n      )\n      AND actor_login NOT IN (\n        SELECT \n          actor_login \n        FROM \n          github_events \n        WHERE \n          event_type = 'MembershipEvent' \n          AND action = 'added' \n          AND repo_name LIKE '%bot%'\n      )\n    GROUP BY \n      actor_login, \n      repo_name\n  ) ge1\n  INNER JOIN \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      ROW_NUMBER() OVER (PARTITION BY actor_login ORDER BY COUNT(*) DESC) as row_num\n    FROM \n      github_events\n    WHERE \n      event_type = 'PushEvent'\n    GROUP BY \n      actor_login,\n      repo_name\n  ) ge2\n  ON ge1.actor_login = ge2.actor_login AND ge2.row_num = 1\nGROUP BY \n  ge1.actor_login,\n  ge2.repo_name\nHAVING \n  COUNT(DISTINCT ge1.repo_name) > 5\n  AND SUM(ge1.issues) >= 2\n  AND SUM(ge1.stars) >= 2\n  AND SUM(ge1.pushes) > 0\nORDER BY \n  SUM(ge1.pushes) DESC\nLIMIT \n  10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.761,
      "totalDuration": 7.703,
      "tokens": {
        "promptTokens": 4835,
        "completionTokens": 508,
        "totalTokens": 5343
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  actor_login,\n  COUNT(DISTINCT repo_name) as repos,\n  COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) as issues,\n  COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) as stars,\n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) as pushes,\n  JSONExtractString(favorite_repo, 'repo_name') as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n  AND action IN ('created', 'opened', 'added')\n  AND repo_name IN (\n    SELECT \n      repo_name \n    FROM \n      github_events \n    WHERE \n      event_type = 'PushEvent' \n    GROUP BY \n      repo_name \n    ORDER BY \n      COUNT(DISTINCT actor_login) DESC \n    LIMIT \n      10000\n  )\n  AND actor_login NOT IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'MembershipEvent' \n      AND action = 'added' \n      AND repo_name LIKE '%bot%'\n  )\nGROUP BY \n  actor_login, \n  favorite_repo\nHAVING \n  COUNT(DISTINCT repo_name) > 5\n  AND COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) > 0\nORDER BY \n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) DESC\nLIMIT \n  10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.022,
          "requestId": "01JTG5ANCED5ZBH0JE78MWD583",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'favorite_repo' in scope SELECT actor_login, COUNTDistinct(repo_name) AS repos, COUNTDistinct(multiIf((event_type = 'IssuesEvent') AND (action = 'opened'), repo_name, NULL)) AS issues, COUNTDistinct(multiIf((event_type = 'WatchEvent') AND (action = 'added'), repo_name, NULL)) AS stars, COUNTDistinct(multiIf(event_type = 'PushEvent', repo_name, NULL)) AS pushes, JSONExtractString(favorite_repo, 'repo_name') AS favorite_repo FROM github_",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.769,
          "totalDuration": 5.235,
          "tokens": {
            "promptTokens": 3820,
            "completionTokens": 407,
            "totalTokens": 4227
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  ge1.actor_login,\n  COUNT(DISTINCT ge1.repo_name) as repos,\n  SUM(ge1.issues) as issues,\n  SUM(ge1.stars) as stars,\n  SUM(ge1.pushes) as pushes,\n  ge2.repo_name as favorite_repo\nFROM \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action IN ('opened', 'created') THEN 1 END) as issues,\n      COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN 1 END) as stars,\n      COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN 1 END) as pushes\n    FROM \n      github_events\n    WHERE \n      event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n      AND action IN ('created', 'opened', 'added')\n      AND repo_name IN (\n        SELECT \n          repo_name \n        FROM \n          github_events \n        WHERE \n          event_type = 'PushEvent' \n        GROUP BY \n          repo_name \n        ORDER BY \n          COUNT(DISTINCT actor_login) DESC \n        LIMIT \n          10000\n      )\n      AND actor_login NOT IN (\n        SELECT \n          actor_login \n        FROM \n          github_events \n        WHERE \n          event_type = 'MembershipEvent' \n          AND action = 'added' \n          AND repo_name LIKE '%bot%'\n      )\n    GROUP BY \n      actor_login, \n      repo_name\n  ) ge1\n  INNER JOIN \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      ROW_NUMBER() OVER (PARTITION BY actor_login ORDER BY COUNT(*) DESC) as row_num\n    FROM \n      github_events\n    WHERE \n      event_type = 'PushEvent'\n    GROUP BY \n      actor_login,\n      repo_name\n  ) ge2\n  ON ge1.actor_login = ge2.actor_login AND ge2.row_num = 1\nGROUP BY \n  ge1.actor_login,\n  ge2.repo_name\nHAVING \n  COUNT(DISTINCT ge1.repo_name) > 5\n  AND SUM(ge1.issues) >= 2\n  AND SUM(ge1.stars) >= 2\n  AND SUM(ge1.pushes) > 0\nORDER BY \n  SUM(ge1.pushes) DESC\nLIMIT \n  10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 60.27,
          "requestId": "01JTG5AXMF2A1KRYRHZJS80P6W",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login,\n  COUNT(DISTINCT repo_name) as repos,\n  COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) as issues,\n  COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) as stars,\n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) as pushes,\n  JSONExtractString(favorite_repo, 'repo_name') as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n  AND action IN ('created', 'opened', 'added')\n  AND repo_name IN (\n    SELECT \n      repo_name \n    FROM \n      github_events \n    WHERE \n      event_type = 'PushEvent' \n    GROUP BY \n      repo_name \n    ORDER BY \n      COUNT(DISTINCT actor_login) DESC \n    LIMIT \n      10000\n  )\n  AND actor_login NOT IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'MembershipEvent' \n      AND action = 'added' \n      AND repo_name LIKE '%bot%'\n  )\nGROUP BY \n  actor_login, \n  favorite_repo\nHAVING \n  COUNT(DISTINCT repo_name) > 5\n  AND COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) > 0\nORDER BY \n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) DESC\nLIMIT \n  10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.591,
          "totalDuration": 5.9,
          "tokens": {
            "promptTokens": 4276,
            "completionTokens": 510,
            "totalTokens": 4786
          }
        },
        "error": null
      },
      {
        "sql": "%\nSELECT \n  ge1.actor_login,\n  COUNT(DISTINCT ge1.repo_name) as repos,\n  SUM(ge1.issues) as issues,\n  SUM(ge1.stars) as stars,\n  SUM(ge1.pushes) as pushes,\n  ge2.repo_name as favorite_repo\nFROM \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action IN ('opened', 'created') THEN 1 END) as issues,\n      COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN 1 END) as stars,\n      COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN 1 END) as pushes\n    FROM \n      github_events\n    WHERE \n      event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n      AND action IN ('created', 'opened', 'added')\n      AND repo_name IN (\n        SELECT \n          repo_name \n        FROM \n          github_events \n        WHERE \n          event_type = 'PushEvent' \n        GROUP BY \n          repo_name \n        ORDER BY \n          COUNT(DISTINCT actor_login) DESC \n        LIMIT \n          10000\n      )\n      AND actor_login NOT IN (\n        SELECT \n          actor_login \n        FROM \n          github_events \n        WHERE \n          event_type = 'MembershipEvent' \n          AND action = 'added' \n          AND repo_name LIKE '%bot%'\n      )\n    GROUP BY \n      actor_login, \n      repo_name\n  ) ge1\n  INNER JOIN \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      ROW_NUMBER() OVER (PARTITION BY actor_login ORDER BY COUNT(*) DESC) as row_num\n    FROM \n      github_events\n    WHERE \n      event_type = 'PushEvent'\n    GROUP BY \n      actor_login,\n      repo_name\n  ) ge2\n  ON ge1.actor_login = ge2.actor_login AND ge2.row_num = 1\nGROUP BY \n  ge1.actor_login,\n  ge2.repo_name\nHAVING \n  COUNT(DISTINCT ge1.repo_name) > 5\n  AND SUM(ge1.issues) >= 2\n  AND SUM(ge1.stars) >= 2\n  AND SUM(ge1.pushes) > 0\nORDER BY \n  SUM(ge1.pushes) DESC\nLIMIT \n  10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 60.101,
          "requestId": "01JTG5D2EXEPCR6VT1EPGZJ7QC",
          "error": "{\"error\": \"[Error] Memory limit (for query) exceeded. Make sure the query just process the required data.\", \"documentation\": \"https://tinybird.co/docs/guides/best-practices-for-faster-sql.html#memory-limit-reached-title\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login,\n  COUNT(DISTINCT repo_name) as repos,\n  COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) as issues,\n  COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) as stars,\n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) as pushes,\n  JSONExtractString(favorite_repo, 'repo_name') as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n  AND action IN ('created', 'opened', 'added')\n  AND repo_name IN (\n    SELECT \n      repo_name \n    FROM \n      github_events \n    WHERE \n      event_type = 'PushEvent' \n    GROUP BY \n      repo_name \n    ORDER BY \n      COUNT(DISTINCT actor_login) DESC \n    LIMIT \n      10000\n  )\n  AND actor_login NOT IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'MembershipEvent' \n      AND action = 'added' \n      AND repo_name LIKE '%bot%'\n  )\nGROUP BY \n  actor_login, \n  favorite_repo\nHAVING \n  COUNT(DISTINCT repo_name) > 5\n  AND COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN repo_name END) >= 2\n  AND COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) > 0\nORDER BY \n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN repo_name END) DESC\nLIMIT \n  10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  ge1.actor_login,\n  COUNT(DISTINCT ge1.repo_name) as repos,\n  SUM(ge1.issues) as issues,\n  SUM(ge1.stars) as stars,\n  SUM(ge1.pushes) as pushes,\n  ge2.repo_name as favorite_repo\nFROM \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action IN ('opened', 'created') THEN 1 END) as issues,\n      COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' AND action = 'added' THEN 1 END) as stars,\n      COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN 1 END) as pushes\n    FROM \n      github_events\n    WHERE \n      event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')\n      AND action IN ('created', 'opened', 'added')\n      AND repo_name IN (\n        SELECT \n          repo_name \n        FROM \n          github_events \n        WHERE \n          event_type = 'PushEvent' \n        GROUP BY \n          repo_name \n        ORDER BY \n          COUNT(DISTINCT actor_login) DESC \n        LIMIT \n          10000\n      )\n      AND actor_login NOT IN (\n        SELECT \n          actor_login \n        FROM \n          github_events \n        WHERE \n          event_type = 'MembershipEvent' \n          AND action = 'added' \n          AND repo_name LIKE '%bot%'\n      )\n    GROUP BY \n      actor_login, \n      repo_name\n  ) ge1\n  INNER JOIN \n  (\n    SELECT \n      actor_login,\n      repo_name,\n      ROW_NUMBER() OVER (PARTITION BY actor_login ORDER BY COUNT(*) DESC) as row_num\n    FROM \n      github_events\n    WHERE \n      event_type = 'PushEvent'\n    GROUP BY \n      actor_login,\n      repo_name\n  ) ge2\n  ON ge1.actor_login = ge2.actor_login AND ge2.row_num = 1\nGROUP BY \n  ge1.actor_login,\n  ge2.repo_name\nHAVING \n  COUNT(DISTINCT ge1.repo_name) > 5\n  AND SUM(ge1.issues) >= 2\n  AND SUM(ge1.stars) >= 2\n  AND SUM(ge1.pushes) > 0\nORDER BY \n  SUM(ge1.pushes) DESC\nLIMIT \n  10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.761,
          "totalDuration": 7.703,
          "tokens": {
            "promptTokens": 4835,
            "completionTokens": 508,
            "totalTokens": 5343
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(*) as stars_count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  repo_name\nORDER BY \n  stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars_count": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars_count": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars_count": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars_count": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars_count": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars_count": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars_count": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars_count": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars_count": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars_count": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.224645589,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.245,
      "requestId": "01JTG5F0ENZJ9G2W3CQ7R4M2DM",
      "length": 577
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.366,
      "totalDuration": 0.904,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 49,
        "totalTokens": 3817
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(*) as stars_count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  repo_name\nORDER BY \n  stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars_count": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars_count": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars_count": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars_count": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars_count": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars_count": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars_count": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars_count": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars_count": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars_count": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.224645589,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.245,
          "requestId": "01JTG5F0ENZJ9G2W3CQ7R4M2DM",
          "length": 577
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.366,
          "totalDuration": 0.904,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 49,
            "totalTokens": 3817
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  actor_login as org_name, \n  COUNT(DISTINCT repo_name) as repo_count\nFROM \n  github_events\nWHERE \n  event_type = 'CreateEvent' AND \n  repo_name IS NOT NULL AND \n  actor_login IS NOT NULL\nGROUP BY \n  actor_login\nORDER BY \n  repo_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "org_name": "dependabot[bot]",
          "repo_count": 4675125
        },
        {
          "org_name": "direwolf-github",
          "repo_count": 1485618
        },
        {
          "org_name": "Likj128",
          "repo_count": 409129
        },
        {
          "org_name": "GoogleCodeExporter",
          "repo_count": 369639
        },
        {
          "org_name": "circle-api-test",
          "repo_count": 329378
        },
        {
          "org_name": "imgbot[bot]",
          "repo_count": 151678
        },
        {
          "org_name": "botcopado",
          "repo_count": 136111
        },
        {
          "org_name": "idsqat1",
          "repo_count": 130207
        },
        {
          "org_name": "mathias7777",
          "repo_count": 128094
        },
        {
          "org_name": "dvcsconnectortest",
          "repo_count": 127949
        }
      ],
      "meta": [
        {
          "name": "org_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 14.78043773,
        "rows_read": 448167202,
        "bytes_read": 2236630184
      },
      "executionTime": 14.878,
      "requestId": "01JTG5F9DVBE3Z6TMTKH8PKQVZ",
      "length": 488
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 Organizations by the number of repositories\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  org_name, \n  COUNT(DISTINCT repo_name) as repo_count\nFROM \n  github_events\nWHERE \n  org_name IS NOT NULL\nGROUP BY \n  org_name\nORDER BY \n  repo_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.369,
      "totalDuration": 1.195,
      "tokens": {
        "promptTokens": 3873,
        "completionTokens": 79,
        "totalTokens": 3952
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  org_name, \n  COUNT(DISTINCT repo_name) as repo_count\nFROM \n  github_events\nWHERE \n  org_name IS NOT NULL\nGROUP BY \n  org_name\nORDER BY \n  repo_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTG5F5Q7506E3HN8TCWG4BAG",
          "error": "{\"error\": \"[Error] Unknown expression identifier 'org_name' in scope SELECT \\n  org_name, \\n  COUNT(DISTINCT repo_name) as repo_count\\nFROM \\n  github_events\\nWHERE \\n  org_name IS NOT NULL\\nGROUP BY \\n  org_name\\nORDER BY \\n  repo_count DESC\\nLIMIT 10 FORMAT JSON. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.94,
          "totalDuration": 1.648,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 54,
            "totalTokens": 3822
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  actor_login as org_name, \n  COUNT(DISTINCT repo_name) as repo_count\nFROM \n  github_events\nWHERE \n  event_type = 'CreateEvent' AND \n  repo_name IS NOT NULL AND \n  actor_login IS NOT NULL\nGROUP BY \n  actor_login\nORDER BY \n  repo_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "org_name": "dependabot[bot]",
              "repo_count": 4675125
            },
            {
              "org_name": "direwolf-github",
              "repo_count": 1485618
            },
            {
              "org_name": "Likj128",
              "repo_count": 409129
            },
            {
              "org_name": "GoogleCodeExporter",
              "repo_count": 369639
            },
            {
              "org_name": "circle-api-test",
              "repo_count": 329378
            },
            {
              "org_name": "imgbot[bot]",
              "repo_count": 151678
            },
            {
              "org_name": "botcopado",
              "repo_count": 136111
            },
            {
              "org_name": "idsqat1",
              "repo_count": 130207
            },
            {
              "org_name": "mathias7777",
              "repo_count": 128094
            },
            {
              "org_name": "dvcsconnectortest",
              "repo_count": 127949
            }
          ],
          "meta": [
            {
              "name": "org_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 14.78043773,
            "rows_read": 448167202,
            "bytes_read": 2236630184
          },
          "executionTime": 14.878,
          "requestId": "01JTG5F9DVBE3Z6TMTKH8PKQVZ",
          "length": 488
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Organizations by the number of repositories\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  org_name, \n  COUNT(DISTINCT repo_name) as repo_count\nFROM \n  github_events\nWHERE \n  org_name IS NOT NULL\nGROUP BY \n  org_name\nORDER BY \n  repo_count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.369,
          "totalDuration": 1.195,
          "tokens": {
            "promptTokens": 3873,
            "completionTokens": 79,
            "totalTokens": 3952
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as community_size\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  community_size DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "community_size": 736368
        },
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 279405
        },
        {
          "repo_name": "jtleek/datasharing",
          "community_size": 264395
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 259323
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 223352
        },
        {
          "repo_name": "facebook/react",
          "community_size": 211153
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 205351
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 203955
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "community_size": 193542
        },
        {
          "repo_name": "github/gitignore",
          "community_size": 182330
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 96.101717938,
        "rows_read": 3124889133,
        "bytes_read": 12479080129
      },
      "executionTime": 96.122,
      "requestId": "01JTG5FVHYF824GH3KZDG1GNFH",
      "length": 562
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.451,
      "totalDuration": 1.262,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 44,
        "totalTokens": 3812
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as community_size\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  community_size DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "community_size": 736368
            },
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 279405
            },
            {
              "repo_name": "jtleek/datasharing",
              "community_size": 264395
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 259323
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 223352
            },
            {
              "repo_name": "facebook/react",
              "community_size": 211153
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 205351
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 203955
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "community_size": 193542
            },
            {
              "repo_name": "github/gitignore",
              "community_size": 182330
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 96.101717938,
            "rows_read": 3124889133,
            "bytes_read": 12479080129
          },
          "executionTime": 96.122,
          "requestId": "01JTG5FVHYF824GH3KZDG1GNFH",
          "length": 562
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.451,
          "totalDuration": 1.262,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 44,
            "totalTokens": 3812
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions,\n    SUM(additions) + SUM(deletions) AS total_modified_code\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\nGROUP BY \n    repo_name\nORDER BY \n    total_modified_code DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "HelloTech/meteor-moment-timezone",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "stephencweiss/javascript-streams-example",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "rreicher/rreicher.github.io",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "gtibrett/tesla-dash",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "BitexXBX/tokens",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "jain-prateek/cartoonify-video-using-opencv",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "mwwasswa/mosesw.github.io",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "alexroemerdeveloper/LoadingSpinner",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "Alisa-Modeste/col-wis",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        },
        {
          "repo_name": "feehlds/Projeto-DW1A3",
          "total_additions": 0,
          "total_deletions": 0,
          "total_modified_code": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        },
        {
          "name": "total_modified_code",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 18.202485595,
        "rows_read": 1601472977,
        "bytes_read": 17609324555
      },
      "executionTime": 18.223,
      "requestId": "01JTG5JWSCZ630K5SBG66VM8T7",
      "length": 1087
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.593,
      "totalDuration": 0.94,
      "tokens": {
        "promptTokens": 3574,
        "completionTokens": 82,
        "totalTokens": 3656
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions,\n    SUM(additions) + SUM(deletions) AS total_modified_code\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\nGROUP BY \n    repo_name\nORDER BY \n    total_modified_code DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "HelloTech/meteor-moment-timezone",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "stephencweiss/javascript-streams-example",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "rreicher/rreicher.github.io",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "gtibrett/tesla-dash",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "BitexXBX/tokens",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "jain-prateek/cartoonify-video-using-opencv",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "mwwasswa/mosesw.github.io",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "alexroemerdeveloper/LoadingSpinner",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "Alisa-Modeste/col-wis",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            },
            {
              "repo_name": "feehlds/Projeto-DW1A3",
              "total_additions": 0,
              "total_deletions": 0,
              "total_modified_code": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            },
            {
              "name": "total_modified_code",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 18.202485595,
            "rows_read": 1601472977,
            "bytes_read": 17609324555
          },
          "executionTime": 18.223,
          "requestId": "01JTG5JWSCZ630K5SBG66VM8T7",
          "length": 1087
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.593,
          "totalDuration": 0.94,
          "tokens": {
            "promptTokens": 3574,
            "completionTokens": 82,
            "totalTokens": 3656
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as num_pushes \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nGROUP BY \n  repo_name \nORDER BY \n  num_pushes DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "num_pushes": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "num_pushes": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "num_pushes": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "num_pushes": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "num_pushes": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "num_pushes": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "num_pushes": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "num_pushes": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "num_pushes": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "num_pushes": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 40.313089,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 40.394,
      "requestId": "01JTG5KJKJ8H7642JFCK6H3YNM",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.944,
      "totalDuration": 1.557,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 53,
        "totalTokens": 3822
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as num_pushes \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nGROUP BY \n  repo_name \nORDER BY \n  num_pushes DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "num_pushes": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "num_pushes": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "num_pushes": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "num_pushes": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "num_pushes": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "num_pushes": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "num_pushes": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "num_pushes": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "num_pushes": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "num_pushes": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 40.313089,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 40.394,
          "requestId": "01JTG5KJKJ8H7642JFCK6H3YNM",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.944,
          "totalDuration": 1.557,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 53,
            "totalTokens": 3822
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  actor_login, \n  COUNT(*) as review_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewEvent'\nGROUP BY \n  actor_login\nORDER BY \n  review_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "github-learning-lab[bot]",
          "review_count": 104542
        },
        {
          "actor_login": "github-actions[bot]",
          "review_count": 89676
        },
        {
          "actor_login": "bot-monkey-2",
          "review_count": 31702
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "review_count": 29429
        },
        {
          "actor_login": "foreign-sub",
          "review_count": 17630
        },
        {
          "actor_login": "renovate-approve[bot]",
          "review_count": 16563
        },
        {
          "actor_login": "kodiakhq[bot]",
          "review_count": 10876
        },
        {
          "actor_login": "Katsuno0814",
          "review_count": 6966
        },
        {
          "actor_login": "BrewTestBot",
          "review_count": 6718
        },
        {
          "actor_login": "accesslint[bot]",
          "review_count": 6668
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.045289936,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.065,
      "requestId": "01JTG5MXCT8BF3SN5M348MT8BD",
      "length": 557
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.446,
      "totalDuration": 0.983,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 52,
        "totalTokens": 3820
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  actor_login, \n  COUNT(*) as review_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewEvent'\nGROUP BY \n  actor_login\nORDER BY \n  review_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "github-learning-lab[bot]",
              "review_count": 104542
            },
            {
              "actor_login": "github-actions[bot]",
              "review_count": 89676
            },
            {
              "actor_login": "bot-monkey-2",
              "review_count": 31702
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "review_count": 29429
            },
            {
              "actor_login": "foreign-sub",
              "review_count": 17630
            },
            {
              "actor_login": "renovate-approve[bot]",
              "review_count": 16563
            },
            {
              "actor_login": "kodiakhq[bot]",
              "review_count": 10876
            },
            {
              "actor_login": "Katsuno0814",
              "review_count": 6966
            },
            {
              "actor_login": "BrewTestBot",
              "review_count": 6718
            },
            {
              "actor_login": "accesslint[bot]",
              "review_count": 6668
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.045289936,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.065,
          "requestId": "01JTG5MXCT8BF3SN5M348MT8BD",
          "length": 557
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.446,
          "totalDuration": 0.983,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 52,
            "totalTokens": 3820
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  labels,\n  count(*) as count\nFROM \n  github_events\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND action IN ('opened', 'created')\n  AND labels IS NOT NULL\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [],
          "count": 170909613
        },
        {
          "labels": [
            "enhancement"
          ],
          "count": 2230745
        },
        {
          "labels": [
            "bug"
          ],
          "count": 1589966
        },
        {
          "labels": [
            "feature"
          ],
          "count": 176180
        },
        {
          "labels": [
            "question"
          ],
          "count": 130317
        },
        {
          "labels": [
            "documentation"
          ],
          "count": 116284
        },
        {
          "labels": [
            "dependencies"
          ],
          "count": 98898
        },
        {
          "labels": [
            "Bug"
          ],
          "count": 84033
        },
        {
          "labels": [
            "help wanted"
          ],
          "count": 72831
        },
        {
          "labels": [
            "greenkeeper"
          ],
          "count": 62625
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.511914694,
        "rows_read": 326129279,
        "bytes_read": 3414984791
      },
      "executionTime": 1.531,
      "requestId": "01JTG5N1RKGYVAGTXKEDY08TNG",
      "length": 389
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.005,
      "totalDuration": 1.905,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 69,
        "totalTokens": 3839
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  labels,\n  count(*) as count\nFROM \n  github_events\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND action IN ('opened', 'created')\n  AND labels IS NOT NULL\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [],
              "count": 170909613
            },
            {
              "labels": [
                "enhancement"
              ],
              "count": 2230745
            },
            {
              "labels": [
                "bug"
              ],
              "count": 1589966
            },
            {
              "labels": [
                "feature"
              ],
              "count": 176180
            },
            {
              "labels": [
                "question"
              ],
              "count": 130317
            },
            {
              "labels": [
                "documentation"
              ],
              "count": 116284
            },
            {
              "labels": [
                "dependencies"
              ],
              "count": 98898
            },
            {
              "labels": [
                "Bug"
              ],
              "count": 84033
            },
            {
              "labels": [
                "help wanted"
              ],
              "count": 72831
            },
            {
              "labels": [
                "greenkeeper"
              ],
              "count": 62625
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.511914694,
            "rows_read": 326129279,
            "bytes_read": 3414984791
          },
          "executionTime": 1.531,
          "requestId": "01JTG5N1RKGYVAGTXKEDY08TNG",
          "length": 389
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.005,
          "totalDuration": 1.905,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 69,
            "totalTokens": 3839
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n    arrayJoin(labels) as label,\n    count(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND action IN ('opened', 'created')\n    AND arrayExists(x -> lower(x) LIKE '%bug%', labels)\n    OR arrayExists(x -> lower(x) LIKE '%feature%', labels)\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "count": 2380575
        },
        {
          "label": "feature",
          "count": 1804294
        },
        {
          "label": "Feature",
          "count": 692996
        },
        {
          "label": "feature request",
          "count": 528318
        },
        {
          "label": "kind/feature",
          "count": 440558
        },
        {
          "label": "feature-request",
          "count": 277685
        },
        {
          "label": "enhancement",
          "count": 270703
        },
        {
          "label": "Feature Request",
          "count": 256956
        },
        {
          "label": "new feature",
          "count": 212019
        },
        {
          "label": "Bug",
          "count": 174429
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.904008711,
        "rows_read": 3124889133,
        "bytes_read": 31751240490
      },
      "executionTime": 5.948,
      "requestId": "01JTG5NBX72VG4RA4FMH67D7VQ",
      "length": 382
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 most popular labels for issues and pull requests? filter by bugs and features\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    labels,\n    count(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND action IN ('opened', 'created')\n    AND (labels LIKE '%bug%' OR labels LIKE '%feature%')\nGROUP BY \n    labels\nORDER BY \n    count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.506,
      "totalDuration": 1.532,
      "tokens": {
        "promptTokens": 3902,
        "completionTokens": 99,
        "totalTokens": 4001
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    labels,\n    count(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND action IN ('opened', 'created')\n    AND (labels LIKE '%bug%' OR labels LIKE '%feature%')\nGROUP BY \n    labels\nORDER BY \n    count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG5N7XSJ4N5Z3947Y3BJ4ME",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT labels, count(*) AS count FROM github_llm_bench.github_events AS github_events WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent')) AND (action IN ('opened', 'created')) AND ((labels LIKE '%bug%') OR (labels LIKE '%feature%')) GROUP BY labels ORDER BY count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.714,
          "totalDuration": 2.273,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 75,
            "totalTokens": 3851
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n    arrayJoin(labels) as label,\n    count(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND action IN ('opened', 'created')\n    AND arrayExists(x -> lower(x) LIKE '%bug%', labels)\n    OR arrayExists(x -> lower(x) LIKE '%feature%', labels)\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "bug",
              "count": 2380575
            },
            {
              "label": "feature",
              "count": 1804294
            },
            {
              "label": "Feature",
              "count": 692996
            },
            {
              "label": "feature request",
              "count": 528318
            },
            {
              "label": "kind/feature",
              "count": 440558
            },
            {
              "label": "feature-request",
              "count": 277685
            },
            {
              "label": "enhancement",
              "count": 270703
            },
            {
              "label": "Feature Request",
              "count": 256956
            },
            {
              "label": "new feature",
              "count": 212019
            },
            {
              "label": "Bug",
              "count": 174429
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.904008711,
            "rows_read": 3124889133,
            "bytes_read": 31751240490
          },
          "executionTime": 5.948,
          "requestId": "01JTG5NBX72VG4RA4FMH67D7VQ",
          "length": 382
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 most popular labels for issues and pull requests? filter by bugs and features\"\n\nYou generated this SQL query:\n```sql\nSELECT \n    labels,\n    count(*) as count\nFROM \n    github_events\nWHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent')\n    AND action IN ('opened', 'created')\n    AND (labels LIKE '%bug%' OR labels LIKE '%feature%')\nGROUP BY \n    labels\nORDER BY \n    count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.506,
          "totalDuration": 1.532,
          "tokens": {
            "promptTokens": 3902,
            "completionTokens": 99,
            "totalTokens": 4001
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, LENGTH(repo_name) AS length \nFROM github_events \nORDER BY length DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
          "length": 140
        },
        {
          "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
          "length": 140
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
          "length": 140
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
          "length": 140
        },
        {
          "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo",
          "length": 140
        },
        {
          "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo",
          "length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "length": 140
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
          "length": 140
        },
        {
          "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
          "length": 140
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
          "length": 140
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 7.022646156,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.042,
      "requestId": "01JTG5NNH9ESQ1MKDQRFK1SWBN",
      "length": 1701
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.896,
      "totalDuration": 1.433,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 25,
        "totalTokens": 3790
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, LENGTH(repo_name) AS length \nFROM github_events \nORDER BY length DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
              "length": 140
            },
            {
              "repo_name": "alassxalexadexjasdldjalexalexma0s839s8s/alassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldjalexalexma0s839s8salassxalexadexjasdldja",
              "length": 140
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
              "length": 140
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3",
              "length": 140
            },
            {
              "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo",
              "length": 140
            },
            {
              "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo",
              "length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "length": 140
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome",
              "length": 140
            },
            {
              "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039",
              "length": 140
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php",
              "length": 140
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 7.022646156,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.042,
          "requestId": "01JTG5NNH9ESQ1MKDQRFK1SWBN",
          "length": 1701
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.896,
          "totalDuration": 1.433,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 25,
            "totalTokens": 3790
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name FROM github_events ORDER BY LENGTH(repo_name) LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        },
        {
          "repo_name": "/"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 7.037548305,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.057,
      "requestId": "01JTG5P03VMEYJCYM692B245T1",
      "length": 181
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.019,
      "totalDuration": 1.292,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 17,
        "totalTokens": 3782
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name FROM github_events ORDER BY LENGTH(repo_name) LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            },
            {
              "repo_name": "/"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 7.037548305,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.057,
          "requestId": "01JTG5P03VMEYJCYM692B245T1",
          "length": 181
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.019,
          "totalDuration": 1.292,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 17,
            "totalTokens": 3782
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    COUNT(*) as comment_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssueCommentEvent'\n    AND body LIKE '%freeCodeCamp%'\n    AND repo_name NOT LIKE '%freeCodeCamp%'\nGROUP BY \n    repo_name\nORDER BY \n    comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "vitalets/github-trending-repos",
          "comment_count": 108
        },
        {
          "repo_name": "up-for-grabs/up-for-grabs.net",
          "comment_count": 104
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 45
        },
        {
          "repo_name": "follow-github-organisation/follow-github-organisation",
          "comment_count": 26
        },
        {
          "repo_name": "dhcodes/guides",
          "comment_count": 23
        },
        {
          "repo_name": "frontendbr/forum",
          "comment_count": 18
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 18
        },
        {
          "repo_name": "2018-TopView-FrontEnd/JavaScript-For-Us",
          "comment_count": 16
        },
        {
          "repo_name": "Lidemy/mentor-daily-report",
          "comment_count": 16
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "comment_count": 11
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.916075151,
        "rows_read": 218620144,
        "bytes_read": 91661135130
      },
      "executionTime": 8.937,
      "requestId": "01JTG5PAMEA0KQ0KN00K02FWQN",
      "length": 643
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.488,
      "totalDuration": 1.213,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 70,
        "totalTokens": 3840
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(*) as comment_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssueCommentEvent'\n    AND body LIKE '%freeCodeCamp%'\n    AND repo_name NOT LIKE '%freeCodeCamp%'\nGROUP BY \n    repo_name\nORDER BY \n    comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "vitalets/github-trending-repos",
              "comment_count": 108
            },
            {
              "repo_name": "up-for-grabs/up-for-grabs.net",
              "comment_count": 104
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 45
            },
            {
              "repo_name": "follow-github-organisation/follow-github-organisation",
              "comment_count": 26
            },
            {
              "repo_name": "dhcodes/guides",
              "comment_count": 23
            },
            {
              "repo_name": "frontendbr/forum",
              "comment_count": 18
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 18
            },
            {
              "repo_name": "2018-TopView-FrontEnd/JavaScript-For-Us",
              "comment_count": 16
            },
            {
              "repo_name": "Lidemy/mentor-daily-report",
              "comment_count": 16
            },
            {
              "repo_name": "gatsbyjs/gatsby",
              "comment_count": 11
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.916075151,
            "rows_read": 218620144,
            "bytes_read": 91661135130
          },
          "executionTime": 8.937,
          "requestId": "01JTG5PAMEA0KQ0KN00K02FWQN",
          "length": 643
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.488,
          "totalDuration": 1.213,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 70,
            "totalTokens": 3840
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT \n    repo_name,\n    COUNT(*) as comment_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssueCommentEvent'\n    AND body LIKE '%freeCodeCamp%'\n    AND action = 'created'\nGROUP BY \n    repo_name\nORDER BY \n    comment_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 8148
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 1309
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "comment_count": 347
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 342
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 286
        },
        {
          "repo_name": "freeCodeCamp/guide-articles",
          "comment_count": 177
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 147
        },
        {
          "repo_name": "freeCodeCamp/curriculum",
          "comment_count": 145
        },
        {
          "repo_name": "marcobiedermann/freeCodeCamp",
          "comment_count": 135
        },
        {
          "repo_name": "freeCodeCamp/how-to-contribute-to-open-source",
          "comment_count": 135
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.933672919,
        "rows_read": 218620144,
        "bytes_read": 91662845201
      },
      "executionTime": 8.954,
      "requestId": "01JTG5PPV1PJNTFVG5EK8SGS9Q",
      "length": 644
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.381,
      "totalDuration": 1.062,
      "tokens": {
        "promptTokens": 3774,
        "completionTokens": 66,
        "totalTokens": 3840
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n    repo_name,\n    COUNT(*) as comment_count\nFROM \n    github_events\nWHERE \n    event_type = 'IssueCommentEvent'\n    AND body LIKE '%freeCodeCamp%'\n    AND action = 'created'\nGROUP BY \n    repo_name\nORDER BY \n    comment_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 8148
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 1309
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "comment_count": 347
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 342
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 286
            },
            {
              "repo_name": "freeCodeCamp/guide-articles",
              "comment_count": 177
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 147
            },
            {
              "repo_name": "freeCodeCamp/curriculum",
              "comment_count": 145
            },
            {
              "repo_name": "marcobiedermann/freeCodeCamp",
              "comment_count": 135
            },
            {
              "repo_name": "freeCodeCamp/how-to-contribute-to-open-source",
              "comment_count": 135
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.933672919,
            "rows_read": 218620144,
            "bytes_read": 91662845201
          },
          "executionTime": 8.954,
          "requestId": "01JTG5PPV1PJNTFVG5EK8SGS9Q",
          "length": 644
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.381,
          "totalDuration": 1.062,
          "tokens": {
            "promptTokens": 3774,
            "completionTokens": 66,
            "totalTokens": 3840
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  body, \n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  OR event_type = 'PullRequestReviewCommentEvent' \n  OR event_type = 'CommitCommentEvent'\nGROUP BY \n  body\nORDER BY \n  comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "body": "",
          "comment_count": 25325535
        },
        {
          "body": "Thanks!",
          "comment_count": 449551
        },
        {
          "body": "done",
          "comment_count": 438192
        },
        {
          "body": "+1",
          "comment_count": 420009
        },
        {
          "body": "Done",
          "comment_count": 411145
        },
        {
          "body": "LGTM",
          "comment_count": 409081
        },
        {
          "body": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.",
          "comment_count": 391323
        },
        {
          "body": ":+1: ",
          "comment_count": 385333
        },
        {
          "body": "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
          "comment_count": 367543
        },
        {
          "body": "## Step 1: Assign yourself\n\nUnassigned issues don't have owners to look after them. When you’re assigned to an issue or pull request, it tells repository visitors and contributors that you'll be facilitating the conversation or task :muscle:.\n\n### :keyboard: Activity\n\n1. On the right side of the screen, under the \"Assignees\" section, click the gear icon and select yourself\n\nFor a printable version of the steps in this course, check out the [Quick Reference Guide](https://lab.github.com/public/introduction-to-github.pdf).\n\n<hr>\n<h3 align=\"center\">I'll respond when I detect you've assigned yourself to this issue.</h3>\n\n> _Sometimes I respond too fast for the page to update! If you perform an expected action and don't see a response from me, wait a few seconds and refresh the page for your next steps._\n",
          "comment_count": 349917
        }
      ],
      "meta": [
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 164.868453607,
        "rows_read": 284616113,
        "bytes_read": 102835400985
      },
      "executionTime": 164.917,
      "requestId": "01JTG5Q4KJ6X99C5GTBR92193Y",
      "length": 1755
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "llama-4-scout",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.577,
      "totalDuration": 2.614,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 75,
        "totalTokens": 3843
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT \n  body, \n  COUNT(*) as comment_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  OR event_type = 'PullRequestReviewCommentEvent' \n  OR event_type = 'CommitCommentEvent'\nGROUP BY \n  body\nORDER BY \n  comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "body": "",
              "comment_count": 25325535
            },
            {
              "body": "Thanks!",
              "comment_count": 449551
            },
            {
              "body": "done",
              "comment_count": 438192
            },
            {
              "body": "+1",
              "comment_count": 420009
            },
            {
              "body": "Done",
              "comment_count": 411145
            },
            {
              "body": "LGTM",
              "comment_count": 409081
            },
            {
              "body": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.",
              "comment_count": 391323
            },
            {
              "body": ":+1: ",
              "comment_count": 385333
            },
            {
              "body": "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
              "comment_count": 367543
            },
            {
              "body": "## Step 1: Assign yourself\n\nUnassigned issues don't have owners to look after them. When you’re assigned to an issue or pull request, it tells repository visitors and contributors that you'll be facilitating the conversation or task :muscle:.\n\n### :keyboard: Activity\n\n1. On the right side of the screen, under the \"Assignees\" section, click the gear icon and select yourself\n\nFor a printable version of the steps in this course, check out the [Quick Reference Guide](https://lab.github.com/public/introduction-to-github.pdf).\n\n<hr>\n<h3 align=\"center\">I'll respond when I detect you've assigned yourself to this issue.</h3>\n\n> _Sometimes I respond too fast for the page to update! If you perform an expected action and don't see a response from me, wait a few seconds and refresh the page for your next steps._\n",
              "comment_count": 349917
            }
          ],
          "meta": [
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 164.868453607,
            "rows_read": 284616113,
            "bytes_read": 102835400985
          },
          "executionTime": 164.917,
          "requestId": "01JTG5Q4KJ6X99C5GTBR92193Y",
          "length": 1755
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "llama-4-scout",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.577,
          "totalDuration": 2.614,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 75,
            "totalTokens": 3843
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    COUNT(*) as stars_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    repo_name\nORDER BY \n    stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars_count": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars_count": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars_count": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars_count": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars_count": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars_count": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars_count": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars_count": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars_count": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars_count": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.25465816,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.274,
      "requestId": "01JTG5W9HDGF0BWFSY1FXJ6Z9E",
      "length": 577
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.132,
      "totalDuration": 1.473,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 49,
        "totalTokens": 3825
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as stars_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    repo_name\nORDER BY \n    stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars_count": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars_count": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars_count": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars_count": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars_count": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars_count": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars_count": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars_count": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars_count": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars_count": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.25465816,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.274,
          "requestId": "01JTG5W9HDGF0BWFSY1FXJ6Z9E",
          "length": 577
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.132,
          "totalDuration": 1.473,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 49,
            "totalTokens": 3825
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.227564848,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.247,
      "requestId": "01JTG5WGD4SJ97BPT1C00CMAE5",
      "length": 517
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.905,
      "totalDuration": 3.255,
      "tokens": {
        "promptTokens": 3781,
        "completionTokens": 36,
        "totalTokens": 3817
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.227564848,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.247,
          "requestId": "01JTG5WGD4SJ97BPT1C00CMAE5",
          "length": 517
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.905,
          "totalDuration": 3.255,
          "tokens": {
            "promptTokens": 3781,
            "completionTokens": 36,
            "totalTokens": 3817
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  interval(10 * floor(repo_stars / 10), 10 * (floor(repo_stars / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND repo_stars IS NOT NULL \n  AND repo_stars >= 1 \n  AND repo_stars <= 100000 \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10000\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG5X6G6T11ZF72BAS6DWZ7C",
      "error": "{\"error\": \"DB::Exception: Unknown function interval. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  interval(10 * floor(stargazers / 10), 10 * (floor(stargazers / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  interval(10 * floor(stars / 10), 10 * (floor(stars / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND stars IS NOT NULL \n  AND stars >= 1 \n  AND stars <= 100000 \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10000\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.363,
      "totalDuration": 5.393,
      "tokens": {
        "promptTokens": 4063,
        "completionTokens": 107,
        "totalTokens": 4170
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  interval(10 * floor(stargazers / 10), 10 * (floor(stargazers / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG5WPC8F9CBF0CCTM7J8KX3",
          "error": "{\"error\": \"DB::Exception: Unknown function interval. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.727,
          "totalDuration": 2.367,
          "tokens": {
            "promptTokens": 3826,
            "completionTokens": 74,
            "totalTokens": 3900
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  interval(10 * floor(stars / 10), 10 * (floor(stars / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND stars IS NOT NULL \n  AND stars >= 1 \n  AND stars <= 100000 \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10000\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG5WYS0VPJDTHPMSZBEJPXA",
          "error": "{\"error\": \"DB::Exception: Unknown function interval. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  interval(10 * floor(stargazers / 10), 10 * (floor(stargazers / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.275,
          "totalDuration": 6.084,
          "tokens": {
            "promptTokens": 3914,
            "completionTokens": 99,
            "totalTokens": 4013
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  interval(10 * floor(repo_stars / 10), 10 * (floor(repo_stars / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND repo_stars IS NOT NULL \n  AND repo_stars >= 1 \n  AND repo_stars <= 100000 \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10000\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG5X6G6T11ZF72BAS6DWZ7C",
          "error": "{\"error\": \"DB::Exception: Unknown function interval. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  interval(10 * floor(stargazers / 10), 10 * (floor(stargazers / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  interval(10 * floor(stars / 10), 10 * (floor(stars / 10) + 1)) AS stars_interval,\n  count(*) \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND stars IS NOT NULL \n  AND stars >= 1 \n  AND stars <= 100000 \nGROUP BY \n  stars_interval \nORDER BY \n  stars_interval \nLIMIT 10000\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.363,
          "totalDuration": 5.393,
          "tokens": {
            "promptTokens": 4063,
            "completionTokens": 107,
            "totalTokens": 4170
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(repo_name)": 165611259
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(repo_name)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.419979059,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.462,
      "requestId": "01JTG5XA3G5XBX4WW93JFRYT1S",
      "length": 40
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.777,
      "totalDuration": 1.151,
      "tokens": {
        "promptTokens": 3762,
        "completionTokens": 14,
        "totalTokens": 3776
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(repo_name)": 165611259
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(repo_name)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.419979059,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.462,
          "requestId": "01JTG5XA3G5XBX4WW93JFRYT1S",
          "length": 40
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.777,
          "totalDuration": 1.151,
          "tokens": {
            "promptTokens": 3762,
            "completionTokens": 14,
            "totalTokens": 3776
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name,\n    COUNT(*) as num_events\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent' \n    AND toYear(created_at) >= 2015\nGROUP BY \n    repo_name, \n    toYear(created_at)\nORDER BY \n    num_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "num_events": 3097263
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "num_events": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "num_events": 1688188
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "num_events": 1437709
        },
        {
          "repo_name": "Lombiq/Orchard",
          "num_events": 1212890
        },
        {
          "repo_name": "otiny/up",
          "num_events": 1053087
        },
        {
          "repo_name": "breakingheatmap/breakingheatmap",
          "num_events": 878493
        },
        {
          "repo_name": "willcbaker-ext/subt",
          "num_events": 869773
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "num_events": 788464
        },
        {
          "repo_name": "bossm/chancechat",
          "num_events": 781821
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_events",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 22.563325853,
        "rows_read": 1463949066,
        "bytes_read": 10240803572
      },
      "executionTime": 22.605,
      "requestId": "01JTG5Y70YZ9MCS5GTJRY3035X",
      "length": 572
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.841,
      "totalDuration": 2.651,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 67,
        "totalTokens": 3837
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as num_events\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent' \n    AND toYear(created_at) >= 2015\nGROUP BY \n    repo_name, \n    toYear(created_at)\nORDER BY \n    num_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "num_events": 3097263
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "num_events": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "num_events": 1688188
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "num_events": 1437709
            },
            {
              "repo_name": "Lombiq/Orchard",
              "num_events": 1212890
            },
            {
              "repo_name": "otiny/up",
              "num_events": 1053087
            },
            {
              "repo_name": "breakingheatmap/breakingheatmap",
              "num_events": 878493
            },
            {
              "repo_name": "willcbaker-ext/subt",
              "num_events": 869773
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "num_events": 788464
            },
            {
              "repo_name": "bossm/chancechat",
              "num_events": 781821
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_events",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 22.563325853,
            "rows_read": 1463949066,
            "bytes_read": 10240803572
          },
          "executionTime": 22.605,
          "requestId": "01JTG5Y70YZ9MCS5GTJRY3035X",
          "length": 572
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.841,
          "totalDuration": 2.651,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 67,
            "totalTokens": 3837
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  created_at,\n  count() as total_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  created_at\nORDER BY \n  created_at\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "created_at": "2011-02-12 00:00:06",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:00:30",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:00:32",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:00:41",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:01:05",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:01:45",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:01:57",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:02:00",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:02:01",
          "total_stars": 1
        },
        {
          "created_at": "2011-02-12 00:02:04",
          "total_stars": 1
        }
      ],
      "meta": [
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "total_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.187218281,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 4.236,
      "requestId": "01JTG5Z1K6EQJ2D5A5BCSRGHHA",
      "length": 531
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.075,
      "totalDuration": 2.098,
      "tokens": {
        "promptTokens": 3786,
        "completionTokens": 48,
        "totalTokens": 3834
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  created_at,\n  count() as total_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  created_at\nORDER BY \n  created_at\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "created_at": "2011-02-12 00:00:06",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:00:30",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:00:32",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:00:41",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:01:05",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:01:45",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:01:57",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:02:00",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:02:01",
              "total_stars": 1
            },
            {
              "created_at": "2011-02-12 00:02:04",
              "total_stars": 1
            }
          ],
          "meta": [
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "total_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.187218281,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 4.236,
          "requestId": "01JTG5Z1K6EQJ2D5A5BCSRGHHA",
          "length": 531
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.075,
          "totalDuration": 2.098,
          "tokens": {
            "promptTokens": 3786,
            "completionTokens": 48,
            "totalTokens": 3834
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, COUNT(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY actor_login \nORDER BY stars DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "stars": 232492
        },
        {
          "actor_login": "salifm",
          "stars": 202534
        },
        {
          "actor_login": "x0rzkov",
          "stars": 73531
        },
        {
          "actor_login": "fly51fly",
          "stars": 57756
        },
        {
          "actor_login": "PCOffline",
          "stars": 56725
        },
        {
          "actor_login": "baslr",
          "stars": 50363
        },
        {
          "actor_login": "gkze",
          "stars": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "stars": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "stars": 44715
        },
        {
          "actor_login": "mcanthony",
          "stars": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.577721934,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 5.626,
      "requestId": "01JTG5ZAGRP2D38J0CS26F38T4",
      "length": 410
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.37,
      "totalDuration": 2.397,
      "tokens": {
        "promptTokens": 3773,
        "completionTokens": 35,
        "totalTokens": 3808
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, COUNT(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY actor_login \nORDER BY stars DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "4148",
              "stars": 232492
            },
            {
              "actor_login": "salifm",
              "stars": 202534
            },
            {
              "actor_login": "x0rzkov",
              "stars": 73531
            },
            {
              "actor_login": "fly51fly",
              "stars": 57756
            },
            {
              "actor_login": "PCOffline",
              "stars": 56725
            },
            {
              "actor_login": "baslr",
              "stars": 50363
            },
            {
              "actor_login": "gkze",
              "stars": 49078
            },
            {
              "actor_login": "StarTheWorld",
              "stars": 45691
            },
            {
              "actor_login": "thanhtoan1196",
              "stars": 44715
            },
            {
              "actor_login": "mcanthony",
              "stars": 44331
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 5.577721934,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 5.626,
          "requestId": "01JTG5ZAGRP2D38J0CS26F38T4",
          "length": 410
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.37,
          "totalDuration": 2.397,
          "tokens": {
            "promptTokens": 3773,
            "completionTokens": 35,
            "totalTokens": 3808
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_stars \nFROM github_events \nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent') \nAND event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY num_stars DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.720739375,
        "rows_read": 232317017,
        "bytes_read": 464619279
      },
      "executionTime": 1.739,
      "requestId": "01JTG5ZM20N2E5VY5ZK358EEKB",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.924,
      "totalDuration": 1.67,
      "tokens": {
        "promptTokens": 3785,
        "completionTokens": 75,
        "totalTokens": 3860
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_stars \nFROM github_events \nWHERE actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'freecodecamp/freecodecamp' AND event_type = 'WatchEvent') \nAND event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY num_stars DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.720739375,
            "rows_read": 232317017,
            "bytes_read": 464619279
          },
          "executionTime": 1.739,
          "requestId": "01JTG5ZM20N2E5VY5ZK358EEKB",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.924,
          "totalDuration": 1.67,
          "tokens": {
            "promptTokens": 3785,
            "completionTokens": 75,
            "totalTokens": 3860
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, COUNT(*) as count \nFROM github_events \nWHERE repo_name = 'counting-stars' \nAND event_type = 'WatchEvent' \nAND actor_login!= 'javisantana' \nGROUP BY actor_login \nORDER BY count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.009214939,
        "rows_read": 129133,
        "bytes_read": 246336
      },
      "executionTime": 0.026,
      "requestId": "01JTG5ZT9N9VZQSGHNESHNJGBC",
      "length": 2
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.634,
      "totalDuration": 2.148,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 56,
        "totalTokens": 3825
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, COUNT(*) as count \nFROM github_events \nWHERE repo_name = 'counting-stars' \nAND event_type = 'WatchEvent' \nAND actor_login!= 'javisantana' \nGROUP BY actor_login \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.009214939,
            "rows_read": 129133,
            "bytes_read": 246336
          },
          "executionTime": 0.026,
          "requestId": "01JTG5ZT9N9VZQSGHNESHNJGBC",
          "length": 2
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.634,
          "totalDuration": 2.148,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 56,
            "totalTokens": 3825
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, actor_login, count(*) \nFROM github_events \nWHERE repo_name = 'freecodecamp' \nGROUP BY repo_name, actor_login \nORDER BY count(*) DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.032340032,
        "rows_read": 2466250,
        "bytes_read": 4932500
      },
      "executionTime": 0.05,
      "requestId": "01JTG5ZZ6H5JYR81DQZQPWRQ6P",
      "length": 2
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.628,
      "totalDuration": 2.493,
      "tokens": {
        "promptTokens": 3773,
        "completionTokens": 43,
        "totalTokens": 3816
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, actor_login, count(*) \nFROM github_events \nWHERE repo_name = 'freecodecamp' \nGROUP BY repo_name, actor_login \nORDER BY count(*) DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.032340032,
            "rows_read": 2466250,
            "bytes_read": 4932500
          },
          "executionTime": 0.05,
          "requestId": "01JTG5ZZ6H5JYR81DQZQPWRQ6P",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.628,
          "totalDuration": 2.493,
          "tokens": {
            "promptTokens": 3773,
            "completionTokens": 43,
            "totalTokens": 3816
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, actor_login, COUNT(*) as count \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nAND action = 'opened' \nAND repo_name = 'freecodecamp' \nGROUP BY repo_name, actor_login \nORDER BY count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.010120575,
        "rows_read": 159252,
        "bytes_read": 418785
      },
      "executionTime": 0.028,
      "requestId": "01JTG604HNZRJ997GDZ3H12RQ6",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.961,
      "totalDuration": 2.924,
      "tokens": {
        "promptTokens": 3795,
        "completionTokens": 60,
        "totalTokens": 3855
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, actor_login, COUNT(*) as count \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nAND action = 'opened' \nAND repo_name = 'freecodecamp' \nGROUP BY repo_name, actor_login \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.010120575,
            "rows_read": 159252,
            "bytes_read": 418785
          },
          "executionTime": 0.028,
          "requestId": "01JTG604HNZRJ997GDZ3H12RQ6",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.961,
          "totalDuration": 2.924,
          "tokens": {
            "promptTokens": 3795,
            "completionTokens": 60,
            "totalTokens": 3855
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.206974804,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.226,
      "requestId": "01JTG608K180S7FB9HJRZZEE3M",
      "length": 517
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.881,
      "totalDuration": 1.611,
      "tokens": {
        "promptTokens": 3787,
        "completionTokens": 36,
        "totalTokens": 3823
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.206974804,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.226,
          "requestId": "01JTG608K180S7FB9HJRZZEE3M",
          "length": 517
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.881,
          "totalDuration": 1.611,
          "tokens": {
            "promptTokens": 3787,
            "completionTokens": 36,
            "totalTokens": 3823
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT \n  repo_name, \n  COUNTIF(YEAR(created_at) = 2019) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / NULLIF(COUNTIF(YEAR(created_at) = 2019), 0) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nHAVING \n  COUNTIF(YEAR(created_at) = 2019) > 0 AND COUNTIF(YEAR(created_at) = 2020) > 0\nORDER BY \n  growth DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.015,
      "requestId": "01JTG60YC90ZRNSMF8QZX1WMCH",
      "error": "{\"error\": \"DB::Exception: Unknown function COUNTIF. Maybe you meant: ['count']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
      "length": 2
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  COUNT(*) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / COUNTIF(YEAR(created_at) = 2019) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nORDER BY \n  growth DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT \n  repo_name, \n  COUNTIF(YEAR(created_at) = 2019) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / NULLIF(COUNTIF(YEAR(created_at) = 2019), 0) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nHAVING \n  COUNTIF(YEAR(created_at) = 2019) > 0\nORDER BY \n  growth DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.815,
      "totalDuration": 4.776,
      "tokens": {
        "promptTokens": 4209,
        "completionTokens": 178,
        "totalTokens": 4387
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  repo_name, \n  COUNT(*) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / COUNTIF(YEAR(created_at) = 2019) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nORDER BY \n  growth DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.013,
          "requestId": "01JTG60FD5QVXBW1R8ABYSSHNW",
          "error": "{\"error\": \"DB::Exception: Unknown function COUNTIF. Maybe you meant: ['count']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.71,
          "totalDuration": 3.251,
          "tokens": {
            "promptTokens": 3823,
            "completionTokens": 121,
            "totalTokens": 3944
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT \n  repo_name, \n  COUNTIF(YEAR(created_at) = 2019) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / NULLIF(COUNTIF(YEAR(created_at) = 2019), 0) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nHAVING \n  COUNTIF(YEAR(created_at) = 2019) > 0\nORDER BY \n  growth DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG60Q8A518N1699B7WRM3SP",
          "error": "{\"error\": \"DB::Exception: Unknown function COUNTIF. Maybe you meant: ['count']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  COUNT(*) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / COUNTIF(YEAR(created_at) = 2019) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nORDER BY \n  growth DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.786,
          "totalDuration": 5.519,
          "tokens": {
            "promptTokens": 3949,
            "completionTokens": 161,
            "totalTokens": 4110
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT \n  repo_name, \n  COUNTIF(YEAR(created_at) = 2019) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / NULLIF(COUNTIF(YEAR(created_at) = 2019), 0) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nHAVING \n  COUNTIF(YEAR(created_at) = 2019) > 0 AND COUNTIF(YEAR(created_at) = 2020) > 0\nORDER BY \n  growth DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.015,
          "requestId": "01JTG60YC90ZRNSMF8QZX1WMCH",
          "error": "{\"error\": \"DB::Exception: Unknown function COUNTIF. Maybe you meant: ['count']. Contact support@tinybird.co if you require access to this feature\", \"documentation\": \"https://docs.tinybird.co/query/query-parameters.html\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  repo_name, \n  COUNT(*) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / COUNTIF(YEAR(created_at) = 2019) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nORDER BY \n  growth DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT \n  repo_name, \n  COUNTIF(YEAR(created_at) = 2019) AS num_events_2019,\n  COUNTIF(YEAR(created_at) = 2020) AS num_events_2020,\n  (COUNTIF(YEAR(created_at) = 2020) - COUNTIF(YEAR(created_at) = 2019)) / NULLIF(COUNTIF(YEAR(created_at) = 2019), 0) AS growth\nFROM \n  github_events\nWHERE \n  YEAR(created_at) IN (2019, 2020)\nGROUP BY \n  repo_name\nHAVING \n  COUNTIF(YEAR(created_at) = 2019) > 0\nORDER BY \n  growth DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.815,
          "totalDuration": 4.776,
          "tokens": {
            "promptTokens": 4209,
            "completionTokens": 178,
            "totalTokens": 4387
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  COUNT(*) as num_events_2019,\n  COUNT(if(toYear(created_at) = 2020, 1, NULL)) as num_events_2020\nFROM \n  github_events\nWHERE \n  toYear(created_at) = 2019 \n  OR toYear(created_at) = 2020\nGROUP BY \n  repo_name\nORDER BY \n  num_events_2019 - num_events_2020 DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "num_events_2019": 1651553,
          "num_events_2020": 15949
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "num_events_2019": 1437711,
          "num_events_2020": 0
        },
        {
          "repo_name": "willcbaker-ext/subt",
          "num_events_2019": 869959,
          "num_events_2020": 0
        },
        {
          "repo_name": "CircleCITestOrg/smoke-test-test-repo",
          "num_events_2019": 1602044,
          "num_events_2020": 810200
        },
        {
          "repo_name": "bossm/chancechat",
          "num_events_2019": 781822,
          "num_events_2020": 0
        },
        {
          "repo_name": "geos4s/18w856162",
          "num_events_2019": 996279,
          "num_events_2020": 262170
        },
        {
          "repo_name": "direwolf-github/my-app",
          "num_events_2019": 1160975,
          "num_events_2020": 437718
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "num_events_2019": 890979,
          "num_events_2020": 241765
        },
        {
          "repo_name": "himobi/hotspot",
          "num_events_2019": 1128020,
          "num_events_2020": 598673
        },
        {
          "repo_name": "dotclear/dotclear",
          "num_events_2019": 509762,
          "num_events_2020": 2149
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_events_2019",
          "type": "UInt64"
        },
        {
          "name": "num_events_2020",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 23.507940506,
        "rows_read": 1416377712,
        "bytes_read": 8489439077
      },
      "executionTime": 23.556,
      "requestId": "01JTG613A88NSPWHTBN43DQJMY",
      "length": 864
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.6,
      "totalDuration": 2.513,
      "tokens": {
        "promptTokens": 3823,
        "completionTokens": 101,
        "totalTokens": 3924
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as num_events_2019,\n  COUNT(if(toYear(created_at) = 2020, 1, NULL)) as num_events_2020\nFROM \n  github_events\nWHERE \n  toYear(created_at) = 2019 \n  OR toYear(created_at) = 2020\nGROUP BY \n  repo_name\nORDER BY \n  num_events_2019 - num_events_2020 DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "num_events_2019": 1651553,
              "num_events_2020": 15949
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "num_events_2019": 1437711,
              "num_events_2020": 0
            },
            {
              "repo_name": "willcbaker-ext/subt",
              "num_events_2019": 869959,
              "num_events_2020": 0
            },
            {
              "repo_name": "CircleCITestOrg/smoke-test-test-repo",
              "num_events_2019": 1602044,
              "num_events_2020": 810200
            },
            {
              "repo_name": "bossm/chancechat",
              "num_events_2019": 781822,
              "num_events_2020": 0
            },
            {
              "repo_name": "geos4s/18w856162",
              "num_events_2019": 996279,
              "num_events_2020": 262170
            },
            {
              "repo_name": "direwolf-github/my-app",
              "num_events_2019": 1160975,
              "num_events_2020": 437718
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "num_events_2019": 890979,
              "num_events_2020": 241765
            },
            {
              "repo_name": "himobi/hotspot",
              "num_events_2019": 1128020,
              "num_events_2020": 598673
            },
            {
              "repo_name": "dotclear/dotclear",
              "num_events_2019": 509762,
              "num_events_2020": 2149
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_events_2019",
              "type": "UInt64"
            },
            {
              "name": "num_events_2020",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 23.507940506,
            "rows_read": 1416377712,
            "bytes_read": 8489439077
          },
          "executionTime": 23.556,
          "requestId": "01JTG613A88NSPWHTBN43DQJMY",
          "length": 864
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.6,
          "totalDuration": 2.513,
          "tokens": {
            "promptTokens": 3823,
            "completionTokens": 101,
            "totalTokens": 3924
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    count(*) as total_events\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    total_events DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "total_events": 7451541
        },
        {
          "repo_name": "direwolf-github/my-app",
          "total_events": 3955891
        },
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "total_events": 3097267
        },
        {
          "repo_name": "Lombiq/Orchard",
          "total_events": 2471262
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "total_events": 2191295
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "total_events": 2018701
        },
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "total_events": 1891264
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "total_events": 1789118
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "total_events": 1688192
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "total_events": 1667750
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 45.83195819,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 45.869,
      "requestId": "01JTG61YWHT0AG72BQ8J7DWX1R",
      "length": 621
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.112,
      "totalDuration": 2.181,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 38,
        "totalTokens": 3805
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    count(*) as total_events\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    total_events DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "total_events": 7451541
            },
            {
              "repo_name": "direwolf-github/my-app",
              "total_events": 3955891
            },
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "total_events": 3097267
            },
            {
              "repo_name": "Lombiq/Orchard",
              "total_events": 2471262
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "total_events": 2191295
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "total_events": 2018701
            },
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "total_events": 1891264
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "total_events": 1789118
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "total_events": 1688192
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "total_events": 1667750
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 45.83195819,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 45.869,
          "requestId": "01JTG61YWHT0AG72BQ8J7DWX1R",
          "length": 621
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.112,
          "totalDuration": 2.181,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 38,
            "totalTokens": 3805
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    DAYOFWEEK(created_at) AS day_of_week,\n    COUNT(*) AS num_stars\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    day_of_week\nORDER BY \n    num_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "num_stars": 38094378
        },
        {
          "day_of_week": 3,
          "num_stars": 37570733
        },
        {
          "day_of_week": 4,
          "num_stars": 37208005
        },
        {
          "day_of_week": 1,
          "num_stars": 36491986
        },
        {
          "day_of_week": 5,
          "num_stars": 34924484
        },
        {
          "day_of_week": 7,
          "num_stars": 24102566
        },
        {
          "day_of_week": 6,
          "num_stars": 23726322
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.205130974,
        "rows_read": 232190399,
        "bytes_read": 1160951995
      },
      "executionTime": 0.224,
      "requestId": "01JTG63GA7D6VTSXRB03YTZ5PS",
      "length": 274
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.703,
      "totalDuration": 2.26,
      "tokens": {
        "promptTokens": 3768,
        "completionTokens": 59,
        "totalTokens": 3827
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    DAYOFWEEK(created_at) AS day_of_week,\n    COUNT(*) AS num_stars\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    day_of_week\nORDER BY \n    num_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "num_stars": 38094378
            },
            {
              "day_of_week": 3,
              "num_stars": 37570733
            },
            {
              "day_of_week": 4,
              "num_stars": 37208005
            },
            {
              "day_of_week": 1,
              "num_stars": 36491986
            },
            {
              "day_of_week": 5,
              "num_stars": 34924484
            },
            {
              "day_of_week": 7,
              "num_stars": 24102566
            },
            {
              "day_of_week": 6,
              "num_stars": 23726322
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.205130974,
            "rows_read": 232190399,
            "bytes_read": 1160951995
          },
          "executionTime": 0.224,
          "requestId": "01JTG63GA7D6VTSXRB03YTZ5PS",
          "length": 274
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.703,
          "totalDuration": 2.26,
          "tokens": {
            "promptTokens": 3768,
            "completionTokens": 59,
            "totalTokens": 3827
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 34099240
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 19.071590198,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 19.116,
      "requestId": "01JTG63MD2K12E42CZ53GC79P7",
      "length": 41
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.92,
      "totalDuration": 1.436,
      "tokens": {
        "promptTokens": 3782,
        "completionTokens": 15,
        "totalTokens": 3797
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 34099240
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 19.071590198,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 19.116,
          "requestId": "01JTG63MD2K12E42CZ53GC79P7",
          "length": 41
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.92,
          "totalDuration": 1.436,
          "tokens": {
            "promptTokens": 3782,
            "completionTokens": 15,
            "totalTokens": 3797
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 10131322
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.898836113,
        "rows_read": 232190399,
        "bytes_read": 696571197
      },
      "executionTime": 4.938,
      "requestId": "01JTG64B9AQP3TPRGGY23PMN73",
      "length": 41
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.618,
      "totalDuration": 1.818,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 23,
        "totalTokens": 3789
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 10131322
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.898836113,
            "rows_read": 232190399,
            "bytes_read": 696571197
          },
          "executionTime": 4.938,
          "requestId": "01JTG64B9AQP3TPRGGY23PMN73",
          "length": 41
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.618,
          "totalDuration": 1.818,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 23,
            "totalTokens": 3789
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 18808891
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.759162345,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 4.805,
      "requestId": "01JTG64MA0Y0XWX78MEQ7YEN1K",
      "length": 41
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.331,
      "totalDuration": 1.794,
      "tokens": {
        "promptTokens": 3773,
        "completionTokens": 22,
        "totalTokens": 3795
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 18808891
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 4.759162345,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 4.805,
          "requestId": "01JTG64MA0Y0XWX78MEQ7YEN1K",
          "length": 41
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.331,
          "totalDuration": 1.794,
          "tokens": {
            "promptTokens": 3773,
            "completionTokens": 22,
            "totalTokens": 3795
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNTDistinct(actor_login)": 6418718
        }
      ],
      "meta": [
        {
          "name": "COUNTDistinct(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.218681633,
        "rows_read": 214762171,
        "bytes_read": 858830461
      },
      "executionTime": 1.237,
      "requestId": "01JTG64XMJ9W9VK6DQ199QW0PP",
      "length": 40
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.942,
      "totalDuration": 2.272,
      "tokens": {
        "promptTokens": 3785,
        "completionTokens": 30,
        "totalTokens": 3815
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNTDistinct(actor_login)": 6418718
            }
          ],
          "meta": [
            {
              "name": "COUNTDistinct(actor_login)",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.218681633,
            "rows_read": 214762171,
            "bytes_read": 858830461
          },
          "executionTime": 1.237,
          "requestId": "01JTG64XMJ9W9VK6DQ199QW0PP",
          "length": 40
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.942,
          "totalDuration": 2.272,
          "tokens": {
            "promptTokens": 3785,
            "completionTokens": 30,
            "totalTokens": 3815
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "%\nSELECT repo_name, count(*) as stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND actor_login IN (\n  SELECT DISTINCT actor_login\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent' AND action IN ('opened', 'synchronize')\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "stars": 121977
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 109518
        },
        {
          "repo_name": "996icu/996.ICU",
          "stars": 109245
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 106730
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 102999
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 96962
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 93501
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 89246
        },
        {
          "repo_name": "airbnb/javascript",
          "stars": 81597
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "stars": 79910
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.37812612,
        "rows_read": 446952570,
        "bytes_read": 2019450584
      },
      "executionTime": 8.427,
      "requestId": "01JTG654BR594RQDPPXZF4SBE9",
      "length": 522
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.973,
      "totalDuration": 3.12,
      "tokens": {
        "promptTokens": 3790,
        "completionTokens": 72,
        "totalTokens": 3862
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT repo_name, count(*) as stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND actor_login IN (\n  SELECT DISTINCT actor_login\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent' AND action IN ('opened', 'synchronize')\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "facebook/react",
              "stars": 121977
            },
            {
              "repo_name": "vuejs/vue",
              "stars": 109518
            },
            {
              "repo_name": "996icu/996.ICU",
              "stars": 109245
            },
            {
              "repo_name": "sindresorhus/awesome",
              "stars": 106730
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "stars": 102999
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "stars": 96962
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "stars": 93501
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "stars": 89246
            },
            {
              "repo_name": "airbnb/javascript",
              "stars": 81597
            },
            {
              "repo_name": "donnemartin/system-design-primer",
              "stars": 79910
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.37812612,
            "rows_read": 446952570,
            "bytes_read": 2019450584
          },
          "executionTime": 8.427,
          "requestId": "01JTG654BR594RQDPPXZF4SBE9",
          "length": 522
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.973,
          "totalDuration": 3.12,
          "tokens": {
            "promptTokens": 3790,
            "completionTokens": 72,
            "totalTokens": 3862
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, count(*) \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nGROUP BY actor_login \nHAVING count(*) >= 10 \nORDER BY count(*) DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "count()": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "count()": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "count()": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "count()": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "count()": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "count()": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "count()": 642504
        },
        {
          "actor_login": "snyk-bot",
          "count()": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "count()": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "count()": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.265648995,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.286,
      "requestId": "01JTG65H9WH5VS233W2AD6XXDR",
      "length": 509
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.828,
      "totalDuration": 2.351,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 44,
        "totalTokens": 3814
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, count(*) \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nGROUP BY actor_login \nHAVING count(*) >= 10 \nORDER BY count(*) DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "count()": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "count()": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "count()": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "count()": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "count()": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "count()": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "count()": 642504
            },
            {
              "actor_login": "snyk-bot",
              "count()": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "count()": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "count()": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.265648995,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.286,
          "requestId": "01JTG65H9WH5VS233W2AD6XXDR",
          "length": 509
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.828,
          "totalDuration": 2.351,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 44,
            "totalTokens": 3814
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_pull_requests \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nGROUP BY repo_name \nORDER BY num_pull_requests DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "num_pull_requests": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "num_pull_requests": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "num_pull_requests": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "num_pull_requests": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "num_pull_requests": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "num_pull_requests": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "num_pull_requests": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "num_pull_requests": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "num_pull_requests": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "num_pull_requests": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pull_requests",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.706298833,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.726,
      "requestId": "01JTG65QKQDB6SFQ76DDKMAV58",
      "length": 696
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.542,
      "totalDuration": 2.67,
      "tokens": {
        "promptTokens": 3776,
        "completionTokens": 40,
        "totalTokens": 3816
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_pull_requests \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nGROUP BY repo_name \nORDER BY num_pull_requests DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "num_pull_requests": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "num_pull_requests": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "num_pull_requests": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "num_pull_requests": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "num_pull_requests": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "num_pull_requests": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "num_pull_requests": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "num_pull_requests": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "num_pull_requests": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "num_pull_requests": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pull_requests",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.706298833,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.726,
          "requestId": "01JTG65QKQDB6SFQ76DDKMAV58",
          "length": 696
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.542,
          "totalDuration": 2.67,
          "tokens": {
            "promptTokens": 3776,
            "completionTokens": 40,
            "totalTokens": 3816
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as contributors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\nGROUP BY \n  repo_name\nORDER BY \n  contributors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "contributors": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "contributors": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "contributors": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "contributors": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "contributors": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "contributors": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "contributors": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "contributors": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "contributors": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "contributors": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.612605955,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 3.694,
      "requestId": "01JTG65XWTPV19RAT5MBFKEYSW",
      "length": 660
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.588,
      "totalDuration": 2.159,
      "tokens": {
        "promptTokens": 3769,
        "completionTokens": 53,
        "totalTokens": 3822
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as contributors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\nGROUP BY \n  repo_name\nORDER BY \n  contributors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "contributors": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "contributors": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "contributors": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "contributors": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "contributors": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "contributors": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "contributors": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "contributors": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "contributors": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "contributors": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.612605955,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 3.694,
          "requestId": "01JTG65XWTPV19RAT5MBFKEYSW",
          "length": 660
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.588,
          "totalDuration": 2.159,
          "tokens": {
            "promptTokens": 3769,
            "completionTokens": 53,
            "totalTokens": 3822
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  count(*) as total_issues\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\nGROUP BY \n  repo_name\nORDER BY \n  total_issues DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "total_issues": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "total_issues": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "total_issues": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "total_issues": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "total_issues": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "total_issues": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "total_issues": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "total_issues": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "total_issues": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "total_issues": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.490818351,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.509,
      "requestId": "01JTG66FNYEEREESJ3BBH8HNDN",
      "length": 583
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 6.904,
      "totalDuration": 12.065,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 49,
        "totalTokens": 3816
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  count(*) as total_issues\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\nGROUP BY \n  repo_name\nORDER BY \n  total_issues DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "total_issues": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "total_issues": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "total_issues": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "total_issues": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "total_issues": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "total_issues": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "total_issues": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "total_issues": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "total_issues": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "total_issues": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.490818351,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.509,
          "requestId": "01JTG66FNYEEREESJ3BBH8HNDN",
          "length": 583
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 6.904,
          "totalDuration": 12.065,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 49,
            "totalTokens": 3816
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  sum(if(author_association = 'MANNEQUIN', 1, 0)) as robot_issues,\n  sum(if(author_association != 'MANNEQUIN', 1, 0)) as real_issues\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name \nORDER BY \n  real_issues DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "robot_issues": 0,
          "real_issues": 68898
        },
        {
          "repo_name": "flutter/flutter",
          "robot_issues": 0,
          "real_issues": 48752
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "robot_issues": 0,
          "real_issues": 45301
        },
        {
          "repo_name": "microsoft/vscode",
          "robot_issues": 0,
          "real_issues": 36702
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "robot_issues": 0,
          "real_issues": 34101
        },
        {
          "repo_name": "golang/go",
          "robot_issues": 0,
          "real_issues": 32841
        },
        {
          "repo_name": "hq450/fancyss",
          "robot_issues": 0,
          "real_issues": 31144
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "robot_issues": 0,
          "real_issues": 29744
        },
        {
          "repo_name": "cockroachdb/cockroach",
          "robot_issues": 0,
          "real_issues": 29046
        },
        {
          "repo_name": "elastic/kibana",
          "robot_issues": 0,
          "real_issues": 28485
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "robot_issues",
          "type": "UInt64"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.537022454,
        "rows_read": 337769904,
        "bytes_read": 1187671749
      },
      "executionTime": 1.556,
      "requestId": "01JTG66MVNQ3GQYAWBGTK16T1D",
      "length": 711
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.127,
      "totalDuration": 2.292,
      "tokens": {
        "promptTokens": 3783,
        "completionTokens": 130,
        "totalTokens": 3913
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  sum(if(author_association = 'MANNEQUIN', 1, 0)) as robot_issues,\n  sum(if(author_association != 'MANNEQUIN', 1, 0)) as real_issues\nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name \nORDER BY \n  real_issues DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Microsoft/vscode",
              "robot_issues": 0,
              "real_issues": 68898
            },
            {
              "repo_name": "flutter/flutter",
              "robot_issues": 0,
              "real_issues": 48752
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "robot_issues": 0,
              "real_issues": 45301
            },
            {
              "repo_name": "microsoft/vscode",
              "robot_issues": 0,
              "real_issues": 36702
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "robot_issues": 0,
              "real_issues": 34101
            },
            {
              "repo_name": "golang/go",
              "robot_issues": 0,
              "real_issues": 32841
            },
            {
              "repo_name": "hq450/fancyss",
              "robot_issues": 0,
              "real_issues": 31144
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "robot_issues": 0,
              "real_issues": 29744
            },
            {
              "repo_name": "cockroachdb/cockroach",
              "robot_issues": 0,
              "real_issues": 29046
            },
            {
              "repo_name": "elastic/kibana",
              "robot_issues": 0,
              "real_issues": 28485
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "robot_issues",
              "type": "UInt64"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.537022454,
            "rows_read": 337769904,
            "bytes_read": 1187671749
          },
          "executionTime": 1.556,
          "requestId": "01JTG66MVNQ3GQYAWBGTK16T1D",
          "length": 711
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.127,
          "totalDuration": 2.292,
          "tokens": {
            "promptTokens": 3783,
            "completionTokens": 130,
            "totalTokens": 3913
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  repo_name,\n  countIf(author_association != 'MANNEQUIN', 1) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', 1) AS robot_issues,\n  count(DISTINCT actor_login) AS issue_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "real_issues": 68898,
          "robot_issues": 68898,
          "issue_authors": 27051
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "real_issues": 45301,
          "robot_issues": 45301,
          "issue_authors": 21089
        },
        {
          "repo_name": "microsoft/vscode",
          "real_issues": 36702,
          "robot_issues": 36702,
          "issue_authors": 19486
        },
        {
          "repo_name": "flutter/flutter",
          "real_issues": 48752,
          "robot_issues": 48752,
          "issue_authors": 16693
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "real_issues": 29744,
          "robot_issues": 29744,
          "issue_authors": 16455
        },
        {
          "repo_name": "996icu/996.ICU",
          "real_issues": 22931,
          "robot_issues": 22931,
          "issue_authors": 12819
        },
        {
          "repo_name": "facebook/react-native",
          "real_issues": 20742,
          "robot_issues": 20742,
          "issue_authors": 11890
        },
        {
          "repo_name": "ansible/ansible",
          "real_issues": 24329,
          "robot_issues": 24329,
          "issue_authors": 11577
        },
        {
          "repo_name": "angular/angular",
          "real_issues": 22342,
          "robot_issues": 22342,
          "issue_authors": 10376
        },
        {
          "repo_name": "golang/go",
          "real_issues": 32841,
          "robot_issues": 32841,
          "issue_authors": 10142
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        },
        {
          "name": "robot_issues",
          "type": "UInt64"
        },
        {
          "name": "issue_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.863088128,
        "rows_read": 337769904,
        "bytes_read": 1374244205
      },
      "executionTime": 1.883,
      "requestId": "01JTG677Z423588Q6KMCSVWNAS",
      "length": 967
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  repo_name,\n  countIf(author_association = 'NONE' OR author_association = 'CONTRIBUTOR' OR author_association = 'OWNER' OR author_association = 'COLLABORATOR' OR author_association = 'MEMBER', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  count(DISTINCT actor_login) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  countIf(author_association != 'MANNEQUIN', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues,\n  count(DISTINCT actor_login) AS issue_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.833,
      "totalDuration": 1.893,
      "tokens": {
        "promptTokens": 4196,
        "completionTokens": 142,
        "totalTokens": 4338
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  countIf(author_association = 'NONE' OR author_association = 'CONTRIBUTOR' OR author_association = 'OWNER' OR author_association = 'COLLABORATOR' OR author_association = 'MEMBER', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  count(DISTINCT actor_login) DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG66Y1BF5AZC8GXAGMXS9WW",
          "error": "{\"error\": \"[Error] Illegal type Int32 of last argument for aggregate function with If suffix. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.326,
          "totalDuration": 5.337,
          "tokens": {
            "promptTokens": 3790,
            "completionTokens": 162,
            "totalTokens": 3952
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  repo_name,\n  countIf(author_association != 'MANNEQUIN', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues,\n  count(DISTINCT actor_login) AS issue_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG673N7WJ5GKQ28R4RNNENH",
          "error": "{\"error\": \"[Error] Illegal type Int32 of last argument for aggregate function with If suffix. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  repo_name,\n  countIf(author_association = 'NONE' OR author_association = 'CONTRIBUTOR' OR author_association = 'OWNER' OR author_association = 'COLLABORATOR' OR author_association = 'MEMBER', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  count(DISTINCT actor_login) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.696,
          "totalDuration": 3.233,
          "tokens": {
            "promptTokens": 4055,
            "completionTokens": 140,
            "totalTokens": 4195
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  repo_name,\n  countIf(author_association != 'MANNEQUIN', 1) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', 1) AS robot_issues,\n  count(DISTINCT actor_login) AS issue_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Microsoft/vscode",
              "real_issues": 68898,
              "robot_issues": 68898,
              "issue_authors": 27051
            },
            {
              "repo_name": "MicrosoftDocs/azure-docs",
              "real_issues": 45301,
              "robot_issues": 45301,
              "issue_authors": 21089
            },
            {
              "repo_name": "microsoft/vscode",
              "real_issues": 36702,
              "robot_issues": 36702,
              "issue_authors": 19486
            },
            {
              "repo_name": "flutter/flutter",
              "real_issues": 48752,
              "robot_issues": 48752,
              "issue_authors": 16693
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "real_issues": 29744,
              "robot_issues": 29744,
              "issue_authors": 16455
            },
            {
              "repo_name": "996icu/996.ICU",
              "real_issues": 22931,
              "robot_issues": 22931,
              "issue_authors": 12819
            },
            {
              "repo_name": "facebook/react-native",
              "real_issues": 20742,
              "robot_issues": 20742,
              "issue_authors": 11890
            },
            {
              "repo_name": "ansible/ansible",
              "real_issues": 24329,
              "robot_issues": 24329,
              "issue_authors": 11577
            },
            {
              "repo_name": "angular/angular",
              "real_issues": 22342,
              "robot_issues": 22342,
              "issue_authors": 10376
            },
            {
              "repo_name": "golang/go",
              "real_issues": 32841,
              "robot_issues": 32841,
              "issue_authors": 10142
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            },
            {
              "name": "robot_issues",
              "type": "UInt64"
            },
            {
              "name": "issue_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.863088128,
            "rows_read": 337769904,
            "bytes_read": 1374244205
          },
          "executionTime": 1.883,
          "requestId": "01JTG677Z423588Q6KMCSVWNAS",
          "length": 967
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  repo_name,\n  countIf(author_association = 'NONE' OR author_association = 'CONTRIBUTOR' OR author_association = 'OWNER' OR author_association = 'COLLABORATOR' OR author_association = 'MEMBER', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  count(DISTINCT actor_login) DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT \n  repo_name,\n  countIf(author_association != 'MANNEQUIN', number) AS real_issues,\n  countIf(author_association = 'MANNEQUIN', number) AS robot_issues,\n  count(DISTINCT actor_login) AS issue_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND state = 'open' \n  AND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count(*) > 1000)\nGROUP BY \n  repo_name\nORDER BY \n  issue_authors DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.833,
          "totalDuration": 1.893,
          "tokens": {
            "promptTokens": 4196,
            "completionTokens": 142,
            "totalTokens": 4338
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) as count FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "count": 18546
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "count": 7869
        },
        {
          "repo_name": "githubschool/on-demand-github-pages",
          "count": 1100
        },
        {
          "repo_name": "llvm/llvm-project",
          "count": 826
        },
        {
          "repo_name": "lifo/docrails",
          "count": 592
        },
        {
          "repo_name": "HNGInternship/HNGInternship4",
          "count": 518
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "count": 465
        },
        {
          "repo_name": "odoo-dev/odoo",
          "count": 461
        },
        {
          "repo_name": "cs480-projects/cs480-projects.github.io",
          "count": 449
        },
        {
          "repo_name": "hnginterns/hngfun",
          "count": 437
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 26.814464927,
        "rows_read": 1601472977,
        "bytes_read": 7997693336
      },
      "executionTime": 26.863,
      "requestId": "01JTG67E9F990HZX5V00H864VS",
      "length": 542
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.172,
      "totalDuration": 2.064,
      "tokens": {
        "promptTokens": 3777,
        "completionTokens": 35,
        "totalTokens": 3812
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) as count FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "count": 18546
            },
            {
              "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
              "count": 7869
            },
            {
              "repo_name": "githubschool/on-demand-github-pages",
              "count": 1100
            },
            {
              "repo_name": "llvm/llvm-project",
              "count": 826
            },
            {
              "repo_name": "lifo/docrails",
              "count": 592
            },
            {
              "repo_name": "HNGInternship/HNGInternship4",
              "count": 518
            },
            {
              "repo_name": "bioconda/bioconda-recipes",
              "count": 465
            },
            {
              "repo_name": "odoo-dev/odoo",
              "count": 461
            },
            {
              "repo_name": "cs480-projects/cs480-projects.github.io",
              "count": 449
            },
            {
              "repo_name": "hnginterns/hngfun",
              "count": 437
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 26.814464927,
            "rows_read": 1601472977,
            "bytes_read": 7997693336
          },
          "executionTime": 26.863,
          "requestId": "01JTG67E9F990HZX5V00H864VS",
          "length": 542
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.172,
          "totalDuration": 2.064,
          "tokens": {
            "promptTokens": 3777,
            "completionTokens": 35,
            "totalTokens": 3812
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(DISTINCT actor_login) as count \nFROM github_events \nWHERE ref_type = 'branch' AND ref = 'main' AND event_type = 'PushEvent' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.132827079,
        "rows_read": 1601472977,
        "bytes_read": 1601974415
      },
      "executionTime": 0.152,
      "requestId": "01JTG68DT4N6XZRBVNN0B9GE5Q",
      "length": 2
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.731,
      "totalDuration": 2.937,
      "tokens": {
        "promptTokens": 3772,
        "completionTokens": 53,
        "totalTokens": 3825
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(DISTINCT actor_login) as count \nFROM github_events \nWHERE ref_type = 'branch' AND ref = 'main' AND event_type = 'PushEvent' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.132827079,
            "rows_read": 1601472977,
            "bytes_read": 1601974415
          },
          "executionTime": 0.152,
          "requestId": "01JTG68DT4N6XZRBVNN0B9GE5Q",
          "length": 2
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.731,
          "totalDuration": 2.937,
          "tokens": {
            "promptTokens": 3772,
            "completionTokens": 53,
            "totalTokens": 3825
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(DISTINCT actor_login) as num_push_access \nFROM github_events \nWHERE ref_type = 'branch' AND ref = 'main' AND event_type = 'PushEvent' \nAND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'CreateEvent' AND ref_type = 'repository' GROUP BY repo_name HAVING count(*) > 99) \nGROUP BY repo_name \nORDER BY num_push_access DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_push_access",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 23.042006418,
        "rows_read": 492102638,
        "bytes_read": 1806404791
      },
      "executionTime": 23.086,
      "requestId": "01JTG68Q5YH3JZ0AHGRHJ0H70K",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 6.773,
      "totalDuration": 6.912,
      "tokens": {
        "promptTokens": 3819,
        "completionTokens": 97,
        "totalTokens": 3916
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(DISTINCT actor_login) as num_push_access \nFROM github_events \nWHERE ref_type = 'branch' AND ref = 'main' AND event_type = 'PushEvent' \nAND repo_name IN (SELECT repo_name FROM github_events WHERE event_type = 'CreateEvent' AND ref_type = 'repository' GROUP BY repo_name HAVING count(*) > 99) \nGROUP BY repo_name \nORDER BY num_push_access DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_push_access",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 23.042006418,
            "rows_read": 492102638,
            "bytes_read": 1806404791
          },
          "executionTime": 23.086,
          "requestId": "01JTG68Q5YH3JZ0AHGRHJ0H70K",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 6.773,
          "totalDuration": 6.912,
          "tokens": {
            "promptTokens": 3819,
            "completionTokens": 97,
            "totalTokens": 3916
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_invitations \nFROM github_events \nWHERE event_type = 'MemberEvent' AND action = 'accepted' \nGROUP BY repo_name \nORDER BY num_invitations DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.014196903,
        "rows_read": 14435721,
        "bytes_read": 28790689
      },
      "executionTime": 0.032,
      "requestId": "01JTG69HZG2SYH2F4K4QDRS2G1",
      "length": 2
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.467,
      "totalDuration": 1.877,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 45,
        "totalTokens": 3812
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_invitations \nFROM github_events \nWHERE event_type = 'MemberEvent' AND action = 'accepted' \nGROUP BY repo_name \nORDER BY num_invitations DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.014196903,
            "rows_read": 14435721,
            "bytes_read": 28790689
          },
          "executionTime": 0.032,
          "requestId": "01JTG69HZG2SYH2F4K4QDRS2G1",
          "length": 2
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.467,
          "totalDuration": 1.877,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 45,
            "totalTokens": 3812
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_forks \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY num_forks DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "num_forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "num_forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "num_forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "num_forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "num_forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "num_forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "num_forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "num_forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.912866513,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.932,
      "requestId": "01JTG69PTRTX1CQ3663XF42PYW",
      "length": 582
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.189,
      "totalDuration": 2.434,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 40,
        "totalTokens": 3811
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_forks \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY num_forks DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "num_forks": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "num_forks": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "num_forks": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_forks": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_forks": 92878
            },
            {
              "repo_name": "github/gitignore",
              "num_forks": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "num_forks": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "num_forks": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "num_forks": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "num_forks": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_forks",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.912866513,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.932,
          "requestId": "01JTG69PTRTX1CQ3663XF42PYW",
          "length": 582
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.189,
          "totalDuration": 2.434,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 40,
            "totalTokens": 3811
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  state, \n  assignees, \n  comments, \n  merged, \n  mergeable, \n  rebaseable, \n  review_comments, \n  review_state, \n  labels, \n  title, \n  number, \n  creator_user_login, \n  closed_at, \n  merged_at, \n  merge_commit_sha, \n  head_ref, \n  base_ref, \n  head_sha, \n  base_sha, \n  ref, \n  ref_type, \n  path, \n  position, \n  line, \n  body, \n  comment_id, \n  event_type, \n  action, \n  author_association, \n  actor_login, \n  file_time, \n  created_at, \n  updated_at, \n  locked, \n  assignee, \n  changed_files, \n  commits, \n  additions, \n  deletions, \n  diff_hunk, \n  original_position, \n  commit_id, \n  original_commit_id, \n  push_size, \n  push_distinct_size, \n  member_login, \n  release_tag_name, \n  release_name, \n  requested_reviewers, \n  requested_teams, \n  maintainer_can_modify, \n  mergeable_state \nFROM \n  github_events \nORDER BY \n  comments / merged DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "0xd4d/de4dot",
          "state": "open",
          "assignees": [],
          "comments": 2,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "Suggestions for heuristic auto-renaming guesses",
          "number": 6,
          "creator_user_login": "AlexVallat",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "Great! Good call on the event handlers too, I hadn't thought of that.\r\n\r\nIn a similar vein, there's probably a bunch of stuff you can do with dependency properties. The first parameter to the DependencyProperty.Register method should be a string containing the name of the property. You can use that to rename the DependencyProperty field \"_Name_ Property\", the property for getting and setting it \"_Name_\", and the changed and coerce handlers (if present): \"On_Name_ Changed\" and \"Coerce_Name_\". If the static change handler calls a single non-static method on the same class, you can call that one \"On_Name_ Changed\" too.",
          "comment_id": 2415905,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "AlexVallat",
          "file_time": "2011-10-15 15:00:00",
          "created_at": "2011-10-15 15:28:44",
          "updated_at": "2011-10-15 15:28:44",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 1,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": ".net Reactor",
          "number": 7,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-10-21 00:40:29",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "I'll add support for this obfuscator soon, probably next week. There's just another one I'll have to do first.\r\n\r\nI already have code to handle both cases you showed above. I just haven't pushed it to github yet. ;)",
          "comment_id": 2476492,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-10-21 00:00:00",
          "created_at": "2011-10-21 00:40:29",
          "updated_at": "2011-10-21 00:40:29",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "open",
          "assignees": [],
          "comments": 2,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": ".net Reactor",
          "number": 7,
          "creator_user_login": "high6",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "Okay cool. I figured you had something for the second case as I know xeno does it too.",
          "comment_id": 2477440,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "high6",
          "file_time": "2011-10-21 03:00:00",
          "created_at": "2011-10-21 03:48:13",
          "updated_at": "2011-10-21 03:48:11",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 3,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": ".net Reactor",
          "number": 7,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-10-21 20:50:28",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "The code has been pushed to github and binaries added. I'm closing this.",
          "comment_id": 2486063,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-10-21 20:00:00",
          "created_at": "2011-10-21 20:50:28",
          "updated_at": "2011-10-21 20:50:27",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 3,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "Suggestions for heuristic auto-renaming guesses",
          "number": 6,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-11-05 22:24:47",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "I've added code to restore some class and field names of WinForms apps.\r\n\r\nSome of the stuff I won't implement that you suggested:\r\n\r\n**Check the constructor of a class. If it calls a method local to that class, name that method \"Initialise\".**\r\n\r\nThere's no guarantee that it's actually an initialize method. I don't want to name something Initialize() if it's not really an initialize method. That would be confusing.\r\n\r\n**Check for a static method on a class whose return type is the type of that class. Call it \"Create\"**\r\n\r\nSame here. Could be something else than a create method.\r\n\r\nThe DependencyProperty stuff will probably be implemented once I actually see any obfuscated WPF apps.\r\n\r\nI'll close this until then.",
          "comment_id": 2642801,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-11-05 22:00:00",
          "created_at": "2011-11-05 22:24:47",
          "updated_at": "2011-11-05 22:24:47",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 1,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "Eazfuscator causing newest de4dot crash, log attached",
          "number": 10,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-11-30 03:23:47",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "Yeah, there's 32-bit and 64-bit versions (de4dot-x86.exe and de4dot-x64.exe) in case the file requires 32-bit or 64-bit to load.",
          "comment_id": 2954485,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-11-30 03:00:00",
          "created_at": "2011-11-30 03:23:47",
          "updated_at": "2011-11-30 03:23:47",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 1,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "Signed assemblies aren't resigned",
          "number": 1,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-11-05 22:30:59",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "I've decided not to resign assemblies. A simple tool using [Mono.Cecil](https://github.com/jbevain/cecil) could be created to scan a dir for assemblies referencing a deobfuscated assembly and update the references with the new public key.",
          "comment_id": 2642830,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-11-05 22:00:00",
          "created_at": "2011-11-05 22:30:59",
          "updated_at": "2011-11-05 22:30:59",
          "locked": 0,
          "assignee": "0xd4d",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 1,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "Support for .Net Reactor 3.9.8.0",
          "number": 8,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-11-13 13:58:25",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "Some future version maybe. Until then, I'll close this.",
          "comment_id": 2722393,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-11-13 13:00:00",
          "created_at": "2011-11-13 13:58:26",
          "updated_at": "2011-11-13 13:58:25",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "closed",
          "assignees": [],
          "comments": 1,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "Eazfuscator isn't fully supported yet",
          "number": 2,
          "creator_user_login": "0xd4d",
          "closed_at": "2011-11-05 22:25:47",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "String decryption has been implemented for a while. I've never seen anyone use encrypted resources.",
          "comment_id": 2642805,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "0xd4d",
          "file_time": "2011-11-05 22:00:00",
          "created_at": "2011-11-05 22:25:48",
          "updated_at": "2011-11-05 22:25:46",
          "locked": 0,
          "assignee": "0xd4d",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        },
        {
          "repo_name": "0xd4d/de4dot",
          "state": "open",
          "assignees": [],
          "comments": 1,
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "review_comments": 0,
          "review_state": "none",
          "labels": [],
          "title": "BabelObfuscator strings not properly de-obfuscated",
          "number": 11,
          "creator_user_login": "leag",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "head_ref": "",
          "base_ref": "",
          "head_sha": "",
          "base_sha": "",
          "ref": "",
          "ref_type": "none",
          "path": "",
          "position": 0,
          "line": 0,
          "body": "did you pass the string decrypter method?",
          "comment_id": 2949076,
          "event_type": "IssueCommentEvent",
          "action": "created",
          "author_association": "NONE",
          "actor_login": "leag",
          "file_time": "2011-11-29 21:00:00",
          "created_at": "2011-11-29 21:19:22",
          "updated_at": "2011-11-29 21:19:21",
          "locked": 0,
          "assignee": "",
          "changed_files": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "maintainer_can_modify": 0,
          "mergeable_state": "unknown"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "assignees",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "comments",
          "type": "UInt32"
        },
        {
          "name": "merged",
          "type": "UInt8"
        },
        {
          "name": "mergeable",
          "type": "UInt8"
        },
        {
          "name": "rebaseable",
          "type": "UInt8"
        },
        {
          "name": "review_comments",
          "type": "UInt32"
        },
        {
          "name": "review_state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "creator_user_login",
          "type": "Nullable(String)"
        },
        {
          "name": "closed_at",
          "type": "DateTime"
        },
        {
          "name": "merged_at",
          "type": "DateTime"
        },
        {
          "name": "merge_commit_sha",
          "type": "String"
        },
        {
          "name": "head_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "base_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "head_sha",
          "type": "String"
        },
        {
          "name": "base_sha",
          "type": "String"
        },
        {
          "name": "ref",
          "type": "Nullable(String)"
        },
        {
          "name": "ref_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "path",
          "type": "Nullable(String)"
        },
        {
          "name": "position",
          "type": "Int32"
        },
        {
          "name": "line",
          "type": "Int32"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "comment_id",
          "type": "UInt64"
        },
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "action",
          "type": "LowCardinality(String)"
        },
        {
          "name": "author_association",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "file_time",
          "type": "DateTime"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "updated_at",
          "type": "DateTime"
        },
        {
          "name": "locked",
          "type": "UInt8"
        },
        {
          "name": "assignee",
          "type": "LowCardinality(String)"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "commits",
          "type": "UInt32"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "diff_hunk",
          "type": "String"
        },
        {
          "name": "original_position",
          "type": "UInt32"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "original_commit_id",
          "type": "String"
        },
        {
          "name": "push_size",
          "type": "UInt32"
        },
        {
          "name": "push_distinct_size",
          "type": "UInt32"
        },
        {
          "name": "member_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "release_tag_name",
          "type": "String"
        },
        {
          "name": "release_name",
          "type": "String"
        },
        {
          "name": "requested_reviewers",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "requested_teams",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "maintainer_can_modify",
          "type": "UInt8"
        },
        {
          "name": "mergeable_state",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 202.64837863,
        "rows_read": 3124889133,
        "bytes_read": 1458566076969
      },
      "executionTime": 202.694,
      "requestId": "01JTG6ACB87Q4A111E1CGD8JDS",
      "length": 12829
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 2.378,
      "totalDuration": 18.575,
      "tokens": {
        "promptTokens": 3767,
        "completionTokens": 282,
        "totalTokens": 4049
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  state, \n  assignees, \n  comments, \n  merged, \n  mergeable, \n  rebaseable, \n  review_comments, \n  review_state, \n  labels, \n  title, \n  number, \n  creator_user_login, \n  closed_at, \n  merged_at, \n  merge_commit_sha, \n  head_ref, \n  base_ref, \n  head_sha, \n  base_sha, \n  ref, \n  ref_type, \n  path, \n  position, \n  line, \n  body, \n  comment_id, \n  event_type, \n  action, \n  author_association, \n  actor_login, \n  file_time, \n  created_at, \n  updated_at, \n  locked, \n  assignee, \n  changed_files, \n  commits, \n  additions, \n  deletions, \n  diff_hunk, \n  original_position, \n  commit_id, \n  original_commit_id, \n  push_size, \n  push_distinct_size, \n  member_login, \n  release_tag_name, \n  release_name, \n  requested_reviewers, \n  requested_teams, \n  maintainer_can_modify, \n  mergeable_state \nFROM \n  github_events \nORDER BY \n  comments / merged DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "0xd4d/de4dot",
              "state": "open",
              "assignees": [],
              "comments": 2,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "Suggestions for heuristic auto-renaming guesses",
              "number": 6,
              "creator_user_login": "AlexVallat",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "Great! Good call on the event handlers too, I hadn't thought of that.\r\n\r\nIn a similar vein, there's probably a bunch of stuff you can do with dependency properties. The first parameter to the DependencyProperty.Register method should be a string containing the name of the property. You can use that to rename the DependencyProperty field \"_Name_ Property\", the property for getting and setting it \"_Name_\", and the changed and coerce handlers (if present): \"On_Name_ Changed\" and \"Coerce_Name_\". If the static change handler calls a single non-static method on the same class, you can call that one \"On_Name_ Changed\" too.",
              "comment_id": 2415905,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "AlexVallat",
              "file_time": "2011-10-15 15:00:00",
              "created_at": "2011-10-15 15:28:44",
              "updated_at": "2011-10-15 15:28:44",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 1,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": ".net Reactor",
              "number": 7,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-10-21 00:40:29",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "I'll add support for this obfuscator soon, probably next week. There's just another one I'll have to do first.\r\n\r\nI already have code to handle both cases you showed above. I just haven't pushed it to github yet. ;)",
              "comment_id": 2476492,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-10-21 00:00:00",
              "created_at": "2011-10-21 00:40:29",
              "updated_at": "2011-10-21 00:40:29",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "open",
              "assignees": [],
              "comments": 2,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": ".net Reactor",
              "number": 7,
              "creator_user_login": "high6",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "Okay cool. I figured you had something for the second case as I know xeno does it too.",
              "comment_id": 2477440,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "high6",
              "file_time": "2011-10-21 03:00:00",
              "created_at": "2011-10-21 03:48:13",
              "updated_at": "2011-10-21 03:48:11",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 3,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": ".net Reactor",
              "number": 7,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-10-21 20:50:28",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "The code has been pushed to github and binaries added. I'm closing this.",
              "comment_id": 2486063,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-10-21 20:00:00",
              "created_at": "2011-10-21 20:50:28",
              "updated_at": "2011-10-21 20:50:27",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 3,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "Suggestions for heuristic auto-renaming guesses",
              "number": 6,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-11-05 22:24:47",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "I've added code to restore some class and field names of WinForms apps.\r\n\r\nSome of the stuff I won't implement that you suggested:\r\n\r\n**Check the constructor of a class. If it calls a method local to that class, name that method \"Initialise\".**\r\n\r\nThere's no guarantee that it's actually an initialize method. I don't want to name something Initialize() if it's not really an initialize method. That would be confusing.\r\n\r\n**Check for a static method on a class whose return type is the type of that class. Call it \"Create\"**\r\n\r\nSame here. Could be something else than a create method.\r\n\r\nThe DependencyProperty stuff will probably be implemented once I actually see any obfuscated WPF apps.\r\n\r\nI'll close this until then.",
              "comment_id": 2642801,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-11-05 22:00:00",
              "created_at": "2011-11-05 22:24:47",
              "updated_at": "2011-11-05 22:24:47",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 1,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "Eazfuscator causing newest de4dot crash, log attached",
              "number": 10,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-11-30 03:23:47",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "Yeah, there's 32-bit and 64-bit versions (de4dot-x86.exe and de4dot-x64.exe) in case the file requires 32-bit or 64-bit to load.",
              "comment_id": 2954485,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-11-30 03:00:00",
              "created_at": "2011-11-30 03:23:47",
              "updated_at": "2011-11-30 03:23:47",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 1,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "Signed assemblies aren't resigned",
              "number": 1,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-11-05 22:30:59",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "I've decided not to resign assemblies. A simple tool using [Mono.Cecil](https://github.com/jbevain/cecil) could be created to scan a dir for assemblies referencing a deobfuscated assembly and update the references with the new public key.",
              "comment_id": 2642830,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-11-05 22:00:00",
              "created_at": "2011-11-05 22:30:59",
              "updated_at": "2011-11-05 22:30:59",
              "locked": 0,
              "assignee": "0xd4d",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 1,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "Support for .Net Reactor 3.9.8.0",
              "number": 8,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-11-13 13:58:25",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "Some future version maybe. Until then, I'll close this.",
              "comment_id": 2722393,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-11-13 13:00:00",
              "created_at": "2011-11-13 13:58:26",
              "updated_at": "2011-11-13 13:58:25",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "closed",
              "assignees": [],
              "comments": 1,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "Eazfuscator isn't fully supported yet",
              "number": 2,
              "creator_user_login": "0xd4d",
              "closed_at": "2011-11-05 22:25:47",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "String decryption has been implemented for a while. I've never seen anyone use encrypted resources.",
              "comment_id": 2642805,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "0xd4d",
              "file_time": "2011-11-05 22:00:00",
              "created_at": "2011-11-05 22:25:48",
              "updated_at": "2011-11-05 22:25:46",
              "locked": 0,
              "assignee": "0xd4d",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            },
            {
              "repo_name": "0xd4d/de4dot",
              "state": "open",
              "assignees": [],
              "comments": 1,
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "review_comments": 0,
              "review_state": "none",
              "labels": [],
              "title": "BabelObfuscator strings not properly de-obfuscated",
              "number": 11,
              "creator_user_login": "leag",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "head_ref": "",
              "base_ref": "",
              "head_sha": "",
              "base_sha": "",
              "ref": "",
              "ref_type": "none",
              "path": "",
              "position": 0,
              "line": 0,
              "body": "did you pass the string decrypter method?",
              "comment_id": 2949076,
              "event_type": "IssueCommentEvent",
              "action": "created",
              "author_association": "NONE",
              "actor_login": "leag",
              "file_time": "2011-11-29 21:00:00",
              "created_at": "2011-11-29 21:19:22",
              "updated_at": "2011-11-29 21:19:21",
              "locked": 0,
              "assignee": "",
              "changed_files": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "maintainer_can_modify": 0,
              "mergeable_state": "unknown"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "assignees",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "comments",
              "type": "UInt32"
            },
            {
              "name": "merged",
              "type": "UInt8"
            },
            {
              "name": "mergeable",
              "type": "UInt8"
            },
            {
              "name": "rebaseable",
              "type": "UInt8"
            },
            {
              "name": "review_comments",
              "type": "UInt32"
            },
            {
              "name": "review_state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "creator_user_login",
              "type": "Nullable(String)"
            },
            {
              "name": "closed_at",
              "type": "DateTime"
            },
            {
              "name": "merged_at",
              "type": "DateTime"
            },
            {
              "name": "merge_commit_sha",
              "type": "String"
            },
            {
              "name": "head_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "base_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "head_sha",
              "type": "String"
            },
            {
              "name": "base_sha",
              "type": "String"
            },
            {
              "name": "ref",
              "type": "Nullable(String)"
            },
            {
              "name": "ref_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "path",
              "type": "Nullable(String)"
            },
            {
              "name": "position",
              "type": "Int32"
            },
            {
              "name": "line",
              "type": "Int32"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "comment_id",
              "type": "UInt64"
            },
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "action",
              "type": "LowCardinality(String)"
            },
            {
              "name": "author_association",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "file_time",
              "type": "DateTime"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "updated_at",
              "type": "DateTime"
            },
            {
              "name": "locked",
              "type": "UInt8"
            },
            {
              "name": "assignee",
              "type": "LowCardinality(String)"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "commits",
              "type": "UInt32"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "diff_hunk",
              "type": "String"
            },
            {
              "name": "original_position",
              "type": "UInt32"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "original_commit_id",
              "type": "String"
            },
            {
              "name": "push_size",
              "type": "UInt32"
            },
            {
              "name": "push_distinct_size",
              "type": "UInt32"
            },
            {
              "name": "member_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "release_tag_name",
              "type": "String"
            },
            {
              "name": "release_name",
              "type": "String"
            },
            {
              "name": "requested_reviewers",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "requested_teams",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "maintainer_can_modify",
              "type": "UInt8"
            },
            {
              "name": "mergeable_state",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 202.64837863,
            "rows_read": 3124889133,
            "bytes_read": 1458566076969
          },
          "executionTime": 202.694,
          "requestId": "01JTG6ACB87Q4A111E1CGD8JDS",
          "length": 12829
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 2.378,
          "totalDuration": 18.575,
          "tokens": {
            "promptTokens": 3767,
            "completionTokens": 282,
            "totalTokens": 4049
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'ForkEvent') as forks, \n  countIf(event_type = 'WatchEvent') as stars\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  forks DESC, \n  stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 52.058088303,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 52.095,
      "requestId": "01JTG6GRN70KKF1E34TH13YYE9",
      "length": 676
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.948,
      "totalDuration": 4.022,
      "tokens": {
        "promptTokens": 3782,
        "completionTokens": 63,
        "totalTokens": 3845
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'ForkEvent') as forks, \n  countIf(event_type = 'WatchEvent') as stars\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  forks DESC, \n  stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks": 262926,
              "stars": 6364
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks": 198031,
              "stars": 4601
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks": 160794,
              "stars": 990
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks": 98226,
              "stars": 173681
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks": 92878,
              "stars": 126371
            },
            {
              "repo_name": "github/gitignore",
              "forks": 84075,
              "stars": 119322
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks": 78551,
              "stars": 2073
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks": 68601,
              "stars": 8185
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks": 67182,
              "stars": 271
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks": 59420,
              "stars": 1784
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 52.058088303,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 52.095,
          "requestId": "01JTG6GRN70KKF1E34TH13YYE9",
          "length": 676
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.948,
          "totalDuration": 4.022,
          "tokens": {
            "promptTokens": 3782,
            "completionTokens": 63,
            "totalTokens": 3845
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, number, state, event_type, created_at \nFROM github_events \nWHERE event_type = 'ForkEvent' \nORDER BY number DESC, state ASC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "CyanogenMod/android_hardware_ril",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-12-22 22:23:22"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ril",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-12-29 12:53:45"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-02-15 11:14:27"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-02-17 00:27:32"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-05-21 17:48:27"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-03-18 15:26:34"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-04-23 07:02:09"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-02-23 00:47:27"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-05-18 03:34:14"
        },
        {
          "repo_name": "CyanogenMod/android_hardware_ti_omap3",
          "number": 0,
          "state": "none",
          "event_type": "ForkEvent",
          "created_at": "2011-04-24 15:25:01"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        }
      ],
      "statistics": {
        "elapsed": 0.582461361,
        "rows_read": 84878767,
        "bytes_read": 1017452164
      },
      "executionTime": 0.601,
      "requestId": "01JTG6JG6GCQB9KJ1VQ915X6KG",
      "length": 1391
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.926,
      "totalDuration": 2.293,
      "tokens": {
        "promptTokens": 3787,
        "completionTokens": 40,
        "totalTokens": 3827
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, number, state, event_type, created_at \nFROM github_events \nWHERE event_type = 'ForkEvent' \nORDER BY number DESC, state ASC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "CyanogenMod/android_hardware_ril",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-12-22 22:23:22"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ril",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-12-29 12:53:45"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-02-15 11:14:27"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-02-17 00:27:32"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-05-21 17:48:27"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-03-18 15:26:34"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-04-23 07:02:09"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-02-23 00:47:27"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-05-18 03:34:14"
            },
            {
              "repo_name": "CyanogenMod/android_hardware_ti_omap3",
              "number": 0,
              "state": "none",
              "event_type": "ForkEvent",
              "created_at": "2011-04-24 15:25:01"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            }
          ],
          "statistics": {
            "elapsed": 0.582461361,
            "rows_read": 84878767,
            "bytes_read": 1017452164
          },
          "executionTime": 0.601,
          "requestId": "01JTG6JG6GCQB9KJ1VQ915X6KG",
          "length": 1391
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.926,
          "totalDuration": 2.293,
          "tokens": {
            "promptTokens": 3787,
            "completionTokens": 40,
            "totalTokens": 3827
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n  sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n  (sum(if(event_type = 'WatchEvent', 1, 0)) / sum(if(event_type = 'ForkEvent', 1, 0))) AS proportion\nFROM \n  github_events\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars": 232118474,
          "forks": 84709181,
          "proportion": 2.7401808311663407
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "proportion",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.325701369,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.346,
      "requestId": "01JTG6KHHFZPKGFYHYQK52QM0N",
      "length": 70
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 19.387,
      "totalDuration": 31.037,
      "tokens": {
        "promptTokens": 3762,
        "completionTokens": 88,
        "totalTokens": 3850
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n  sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n  (sum(if(event_type = 'WatchEvent', 1, 0)) / sum(if(event_type = 'ForkEvent', 1, 0))) AS proportion\nFROM \n  github_events\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars": 232118474,
              "forks": 84709181,
              "proportion": 2.7401808311663407
            }
          ],
          "meta": [
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "proportion",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 0.325701369,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.346,
          "requestId": "01JTG6KHHFZPKGFYHYQK52QM0N",
          "length": 70
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 19.387,
          "totalDuration": 31.037,
          "tokens": {
            "promptTokens": 3762,
            "completionTokens": 88,
            "totalTokens": 3850
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT count(*) FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "count()": 111265504
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005397466,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.022,
      "requestId": "01JTG6KNN5QKNBT22ZDKJVSF1B",
      "length": 23
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.868,
      "totalDuration": 1.365,
      "tokens": {
        "promptTokens": 3761,
        "completionTokens": 17,
        "totalTokens": 3778
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT count(*) FROM github_events WHERE event_type = 'IssuesEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "count()": 111265504
            }
          ],
          "meta": [
            {
              "name": "count()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005397466,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.022,
          "requestId": "01JTG6KNN5QKNBT22ZDKJVSF1B",
          "length": 23
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.868,
          "totalDuration": 1.365,
          "tokens": {
            "promptTokens": 3761,
            "completionTokens": 17,
            "totalTokens": 3778
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(comment_id) AS issue_comments_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \nGROUP BY repo_name \nORDER BY issue_comments_count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comments_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comments_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comments_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comments_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comments_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comments_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comments_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comments_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comments_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.743466936,
        "rows_read": 218620144,
        "bytes_read": 2403486015
      },
      "executionTime": 0.762,
      "requestId": "01JTG6KT6CJHRN3TH1Y0VTQ5ZM",
      "length": 649
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.875,
      "totalDuration": 2.122,
      "tokens": {
        "promptTokens": 3763,
        "completionTokens": 42,
        "totalTokens": 3805
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(comment_id) AS issue_comments_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \nGROUP BY repo_name \nORDER BY issue_comments_count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comments_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comments_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comments_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comments_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comments_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comments_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comments_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comments_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comments_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.743466936,
            "rows_read": 218620144,
            "bytes_read": 2403486015
          },
          "executionTime": 0.762,
          "requestId": "01JTG6KT6CJHRN3TH1Y0VTQ5ZM",
          "length": 649
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.875,
          "totalDuration": 2.122,
          "tokens": {
            "promptTokens": 3763,
            "completionTokens": 42,
            "totalTokens": 3805
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name,\n  comments / issues AS ratio\nFROM \n(\n  SELECT \n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS comments,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issues\n  FROM \n    github_events\n  GROUP BY \n    repo_name\n) AS subquery\nORDER BY \n  ratio DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "ChrisRBe/megamerge",
          "ratio": null
        },
        {
          "repo_name": "peadrakw/now",
          "ratio": null
        },
        {
          "repo_name": "miyoshi3/lesson",
          "ratio": null
        },
        {
          "repo_name": "mrbmrb1122/docker-react",
          "ratio": null
        },
        {
          "repo_name": "tylersnyder/now-running",
          "ratio": null
        },
        {
          "repo_name": "thepetk/learn-rails",
          "ratio": null
        },
        {
          "repo_name": "tkuminecz/phantasy-http-server",
          "ratio": null
        },
        {
          "repo_name": "djarek/boost_docker",
          "ratio": null
        },
        {
          "repo_name": "geekmuse/terraform-provider-jumpcloud",
          "ratio": null
        },
        {
          "repo_name": "mklassen/mysql",
          "ratio": null
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 53.3113198,
        "rows_read": 3124889133,
        "bytes_read": 9358422118
      },
      "executionTime": 53.359,
      "requestId": "01JTG6M1EDF1KF2KMRXFPMPGEY",
      "length": 511
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.847,
      "totalDuration": 4.133,
      "tokens": {
        "promptTokens": 3786,
        "completionTokens": 101,
        "totalTokens": 3887
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name,\n  comments / issues AS ratio\nFROM \n(\n  SELECT \n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS comments,\n    SUM(CASE WHEN event_type = 'IssuesEvent' THEN 1 ELSE 0 END) AS issues\n  FROM \n    github_events\n  GROUP BY \n    repo_name\n) AS subquery\nORDER BY \n  ratio DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "ChrisRBe/megamerge",
              "ratio": null
            },
            {
              "repo_name": "peadrakw/now",
              "ratio": null
            },
            {
              "repo_name": "miyoshi3/lesson",
              "ratio": null
            },
            {
              "repo_name": "mrbmrb1122/docker-react",
              "ratio": null
            },
            {
              "repo_name": "tylersnyder/now-running",
              "ratio": null
            },
            {
              "repo_name": "thepetk/learn-rails",
              "ratio": null
            },
            {
              "repo_name": "tkuminecz/phantasy-http-server",
              "ratio": null
            },
            {
              "repo_name": "djarek/boost_docker",
              "ratio": null
            },
            {
              "repo_name": "geekmuse/terraform-provider-jumpcloud",
              "ratio": null
            },
            {
              "repo_name": "mklassen/mysql",
              "ratio": null
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 53.3113198,
            "rows_read": 3124889133,
            "bytes_read": 9358422118
          },
          "executionTime": 53.359,
          "requestId": "01JTG6M1EDF1KF2KMRXFPMPGEY",
          "length": 511
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.847,
          "totalDuration": 4.133,
          "tokens": {
            "promptTokens": 3786,
            "completionTokens": 101,
            "totalTokens": 3887
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_issues \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nGROUP BY repo_name \nORDER BY num_issues DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "num_issues": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "num_issues": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "num_issues": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "num_issues": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "num_issues": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "num_issues": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "num_issues": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "num_issues": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "num_issues": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "num_issues": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.457109315,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.476,
      "requestId": "01JTG6NT2VAKZR6RX69Q4G8GME",
      "length": 563
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.231,
      "totalDuration": 2.163,
      "tokens": {
        "promptTokens": 3774,
        "completionTokens": 37,
        "totalTokens": 3811
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_issues \nFROM github_events \nWHERE event_type = 'IssuesEvent' \nGROUP BY repo_name \nORDER BY num_issues DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "num_issues": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "num_issues": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "num_issues": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "num_issues": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "num_issues": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "num_issues": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "num_issues": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "num_issues": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "num_issues": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "num_issues": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.457109315,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.476,
          "requestId": "01JTG6NT2VAKZR6RX69Q4G8GME",
          "length": 563
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.231,
          "totalDuration": 2.163,
          "tokens": {
            "promptTokens": 3774,
            "completionTokens": 37,
            "totalTokens": 3811
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  number, \n  title \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND title LIKE '%epic bugs%' \nORDER BY \n  number DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.511870877,
        "rows_read": 111439849,
        "bytes_read": 5310013028
      },
      "executionTime": 0.529,
      "requestId": "01JTG6NYJYYKZPJPR88Y48SR9D",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.586,
      "totalDuration": 1.634,
      "tokens": {
        "promptTokens": 3821,
        "completionTokens": 60,
        "totalTokens": 3881
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  number, \n  title \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND title LIKE '%epic bugs%' \nORDER BY \n  number DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            }
          ],
          "statistics": {
            "elapsed": 0.511870877,
            "rows_read": 111439849,
            "bytes_read": 5310013028
          },
          "executionTime": 0.529,
          "requestId": "01JTG6NYJYYKZPJPR88Y48SR9D",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.586,
          "totalDuration": 1.634,
          "tokens": {
            "promptTokens": 3821,
            "completionTokens": 60,
            "totalTokens": 3881
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  number, \n  count(DISTINCT actor_login) AS num_comment_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND title LIKE '%epic bugs%' \n  AND number > 0\nGROUP BY \n  repo_name, \n  number\nHAVING \n  count(DISTINCT actor_login) > 5\nORDER BY \n  num_comment_authors DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "num_comment_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.409628421,
        "rows_read": 111439849,
        "bytes_read": 5201672727
      },
      "executionTime": 0.428,
      "requestId": "01JTG6P3C007EMPZE12K3JMM0G",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.072,
      "totalDuration": 1.865,
      "tokens": {
        "promptTokens": 3786,
        "completionTokens": 99,
        "totalTokens": 3885
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  number, \n  count(DISTINCT actor_login) AS num_comment_authors\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND title LIKE '%epic bugs%' \n  AND number > 0\nGROUP BY \n  repo_name, \n  number\nHAVING \n  count(DISTINCT actor_login) > 5\nORDER BY \n  num_comment_authors DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "num_comment_authors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.409628421,
            "rows_read": 111439849,
            "bytes_read": 5201672727
          },
          "executionTime": 0.428,
          "requestId": "01JTG6P3C007EMPZE12K3JMM0G",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.072,
          "totalDuration": 1.865,
          "tokens": {
            "promptTokens": 3786,
            "completionTokens": 99,
            "totalTokens": 3885
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  repo_name, \n  number, \n  title, \n  comments\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'created'\nORDER BY \n  comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "comments",
          "type": "UInt32"
        }
      ],
      "statistics": {
        "elapsed": 0.051634582,
        "rows_read": 111439849,
        "bytes_read": 222779042
      },
      "executionTime": 0.071,
      "requestId": "01JTG6P8B318P21HSY7G0RJXN6",
      "length": 2
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.615,
      "totalDuration": 2.162,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 53,
        "totalTokens": 3818
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  repo_name, \n  number, \n  title, \n  comments\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'created'\nORDER BY \n  comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "comments",
              "type": "UInt32"
            }
          ],
          "statistics": {
            "elapsed": 0.051634582,
            "rows_read": 111439849,
            "bytes_read": 222779042
          },
          "executionTime": 0.071,
          "requestId": "01JTG6P8B318P21HSY7G0RJXN6",
          "length": 2
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.615,
          "totalDuration": 2.162,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 53,
            "totalTokens": 3818
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(comment_id) AS num_commit_comments \nFROM github_events \nWHERE event_type = 'CommitCommentEvent' \nGROUP BY repo_name \nORDER BY num_commit_comments DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "num_commit_comments": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "num_commit_comments": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "num_commit_comments": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "num_commit_comments": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "num_commit_comments": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "num_commit_comments": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "num_commit_comments": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "num_commit_comments": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "num_commit_comments": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "num_commit_comments": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_commit_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.135855079,
        "rows_read": 9974466,
        "bytes_read": 109673066
      },
      "executionTime": 0.156,
      "requestId": "01JTG6PCW68444PKTHBVE4DPM7",
      "length": 639
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.577,
      "totalDuration": 2.071,
      "tokens": {
        "promptTokens": 3765,
        "completionTokens": 42,
        "totalTokens": 3807
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(comment_id) AS num_commit_comments \nFROM github_events \nWHERE event_type = 'CommitCommentEvent' \nGROUP BY repo_name \nORDER BY num_commit_comments DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "num_commit_comments": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "num_commit_comments": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "num_commit_comments": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "num_commit_comments": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "num_commit_comments": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "num_commit_comments": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "num_commit_comments": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "num_commit_comments": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "num_commit_comments": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "num_commit_comments": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_commit_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.135855079,
            "rows_read": 9974466,
            "bytes_read": 109673066
          },
          "executionTime": 0.156,
          "requestId": "01JTG6PCW68444PKTHBVE4DPM7",
          "length": 639
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.577,
          "totalDuration": 2.071,
          "tokens": {
            "promptTokens": 3765,
            "completionTokens": 42,
            "totalTokens": 3807
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  commit_id, \n  additions, \n  deletions, \n  changed_files, \n  event_type, \n  repo_name, \n  actor_login\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nORDER BY \n  additions + deletions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "OnlyElena"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "sz-gerrit"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "sz-gerrit"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "arco"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "JamesStallings"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "tirnanog06"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "arco"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "jakebiesinger"
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": ""
        },
        {
          "commit_id": "",
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "event_type": "PushEvent",
          "repo_name": "/",
          "actor_login": "sketchy"
        }
      ],
      "meta": [
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 3.881705169,
        "rows_read": 1601472977,
        "bytes_read": 41624523068
      },
      "executionTime": 3.926,
      "requestId": "01JTG6PJC3THCPT3QZPS1BHWCT",
      "length": 1290
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.092,
      "totalDuration": 2.948,
      "tokens": {
        "promptTokens": 3764,
        "completionTokens": 64,
        "totalTokens": 3828
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  commit_id, \n  additions, \n  deletions, \n  changed_files, \n  event_type, \n  repo_name, \n  actor_login\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nORDER BY \n  additions + deletions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "OnlyElena"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "sz-gerrit"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "sz-gerrit"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "arco"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "JamesStallings"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "tirnanog06"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "arco"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "jakebiesinger"
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": ""
            },
            {
              "commit_id": "",
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "event_type": "PushEvent",
              "repo_name": "/",
              "actor_login": "sketchy"
            }
          ],
          "meta": [
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 3.881705169,
            "rows_read": 1601472977,
            "bytes_read": 41624523068
          },
          "executionTime": 3.926,
          "requestId": "01JTG6PJC3THCPT3QZPS1BHWCT",
          "length": 1290
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.092,
          "totalDuration": 2.948,
          "tokens": {
            "promptTokens": 3764,
            "completionTokens": 64,
            "totalTokens": 3828
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  event_type, \n  author_association, \n  review_state, \n  count(*) as num_reviews\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewEvent'\n  AND review_state = 'changes_requested'\nGROUP BY \n  event_type, \n  author_association, \n  review_state\nORDER BY \n  num_reviews DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "event_type": "PullRequestReviewEvent",
          "author_association": "MEMBER",
          "review_state": "changes_requested",
          "num_reviews": 180428
        },
        {
          "event_type": "PullRequestReviewEvent",
          "author_association": "CONTRIBUTOR",
          "review_state": "changes_requested",
          "num_reviews": 177791
        },
        {
          "event_type": "PullRequestReviewEvent",
          "author_association": "COLLABORATOR",
          "review_state": "changes_requested",
          "num_reviews": 134112
        },
        {
          "event_type": "PullRequestReviewEvent",
          "author_association": "NONE",
          "review_state": "changes_requested",
          "num_reviews": 89038
        },
        {
          "event_type": "PullRequestReviewEvent",
          "author_association": "OWNER",
          "review_state": "changes_requested",
          "num_reviews": 49977
        }
      ],
      "meta": [
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "author_association",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_reviews",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.021821693,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.04,
      "requestId": "01JTG6QE6QGKZKD0FE233XA7PV",
      "length": 637
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most tough code reviews"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 4.641,
      "totalDuration": 22.093,
      "tokens": {
        "promptTokens": 3763,
        "completionTokens": 82,
        "totalTokens": 3845
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  event_type, \n  author_association, \n  review_state, \n  count(*) as num_reviews\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewEvent'\n  AND review_state = 'changes_requested'\nGROUP BY \n  event_type, \n  author_association, \n  review_state\nORDER BY \n  num_reviews DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "event_type": "PullRequestReviewEvent",
              "author_association": "MEMBER",
              "review_state": "changes_requested",
              "num_reviews": 180428
            },
            {
              "event_type": "PullRequestReviewEvent",
              "author_association": "CONTRIBUTOR",
              "review_state": "changes_requested",
              "num_reviews": 177791
            },
            {
              "event_type": "PullRequestReviewEvent",
              "author_association": "COLLABORATOR",
              "review_state": "changes_requested",
              "num_reviews": 134112
            },
            {
              "event_type": "PullRequestReviewEvent",
              "author_association": "NONE",
              "review_state": "changes_requested",
              "num_reviews": 89038
            },
            {
              "event_type": "PullRequestReviewEvent",
              "author_association": "OWNER",
              "review_state": "changes_requested",
              "num_reviews": 49977
            }
          ],
          "meta": [
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "author_association",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_reviews",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.021821693,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.04,
          "requestId": "01JTG6QE6QGKZKD0FE233XA7PV",
          "length": 637
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 4.641,
          "totalDuration": 22.093,
          "tokens": {
            "promptTokens": 3763,
            "completionTokens": 82,
            "totalTokens": 3845
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, count() as num_pushes \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY actor_login \nORDER BY num_pushes DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "num_pushes": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "num_pushes": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "num_pushes": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "num_pushes": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "num_pushes": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "num_pushes": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "num_pushes": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "num_pushes": 3139278
        },
        {
          "actor_login": "newstools",
          "num_pushes": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "num_pushes": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.699139489,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.746,
      "requestId": "01JTG6QKESREDPZ8EAWJS4KG4G",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.515,
      "totalDuration": 2.81,
      "tokens": {
        "promptTokens": 3763,
        "completionTokens": 39,
        "totalTokens": 3802
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, count() as num_pushes \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY actor_login \nORDER BY num_pushes DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "num_pushes": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "num_pushes": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "num_pushes": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "num_pushes": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "num_pushes": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "num_pushes": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "num_pushes": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "num_pushes": 3139278
            },
            {
              "actor_login": "newstools",
              "num_pushes": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "num_pushes": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.699139489,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.746,
          "requestId": "01JTG6QKESREDPZ8EAWJS4KG4G",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.515,
          "totalDuration": 2.81,
          "tokens": {
            "promptTokens": 3763,
            "completionTokens": 39,
            "totalTokens": 3802
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND author_association != 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action IN ('opened', 'created')\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.02,
      "requestId": "01JTG6SHCTNEHWMZS578A3Q2FF",
      "error": "{\"error\": \"[Error] You cannot use the aggregate function 'count()' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
      "length": 2
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND actor_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND author_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action IN ('opened', 'created')\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 8.933,
      "totalDuration": 38.722,
      "tokens": {
        "promptTokens": 4400,
        "completionTokens": 249,
        "totalTokens": 4649
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND actor_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.021,
          "requestId": "01JTG6QZPBRB0WH6M76MJDC880",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'actor_association' in scope SELECT actor_login, count() AS num_pushes, argMax(repo_name, count()) AS favorite_repo FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'PushEvent') AND (actor_association != 'MANNEQUIN') AND (repo_name IN (SELECT repo_name FROM github_llm_bench.github_events AS github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)) AND (actor_login IN (SELECT actor_login FROM github_ll",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.627,
          "totalDuration": 7.307,
          "tokens": {
            "promptTokens": 3816,
            "completionTokens": 235,
            "totalTokens": 4051
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND author_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action IN ('opened', 'created')\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.022,
          "requestId": "01JTG6R93TX6NB00WJ58N1K49S",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'count()' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND actor_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.681,
          "totalDuration": 7.122,
          "tokens": {
            "promptTokens": 4106,
            "completionTokens": 243,
            "totalTokens": 4349
          }
        },
        "error": null
      },
      {
        "sql": "\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND author_association != 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action IN ('opened', 'created')\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.02,
          "requestId": "01JTG6SHCTNEHWMZS578A3Q2FF",
          "error": "{\"error\": \"[Error] You cannot use the aggregate function 'count()' or its alias inside another aggregate function.\", \"documentation\": \"https://www.tinybird.co/docs/concepts/data-sources.html#partitioning\"}",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\"\n\nYou generated this SQL query:\n```sql\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND actor_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action = 'opened'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\n%\nSELECT \n  actor_login,\n  count() as num_pushes,\n  argMax(repo_name, count()) as favorite_repo\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND author_association!= 'MANNEQUIN'\n  AND repo_name IN (SELECT repo_name FROM github_events GROUP BY repo_name ORDER BY count() DESC LIMIT 10000)\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'IssuesEvent' AND action IN ('opened', 'created')\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    WHERE event_type = 'WatchEvent' AND action = 'started'\n    GROUP BY actor_login \n    HAVING count() >= 2\n  )\n  AND actor_login IN (\n    SELECT actor_login \n    FROM github_events \n    GROUP BY actor_login \n    HAVING count(DISTINCT repo_name) >= 5\n  )\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 8.933,
          "totalDuration": 38.722,
          "tokens": {
            "promptTokens": 4400,
            "completionTokens": 249,
            "totalTokens": 4649
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY num_stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "num_stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "num_stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "num_stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "num_stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "num_stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "num_stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "num_stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "num_stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "num_stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "num_stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.233266634,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.251,
      "requestId": "01JTG6SPB2TCG2CK2DW5HYEJC6",
      "length": 557
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.665,
      "totalDuration": 2.543,
      "tokens": {
        "promptTokens": 3764,
        "completionTokens": 38,
        "totalTokens": 3802
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY num_stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "num_stars": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "num_stars": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "num_stars": 199731
            },
            {
              "repo_name": "facebook/react",
              "num_stars": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "num_stars": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "num_stars": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "num_stars": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "num_stars": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "num_stars": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "num_stars": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.233266634,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.251,
          "requestId": "01JTG6SPB2TCG2CK2DW5HYEJC6",
          "length": 557
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.665,
          "totalDuration": 2.543,
          "tokens": {
            "promptTokens": 3764,
            "completionTokens": 38,
            "totalTokens": 3802
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, COUNT(*) AS count FROM github_events GROUP BY repo_name ORDER BY count DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "count": 7451541
        },
        {
          "repo_name": "direwolf-github/my-app",
          "count": 3955891
        },
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "count": 3097267
        },
        {
          "repo_name": "Lombiq/Orchard",
          "count": 2471262
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "count": 2191295
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "count": 2018701
        },
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "count": 1891264
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "count": 1789118
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "count": 1688192
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "count": 1667750
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 45.569786822,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 45.62,
      "requestId": "01JTG6SV5M5XWES5EB3VBXFN20",
      "length": 551
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.656,
      "totalDuration": 1.164,
      "tokens": {
        "promptTokens": 3814,
        "completionTokens": 23,
        "totalTokens": 3837
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, COUNT(*) AS count FROM github_events GROUP BY repo_name ORDER BY count DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "count": 7451541
            },
            {
              "repo_name": "direwolf-github/my-app",
              "count": 3955891
            },
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "count": 3097267
            },
            {
              "repo_name": "Lombiq/Orchard",
              "count": 2471262
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "count": 2191295
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "count": 2018701
            },
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "count": 1891264
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "count": 1789118
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "count": 1688192
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "count": 1667750
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 45.569786822,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 45.62,
          "requestId": "01JTG6SV5M5XWES5EB3VBXFN20",
          "length": 551
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.656,
          "totalDuration": 1.164,
          "tokens": {
            "promptTokens": 3814,
            "completionTokens": 23,
            "totalTokens": 3837
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as community_size\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 199731
        },
        {
          "repo_name": "facebook/react",
          "community_size": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "community_size": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "community_size": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "community_size": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "community_size": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.207776833,
        "rows_read": 232190399,
        "bytes_read": 696371734
      },
      "executionTime": 1.225,
      "requestId": "01JTG6VC3ZF1JK2SJX6HEE5P7V",
      "length": 607
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.684,
      "totalDuration": 2.03,
      "tokens": {
        "promptTokens": 3764,
        "completionTokens": 36,
        "totalTokens": 3800
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as community_size\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY community_size DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 354850
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 225490
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 199731
            },
            {
              "repo_name": "facebook/react",
              "community_size": 188575
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 173681
            },
            {
              "repo_name": "sindresorhus/awesome",
              "community_size": 160542
            },
            {
              "repo_name": "kamranahmedse/developer-roadmap",
              "community_size": 147561
            },
            {
              "repo_name": "getify/You-Dont-Know-JS",
              "community_size": 144146
            },
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "community_size": 140027
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 126371
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.207776833,
            "rows_read": 232190399,
            "bytes_read": 696371734
          },
          "executionTime": 1.225,
          "requestId": "01JTG6VC3ZF1JK2SJX6HEE5P7V",
          "length": 607
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.684,
          "totalDuration": 2.03,
          "tokens": {
            "promptTokens": 3764,
            "completionTokens": 36,
            "totalTokens": 3800
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    sum(additions) AS total_additions, \n    sum(deletions) AS total_deletions\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    total_additions + total_deletions DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "fakegit/cdnjs",
          "total_additions": 6222756523,
          "total_deletions": 971500
        },
        {
          "repo_name": "Qwerty0x64/cdnjs",
          "total_additions": 5706948901,
          "total_deletions": 702152
        },
        {
          "repo_name": "srz-zumix/iutest-ci-results",
          "total_additions": 3176317839,
          "total_deletions": 1006504276
        },
        {
          "repo_name": "ikingye/cdnjs",
          "total_additions": 1999629310,
          "total_deletions": 234869
        },
        {
          "repo_name": "Azure/azure-powershell",
          "total_additions": 714587109,
          "total_deletions": 567893162
        },
        {
          "repo_name": "tomekw/whatever",
          "total_additions": 323298837,
          "total_deletions": 943026794
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "total_additions": 434066544,
          "total_deletions": 766055610
        },
        {
          "repo_name": "robertoDiaz/liferay-portal",
          "total_additions": 551152902,
          "total_deletions": 414840747
        },
        {
          "repo_name": "silky/whatever",
          "total_additions": 2397,
          "total_deletions": 941459364
        },
        {
          "repo_name": "viliml/whatever",
          "total_additions": 10,
          "total_deletions": 941451334
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 52.912670609,
        "rows_read": 3124889133,
        "bytes_read": 31231946651
      },
      "executionTime": 52.958,
      "requestId": "01JTG6VGKTZWG2C7EGE3M0N9VJ",
      "length": 912
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.371,
      "totalDuration": 0.85,
      "tokens": {
        "promptTokens": 3783,
        "completionTokens": 61,
        "totalTokens": 3844
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    sum(additions) AS total_additions, \n    sum(deletions) AS total_deletions\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    total_additions + total_deletions DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "fakegit/cdnjs",
              "total_additions": 6222756523,
              "total_deletions": 971500
            },
            {
              "repo_name": "Qwerty0x64/cdnjs",
              "total_additions": 5706948901,
              "total_deletions": 702152
            },
            {
              "repo_name": "srz-zumix/iutest-ci-results",
              "total_additions": 3176317839,
              "total_deletions": 1006504276
            },
            {
              "repo_name": "ikingye/cdnjs",
              "total_additions": 1999629310,
              "total_deletions": 234869
            },
            {
              "repo_name": "Azure/azure-powershell",
              "total_additions": 714587109,
              "total_deletions": 567893162
            },
            {
              "repo_name": "tomekw/whatever",
              "total_additions": 323298837,
              "total_deletions": 943026794
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "total_additions": 434066544,
              "total_deletions": 766055610
            },
            {
              "repo_name": "robertoDiaz/liferay-portal",
              "total_additions": 551152902,
              "total_deletions": 414840747
            },
            {
              "repo_name": "silky/whatever",
              "total_additions": 2397,
              "total_deletions": 941459364
            },
            {
              "repo_name": "viliml/whatever",
              "total_additions": 10,
              "total_deletions": 941451334
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 52.912670609,
            "rows_read": 3124889133,
            "bytes_read": 31231946651
          },
          "executionTime": 52.958,
          "requestId": "01JTG6VGKTZWG2C7EGE3M0N9VJ",
          "length": 912
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.371,
          "totalDuration": 0.85,
          "tokens": {
            "promptTokens": 3783,
            "completionTokens": 61,
            "totalTokens": 3844
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n    repo_name, \n    count() as num_pushes\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\nGROUP BY \n    repo_name\nORDER BY \n    num_pushes DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "num_pushes": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "num_pushes": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "num_pushes": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "num_pushes": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "num_pushes": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "num_pushes": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "num_pushes": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "num_pushes": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "num_pushes": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "num_pushes": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_pushes",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 16.711756021,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 16.752,
      "requestId": "01JTG6X8RH3863YRZMZ5YQ8JJ7",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.278,
      "totalDuration": 2.038,
      "tokens": {
        "promptTokens": 3766,
        "completionTokens": 51,
        "totalTokens": 3817
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n    repo_name, \n    count() as num_pushes\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\nGROUP BY \n    repo_name\nORDER BY \n    num_pushes DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "num_pushes": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "num_pushes": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "num_pushes": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "num_pushes": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "num_pushes": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "num_pushes": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "num_pushes": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "num_pushes": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "num_pushes": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "num_pushes": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_pushes",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 16.711756021,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 16.752,
          "requestId": "01JTG6X8RH3863YRZMZ5YQ8JJ7",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.278,
          "totalDuration": 2.038,
          "tokens": {
            "promptTokens": 3766,
            "completionTokens": 51,
            "totalTokens": 3817
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT actor_login, count(*) as num_reviews \nFROM github_events \nWHERE event_type = 'PullRequestReviewEvent' \nGROUP BY actor_login \nORDER BY num_reviews DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "github-learning-lab[bot]",
          "num_reviews": 104542
        },
        {
          "actor_login": "github-actions[bot]",
          "num_reviews": 89676
        },
        {
          "actor_login": "bot-monkey-2",
          "num_reviews": 31702
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "num_reviews": 29429
        },
        {
          "actor_login": "foreign-sub",
          "num_reviews": 17630
        },
        {
          "actor_login": "renovate-approve[bot]",
          "num_reviews": 16563
        },
        {
          "actor_login": "kodiakhq[bot]",
          "num_reviews": 10876
        },
        {
          "actor_login": "Katsuno0814",
          "num_reviews": 6966
        },
        {
          "actor_login": "BrewTestBot",
          "num_reviews": 6718
        },
        {
          "actor_login": "accesslint[bot]",
          "num_reviews": 6668
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_reviews",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.032961796,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.052,
      "requestId": "01JTG6XXHPZ0AR8TW8CGREKSHT",
      "length": 547
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.764,
      "totalDuration": 2.052,
      "tokens": {
        "promptTokens": 3764,
        "completionTokens": 39,
        "totalTokens": 3803
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT actor_login, count(*) as num_reviews \nFROM github_events \nWHERE event_type = 'PullRequestReviewEvent' \nGROUP BY actor_login \nORDER BY num_reviews DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "github-learning-lab[bot]",
              "num_reviews": 104542
            },
            {
              "actor_login": "github-actions[bot]",
              "num_reviews": 89676
            },
            {
              "actor_login": "bot-monkey-2",
              "num_reviews": 31702
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "num_reviews": 29429
            },
            {
              "actor_login": "foreign-sub",
              "num_reviews": 17630
            },
            {
              "actor_login": "renovate-approve[bot]",
              "num_reviews": 16563
            },
            {
              "actor_login": "kodiakhq[bot]",
              "num_reviews": 10876
            },
            {
              "actor_login": "Katsuno0814",
              "num_reviews": 6966
            },
            {
              "actor_login": "BrewTestBot",
              "num_reviews": 6718
            },
            {
              "actor_login": "accesslint[bot]",
              "num_reviews": 6668
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_reviews",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.032961796,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.052,
          "requestId": "01JTG6XXHPZ0AR8TW8CGREKSHT",
          "length": 547
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.764,
          "totalDuration": 2.052,
          "tokens": {
            "promptTokens": 3764,
            "completionTokens": 39,
            "totalTokens": 3803
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT \n  label,\n  count() as count\nFROM \n  github_events\nARRAY JOIN labels AS label\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY \n  label\nORDER BY \n  count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "dependencies",
          "count": 9458518
        },
        {
          "label": "enhancement",
          "count": 6805408
        },
        {
          "label": "bug",
          "count": 6199822
        },
        {
          "label": ":arrow_heading_down: pull",
          "count": 4124651
        },
        {
          "label": "question",
          "count": 934878
        },
        {
          "label": "help wanted",
          "count": 757775
        },
        {
          "label": "feature",
          "count": 660821
        },
        {
          "label": "cla: yes",
          "count": 653842
        },
        {
          "label": "documentation",
          "count": 512616
        },
        {
          "label": "javascript",
          "count": 507441
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.603312839,
        "rows_read": 326129279,
        "bytes_read": 3089461441
      },
      "executionTime": 0.621,
      "requestId": "01JTG6Y747DRS4RZ52A7RA5DW0",
      "length": 393
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 most popular labels for issues and pull requests\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  labels,\n  count() as count\nFROM \n  github_events\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND labels != ''\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.989,
      "totalDuration": 2.762,
      "tokens": {
        "promptTokens": 3895,
        "completionTokens": 60,
        "totalTokens": 3955
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  labels,\n  count() as count\nFROM \n  github_events\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND labels != ''\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.017,
          "requestId": "01JTG6Y1Z7NV7QA8C5CQVCSJ6H",
          "error": "{\"error\": \"[Error] Array does not start with '[' character: while converting '' to Array(String). (CANNOT_READ_ARRAY_FROM_TEXT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.766,
          "totalDuration": 1.977,
          "tokens": {
            "promptTokens": 3816,
            "completionTokens": 54,
            "totalTokens": 3870
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT \n  label,\n  count() as count\nFROM \n  github_events\nARRAY JOIN labels AS label\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY \n  label\nORDER BY \n  count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "label": "dependencies",
              "count": 9458518
            },
            {
              "label": "enhancement",
              "count": 6805408
            },
            {
              "label": "bug",
              "count": 6199822
            },
            {
              "label": ":arrow_heading_down: pull",
              "count": 4124651
            },
            {
              "label": "question",
              "count": 934878
            },
            {
              "label": "help wanted",
              "count": 757775
            },
            {
              "label": "feature",
              "count": 660821
            },
            {
              "label": "cla: yes",
              "count": 653842
            },
            {
              "label": "documentation",
              "count": 512616
            },
            {
              "label": "javascript",
              "count": 507441
            }
          ],
          "meta": [
            {
              "name": "label",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.603312839,
            "rows_read": 326129279,
            "bytes_read": 3089461441
          },
          "executionTime": 0.621,
          "requestId": "01JTG6Y747DRS4RZ52A7RA5DW0",
          "length": 393
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 most popular labels for issues and pull requests\"\n\nYou generated this SQL query:\n```sql\nSELECT \n  labels,\n  count() as count\nFROM \n  github_events\nWHERE \n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND labels != ''\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.989,
          "totalDuration": 2.762,
          "tokens": {
            "promptTokens": 3895,
            "completionTokens": 60,
            "totalTokens": 3955
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT \n  labels,\n  count() as count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  OR event_type = 'PullRequestEvent'\n  AND (title LIKE '%bug%' OR title LIKE '%fix%' OR body LIKE '%bug%' OR body LIKE '%fix%')\n  OR (title LIKE '%feature%' OR body LIKE '%feature%')\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [],
          "count": 133486837
        },
        {
          "labels": [
            "dependencies"
          ],
          "count": 6355080
        },
        {
          "labels": [
            "enhancement"
          ],
          "count": 4405506
        },
        {
          "labels": [
            "bug"
          ],
          "count": 3749611
        },
        {
          "labels": [
            "question"
          ],
          "count": 679584
        },
        {
          "labels": [
            "greenkeeper"
          ],
          "count": 515455
        },
        {
          "labels": [
            "feature"
          ],
          "count": 377081
        },
        {
          "labels": [
            "dependencies",
            "javascript"
          ],
          "count": 346511
        },
        {
          "labels": [
            "Bug"
          ],
          "count": 214746
        },
        {
          "labels": [
            "documentation"
          ],
          "count": 214460
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 109.930096955,
        "rows_read": 3124889133,
        "bytes_read": 573518372286
      },
      "executionTime": 109.976,
      "requestId": "01JTG6YEM6JTJM5BSJV063VBY7",
      "length": 408
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.639,
      "totalDuration": 4.529,
      "tokens": {
        "promptTokens": 3773,
        "completionTokens": 97,
        "totalTokens": 3870
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT \n  labels,\n  count() as count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  OR event_type = 'PullRequestEvent'\n  AND (title LIKE '%bug%' OR title LIKE '%fix%' OR body LIKE '%bug%' OR body LIKE '%fix%')\n  OR (title LIKE '%feature%' OR body LIKE '%feature%')\nGROUP BY \n  labels\nORDER BY \n  count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [],
              "count": 133486837
            },
            {
              "labels": [
                "dependencies"
              ],
              "count": 6355080
            },
            {
              "labels": [
                "enhancement"
              ],
              "count": 4405506
            },
            {
              "labels": [
                "bug"
              ],
              "count": 3749611
            },
            {
              "labels": [
                "question"
              ],
              "count": 679584
            },
            {
              "labels": [
                "greenkeeper"
              ],
              "count": 515455
            },
            {
              "labels": [
                "feature"
              ],
              "count": 377081
            },
            {
              "labels": [
                "dependencies",
                "javascript"
              ],
              "count": 346511
            },
            {
              "labels": [
                "Bug"
              ],
              "count": 214746
            },
            {
              "labels": [
                "documentation"
              ],
              "count": 214460
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 109.930096955,
            "rows_read": 3124889133,
            "bytes_read": 573518372286
          },
          "executionTime": 109.976,
          "requestId": "01JTG6YEM6JTJM5BSJV063VBY7",
          "length": 408
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.639,
          "totalDuration": 4.529,
          "tokens": {
            "promptTokens": 3773,
            "completionTokens": 97,
            "totalTokens": 3870
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name FROM github_events ORDER BY LENGTH(repo_name) DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3"
        },
        {
          "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3"
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
        },
        {
          "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
        },
        {
          "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039"
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
        },
        {
          "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
        },
        {
          "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 6.968914002,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 7.017,
      "requestId": "01JTG71YE3PPXGJSZ67E3JZ1SH",
      "length": 1571
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.306,
      "totalDuration": 2.012,
      "tokens": {
        "promptTokens": 3761,
        "completionTokens": 16,
        "totalTokens": 3777
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name FROM github_events ORDER BY LENGTH(repo_name) DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3"
            },
            {
              "repo_name": "circletokenAuthentificationDesAF2JFKu25/method--Windows10_iOS-13authredotrue-redirect-emailserver-securelogin_true__UserCode-FJIE8FJwIDUsSe3"
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
            },
            {
              "repo_name": "1-844-762-8448-fecebook-Tollfree-number/Sambhu-1-844-762-8448-Facebook-tech-support-number-Facebook-customer-service-number-facebook-custome"
            },
            {
              "repo_name": "489237494780482758917023981-24875834035/2475247824708247023480238409234802398409238409238409238409380492830498230490923804923804982039482039"
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
            },
            {
              "repo_name": "valuelabskumarravivaluelabskumarravi123/MaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepoMaxRepodfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf"
            },
            {
              "repo_name": "longlonglonglonglonglonglonglonglong123/apaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-phpapaech-php"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 6.968914002,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 7.017,
          "requestId": "01JTG71YE3PPXGJSZ67E3JZ1SH",
          "length": 1571
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.306,
          "totalDuration": 2.012,
          "tokens": {
            "promptTokens": 3761,
            "completionTokens": 16,
            "totalTokens": 3777
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, LENGTH(repo_name) AS repo_name_length FROM github_events ORDER BY repo_name_length ASC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        },
        {
          "repo_name": "/",
          "repo_name_length": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 6.921760743,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 6.964,
      "requestId": "01JTG72A09YP4VQYGT9H2C0NAS",
      "length": 391
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.271,
      "totalDuration": 2.329,
      "tokens": {
        "promptTokens": 3770,
        "completionTokens": 24,
        "totalTokens": 3794
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, LENGTH(repo_name) AS repo_name_length FROM github_events ORDER BY repo_name_length ASC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            },
            {
              "repo_name": "/",
              "repo_name_length": 1
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 6.921760743,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 6.964,
          "requestId": "01JTG72A09YP4VQYGT9H2C0NAS",
          "length": 391
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.271,
          "totalDuration": 2.329,
          "tokens": {
            "promptTokens": 3770,
            "completionTokens": 24,
            "totalTokens": 3794
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as num_comments \nFROM github_events \nWHERE body LIKE '%freeCodeCamp%' \nGROUP BY repo_name \nORDER BY num_comments DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "num_comments": 53683
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "num_comments": 5497
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "num_comments": 5272
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "num_comments": 2231
        },
        {
          "repo_name": "GulajavaMinistudio/freeCodeCamp",
          "num_comments": 1048
        },
        {
          "repo_name": "osmaelo/freeCodeCamp",
          "num_comments": 886
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "num_comments": 875
        },
        {
          "repo_name": "sherribooher/freeCodeCamp",
          "num_comments": 825
        },
        {
          "repo_name": "turlodales/freeCodeCamp",
          "num_comments": 680
        },
        {
          "repo_name": "QuanyinTang/freeCodeCamp",
          "num_comments": 582
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 48.398481157,
        "rows_read": 3124889133,
        "bytes_read": 511983325442
      },
      "executionTime": 48.443,
      "requestId": "01JTG72NJ7S5A19RNV8RYNZWM0",
      "length": 606
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 1.006,
      "totalDuration": 2.37,
      "tokens": {
        "promptTokens": 3817,
        "completionTokens": 38,
        "totalTokens": 3855
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as num_comments \nFROM github_events \nWHERE body LIKE '%freeCodeCamp%' \nGROUP BY repo_name \nORDER BY num_comments DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "num_comments": 53683
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "num_comments": 5497
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "num_comments": 5272
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "num_comments": 2231
            },
            {
              "repo_name": "GulajavaMinistudio/freeCodeCamp",
              "num_comments": 1048
            },
            {
              "repo_name": "osmaelo/freeCodeCamp",
              "num_comments": 886
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "num_comments": 875
            },
            {
              "repo_name": "sherribooher/freeCodeCamp",
              "num_comments": 825
            },
            {
              "repo_name": "turlodales/freeCodeCamp",
              "num_comments": 680
            },
            {
              "repo_name": "QuanyinTang/freeCodeCamp",
              "num_comments": 582
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_comments",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 48.398481157,
            "rows_read": 3124889133,
            "bytes_read": 511983325442
          },
          "executionTime": 48.443,
          "requestId": "01JTG72NJ7S5A19RNV8RYNZWM0",
          "length": 606
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 1.006,
          "totalDuration": 2.37,
          "tokens": {
            "promptTokens": 3817,
            "completionTokens": 38,
            "totalTokens": 3855
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT repo_name, count(*) as count \nFROM github_events \nWHERE body LIKE '%freeCodeCamp%' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "count": 53683
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "count": 5497
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "count": 5272
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "count": 2231
        },
        {
          "repo_name": "GulajavaMinistudio/freeCodeCamp",
          "count": 1048
        },
        {
          "repo_name": "osmaelo/freeCodeCamp",
          "count": 886
        },
        {
          "repo_name": "freeCodeCamp/chapter",
          "count": 875
        },
        {
          "repo_name": "sherribooher/freeCodeCamp",
          "count": 825
        },
        {
          "repo_name": "turlodales/freeCodeCamp",
          "count": 680
        },
        {
          "repo_name": "QuanyinTang/freeCodeCamp",
          "count": 582
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 48.296865204,
        "rows_read": 3124889133,
        "bytes_read": 511983356770
      },
      "executionTime": 48.34,
      "requestId": "01JTG74A7SBKX1VS6JETWGCD87",
      "length": 536
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.774,
      "totalDuration": 2.994,
      "tokens": {
        "promptTokens": 3771,
        "completionTokens": 35,
        "totalTokens": 3806
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT repo_name, count(*) as count \nFROM github_events \nWHERE body LIKE '%freeCodeCamp%' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "count": 53683
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "count": 5497
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "count": 5272
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "count": 2231
            },
            {
              "repo_name": "GulajavaMinistudio/freeCodeCamp",
              "count": 1048
            },
            {
              "repo_name": "osmaelo/freeCodeCamp",
              "count": 886
            },
            {
              "repo_name": "freeCodeCamp/chapter",
              "count": 875
            },
            {
              "repo_name": "sherribooher/freeCodeCamp",
              "count": 825
            },
            {
              "repo_name": "turlodales/freeCodeCamp",
              "count": 680
            },
            {
              "repo_name": "QuanyinTang/freeCodeCamp",
              "count": 582
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 48.296865204,
            "rows_read": 3124889133,
            "bytes_read": 511983356770
          },
          "executionTime": 48.34,
          "requestId": "01JTG74A7SBKX1VS6JETWGCD87",
          "length": 536
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.774,
          "totalDuration": 2.994,
          "tokens": {
            "promptTokens": 3771,
            "completionTokens": 35,
            "totalTokens": 3806
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT body, comment_id, event_type, repo_name, actor_login FROM github_events WHERE event_type = 'IssueCommentEvent' OR event_type = 'CommitCommentEvent' OR event_type = 'PullRequestReviewCommentEvent' ORDER BY comment_id DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "body": "// set window properties\r\nSetWindowSize( 1024, 768, 0 )\r\n \r\n// set display properties\r\nSetVirtualResolution( 1024, 768 ) // doesn't have to match the window\r\nSetSyncRate( 30, 0 ) // 30fps instead of 60 to save battery\r\nSetScissor( 0,0,0,0 ) // use the maximum available screen space, no black borders\r\nUseNewDefaultFonts( 1 )\r\n \r\nType SomeFun\r\n    ID as Integer\r\nEndType\r\n \r\nGLOBAL MySprites as SomeFun [10]\r\nfor x = 1 to 10\r\n    MySprites[x].ID = CreateSprite(0)\r\nnext x\r\n     \r\ndo\r\n    SomeFun()\r\n    Print( ScreenFPS() )\r\n    Sync()\r\nloop\r\n \r\nFunction SomeFun()\r\n    for x = 1 to 10\r\n        SetSpritePositionByOffset(MySprites[x].ID,Random(0,GetWindowWidth()), Random(1,GetWindowHeight()) )\r\n    next x  \r\nEndFunction",
          "comment_id": 739554924,
          "event_type": "IssueCommentEvent",
          "repo_name": "TheGameCreators/AGK-Studio",
          "actor_login": "blinkok"
        },
        {
          "body": "by 'papering over the cracks', i was referring to the PRs adding the special casing for SparseArray.\r\n\r\n> yeah let's just do what @simonjayhawkins proposed for expediency\r\n\r\nis that revert #33400 (and maybe #35838 too) or merge and backport #38332 to just fix the known issue.\r\n\r\n\r\n\r\n\r\n",
          "comment_id": 739554919,
          "event_type": "IssueCommentEvent",
          "repo_name": "pandas-dev/pandas",
          "actor_login": "simonjayhawkins"
        },
        {
          "body": "@toonn I think that's unrelated to ranger, so you can close the issue.",
          "comment_id": 739554915,
          "event_type": "IssueCommentEvent",
          "repo_name": "ranger/ranger",
          "actor_login": "seebye"
        },
        {
          "body": "Good job with images and links! See your work here: https://astra27.github.io/markdown-portfolio/\n\n### :keyboard: Activity: Delete the branch\n\n1. Delete your branch in this pull request.\n\n<hr>\n<h3 align=\"center\">Go to <a href=\"https://github.com/Astra27/markdown-portfolio/pull/4\">the next activity</a> now!</h3>\n",
          "comment_id": 739554914,
          "event_type": "IssueCommentEvent",
          "repo_name": "Astra27/markdown-portfolio",
          "actor_login": "github-learning-lab[bot]"
        },
        {
          "body": "Thanks for this feature. I think it is nice so I am merging it but I will push few changes.\r\n\r\nFirstly I am adding `enumMemberCasing` parameter (instead of special parameter for Pascal case). This parameter can support not only \"PascalCase\" but also \"camelCase\" and possibly others. Since configuration parameters should be usable from build plugins (Maven, Gradle) I am adding this new parameter there as well. There is also description which is used when generating [documentation](https://www.habarta.cz/typescript-generator/maven/typescript-generator-maven-plugin/generate-mojo.html#enumMemberCasing). Here is an example of usage from Maven:\r\n\r\n``` xml\r\n<configuration>\r\n    ...\r\n    <mapEnum>asEnum</mapEnum>\r\n    <enumMemberCasing>PascalCase</enumMemberCasing>\r\n    ...\r\n</configuration>\r\n```\r\n\r\nNext are some improvements in splitting identifier into words using regular expression. It should now support letters other than `A-Z` and numbers should be treated as words. I am still not sure it supports all cases well but at least I added unit test specifically for this part so we can easily test and improve other cases.\r\n\r\nCould you please check my changes if the feature works as expected?",
          "comment_id": 739554911,
          "event_type": "IssueCommentEvent",
          "repo_name": "vojtechhabarta/typescript-generator",
          "actor_login": "vojtechhabarta"
        },
        {
          "body": "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
          "comment_id": 739554908,
          "event_type": "IssueCommentEvent",
          "repo_name": "AI2Business/ai2business",
          "actor_login": "dependabot[bot]"
        },
        {
          "body": "@rigelk same here, a UI/UX tag would be appropriate ?",
          "comment_id": 739554906,
          "event_type": "IssueCommentEvent",
          "repo_name": "Chocobozzz/PeerTube",
          "actor_login": "kimsible"
        },
        {
          "body": "I actually changed the commit to just clarify that you can't prefill the cache with the data of the next video, which I think is what was trying to be conveyed. The existing paragraph is confusing, the fact that you can't prefetch the next video's data is true for any video, there is no difference in behavior with HLS streams or m3u8 URLs.\r\n\r\n> Doesn't really matter but did you want to fix the authorship on the commit?\r\n\r\nDunno how that works, I guess it's because I changed email address.",
          "comment_id": 739554905,
          "event_type": "IssueCommentEvent",
          "repo_name": "mpv-player/mpv",
          "actor_login": "guidocella"
        },
        {
          "body": "And @ardiishere?",
          "comment_id": 739554904,
          "event_type": "IssueCommentEvent",
          "repo_name": "retorquere/zotero-deb",
          "actor_login": "retorquere"
        },
        {
          "body": "@MattWThomas oh yeah, that'd be another option if people didn't want to download the heroku cli. I think both options could help people get up and running as fast as possible.\r\n\r\nwe should add that option too?",
          "comment_id": 739554902,
          "event_type": "IssueCommentEvent",
          "repo_name": "psf/python-in-edu",
          "actor_login": "bk521234"
        }
      ],
      "meta": [
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "comment_id",
          "type": "UInt64"
        },
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 14.780609787,
        "rows_read": 284616113,
        "bytes_read": 106239871820
      },
      "executionTime": 14.825,
      "requestId": "01JTG75XTQ43BYCS9Q68CKAXG7",
      "length": 4996
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "llama-3.3-70b-instruct",
    "provider": "meta-llama",
    "metrics": {
      "timeToFirstToken": 0.854,
      "totalDuration": 1.988,
      "tokens": {
        "promptTokens": 3783,
        "completionTokens": 55,
        "totalTokens": 3838
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT body, comment_id, event_type, repo_name, actor_login FROM github_events WHERE event_type = 'IssueCommentEvent' OR event_type = 'CommitCommentEvent' OR event_type = 'PullRequestReviewCommentEvent' ORDER BY comment_id DESC LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "body": "// set window properties\r\nSetWindowSize( 1024, 768, 0 )\r\n \r\n// set display properties\r\nSetVirtualResolution( 1024, 768 ) // doesn't have to match the window\r\nSetSyncRate( 30, 0 ) // 30fps instead of 60 to save battery\r\nSetScissor( 0,0,0,0 ) // use the maximum available screen space, no black borders\r\nUseNewDefaultFonts( 1 )\r\n \r\nType SomeFun\r\n    ID as Integer\r\nEndType\r\n \r\nGLOBAL MySprites as SomeFun [10]\r\nfor x = 1 to 10\r\n    MySprites[x].ID = CreateSprite(0)\r\nnext x\r\n     \r\ndo\r\n    SomeFun()\r\n    Print( ScreenFPS() )\r\n    Sync()\r\nloop\r\n \r\nFunction SomeFun()\r\n    for x = 1 to 10\r\n        SetSpritePositionByOffset(MySprites[x].ID,Random(0,GetWindowWidth()), Random(1,GetWindowHeight()) )\r\n    next x  \r\nEndFunction",
              "comment_id": 739554924,
              "event_type": "IssueCommentEvent",
              "repo_name": "TheGameCreators/AGK-Studio",
              "actor_login": "blinkok"
            },
            {
              "body": "by 'papering over the cracks', i was referring to the PRs adding the special casing for SparseArray.\r\n\r\n> yeah let's just do what @simonjayhawkins proposed for expediency\r\n\r\nis that revert #33400 (and maybe #35838 too) or merge and backport #38332 to just fix the known issue.\r\n\r\n\r\n\r\n\r\n",
              "comment_id": 739554919,
              "event_type": "IssueCommentEvent",
              "repo_name": "pandas-dev/pandas",
              "actor_login": "simonjayhawkins"
            },
            {
              "body": "@toonn I think that's unrelated to ranger, so you can close the issue.",
              "comment_id": 739554915,
              "event_type": "IssueCommentEvent",
              "repo_name": "ranger/ranger",
              "actor_login": "seebye"
            },
            {
              "body": "Good job with images and links! See your work here: https://astra27.github.io/markdown-portfolio/\n\n### :keyboard: Activity: Delete the branch\n\n1. Delete your branch in this pull request.\n\n<hr>\n<h3 align=\"center\">Go to <a href=\"https://github.com/Astra27/markdown-portfolio/pull/4\">the next activity</a> now!</h3>\n",
              "comment_id": 739554914,
              "event_type": "IssueCommentEvent",
              "repo_name": "Astra27/markdown-portfolio",
              "actor_login": "github-learning-lab[bot]"
            },
            {
              "body": "Thanks for this feature. I think it is nice so I am merging it but I will push few changes.\r\n\r\nFirstly I am adding `enumMemberCasing` parameter (instead of special parameter for Pascal case). This parameter can support not only \"PascalCase\" but also \"camelCase\" and possibly others. Since configuration parameters should be usable from build plugins (Maven, Gradle) I am adding this new parameter there as well. There is also description which is used when generating [documentation](https://www.habarta.cz/typescript-generator/maven/typescript-generator-maven-plugin/generate-mojo.html#enumMemberCasing). Here is an example of usage from Maven:\r\n\r\n``` xml\r\n<configuration>\r\n    ...\r\n    <mapEnum>asEnum</mapEnum>\r\n    <enumMemberCasing>PascalCase</enumMemberCasing>\r\n    ...\r\n</configuration>\r\n```\r\n\r\nNext are some improvements in splitting identifier into words using regular expression. It should now support letters other than `A-Z` and numbers should be treated as words. I am still not sure it supports all cases well but at least I added unit test specifically for this part so we can easily test and improve other cases.\r\n\r\nCould you please check my changes if the feature works as expected?",
              "comment_id": 739554911,
              "event_type": "IssueCommentEvent",
              "repo_name": "vojtechhabarta/typescript-generator",
              "actor_login": "vojtechhabarta"
            },
            {
              "body": "Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",
              "comment_id": 739554908,
              "event_type": "IssueCommentEvent",
              "repo_name": "AI2Business/ai2business",
              "actor_login": "dependabot[bot]"
            },
            {
              "body": "@rigelk same here, a UI/UX tag would be appropriate ?",
              "comment_id": 739554906,
              "event_type": "IssueCommentEvent",
              "repo_name": "Chocobozzz/PeerTube",
              "actor_login": "kimsible"
            },
            {
              "body": "I actually changed the commit to just clarify that you can't prefill the cache with the data of the next video, which I think is what was trying to be conveyed. The existing paragraph is confusing, the fact that you can't prefetch the next video's data is true for any video, there is no difference in behavior with HLS streams or m3u8 URLs.\r\n\r\n> Doesn't really matter but did you want to fix the authorship on the commit?\r\n\r\nDunno how that works, I guess it's because I changed email address.",
              "comment_id": 739554905,
              "event_type": "IssueCommentEvent",
              "repo_name": "mpv-player/mpv",
              "actor_login": "guidocella"
            },
            {
              "body": "And @ardiishere?",
              "comment_id": 739554904,
              "event_type": "IssueCommentEvent",
              "repo_name": "retorquere/zotero-deb",
              "actor_login": "retorquere"
            },
            {
              "body": "@MattWThomas oh yeah, that'd be another option if people didn't want to download the heroku cli. I think both options could help people get up and running as fast as possible.\r\n\r\nwe should add that option too?",
              "comment_id": 739554902,
              "event_type": "IssueCommentEvent",
              "repo_name": "psf/python-in-edu",
              "actor_login": "bk521234"
            }
          ],
          "meta": [
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "comment_id",
              "type": "UInt64"
            },
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 14.780609787,
            "rows_read": 284616113,
            "bytes_read": 106239871820
          },
          "executionTime": 14.825,
          "requestId": "01JTG75XTQ43BYCS9Q68CKAXG7",
          "length": 4996
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "llama-3.3-70b-instruct",
        "provider": "meta-llama",
        "metrics": {
          "timeToFirstToken": 0.854,
          "totalDuration": 1.988,
          "tokens": {
            "promptTokens": 3783,
            "completionTokens": 55,
            "totalTokens": 3838
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "COUNT()": 232118474
        }
      ],
      "meta": [
        {
          "name": "COUNT()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004630359,
        "rows_read": 134879,
        "bytes_read": 134894
      },
      "executionTime": 0.023,
      "requestId": "01JTG76FA39GESKHBQ37RKK9SB",
      "length": 23
    },
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.384,
      "totalDuration": 0.562,
      "tokens": {
        "promptTokens": 4144,
        "completionTokens": 19,
        "totalTokens": 4163
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "COUNT()": 232118474
            }
          ],
          "meta": [
            {
              "name": "COUNT()",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.004630359,
            "rows_read": 134879,
            "bytes_read": 134894
          },
          "executionTime": 0.023,
          "requestId": "01JTG76FA39GESKHBQ37RKK9SB",
          "length": 23
        },
        "name": "pipe_01.pipe",
        "question": {
          "name": "pipe_01.pipe",
          "content": "DESCRIPTION >\n    Counting stars\n    The WatchEvent is the event when someone gives a star to a repo.\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.384,
          "totalDuration": 0.562,
          "tokens": {
            "promptTokens": 4144,
            "completionTokens": 19,
            "totalTokens": 4163
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  repo_name,\n  COUNT(*) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "stars": 1890816
        },
        {
          "repo_name": "direwolf-github/my-app",
          "stars": 1426236
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "stars": 806614
        },
        {
          "repo_name": "CircleCITestOrg/smoke-test-test-repo",
          "stars": 799938
        },
        {
          "repo_name": "CLSPhila/DocketScraperAPI",
          "stars": 585944
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "stars": 561200
        },
        {
          "repo_name": "efarbereger/tmp_clock_repo",
          "stars": 551558
        },
        {
          "repo_name": "regro/releases",
          "stars": 461245
        },
        {
          "repo_name": "dipper-github-fra-sin-syd-nrt/test-python-sample",
          "stars": 388167
        },
        {
          "repo_name": "dipper-github-lhr-yul-sfo-icn/test-python-sample",
          "stars": 378251
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 21.53748021,
        "rows_read": 448167202,
        "bytes_read": 1340828877
      },
      "executionTime": 21.62,
      "requestId": "01JTG76JHHTXZNWTECS9DTPJJD",
      "length": 636
    },
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 repositories by stars"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.312,
      "totalDuration": 0.723,
      "tokens": {
        "promptTokens": 4131,
        "completionTokens": 48,
        "totalTokens": 4179
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  repo_name,\n  COUNT(*) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "stars": 1890816
            },
            {
              "repo_name": "direwolf-github/my-app",
              "stars": 1426236
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "stars": 806614
            },
            {
              "repo_name": "CircleCITestOrg/smoke-test-test-repo",
              "stars": 799938
            },
            {
              "repo_name": "CLSPhila/DocketScraperAPI",
              "stars": 585944
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "stars": 561200
            },
            {
              "repo_name": "efarbereger/tmp_clock_repo",
              "stars": 551558
            },
            {
              "repo_name": "regro/releases",
              "stars": 461245
            },
            {
              "repo_name": "dipper-github-fra-sin-syd-nrt/test-python-sample",
              "stars": 388167
            },
            {
              "repo_name": "dipper-github-lhr-yul-sfo-icn/test-python-sample",
              "stars": 378251
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 21.53748021,
            "rows_read": 448167202,
            "bytes_read": 1340828877
          },
          "executionTime": 21.62,
          "requestId": "01JTG76JHHTXZNWTECS9DTPJJD",
          "length": 636
        },
        "name": "pipe_02.pipe",
        "question": {
          "name": "pipe_02.pipe",
          "content": "DESCRIPTION >\n    Top 10 repositories by stars\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 repositories by stars"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.312,
          "totalDuration": 0.723,
          "tokens": {
            "promptTokens": 4131,
            "completionTokens": 48,
            "totalTokens": 4179
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.019,
      "requestId": "01JTG77HMA3PQTVRKSVPHFWWCA",
      "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, COUNT(*) AS repo_count FROM github_llm_bench.github_events AS github_events WHERE (stars >= 1) AND (stars <= 100000) GROUP BY repo_name ORDER BY stars ASC LIMIT 10. Maybe you meant: ['state']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.532,
      "totalDuration": 1.032,
      "tokens": {
        "promptTokens": 4365,
        "completionTokens": 61,
        "totalTokens": 4426
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTG77AWDFEMTXFGGHAB9S25G",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, COUNT(*) AS repo_count FROM github_llm_bench.github_events AS github_events WHERE (stars >= 1) AND (stars <= 100000) GROUP BY repo_name ORDER BY stars ASC LIMIT 10. Maybe you meant: ['state']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.343,
          "totalDuration": 0.864,
          "tokens": {
            "promptTokens": 4150,
            "completionTokens": 61,
            "totalTokens": 4211
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG77E5ANG7ZA9M361NS289P",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, COUNT(*) AS repo_count FROM github_llm_bench.github_events AS github_events WHERE (stars >= 1) AND (stars <= 100000) GROUP BY repo_name ORDER BY stars ASC LIMIT 10. Maybe you meant: ['state']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.311,
          "totalDuration": 0.836,
          "tokens": {
            "promptTokens": 4258,
            "completionTokens": 61,
            "totalTokens": 4319
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG77HMA3PQTVRKSVPHFWWCA",
          "error": "{\"error\": \"[Error] Unknown expression or function identifier 'stars' in scope SELECT repo_name, COUNT(*) AS repo_count FROM github_llm_bench.github_events AS github_events WHERE (stars >= 1) AND (stars <= 100000) GROUP BY repo_name ORDER BY stars ASC LIMIT 10. Maybe you meant: ['state']. (UNKNOWN_IDENTIFIER)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_03.pipe",
        "question": {
          "name": "pipe_03.pipe",
          "content": "DESCRIPTION >\n    what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\n\nNODE endpoint\nSQL >\n    SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS repo_count\nFROM\n    github_events\nWHERE\n    stars >= 1 AND stars <= 100000\nGROUP BY\n    repo_name\nORDER BY\n    stars\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.532,
          "totalDuration": 1.032,
          "tokens": {
            "promptTokens": 4365,
            "completionTokens": 61,
            "totalTokens": 4426
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_repositories": 165611259
        }
      ],
      "meta": [
        {
          "name": "total_repositories",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 24.549643017,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 24.596,
      "requestId": "01JTG77MKE2PS6C3YY9YW2EE2H",
      "length": 34
    },
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of repositories on GitHub"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.196,
      "totalDuration": 0.496,
      "tokens": {
        "promptTokens": 4132,
        "completionTokens": 27,
        "totalTokens": 4159
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_repositories": 165611259
            }
          ],
          "meta": [
            {
              "name": "total_repositories",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 24.549643017,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 24.596,
          "requestId": "01JTG77MKE2PS6C3YY9YW2EE2H",
          "length": 34
        },
        "name": "pipe_04.pipe",
        "question": {
          "name": "pipe_04.pipe",
          "content": "DESCRIPTION >\n    The total number of repositories on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(repo_name) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of repositories on GitHub"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.196,
          "totalDuration": 0.496,
          "tokens": {
            "promptTokens": 4132,
            "completionTokens": 27,
            "totalTokens": 4159
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count\nFROM\n  github_events\nWHERE\n  created_at >= '2015-01-01' AND created_at < '2016-01-01'\nGROUP BY\n  repo_name\nORDER BY\n  event_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "direwolf-github/my-app",
          "event_count": 659546
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 510424
        },
        {
          "repo_name": "JonathonSonesen/PrivacyChanges_Public",
          "event_count": 310733
        },
        {
          "repo_name": "sakai-mirror/melete",
          "event_count": 256758
        },
        {
          "repo_name": "Door43/d43-en",
          "event_count": 226907
        },
        {
          "repo_name": "apache/spark",
          "event_count": 223230
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "event_count": 189974
        },
        {
          "repo_name": "dchekhonin/testDM",
          "event_count": 151983
        },
        {
          "repo_name": "docker/docker",
          "event_count": 132956
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "event_count": 129690
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.219142368,
        "rows_read": 212559581,
        "bytes_read": 1274895506
      },
      "executionTime": 1.238,
      "requestId": "01JTG78G4DZVKBZRDQWK0957X6",
      "length": 589
    },
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
      "question": "How has the list of top repositories changed over the years from 2015"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.374,
      "totalDuration": 1.122,
      "tokens": {
        "promptTokens": 4141,
        "completionTokens": 77,
        "totalTokens": 4218
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count\nFROM\n  github_events\nWHERE\n  created_at >= '2015-01-01' AND created_at < '2016-01-01'\nGROUP BY\n  repo_name\nORDER BY\n  event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "direwolf-github/my-app",
              "event_count": 659546
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 510424
            },
            {
              "repo_name": "JonathonSonesen/PrivacyChanges_Public",
              "event_count": 310733
            },
            {
              "repo_name": "sakai-mirror/melete",
              "event_count": 256758
            },
            {
              "repo_name": "Door43/d43-en",
              "event_count": 226907
            },
            {
              "repo_name": "apache/spark",
              "event_count": 223230
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "event_count": 189974
            },
            {
              "repo_name": "dchekhonin/testDM",
              "event_count": 151983
            },
            {
              "repo_name": "docker/docker",
              "event_count": 132956
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "event_count": 129690
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.219142368,
            "rows_read": 212559581,
            "bytes_read": 1274895506
          },
          "executionTime": 1.238,
          "requestId": "01JTG78G4DZVKBZRDQWK0957X6",
          "length": 589
        },
        "name": "pipe_05.pipe",
        "question": {
          "name": "pipe_05.pipe",
          "content": "DESCRIPTION >\n    How has the list of top repositories changed over the years from 2015\n\nNODE endpoint\nSQL >\n    SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year\n\nTYPE endpoint",
          "question": "How has the list of top repositories changed over the years from 2015"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.374,
          "totalDuration": 1.122,
          "tokens": {
            "promptTokens": 4141,
            "completionTokens": 77,
            "totalTokens": 4218
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  toYYYYMM(created_at) AS year_month,\n  sum(if(event_type = 'StarEvent', 1, 0)) AS stars_added,\n  sum(if(event_type = 'UnstarEvent', 1, 0)) AS stars_removed\nFROM github_events\nGROUP BY year_month\nORDER BY year_month\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year_month": 201102,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201103,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201104,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201105,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201106,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201107,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201108,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201109,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201110,
          "stars_added": 0,
          "stars_removed": 0
        },
        {
          "year_month": 201111,
          "stars_added": 0,
          "stars_removed": 0
        }
      ],
      "meta": [
        {
          "name": "year_month",
          "type": "UInt32"
        },
        {
          "name": "stars_added",
          "type": "UInt64"
        },
        {
          "name": "stars_removed",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.798834406,
        "rows_read": 3124889133,
        "bytes_read": 15624445665
      },
      "executionTime": 2.84,
      "requestId": "01JTG78MVAQ9Q8XZ54NRFGK7BP",
      "length": 561
    },
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
      "question": "How has the total number of stars changed over time?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.295,
      "totalDuration": 1.066,
      "tokens": {
        "promptTokens": 4135,
        "completionTokens": 79,
        "totalTokens": 4214
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  toYYYYMM(created_at) AS year_month,\n  sum(if(event_type = 'StarEvent', 1, 0)) AS stars_added,\n  sum(if(event_type = 'UnstarEvent', 1, 0)) AS stars_removed\nFROM github_events\nGROUP BY year_month\nORDER BY year_month\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "year_month": 201102,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201103,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201104,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201105,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201106,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201107,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201108,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201109,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201110,
              "stars_added": 0,
              "stars_removed": 0
            },
            {
              "year_month": 201111,
              "stars_added": 0,
              "stars_removed": 0
            }
          ],
          "meta": [
            {
              "name": "year_month",
              "type": "UInt32"
            },
            {
              "name": "stars_added",
              "type": "UInt64"
            },
            {
              "name": "stars_removed",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.798834406,
            "rows_read": 3124889133,
            "bytes_read": 15624445665
          },
          "executionTime": 2.84,
          "requestId": "01JTG78MVAQ9Q8XZ54NRFGK7BP",
          "length": 561
        },
        "name": "pipe_06.pipe",
        "question": {
          "name": "pipe_06.pipe",
          "content": "DESCRIPTION >\n    How has the total number of stars changed over time?\n\nNODE endpoint\nSQL >\n    SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year\n\nTYPE endpoint",
          "question": "How has the total number of stars changed over time?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.295,
          "totalDuration": 1.066,
          "tokens": {
            "promptTokens": 4135,
            "completionTokens": 79,
            "totalTokens": 4214
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  actor_login,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\nGROUP BY\n  actor_login\nORDER BY\n  stars_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005885074,
        "rows_read": 136959,
        "bytes_read": 136959
      },
      "executionTime": 0.024,
      "requestId": "01JTG78TTTD0NT361SDK3DH5MF",
      "length": 2
    },
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
      "question": "Who are top 10 people giving stars?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.44,
      "totalDuration": 0.81,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 50,
        "totalTokens": 4184
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  actor_login,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\nGROUP BY\n  actor_login\nORDER BY\n  stars_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005885074,
            "rows_read": 136959,
            "bytes_read": 136959
          },
          "executionTime": 0.024,
          "requestId": "01JTG78TTTD0NT361SDK3DH5MF",
          "length": 2
        },
        "name": "pipe_07.pipe",
        "question": {
          "name": "pipe_07.pipe",
          "content": "DESCRIPTION >\n    Who are top 10 people giving stars?\n\nNODE endpoint\nSQL >\n    SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10\n\nTYPE endpoint",
          "question": "Who are top 10 people giving stars?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.44,
          "totalDuration": 0.81,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 50,
            "totalTokens": 4184
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_login = 'freecodecamp'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.57704853,
        "rows_read": 232190399,
        "bytes_read": 696568372
      },
      "executionTime": 1.596,
      "requestId": "01JTG78Y3QM86ZF83F81H8HE2Q",
      "length": 2
    },
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.205,
      "totalDuration": 0.831,
      "tokens": {
        "promptTokens": 4154,
        "completionTokens": 64,
        "totalTokens": 4218
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_login = 'freecodecamp'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.57704853,
            "rows_read": 232190399,
            "bytes_read": 696568372
          },
          "executionTime": 1.596,
          "requestId": "01JTG78Y3QM86ZF83F81H8HE2Q",
          "length": 2
        },
        "name": "pipe_08.pipe",
        "question": {
          "name": "pipe_08.pipe",
          "content": "DESCRIPTION >\n    what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.205,
          "totalDuration": 0.831,
          "tokens": {
            "promptTokens": 4154,
            "completionTokens": 64,
            "totalTokens": 4218
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  actor_login,\n  COUNT(*) AS star_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\n  AND actor_login = 'javisantana'\nGROUP BY\n  actor_login\nORDER BY\n  star_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "star_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.006930852,
        "rows_read": 136959,
        "bytes_read": 136959
      },
      "executionTime": 0.026,
      "requestId": "01JTG7932476X0PFHN14P1XGBX",
      "length": 2
    },
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"friends\" to javisantana through counting stars"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.395,
      "totalDuration": 0.971,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 63,
        "totalTokens": 4201
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  actor_login,\n  COUNT(*) AS star_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\n  AND actor_login = 'javisantana'\nGROUP BY\n  actor_login\nORDER BY\n  star_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "star_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.006930852,
            "rows_read": 136959,
            "bytes_read": 136959
          },
          "executionTime": 0.026,
          "requestId": "01JTG7932476X0PFHN14P1XGBX",
          "length": 2
        },
        "name": "pipe_09.pipe",
        "question": {
          "name": "pipe_09.pipe",
          "content": "DESCRIPTION >\n    top 10 \"friends\" to javisantana through counting stars\n\nNODE endpoint\nSQL >\n    WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"friends\" to javisantana through counting stars"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.395,
          "totalDuration": 0.971,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 63,
            "totalTokens": 4201
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  actor_login,\n  repo_name\nFROM\n  github_events\nWHERE\n  actor_login IN (\n    SELECT\n      actor_login\n    FROM\n      github_events\n    WHERE\n      repo_name = 'freecodecamp'\n    GROUP BY\n      actor_login\n    ORDER BY\n      COUNT(*) DESC\n    LIMIT 10\n  )\nGROUP BY\n  actor_login, repo_name\nORDER BY\n  COUNT(*) DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 7.089104097,
        "rows_read": 3127355383,
        "bytes_read": 6250330477
      },
      "executionTime": 7.133,
      "requestId": "01JTG796ZNYRE95YP092CGSC7J",
      "length": 2
    },
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.637,
      "totalDuration": 1.466,
      "tokens": {
        "promptTokens": 4142,
        "completionTokens": 99,
        "totalTokens": 4241
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  actor_login,\n  repo_name\nFROM\n  github_events\nWHERE\n  actor_login IN (\n    SELECT\n      actor_login\n    FROM\n      github_events\n    WHERE\n      repo_name = 'freecodecamp'\n    GROUP BY\n      actor_login\n    ORDER BY\n      COUNT(*) DESC\n    LIMIT 10\n  )\nGROUP BY\n  actor_login, repo_name\nORDER BY\n  COUNT(*) DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 7.089104097,
            "rows_read": 3127355383,
            "bytes_read": 6250330477
          },
          "executionTime": 7.133,
          "requestId": "01JTG796ZNYRE95YP092CGSC7J",
          "length": 2
        },
        "name": "pipe_10.pipe",
        "question": {
          "name": "pipe_10.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that contributed to freecodecamp also contributed to what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.637,
          "totalDuration": 1.466,
          "tokens": {
            "promptTokens": 4142,
            "completionTokens": 99,
            "totalTokens": 4241
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  actor_login,\n  repo_name\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND actor_login = 'freecodecamp'\nGROUP BY\n  actor_login,\n  repo_name\nORDER BY\n  count() DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.231508432,
        "rows_read": 111439849,
        "bytes_read": 334016991
      },
      "executionTime": 0.251,
      "requestId": "01JTG79H511VRKMF12G6DC3MXJ",
      "length": 2
    },
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.264,
      "totalDuration": 0.801,
      "tokens": {
        "promptTokens": 4145,
        "completionTokens": 63,
        "totalTokens": 4208
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  actor_login,\n  repo_name\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND actor_login = 'freecodecamp'\nGROUP BY\n  actor_login,\n  repo_name\nORDER BY\n  count() DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 0.231508432,
            "rows_read": 111439849,
            "bytes_read": 334016991
          },
          "executionTime": 0.251,
          "requestId": "01JTG79H511VRKMF12G6DC3MXJ",
          "length": 2
        },
        "name": "pipe_11.pipe",
        "question": {
          "name": "pipe_11.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.264,
          "totalDuration": 0.801,
          "tokens": {
            "promptTokens": 4145,
            "completionTokens": 63,
            "totalTokens": 4208
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\n  AND action = 'created'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.073990501,
        "rows_read": 448167202,
        "bytes_read": 896329447
      },
      "executionTime": 0.092,
      "requestId": "01JTG79MQG56CE0PMMW8CMKNZW",
      "length": 2
    },
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most stars over one day"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.284,
      "totalDuration": 0.908,
      "tokens": {
        "promptTokens": 4137,
        "completionTokens": 62,
        "totalTokens": 4199
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\n  AND action = 'created'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.073990501,
            "rows_read": 448167202,
            "bytes_read": 896329447
          },
          "executionTime": 0.092,
          "requestId": "01JTG79MQG56CE0PMMW8CMKNZW",
          "length": 2
        },
        "name": "pipe_12.pipe",
        "question": {
          "name": "pipe_12.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most stars over one day\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most stars over one day"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.284,
          "totalDuration": 0.908,
          "tokens": {
            "promptTokens": 4137,
            "completionTokens": 62,
            "totalTokens": 4199
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.018,
      "requestId": "01JTG7A0XYZFV5CXJ57VGS9BQD",
      "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.342,
      "totalDuration": 1.619,
      "tokens": {
        "promptTokens": 4518,
        "completionTokens": 139,
        "totalTokens": 4657
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG79RQE98WWSSWSKFZFPC8T",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the highest growth YoY 2019 and 2020"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.298,
          "totalDuration": 1.497,
          "tokens": {
            "promptTokens": 4147,
            "completionTokens": 137,
            "totalTokens": 4284
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG79WWK9KKPC1R76GM1DDFG",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.683,
          "totalDuration": 1.741,
          "tokens": {
            "promptTokens": 4333,
            "completionTokens": 139,
            "totalTokens": 4472
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTG7A0XYZFV5CXJ57VGS9BQD",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_13.pipe",
        "question": {
          "name": "pipe_13.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the highest growth YoY 2019 and 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the highest growth YoY 2019 and 2020\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS event_count_2019,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS event_count_2019_filtered,\n  COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS event_count_2020_filtered\nFROM\n  github_events\nWHERE\n  YEAR(created_at) IN (2019, 2020)\nGROUP BY\n  repo_name\nORDER BY\n  event_count_2020_filtered DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.342,
          "totalDuration": 1.619,
          "tokens": {
            "promptTokens": 4518,
            "completionTokens": 139,
            "totalTokens": 4657
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.018,
      "requestId": "01JTG7AD1A56JYKZQHGN839VT3",
      "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the worst stagnation in 2019 vs 2020\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.217,
      "totalDuration": 1.713,
      "tokens": {
        "promptTokens": 4514,
        "completionTokens": 137,
        "totalTokens": 4651
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG7A4WQ2GDW4AKT4T5HNJ7G",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.288,
          "totalDuration": 1.538,
          "tokens": {
            "promptTokens": 4147,
            "completionTokens": 135,
            "totalTokens": 4282
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG7A8X2226CTBBYH5GP5PVG",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 Repositories with the worst stagnation in 2019 vs 2020\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.445,
          "totalDuration": 1.588,
          "tokens": {
            "promptTokens": 4331,
            "completionTokens": 137,
            "totalTokens": 4468
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTG7AD1A56JYKZQHGN839VT3",
          "error": "{\"error\": \"[Error] Aggregate function COUNT requires zero or one argument. (NUMBER_OF_ARGUMENTS_DOESNT_MATCH)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_14.pipe",
        "question": {
          "name": "pipe_14.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the worst stagnation in 2019 vs 2020\n\nNODE endpoint\nSQL >\n    WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"top 10 Repositories with the worst stagnation in 2019 vs 2020\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n    repo_name,\n    COUNT(*) AS total_events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2019) AS events_2019,\n    COUNT(*) FILTER (WHERE YEAR(created_at) = 2020) AS events_2020\nFROM\n    github_events\nWHERE\n    YEAR(created_at) IN (2019, 2020)\nGROUP BY\n    repo_name\nORDER BY\n    events_2019 - events_2020 DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.217,
          "totalDuration": 1.713,
          "tokens": {
            "promptTokens": 4514,
            "completionTokens": 137,
            "totalTokens": 4651
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  event_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "event_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "event_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "event_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "event_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "event_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "event_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "event_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "event_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "event_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "event_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "event_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 16.216265669,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 16.265,
      "requestId": "01JTG7AGARX15QDFC235F119VR",
      "length": 581
    },
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most steady growth over time"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.273,
      "totalDuration": 0.828,
      "tokens": {
        "promptTokens": 4137,
        "completionTokens": 55,
        "totalTokens": 4192
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS event_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  event_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "event_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "event_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "event_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "event_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "event_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "event_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "event_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "event_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "event_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "event_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "event_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 16.216265669,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 16.265,
          "requestId": "01JTG7AGARX15QDFC235F119VR",
          "length": 581
        },
        "name": "pipe_15.pipe",
        "question": {
          "name": "pipe_15.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most steady growth over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most steady growth over time"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.273,
          "totalDuration": 0.828,
          "tokens": {
            "promptTokens": 4137,
            "completionTokens": 55,
            "totalTokens": 4192
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  dayofweek(created_at) day_of_week,\n  count() count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY day_of_week\nORDER BY count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day_of_week": 2,
          "count": 255844315
        },
        {
          "day_of_week": 3,
          "count": 254353879
        },
        {
          "day_of_week": 4,
          "count": 250621727
        },
        {
          "day_of_week": 1,
          "count": 246513974
        },
        {
          "day_of_week": 5,
          "count": 235607588
        },
        {
          "day_of_week": 7,
          "count": 183277748
        },
        {
          "day_of_week": 6,
          "count": 175101100
        }
      ],
      "meta": [
        {
          "name": "day_of_week",
          "type": "UInt8"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.072369915,
        "rows_read": 1601472977,
        "bytes_read": 8007177641
      },
      "executionTime": 1.091,
      "requestId": "01JTG7B3CK0WM2RTRX64243T97",
      "length": 253
    },
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
      "question": "What is the best day of the week to catch a star?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.351,
      "totalDuration": 0.779,
      "tokens": {
        "promptTokens": 4137,
        "completionTokens": 48,
        "totalTokens": 4185
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  dayofweek(created_at) day_of_week,\n  count() count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY day_of_week\nORDER BY count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "day_of_week": 2,
              "count": 255844315
            },
            {
              "day_of_week": 3,
              "count": 254353879
            },
            {
              "day_of_week": 4,
              "count": 250621727
            },
            {
              "day_of_week": 1,
              "count": 246513974
            },
            {
              "day_of_week": 5,
              "count": 235607588
            },
            {
              "day_of_week": 7,
              "count": 183277748
            },
            {
              "day_of_week": 6,
              "count": 175101100
            }
          ],
          "meta": [
            {
              "name": "day_of_week",
              "type": "UInt8"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.072369915,
            "rows_read": 1601472977,
            "bytes_read": 8007177641
          },
          "executionTime": 1.091,
          "requestId": "01JTG7B3CK0WM2RTRX64243T97",
          "length": 253
        },
        "name": "pipe_16.pipe",
        "question": {
          "name": "pipe_16.pipe",
          "content": "DESCRIPTION >\n    What is the best day of the week to catch a star?\n\nNODE endpoint\nSQL >\n    SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day\n\nTYPE endpoint",
          "question": "What is the best day of the week to catch a star?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.351,
          "totalDuration": 0.779,
          "tokens": {
            "promptTokens": 4137,
            "completionTokens": 48,
            "totalTokens": 4185
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 34099240
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 19.380509788,
        "rows_read": 3124889133,
        "bytes_read": 6245399036
      },
      "executionTime": 19.458,
      "requestId": "01JTG7B7FVN2JRRXQVG61QRVKF",
      "length": 26
    },
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
      "question": "The total number of users on GitHub"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.296,
      "totalDuration": 0.55,
      "tokens": {
        "promptTokens": 4132,
        "completionTokens": 26,
        "totalTokens": 4158
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 34099240
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 19.380509788,
            "rows_read": 3124889133,
            "bytes_read": 6245399036
          },
          "executionTime": 19.458,
          "requestId": "01JTG7B7FVN2JRRXQVG61QRVKF",
          "length": 26
        },
        "name": "pipe_17.pipe",
        "question": {
          "name": "pipe_17.pipe",
          "content": "DESCRIPTION >\n    The total number of users on GitHub\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events\n\nTYPE endpoint",
          "question": "The total number of users on GitHub"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.296,
          "totalDuration": 0.55,
          "tokens": {
            "promptTokens": 4132,
            "completionTokens": 26,
            "totalTokens": 4158
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'StarEvent'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 0
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005537728,
        "rows_read": 136959,
        "bytes_read": 136959
      },
      "executionTime": 0.023,
      "requestId": "01JTG7BXHEY7RY0FMGGKMJVN6D",
      "length": 19
    },
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
      "question": "Total number of users that gave at least one star"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.384,
      "totalDuration": 0.678,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 34,
        "totalTokens": 4168
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'StarEvent'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 0
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005537728,
            "rows_read": 136959,
            "bytes_read": 136959
          },
          "executionTime": 0.023,
          "requestId": "01JTG7BXHEY7RY0FMGGKMJVN6D",
          "length": 19
        },
        "name": "pipe_18.pipe",
        "question": {
          "name": "pipe_18.pipe",
          "content": "DESCRIPTION >\n    Total number of users that gave at least one star\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'\n\nTYPE endpoint",
          "question": "Total number of users that gave at least one star"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.384,
          "totalDuration": 0.678,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 34,
            "totalTokens": 4168
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users_with_push": 18808891
        }
      ],
      "meta": [
        {
          "name": "total_users_with_push",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.310249973,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 6.354,
      "requestId": "01JTG7C0MJKNHM7T30GX0QR01R",
      "length": 36
    },
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
      "question": "Total number of users with at least one push"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.333,
      "totalDuration": 0.623,
      "tokens": {
        "promptTokens": 4133,
        "completionTokens": 34,
        "totalTokens": 4167
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users_with_push": 18808891
            }
          ],
          "meta": [
            {
              "name": "total_users_with_push",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 6.310249973,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 6.354,
          "requestId": "01JTG7C0MJKNHM7T30GX0QR01R",
          "length": 36
        },
        "name": "pipe_19.pipe",
        "question": {
          "name": "pipe_19.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one push\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'\n\nTYPE endpoint",
          "question": "Total number of users with at least one push"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.333,
          "totalDuration": 0.623,
          "tokens": {
            "promptTokens": 4133,
            "completionTokens": 34,
            "totalTokens": 4167
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE action = 'created' AND event_type = 'PullRequestEvent'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_users": 0
        }
      ],
      "meta": [
        {
          "name": "total_users",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.069107963,
        "rows_read": 214762171,
        "bytes_read": 214821112
      },
      "executionTime": 0.087,
      "requestId": "01JTG7C9TT63R0BXMK83K6W5ZB",
      "length": 19
    },
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
      "question": "Total number of users with at least one created PR"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.228,
      "totalDuration": 0.583,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 41,
        "totalTokens": 4175
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE action = 'created' AND event_type = 'PullRequestEvent'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_users": 0
            }
          ],
          "meta": [
            {
              "name": "total_users",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.069107963,
            "rows_read": 214762171,
            "bytes_read": 214821112
          },
          "executionTime": 0.087,
          "requestId": "01JTG7C9TT63R0BXMK83K6W5ZB",
          "length": 19
        },
        "name": "pipe_20.pipe",
        "question": {
          "name": "pipe_20.pipe",
          "content": "DESCRIPTION >\n    Total number of users with at least one created PR\n\nNODE endpoint\nSQL >\n    SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n\nTYPE endpoint",
          "question": "Total number of users with at least one created PR"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.228,
          "totalDuration": 0.583,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 41,
            "totalTokens": 4175
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\n  AND actor_login IN (\n    SELECT DISTINCT\n      actor_login\n    FROM\n      github_events\n    WHERE\n      event_type IN ('PullRequestEvent', 'PullRequestReviewEvent')\n  )\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 3.51992604,
        "rows_read": 222378274,
        "bytes_read": 666539091
      },
      "executionTime": 3.587,
      "requestId": "01JTG7CDC70S2XR3J6R81JDVDJ",
      "length": 2
    },
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.188,
      "totalDuration": 0.993,
      "tokens": {
        "promptTokens": 4151,
        "completionTokens": 97,
        "totalTokens": 4248
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\n  AND actor_login IN (\n    SELECT DISTINCT\n      actor_login\n    FROM\n      github_events\n    WHERE\n      event_type IN ('PullRequestEvent', 'PullRequestReviewEvent')\n  )\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 3.51992604,
            "rows_read": 222378274,
            "bytes_read": 666539091
          },
          "executionTime": 3.587,
          "requestId": "01JTG7CDC70S2XR3J6R81JDVDJ",
          "length": 2
        },
        "name": "pipe_21.pipe",
        "question": {
          "name": "pipe_21.pipe",
          "content": "DESCRIPTION >\n    What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.188,
          "totalDuration": 0.993,
          "tokens": {
            "promptTokens": 4151,
            "completionTokens": 97,
            "totalTokens": 4248
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  actor_login,\n  COUNT(*) AS pr_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  actor_login\nHAVING\n  COUNT(*) >= 10\nORDER BY\n  pr_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "dependabot[bot]",
          "pr_count": 22389168
        },
        {
          "actor_login": "pull[bot]",
          "pr_count": 8262468
        },
        {
          "actor_login": "dependabot-preview[bot]",
          "pr_count": 7815376
        },
        {
          "actor_login": "renovate[bot]",
          "pr_count": 2539584
        },
        {
          "actor_login": "direwolf-github",
          "pr_count": 2422483
        },
        {
          "actor_login": "pyup-bot",
          "pr_count": 832894
        },
        {
          "actor_login": "greenkeeper[bot]",
          "pr_count": 642504
        },
        {
          "actor_login": "snyk-bot",
          "pr_count": 545215
        },
        {
          "actor_login": "greenkeeperio-bot",
          "pr_count": 461471
        },
        {
          "actor_login": "everypoliticianbot",
          "pr_count": 312849
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pr_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.109785701,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.128,
      "requestId": "01JTG7CM3ZX4XJF49Q9S229JMG",
      "length": 519
    },
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors who have made at least 10 PRs?"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.259,
      "totalDuration": 0.862,
      "tokens": {
        "promptTokens": 4140,
        "completionTokens": 63,
        "totalTokens": 4203
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  actor_login,\n  COUNT(*) AS pr_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  actor_login\nHAVING\n  COUNT(*) >= 10\nORDER BY\n  pr_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "dependabot[bot]",
              "pr_count": 22389168
            },
            {
              "actor_login": "pull[bot]",
              "pr_count": 8262468
            },
            {
              "actor_login": "dependabot-preview[bot]",
              "pr_count": 7815376
            },
            {
              "actor_login": "renovate[bot]",
              "pr_count": 2539584
            },
            {
              "actor_login": "direwolf-github",
              "pr_count": 2422483
            },
            {
              "actor_login": "pyup-bot",
              "pr_count": 832894
            },
            {
              "actor_login": "greenkeeper[bot]",
              "pr_count": 642504
            },
            {
              "actor_login": "snyk-bot",
              "pr_count": 545215
            },
            {
              "actor_login": "greenkeeperio-bot",
              "pr_count": 461471
            },
            {
              "actor_login": "everypoliticianbot",
              "pr_count": 312849
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pr_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.109785701,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.128,
          "requestId": "01JTG7CM3ZX4XJF49Q9S229JMG",
          "length": 519
        },
        "name": "pipe_22.pipe",
        "question": {
          "name": "pipe_22.pipe",
          "content": "DESCRIPTION >\n    top 10 authors who have made at least 10 PRs?\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors who have made at least 10 PRs?"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.259,
          "totalDuration": 0.862,
          "tokens": {
            "promptTokens": 4140,
            "completionTokens": 63,
            "totalTokens": 4203
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  count(*) as pull_requests_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  pull_requests_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "pull_requests_count": 703341
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "pull_requests_count": 316574
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "pull_requests_count": 198956
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pull_requests_count": 169172
        },
        {
          "repo_name": "mxcl/homebrew",
          "pull_requests_count": 155816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "pull_requests_count": 122040
        },
        {
          "repo_name": "sauron-demo/sauron",
          "pull_requests_count": 112182
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "pull_requests_count": 110458
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "pull_requests_count": 109740
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "pull_requests_count": 107743
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_requests_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.67648986,
        "rows_read": 214762171,
        "bytes_read": 644115308
      },
      "executionTime": 1.695,
      "requestId": "01JTG7CRJGBS00J2EPBJHC657C",
      "length": 716
    },
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull requests"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.427,
      "totalDuration": 0.932,
      "tokens": {
        "promptTokens": 4137,
        "completionTokens": 58,
        "totalTokens": 4195
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  count(*) as pull_requests_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  pull_requests_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "google-test/signcla-probe-repo",
              "pull_requests_count": 703341
            },
            {
              "repo_name": "everypolitician/everypolitician-data",
              "pull_requests_count": 316574
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "pull_requests_count": 198956
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "pull_requests_count": 169172
            },
            {
              "repo_name": "mxcl/homebrew",
              "pull_requests_count": 155816
            },
            {
              "repo_name": "Homebrew/homebrew-core",
              "pull_requests_count": 122040
            },
            {
              "repo_name": "sauron-demo/sauron",
              "pull_requests_count": 112182
            },
            {
              "repo_name": "test-organization-kkjeer/bot-validation",
              "pull_requests_count": 110458
            },
            {
              "repo_name": "test-organization-kkjeer/app-test",
              "pull_requests_count": 109740
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "pull_requests_count": 107743
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_requests_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.67648986,
            "rows_read": 214762171,
            "bytes_read": 644115308
          },
          "executionTime": 1.695,
          "requestId": "01JTG7CRJGBS00J2EPBJHC657C",
          "length": 716
        },
        "name": "pipe_23.pipe",
        "question": {
          "name": "pipe_23.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull requests\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull requests"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.427,
          "totalDuration": 0.932,
          "tokens": {
            "promptTokens": 4137,
            "completionTokens": 58,
            "totalTokens": 4195
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS pull_request_contributors\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  pull_request_contributors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "pull_request_contributors": 31972
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "pull_request_contributors": 25009
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "pull_request_contributors": 18392
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "pull_request_contributors": 13867
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "pull_request_contributors": 9892
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "pull_request_contributors": 9760
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "pull_request_contributors": 8886
        },
        {
          "repo_name": "JetBrains/swot",
          "pull_request_contributors": 8301
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "pull_request_contributors": 8172
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "pull_request_contributors": 8130
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pull_request_contributors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.628694321,
        "rows_read": 214762171,
        "bytes_read": 1073468445
      },
      "executionTime": 2.675,
      "requestId": "01JTG7CXTSKGR1WYE7F9Z841HH",
      "length": 790
    },
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.366,
      "totalDuration": 1.165,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 64,
        "totalTokens": 4202
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS pull_request_contributors\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  pull_request_contributors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jlord/patchwork",
              "pull_request_contributors": 31972
            },
            {
              "repo_name": "firstcontributions/first-contributions",
              "pull_request_contributors": 25009
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "pull_request_contributors": 18392
            },
            {
              "repo_name": "DefinitelyTyped/DefinitelyTyped",
              "pull_request_contributors": 13867
            },
            {
              "repo_name": "deadlyvipers/dojo_rules",
              "pull_request_contributors": 9892
            },
            {
              "repo_name": "google/it-cert-automation-practice",
              "pull_request_contributors": 9760
            },
            {
              "repo_name": "udacity/create-your-own-adventure",
              "pull_request_contributors": 8886
            },
            {
              "repo_name": "JetBrains/swot",
              "pull_request_contributors": 8301
            },
            {
              "repo_name": "udacity/course-collaboration-travel-plans",
              "pull_request_contributors": 8172
            },
            {
              "repo_name": "zero-to-mastery/start-here-guidelines",
              "pull_request_contributors": 8130
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "pull_request_contributors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.628694321,
            "rows_read": 214762171,
            "bytes_read": 1073468445
          },
          "executionTime": 2.675,
          "requestId": "01JTG7CXTSKGR1WYE7F9Z841HH",
          "length": 790
        },
        "name": "pipe_24.pipe",
        "question": {
          "name": "pipe_24.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of pull request contributors\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of pull request contributors"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.366,
          "totalDuration": 1.165,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 64,
            "totalTokens": 4202
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  count(*) as issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.471749924,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.49,
      "requestId": "01JTG7D3T6HZGS3732FKF5NM2P",
      "length": 573
    },
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.526,
      "totalDuration": 0.971,
      "tokens": {
        "promptTokens": 4136,
        "completionTokens": 54,
        "totalTokens": 4190
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  count(*) as issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.471749924,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.49,
          "requestId": "01JTG7D3T6HZGS3732FKF5NM2P",
          "length": 573
        },
        "name": "pipe_25.pipe",
        "question": {
          "name": "pipe_25.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.526,
          "totalDuration": 0.971,
          "tokens": {
            "promptTokens": 4136,
            "completionTokens": 54,
            "totalTokens": 4190
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(IF(author_association = 'OWNER' OR author_association = 'COLLABORATOR', 1, 0)) AS real_issues,\n  COUNT(IF(author_association = 'MANNEQUIN', 1, 0)) AS robot_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nHAVING\n  COUNT(*) > 1000\nORDER BY\n  real_issues DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "real_issues": 379379,
          "robot_issues": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "real_issues": 308876,
          "robot_issues": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "real_issues": 258400,
          "robot_issues": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "real_issues": 216215,
          "robot_issues": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "real_issues": 181451,
          "robot_issues": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "real_issues": 173986,
          "robot_issues": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "real_issues": 149264,
          "robot_issues": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "real_issues": 139269,
          "robot_issues": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "real_issues": 132612,
          "robot_issues": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "real_issues": 130935,
          "robot_issues": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        },
        {
          "name": "robot_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.549893808,
        "rows_read": 111439849,
        "bytes_read": 445385342
      },
      "executionTime": 0.569,
      "requestId": "01JTG7D84ANJP8NY1ZP9Q565Q1",
      "length": 793
    },
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.273,
      "totalDuration": 1.426,
      "tokens": {
        "promptTokens": 4154,
        "completionTokens": 126,
        "totalTokens": 4280
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(IF(author_association = 'OWNER' OR author_association = 'COLLABORATOR', 1, 0)) AS real_issues,\n  COUNT(IF(author_association = 'MANNEQUIN', 1, 0)) AS robot_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nHAVING\n  COUNT(*) > 1000\nORDER BY\n  real_issues DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "real_issues": 379379,
              "robot_issues": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "real_issues": 308876,
              "robot_issues": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "real_issues": 258400,
              "robot_issues": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "real_issues": 216215,
              "robot_issues": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "real_issues": 181451,
              "robot_issues": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "real_issues": 173986,
              "robot_issues": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "real_issues": 149264,
              "robot_issues": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "real_issues": 139269,
              "robot_issues": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "real_issues": 132612,
              "robot_issues": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "real_issues": 130935,
              "robot_issues": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            },
            {
              "name": "robot_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.549893808,
            "rows_read": 111439849,
            "bytes_read": 445385342
          },
          "executionTime": 0.569,
          "requestId": "01JTG7D84ANJP8NY1ZP9Q565Q1",
          "length": 793
        },
        "name": "pipe_26.pipe",
        "question": {
          "name": "pipe_26.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.273,
          "totalDuration": 1.426,
          "tokens": {
            "promptTokens": 4154,
            "completionTokens": 126,
            "totalTokens": 4280
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT IF(author_association = 'OWNER', actor_login, NULL)) AS real_issues,\n  COUNT(DISTINCT IF(author_association = 'MEMBER', actor_login, NULL)) AS robot_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  real_issues DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Automattic/wp-calypso",
          "real_issues": 63,
          "robot_issues": 245
        },
        {
          "repo_name": "IascAtBrock/IASC-2P02-TeamPresentations",
          "real_issues": 60,
          "robot_issues": 0
        },
        {
          "repo_name": "HGustavs/LenaSYS",
          "real_issues": 51,
          "robot_issues": 0
        },
        {
          "repo_name": "cockroachdb/cockroach",
          "real_issues": 38,
          "robot_issues": 90
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "real_issues": 34,
          "robot_issues": 318
        },
        {
          "repo_name": "nodejs/node",
          "real_issues": 33,
          "robot_issues": 135
        },
        {
          "repo_name": "dart-lang/sdk",
          "real_issues": 30,
          "robot_issues": 100
        },
        {
          "repo_name": "develop-me/git-simple",
          "real_issues": 30,
          "robot_issues": 22
        },
        {
          "repo_name": "profeIAP/retados",
          "real_issues": 29,
          "robot_issues": 0
        },
        {
          "repo_name": "mantidproject/mantid",
          "real_issues": 28,
          "robot_issues": 56
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "real_issues",
          "type": "UInt64"
        },
        {
          "name": "robot_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.062670941,
        "rows_read": 111439849,
        "bytes_read": 667921194
      },
      "executionTime": 1.081,
      "requestId": "01JTG7DC8ZMA1PMHQ2AZJ0D27V",
      "length": 721
    },
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.263,
      "totalDuration": 1.175,
      "tokens": {
        "promptTokens": 4161,
        "completionTokens": 96,
        "totalTokens": 4257
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT IF(author_association = 'OWNER', actor_login, NULL)) AS real_issues,\n  COUNT(DISTINCT IF(author_association = 'MEMBER', actor_login, NULL)) AS robot_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  real_issues DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "Automattic/wp-calypso",
              "real_issues": 63,
              "robot_issues": 245
            },
            {
              "repo_name": "IascAtBrock/IASC-2P02-TeamPresentations",
              "real_issues": 60,
              "robot_issues": 0
            },
            {
              "repo_name": "HGustavs/LenaSYS",
              "real_issues": 51,
              "robot_issues": 0
            },
            {
              "repo_name": "cockroachdb/cockroach",
              "real_issues": 38,
              "robot_issues": 90
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "real_issues": 34,
              "robot_issues": 318
            },
            {
              "repo_name": "nodejs/node",
              "real_issues": 33,
              "robot_issues": 135
            },
            {
              "repo_name": "dart-lang/sdk",
              "real_issues": 30,
              "robot_issues": 100
            },
            {
              "repo_name": "develop-me/git-simple",
              "real_issues": 30,
              "robot_issues": 22
            },
            {
              "repo_name": "profeIAP/retados",
              "real_issues": 29,
              "robot_issues": 0
            },
            {
              "repo_name": "mantidproject/mantid",
              "real_issues": 28,
              "robot_issues": 56
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "real_issues",
              "type": "UInt64"
            },
            {
              "name": "robot_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.062670941,
            "rows_read": 111439849,
            "bytes_read": 667921194
          },
          "executionTime": 1.081,
          "requestId": "01JTG7DC8ZMA1PMHQ2AZJ0D27V",
          "length": 721
        },
        "name": "pipe_27.pipe",
        "question": {
          "name": "pipe_27.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors\n\nNODE endpoint\nSQL >\n    WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.263,
          "totalDuration": 1.175,
          "tokens": {
            "promptTokens": 4161,
            "completionTokens": 96,
            "totalTokens": 4257
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_people_with_push_access\nFROM\n  github_events\nWHERE\n  action = 'push'\nGROUP BY\n  repo_name\nORDER BY\n  num_people_with_push_access DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_people_with_push_access",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.220635728,
        "rows_read": 3124889133,
        "bytes_read": 3124889133
      },
      "executionTime": 0.238,
      "requestId": "01JTG7DGP7VCSK78JPECVYDZJT",
      "length": 2
    },
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.377,
      "totalDuration": 0.935,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 65,
        "totalTokens": 4203
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_people_with_push_access\nFROM\n  github_events\nWHERE\n  action = 'push'\nGROUP BY\n  repo_name\nORDER BY\n  num_people_with_push_access DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_people_with_push_access",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.220635728,
            "rows_read": 3124889133,
            "bytes_read": 3124889133
          },
          "executionTime": 0.238,
          "requestId": "01JTG7DGP7VCSK78JPECVYDZJT",
          "length": 2
        },
        "name": "pipe_28.pipe",
        "question": {
          "name": "pipe_28.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access\n\nNODE endpoint\nSQL >\n    SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.377,
          "totalDuration": 0.935,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 65,
            "totalTokens": 4203
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_actors\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent' AND\n  ref_type = 'branch' AND\n  ref = 'main'\nGROUP BY\n  repo_name\nORDER BY\n  num_actors DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "num_actors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.212885785,
        "rows_read": 1601472977,
        "bytes_read": 3202878489
      },
      "executionTime": 0.23,
      "requestId": "01JTG7DM9PZNJYQ3XVXP27V5JX",
      "length": 2
    },
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.25,
      "totalDuration": 0.953,
      "tokens": {
        "promptTokens": 4142,
        "completionTokens": 76,
        "totalTokens": 4218
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_actors\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent' AND\n  ref_type = 'branch' AND\n  ref = 'main'\nGROUP BY\n  repo_name\nORDER BY\n  num_actors DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "num_actors",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.212885785,
            "rows_read": 1601472977,
            "bytes_read": 3202878489
          },
          "executionTime": 0.23,
          "requestId": "01JTG7DM9PZNJYQ3XVXP27V5JX",
          "length": 2
        },
        "name": "pipe_29.pipe",
        "question": {
          "name": "pipe_29.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.25,
          "totalDuration": 0.953,
          "tokens": {
            "promptTokens": 4142,
            "completionTokens": 76,
            "totalTokens": 4218
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND ref_type = 'branch'\n  AND ref = 'main'\nGROUP BY\n  repo_name\nHAVING\n  COUNT(DISTINCT actor_login) > 99\nORDER BY\n  push_access_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_access_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.20266157,
        "rows_read": 1601472977,
        "bytes_read": 3202878489
      },
      "executionTime": 0.221,
      "requestId": "01JTG7DR020N56HMNABA85V9BX",
      "length": 2
    },
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.264,
      "totalDuration": 1.055,
      "tokens": {
        "promptTokens": 4156,
        "completionTokens": 92,
        "totalTokens": 4248
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND ref_type = 'branch'\n  AND ref = 'main'\nGROUP BY\n  repo_name\nHAVING\n  COUNT(DISTINCT actor_login) > 99\nORDER BY\n  push_access_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_access_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.20266157,
            "rows_read": 1601472977,
            "bytes_read": 3202878489
          },
          "executionTime": 0.221,
          "requestId": "01JTG7DR020N56HMNABA85V9BX",
          "length": 2
        },
        "name": "pipe_30.pipe",
        "question": {
          "name": "pipe_30.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.264,
          "totalDuration": 1.055,
          "tokens": {
            "promptTokens": 4156,
            "completionTokens": 92,
            "totalTokens": 4248
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(actor_login) AS accepted_invitations\nFROM\n  github_events\nWHERE\n  event_type = 'InvitationEvent' AND\n  action = 'accepted'\nGROUP BY\n  repo_name\nORDER BY\n  accepted_invitations DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "accepted_invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.008558187,
        "rows_read": 156859,
        "bytes_read": 156859
      },
      "executionTime": 0.026,
      "requestId": "01JTG7DWA8HTT0WH3BSGXFDTVT",
      "length": 2
    },
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 1.062,
      "totalDuration": 1.7,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 69,
        "totalTokens": 4207
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(actor_login) AS accepted_invitations\nFROM\n  github_events\nWHERE\n  event_type = 'InvitationEvent' AND\n  action = 'accepted'\nGROUP BY\n  repo_name\nORDER BY\n  accepted_invitations DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "accepted_invitations",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.008558187,
            "rows_read": 156859,
            "bytes_read": 156859
          },
          "executionTime": 0.026,
          "requestId": "01JTG7DWA8HTT0WH3BSGXFDTVT",
          "length": 2
        },
        "name": "pipe_31.pipe",
        "question": {
          "name": "pipe_31.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with the maximum number of accepted invitations\n\nNODE endpoint\nSQL >\n    SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with the maximum number of accepted invitations"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 1.062,
          "totalDuration": 1.7,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 69,
            "totalTokens": 4207
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS fork_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  fork_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "fork_count": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "fork_count": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "fork_count": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "fork_count": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "fork_count": 92878
        },
        {
          "repo_name": "github/gitignore",
          "fork_count": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "fork_count": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "fork_count": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "fork_count": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "fork_count": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "fork_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.866123026,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.884,
      "requestId": "01JTG7DZHGMKTYC3SE5DT64D3N",
      "length": 592
    },
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most forked repositories"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.242,
      "totalDuration": 0.774,
      "tokens": {
        "promptTokens": 4132,
        "completionTokens": 56,
        "totalTokens": 4188
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS fork_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  fork_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "fork_count": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "fork_count": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "fork_count": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "fork_count": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "fork_count": 92878
            },
            {
              "repo_name": "github/gitignore",
              "fork_count": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "fork_count": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "fork_count": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "fork_count": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "fork_count": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "fork_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.866123026,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.884,
          "requestId": "01JTG7DZHGMKTYC3SE5DT64D3N",
          "length": 592
        },
        "name": "pipe_32.pipe",
        "question": {
          "name": "pipe_32.pipe",
          "content": "DESCRIPTION >\n    top 10 Most forked repositories\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most forked repositories"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.242,
          "totalDuration": 0.774,
          "tokens": {
            "promptTokens": 4132,
            "completionTokens": 56,
            "totalTokens": 4188
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS total_events,\n  SUM(CASE WHEN action = 'fork' THEN 1 ELSE 0 END) AS forks,\n  SUM(CASE WHEN action = 'star' THEN 1 ELSE 0 END) AS stars,\n  (SUM(CASE WHEN action = 'star' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN action = 'fork' THEN 1 ELSE 0 END), 0)) AS stars_to_forks_ratio\nFROM github_events\nWHERE action IN ('star', 'fork')\nGROUP BY repo_name\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "total_events": 94416,
          "forks": 94416,
          "stars": 0,
          "stars_to_forks_ratio": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_events",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "stars_to_forks_ratio",
          "type": "Nullable(Float64)"
        }
      ],
      "statistics": {
        "elapsed": 0.247058159,
        "rows_read": 3124889133,
        "bytes_read": 3131248021
      },
      "executionTime": 0.267,
      "requestId": "01JTG7E4M3V3FK6XMY5XA1YXQD",
      "length": 89
    },
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 reposistories by ratio between stars and forks"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.341,
      "totalDuration": 1.815,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 146,
        "totalTokens": 4284
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS total_events,\n  SUM(CASE WHEN action = 'fork' THEN 1 ELSE 0 END) AS forks,\n  SUM(CASE WHEN action = 'star' THEN 1 ELSE 0 END) AS stars,\n  (SUM(CASE WHEN action = 'star' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN action = 'fork' THEN 1 ELSE 0 END), 0)) AS stars_to_forks_ratio\nFROM github_events\nWHERE action IN ('star', 'fork')\nGROUP BY repo_name\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "total_events": 94416,
              "forks": 94416,
              "stars": 0,
              "stars_to_forks_ratio": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_events",
              "type": "UInt64"
            },
            {
              "name": "forks",
              "type": "UInt64"
            },
            {
              "name": "stars",
              "type": "UInt64"
            },
            {
              "name": "stars_to_forks_ratio",
              "type": "Nullable(Float64)"
            }
          ],
          "statistics": {
            "elapsed": 0.247058159,
            "rows_read": 3124889133,
            "bytes_read": 3131248021
          },
          "executionTime": 0.267,
          "requestId": "01JTG7E4M3V3FK6XMY5XA1YXQD",
          "length": 89
        },
        "name": "pipe_33.pipe",
        "question": {
          "name": "pipe_33.pipe",
          "content": "DESCRIPTION >\n    top 10 reposistories by ratio between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 reposistories by ratio between stars and forks"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.341,
          "totalDuration": 1.815,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 146,
            "totalTokens": 4284
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS forks_count,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  forks_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks_count": 262926,
          "stars_count": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks_count": 198031,
          "stars_count": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks_count": 160794,
          "stars_count": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks_count": 98226,
          "stars_count": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks_count": 92878,
          "stars_count": 92878
        },
        {
          "repo_name": "github/gitignore",
          "forks_count": 84075,
          "stars_count": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks_count": 78551,
          "stars_count": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks_count": 68601,
          "stars_count": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks_count": 67182,
          "stars_count": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks_count": 59420,
          "stars_count": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks_count",
          "type": "UInt64"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.845357695,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.864,
      "requestId": "01JTG7E89HVHQD1D0QMJHYXNJ0",
      "length": 805
    },
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.297,
      "totalDuration": 0.991,
      "tokens": {
        "promptTokens": 4144,
        "completionTokens": 63,
        "totalTokens": 4207
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS forks_count,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  forks_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks_count": 262926,
              "stars_count": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks_count": 198031,
              "stars_count": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks_count": 160794,
              "stars_count": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks_count": 98226,
              "stars_count": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks_count": 92878,
              "stars_count": 92878
            },
            {
              "repo_name": "github/gitignore",
              "forks_count": 84075,
              "stars_count": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks_count": 78551,
              "stars_count": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks_count": 68601,
              "stars_count": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks_count": 67182,
              "stars_count": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks_count": 59420,
              "stars_count": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks_count",
              "type": "UInt64"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.845357695,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.864,
          "requestId": "01JTG7E89HVHQD1D0QMJHYXNJ0",
          "length": 805
        },
        "name": "pipe_34.pipe",
        "question": {
          "name": "pipe_34.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories are the most \"for forks\" and \"for stars\"\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.297,
          "totalDuration": 0.991,
          "tokens": {
            "promptTokens": 4144,
            "completionTokens": 63,
            "totalTokens": 4207
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS forks_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  forks_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks_count": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks_count": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks_count": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks_count": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks_count": 92878
        },
        {
          "repo_name": "github/gitignore",
          "forks_count": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks_count": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks_count": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks_count": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks_count": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.881700298,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.9,
      "requestId": "01JTG7ECPETF4ZA0MMCGBDN9T3",
      "length": 602
    },
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find out top 10 repositories have more forks and less stars"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.416,
      "totalDuration": 1.144,
      "tokens": {
        "promptTokens": 4138,
        "completionTokens": 58,
        "totalTokens": 4196
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS forks_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  forks_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jtleek/datasharing",
              "forks_count": 262926
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "forks_count": 198031
            },
            {
              "repo_name": "rdpeng/ProgrammingAssignment2",
              "forks_count": 160794
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "forks_count": 98226
            },
            {
              "repo_name": "twbs/bootstrap",
              "forks_count": 92878
            },
            {
              "repo_name": "github/gitignore",
              "forks_count": 84075
            },
            {
              "repo_name": "SmartThingsCommunity/SmartThingsPublic",
              "forks_count": 78551
            },
            {
              "repo_name": "barryclark/jekyll-now",
              "forks_count": 68601
            },
            {
              "repo_name": "rdpeng/ExData_Plotting1",
              "forks_count": 67182
            },
            {
              "repo_name": "nightscout/cgm-remote-monitor",
              "forks_count": 59420
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "forks_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.881700298,
            "rows_read": 84878767,
            "bytes_read": 254421046
          },
          "executionTime": 0.9,
          "requestId": "01JTG7ECPETF4ZA0MMCGBDN9T3",
          "length": 602
        },
        "name": "pipe_35.pipe",
        "question": {
          "name": "pipe_35.pipe",
          "content": "DESCRIPTION >\n     find out top 10 repositories have more forks and less stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find out top 10 repositories have more forks and less stars"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.416,
          "totalDuration": 1.144,
          "tokens": {
            "promptTokens": 4138,
            "completionTokens": 58,
            "totalTokens": 4196
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  COUNT(CASE WHEN event_type = 'StarEvent' THEN 1 END) AS stars_count,\n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS forks_count\nFROM github_events\nWHERE event_type IN ('StarEvent', 'ForkEvent')\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars_count": 0,
          "forks_count": 84709181
        }
      ],
      "meta": [
        {
          "name": "stars_count",
          "type": "UInt64"
        },
        {
          "name": "forks_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.032925922,
        "rows_read": 84982958,
        "bytes_read": 84982958
      },
      "executionTime": 0.05,
      "requestId": "01JTG7EH52BE9G3YQH03GH5T4P",
      "length": 42
    },
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
      "question": "overall proportion between stars and forks"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.303,
      "totalDuration": 1.161,
      "tokens": {
        "promptTokens": 4132,
        "completionTokens": 74,
        "totalTokens": 4206
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  COUNT(CASE WHEN event_type = 'StarEvent' THEN 1 END) AS stars_count,\n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS forks_count\nFROM github_events\nWHERE event_type IN ('StarEvent', 'ForkEvent')\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "stars_count": 0,
              "forks_count": 84709181
            }
          ],
          "meta": [
            {
              "name": "stars_count",
              "type": "UInt64"
            },
            {
              "name": "forks_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.032925922,
            "rows_read": 84982958,
            "bytes_read": 84982958
          },
          "executionTime": 0.05,
          "requestId": "01JTG7EH52BE9G3YQH03GH5T4P",
          "length": 42
        },
        "name": "pipe_36.pipe",
        "question": {
          "name": "pipe_36.pipe",
          "content": "DESCRIPTION >\n    overall proportion between stars and forks\n\nNODE endpoint\nSQL >\n    SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')\n\nTYPE endpoint",
          "question": "overall proportion between stars and forks"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.303,
          "totalDuration": 1.161,
          "tokens": {
            "promptTokens": 4132,
            "completionTokens": 74,
            "totalTokens": 4206
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  COUNT(*) AS total_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "total_issues": 111265504
        }
      ],
      "meta": [
        {
          "name": "total_issues",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.005355071,
        "rows_read": 239141,
        "bytes_read": 239156
      },
      "executionTime": 0.022,
      "requestId": "01JTG7EM723RNP3WWXKBYTNWWA",
      "length": 28
    },
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
      "question": "Total number of issues on GitHub"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.289,
      "totalDuration": 0.583,
      "tokens": {
        "promptTokens": 4131,
        "completionTokens": 36,
        "totalTokens": 4167
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  COUNT(*) AS total_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "total_issues": 111265504
            }
          ],
          "meta": [
            {
              "name": "total_issues",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.005355071,
            "rows_read": 239141,
            "bytes_read": 239156
          },
          "executionTime": 0.022,
          "requestId": "01JTG7EM723RNP3WWXKBYTNWWA",
          "length": 28
        },
        "name": "pipe_37.pipe",
        "question": {
          "name": "pipe_37.pipe",
          "content": "DESCRIPTION >\n    Total number of issues on GitHub\n\nNODE endpoint\nSQL >\n    SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'\n\nTYPE endpoint",
          "question": "Total number of issues on GitHub"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.289,
          "totalDuration": 0.583,
          "tokens": {
            "promptTokens": 4131,
            "completionTokens": 36,
            "totalTokens": 4167
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_comments_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "issue_comments_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "issue_comments_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "issue_comments_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "issue_comments_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "issue_comments_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "issue_comments_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "issue_comments_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "issue_comments_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "issue_comments_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "issue_comments_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.527471284,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.546,
      "requestId": "01JTG7EQF3DR61FMQXDSDQSNDV",
      "length": 649
    },
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "The top 10 repositories by issue comments"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.258,
      "totalDuration": 0.805,
      "tokens": {
        "promptTokens": 4133,
        "completionTokens": 56,
        "totalTokens": 4189
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_comments_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "issue_comments_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "issue_comments_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "issue_comments_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "issue_comments_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "issue_comments_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "issue_comments_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "issue_comments_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "issue_comments_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "issue_comments_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "issue_comments_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.527471284,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.546,
          "requestId": "01JTG7EQF3DR61FMQXDSDQSNDV",
          "length": 649
        },
        "name": "pipe_38.pipe",
        "question": {
          "name": "pipe_38.pipe",
          "content": "DESCRIPTION >\n    The top 10 repositories by issue comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "The top 10 repositories by issue comments"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.258,
          "totalDuration": 0.805,
          "tokens": {
            "promptTokens": 4133,
            "completionTokens": 56,
            "totalTokens": 4189
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_comments,\n  COUNT(DISTINCT number) AS issues,\n  COUNT(*) / COUNT(DISTINCT number) AS ratio\nFROM\n  github_events\nWHERE\n  event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY\n  repo_name\nORDER BY\n  ratio DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "apache/incubator-spark",
          "issue_comments": 9817,
          "issues": 1,
          "ratio": 9817
        },
        {
          "repo_name": "zeit-github-test/github-utils-test",
          "issue_comments": 9260,
          "issues": 1,
          "ratio": 9260
        },
        {
          "repo_name": "QualitySoftwareDeveloper/test-repo",
          "issue_comments": 9114,
          "issues": 1,
          "ratio": 9114
        },
        {
          "repo_name": "tphongio/elasticbox-plugin",
          "issue_comments": 6167,
          "issues": 1,
          "ratio": 6167
        },
        {
          "repo_name": "favroautomation/automationgitlabrunner18",
          "issue_comments": 11377,
          "issues": 2,
          "ratio": 5688.5
        },
        {
          "repo_name": "favroautomation/automationgitlabrunner07",
          "issue_comments": 10512,
          "issues": 2,
          "ratio": 5256
        },
        {
          "repo_name": "favroautomation/automationgitlabrunner09",
          "issue_comments": 10509,
          "issues": 2,
          "ratio": 5254.5
        },
        {
          "repo_name": "favroautomation/automationgitlabrunner08",
          "issue_comments": 10504,
          "issues": 2,
          "ratio": 5252
        },
        {
          "repo_name": "favroautomation/automationgitlabrunner20",
          "issue_comments": 10442,
          "issues": 2,
          "ratio": 5221
        },
        {
          "repo_name": "favroautomation/automationgitlabrunner16",
          "issue_comments": 10368,
          "issues": 2,
          "ratio": 5184
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 2.263623606,
        "rows_read": 329902046,
        "bytes_read": 2308377958
      },
      "executionTime": 2.282,
      "requestId": "01JTG7EVETHSDY41JC0PYEVBT7",
      "length": 997
    },
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by ratio between issue comments and issues"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.299,
      "totalDuration": 1.041,
      "tokens": {
        "promptTokens": 4136,
        "completionTokens": 79,
        "totalTokens": 4215
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_comments,\n  COUNT(DISTINCT number) AS issues,\n  COUNT(*) / COUNT(DISTINCT number) AS ratio\nFROM\n  github_events\nWHERE\n  event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY\n  repo_name\nORDER BY\n  ratio DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "apache/incubator-spark",
              "issue_comments": 9817,
              "issues": 1,
              "ratio": 9817
            },
            {
              "repo_name": "zeit-github-test/github-utils-test",
              "issue_comments": 9260,
              "issues": 1,
              "ratio": 9260
            },
            {
              "repo_name": "QualitySoftwareDeveloper/test-repo",
              "issue_comments": 9114,
              "issues": 1,
              "ratio": 9114
            },
            {
              "repo_name": "tphongio/elasticbox-plugin",
              "issue_comments": 6167,
              "issues": 1,
              "ratio": 6167
            },
            {
              "repo_name": "favroautomation/automationgitlabrunner18",
              "issue_comments": 11377,
              "issues": 2,
              "ratio": 5688.5
            },
            {
              "repo_name": "favroautomation/automationgitlabrunner07",
              "issue_comments": 10512,
              "issues": 2,
              "ratio": 5256
            },
            {
              "repo_name": "favroautomation/automationgitlabrunner09",
              "issue_comments": 10509,
              "issues": 2,
              "ratio": 5254.5
            },
            {
              "repo_name": "favroautomation/automationgitlabrunner08",
              "issue_comments": 10504,
              "issues": 2,
              "ratio": 5252
            },
            {
              "repo_name": "favroautomation/automationgitlabrunner20",
              "issue_comments": 10442,
              "issues": 2,
              "ratio": 5221
            },
            {
              "repo_name": "favroautomation/automationgitlabrunner16",
              "issue_comments": 10368,
              "issues": 2,
              "ratio": 5184
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_comments",
              "type": "UInt64"
            },
            {
              "name": "issues",
              "type": "UInt64"
            },
            {
              "name": "ratio",
              "type": "Float64"
            }
          ],
          "statistics": {
            "elapsed": 2.263623606,
            "rows_read": 329902046,
            "bytes_read": 2308377958
          },
          "executionTime": 2.282,
          "requestId": "01JTG7EVETHSDY41JC0PYEVBT7",
          "length": 997
        },
        "name": "pipe_39.pipe",
        "question": {
          "name": "pipe_39.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by ratio between issue comments and issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by ratio between issue comments and issues"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.299,
          "totalDuration": 1.041,
          "tokens": {
            "promptTokens": 4136,
            "completionTokens": 79,
            "totalTokens": 4215
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "issue_count": 379379
        },
        {
          "repo_name": "Khan/khan-exercises",
          "issue_count": 308876
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "issue_count": 258400
        },
        {
          "repo_name": "pddemo/demo",
          "issue_count": 216215
        },
        {
          "repo_name": "ron190/jsql-injection",
          "issue_count": 181451
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "issue_count": 173986
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "issue_count": 149264
        },
        {
          "repo_name": "AdguardTeam/AdguardFilters",
          "issue_count": 139269
        },
        {
          "repo_name": "Microsoft/vscode",
          "issue_count": 132612
        },
        {
          "repo_name": "Khan/khan-i18n",
          "issue_count": 130935
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "issue_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.487937002,
        "rows_read": 111439849,
        "bytes_read": 334032694
      },
      "executionTime": 0.508,
      "requestId": "01JTG7F0VWQC0FWJX0D5F7EXPJ",
      "length": 573
    },
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "find top 10 repositories by the most active issues"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.317,
      "totalDuration": 0.754,
      "tokens": {
        "promptTokens": 4135,
        "completionTokens": 51,
        "totalTokens": 4186
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "koorellasuresh/UKRegionTest",
              "issue_count": 379379
            },
            {
              "repo_name": "Khan/khan-exercises",
              "issue_count": 308876
            },
            {
              "repo_name": "jlippold/tweakCompatible",
              "issue_count": 258400
            },
            {
              "repo_name": "pddemo/demo",
              "issue_count": 216215
            },
            {
              "repo_name": "ron190/jsql-injection",
              "issue_count": 181451
            },
            {
              "repo_name": "lstjsuperman/fabric",
              "issue_count": 173986
            },
            {
              "repo_name": "No-CQRT/GooGuns",
              "issue_count": 149264
            },
            {
              "repo_name": "AdguardTeam/AdguardFilters",
              "issue_count": 139269
            },
            {
              "repo_name": "Microsoft/vscode",
              "issue_count": 132612
            },
            {
              "repo_name": "Khan/khan-i18n",
              "issue_count": 130935
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "issue_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.487937002,
            "rows_read": 111439849,
            "bytes_read": 334032694
          },
          "executionTime": 0.508,
          "requestId": "01JTG7F0VWQC0FWJX0D5F7EXPJ",
          "length": 573
        },
        "name": "pipe_40.pipe",
        "question": {
          "name": "pipe_40.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories by the most active issues\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories by the most active issues"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.317,
          "totalDuration": 0.754,
          "tokens": {
            "promptTokens": 4135,
            "completionTokens": 51,
            "totalTokens": 4186
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.019,
      "requestId": "01JTG7FB93FWARB6E8JFQD39WX",
      "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNT(*) AS issue_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (labels LIKE '%epic bugs%') GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
      "length": 2
    },
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.314,
      "totalDuration": 0.901,
      "tokens": {
        "promptTokens": 4366,
        "completionTokens": 66,
        "totalTokens": 4432
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG7F4M3DSXR64R4CS7W0SMQ",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNT(*) AS issue_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (labels LIKE '%epic bugs%') GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.239,
          "totalDuration": 0.836,
          "tokens": {
            "promptTokens": 4141,
            "completionTokens": 64,
            "totalTokens": 4205
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.017,
          "requestId": "01JTG7F7Y5TQD8K48YFZ0Y45E5",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNT(*) AS issue_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (labels LIKE '%epic bugs%') GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.238,
          "totalDuration": 0.874,
          "tokens": {
            "promptTokens": 4254,
            "completionTokens": 66,
            "totalTokens": 4320
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG7FB93FWARB6E8JFQD39WX",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNT(*) AS issue_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (labels LIKE '%epic bugs%') GROUP BY repo_name ORDER BY issue_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_41.pipe",
        "question": {
          "name": "pipe_41.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.314,
          "totalDuration": 0.901,
          "tokens": {
            "promptTokens": 4366,
            "completionTokens": 66,
            "totalTokens": 4432
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nHAVING\n  comment_authors_count > 10\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 0.019,
      "requestId": "01JTG7FPC0NM7DBF3G2FQVQ0JC",
      "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNTDistinct(actor_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (state = 'open') AND (labels LIKE '%epic bugs%') GROUP BY repo_name HAVING comment_authors_count > 10 ORDER BY comment_authors_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get-",
      "length": 2
    },
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nHAVING\n  comment_authors_count > 10\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.557,
      "totalDuration": 1.438,
      "tokens": {
        "promptTokens": 4424,
        "completionTokens": 95,
        "totalTokens": 4519
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.018,
          "requestId": "01JTG7FESJ1T2TQR2DTPV8372W",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNTDistinct(actor_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (state = 'open') AND (labels LIKE '%epic bugs%') GROUP BY repo_name ORDER BY comment_authors_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get--v0-sql\"}",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.278,
          "totalDuration": 1.078,
          "tokens": {
            "promptTokens": 4155,
            "completionTokens": 81,
            "totalTokens": 4236
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nHAVING\n  comment_authors_count > 10\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG7FJG98EKPVRPDCCJKFVZF",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNTDistinct(actor_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (state = 'open') AND (labels LIKE '%epic bugs%') GROUP BY repo_name HAVING comment_authors_count > 10 ORDER BY comment_authors_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get-",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.211,
          "totalDuration": 1.277,
          "tokens": {
            "promptTokens": 4283,
            "completionTokens": 95,
            "totalTokens": 4378
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nHAVING\n  comment_authors_count > 10\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.019,
          "requestId": "01JTG7FPC0NM7DBF3G2FQVQ0JC",
          "error": "{\"error\": \"[Error] Illegal type Array(String) of argument of function like: In scope SELECT repo_name, COUNTDistinct(actor_login) AS comment_authors_count FROM github_llm_bench.github_events AS github_events WHERE (event_type = 'IssuesEvent') AND (state = 'open') AND (labels LIKE '%epic bugs%') GROUP BY repo_name HAVING comment_authors_count > 10 ORDER BY comment_authors_count DESC LIMIT 10. (ILLEGAL_TYPE_OF_ARGUMENT)\", \"documentation\": \"https://docs.tinybird.co/api-reference/query-api.html#get-",
          "length": 2
        },
        "name": "pipe_42.pipe",
        "question": {
          "name": "pipe_42.pipe",
          "content": "DESCRIPTION >\n    find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"I previously asked: \"find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse.\"\n\nYou generated this SQL query:\n```sql\n\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND state = 'open'\n  AND labels LIKE '%epic bugs%'\nGROUP BY\n  repo_name\nHAVING\n  comment_authors_count > 10\nORDER BY\n  comment_authors_count DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.557,
          "totalDuration": 1.438,
          "tokens": {
            "promptTokens": 4424,
            "completionTokens": 95,
            "totalTokens": 4519
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "comment_count": 1450081
        },
        {
          "repo_name": "apache/spark",
          "comment_count": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "comment_count": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "comment_count": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "comment_count": 477302
        },
        {
          "repo_name": "openshift/origin",
          "comment_count": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "comment_count": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "comment_count": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "comment_count": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "comment_count": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.517467664,
        "rows_read": 218620144,
        "bytes_read": 655167132
      },
      "executionTime": 0.535,
      "requestId": "01JTG7FSJ2N2X2RCHTPH1PN994",
      "length": 579
    },
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "Top 10 commented issues for the top repositories"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.21,
      "totalDuration": 0.746,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 56,
        "totalTokens": 4190
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "kubernetes/kubernetes",
              "comment_count": 1450081
            },
            {
              "repo_name": "apache/spark",
              "comment_count": 790480
            },
            {
              "repo_name": "rust-lang/rust",
              "comment_count": 502960
            },
            {
              "repo_name": "cms-sw/cmssw",
              "comment_count": 478607
            },
            {
              "repo_name": "google-test/signcla-probe-repo",
              "comment_count": 477302
            },
            {
              "repo_name": "openshift/origin",
              "comment_count": 445639
            },
            {
              "repo_name": "brianchandotcom/liferay-portal",
              "comment_count": 392474
            },
            {
              "repo_name": "NixOS/nixpkgs",
              "comment_count": 349733
            },
            {
              "repo_name": "elastic/kibana",
              "comment_count": 330168
            },
            {
              "repo_name": "ansible/ansible",
              "comment_count": 312424
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.517467664,
            "rows_read": 218620144,
            "bytes_read": 655167132
          },
          "executionTime": 0.535,
          "requestId": "01JTG7FSJ2N2X2RCHTPH1PN994",
          "length": 579
        },
        "name": "pipe_43.pipe",
        "question": {
          "name": "pipe_43.pipe",
          "content": "DESCRIPTION >\n    Top 10 commented issues for the top repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "Top 10 commented issues for the top repositories"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.21,
          "totalDuration": 0.746,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 56,
            "totalTokens": 4190
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS commit_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'CommitCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  commit_comments_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "commit_comments_count": 99251
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "commit_comments_count": 74922
        },
        {
          "repo_name": "miabot/galleries.csv",
          "commit_comments_count": 52634
        },
        {
          "repo_name": "siggetest/githubtest",
          "commit_comments_count": 52171
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "commit_comments_count": 46876
        },
        {
          "repo_name": "mozilla/rust",
          "commit_comments_count": 33708
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "commit_comments_count": 24386
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "commit_comments_count": 21406
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "commit_comments_count": 18893
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "commit_comments_count": 17979
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "commit_comments_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.128870017,
        "rows_read": 9974466,
        "bytes_read": 29921382
      },
      "executionTime": 0.146,
      "requestId": "01JTG7FXCG8D4BXHMFN53J41RQ",
      "length": 659
    },
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 repositories by the number of commit comments"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.343,
      "totalDuration": 0.881,
      "tokens": {
        "promptTokens": 4135,
        "completionTokens": 56,
        "totalTokens": 4191
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS commit_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'CommitCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  commit_comments_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "dcos/dcos",
              "commit_comments_count": 99251
            },
            {
              "repo_name": "NREL/EnergyPlus",
              "commit_comments_count": 74922
            },
            {
              "repo_name": "miabot/galleries.csv",
              "commit_comments_count": 52634
            },
            {
              "repo_name": "siggetest/githubtest",
              "commit_comments_count": 52171
            },
            {
              "repo_name": "bambootest-bot/githubtest",
              "commit_comments_count": 46876
            },
            {
              "repo_name": "mozilla/rust",
              "commit_comments_count": 33708
            },
            {
              "repo_name": "TrinityCore/TrinityCore",
              "commit_comments_count": 24386
            },
            {
              "repo_name": "kubernetes/kubernetes",
              "commit_comments_count": 21406
            },
            {
              "repo_name": "xamarin/xamarin-macios",
              "commit_comments_count": 18893
            },
            {
              "repo_name": "w4ctech/front-end-rss",
              "commit_comments_count": 17979
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "commit_comments_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.128870017,
            "rows_read": 9974466,
            "bytes_read": 29921382
          },
          "executionTime": 0.146,
          "requestId": "01JTG7FXCG8D4BXHMFN53J41RQ",
          "length": 659
        },
        "name": "pipe_44.pipe",
        "question": {
          "name": "pipe_44.pipe",
          "content": "DESCRIPTION >\n    top 10 repositories by the number of commit comments\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 repositories by the number of commit comments"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.343,
          "totalDuration": 0.881,
          "tokens": {
            "promptTokens": 4135,
            "completionTokens": 56,
            "totalTokens": 4191
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nORDER BY comments DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528255,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528261,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528251,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528257,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528249,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528262,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528258,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528263,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528270,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "repo_name": "jaecSolutions/Unito-dev",
          "actor_login": "jaecSolutions",
          "created_at": "2015-07-18 10:39:02",
          "action": "created",
          "comment_id": 122528269,
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "action",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_id",
          "type": "UInt64"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "path",
          "type": "Nullable(String)"
        },
        {
          "name": "position",
          "type": "Int32"
        },
        {
          "name": "line",
          "type": "Int32"
        },
        {
          "name": "ref",
          "type": "Nullable(String)"
        },
        {
          "name": "ref_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "creator_user_login",
          "type": "Nullable(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "locked",
          "type": "UInt8"
        },
        {
          "name": "assignee",
          "type": "LowCardinality(String)"
        },
        {
          "name": "assignees",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "comments",
          "type": "UInt32"
        },
        {
          "name": "author_association",
          "type": "LowCardinality(String)"
        },
        {
          "name": "closed_at",
          "type": "DateTime"
        },
        {
          "name": "merged_at",
          "type": "DateTime"
        },
        {
          "name": "merge_commit_sha",
          "type": "String"
        },
        {
          "name": "requested_reviewers",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "requested_teams",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "head_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "head_sha",
          "type": "String"
        },
        {
          "name": "base_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "base_sha",
          "type": "String"
        },
        {
          "name": "merged",
          "type": "UInt8"
        },
        {
          "name": "mergeable",
          "type": "UInt8"
        },
        {
          "name": "rebaseable",
          "type": "UInt8"
        },
        {
          "name": "mergeable_state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "merged_by",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_comments",
          "type": "UInt32"
        },
        {
          "name": "maintainer_can_modify",
          "type": "UInt8"
        },
        {
          "name": "commits",
          "type": "UInt32"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "diff_hunk",
          "type": "String"
        },
        {
          "name": "original_position",
          "type": "UInt32"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "original_commit_id",
          "type": "String"
        },
        {
          "name": "push_size",
          "type": "UInt32"
        },
        {
          "name": "push_distinct_size",
          "type": "UInt32"
        },
        {
          "name": "member_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "release_tag_name",
          "type": "String"
        },
        {
          "name": "release_name",
          "type": "String"
        },
        {
          "name": "review_state",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 194.488480299,
        "rows_read": 3124889133,
        "bytes_read": 1434312667175
      },
      "executionTime": 194.57,
      "requestId": "01JTG7G2K891VWGSFT78VXQGPS",
      "length": 10311
    },
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 \"hottest\" commits"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.323,
      "totalDuration": 2.627,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 232,
        "totalTokens": 4366
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nORDER BY comments DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528255,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528261,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528251,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528257,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528249,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528262,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528258,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528263,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528270,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "repo_name": "jaecSolutions/Unito-dev",
              "actor_login": "jaecSolutions",
              "created_at": "2015-07-18 10:39:02",
              "action": "created",
              "comment_id": 122528269,
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "action",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_id",
              "type": "UInt64"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "path",
              "type": "Nullable(String)"
            },
            {
              "name": "position",
              "type": "Int32"
            },
            {
              "name": "line",
              "type": "Int32"
            },
            {
              "name": "ref",
              "type": "Nullable(String)"
            },
            {
              "name": "ref_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "creator_user_login",
              "type": "Nullable(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "locked",
              "type": "UInt8"
            },
            {
              "name": "assignee",
              "type": "LowCardinality(String)"
            },
            {
              "name": "assignees",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "comments",
              "type": "UInt32"
            },
            {
              "name": "author_association",
              "type": "LowCardinality(String)"
            },
            {
              "name": "closed_at",
              "type": "DateTime"
            },
            {
              "name": "merged_at",
              "type": "DateTime"
            },
            {
              "name": "merge_commit_sha",
              "type": "String"
            },
            {
              "name": "requested_reviewers",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "requested_teams",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "head_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "head_sha",
              "type": "String"
            },
            {
              "name": "base_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "base_sha",
              "type": "String"
            },
            {
              "name": "merged",
              "type": "UInt8"
            },
            {
              "name": "mergeable",
              "type": "UInt8"
            },
            {
              "name": "rebaseable",
              "type": "UInt8"
            },
            {
              "name": "mergeable_state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "merged_by",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_comments",
              "type": "UInt32"
            },
            {
              "name": "maintainer_can_modify",
              "type": "UInt8"
            },
            {
              "name": "commits",
              "type": "UInt32"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "diff_hunk",
              "type": "String"
            },
            {
              "name": "original_position",
              "type": "UInt32"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "original_commit_id",
              "type": "String"
            },
            {
              "name": "push_size",
              "type": "UInt32"
            },
            {
              "name": "push_distinct_size",
              "type": "UInt32"
            },
            {
              "name": "member_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "release_tag_name",
              "type": "String"
            },
            {
              "name": "release_name",
              "type": "String"
            },
            {
              "name": "review_state",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 194.488480299,
            "rows_read": 3124889133,
            "bytes_read": 1434312667175
          },
          "executionTime": 194.57,
          "requestId": "01JTG7G2K891VWGSFT78VXQGPS",
          "length": 10311
        },
        "name": "pipe_45.pipe",
        "question": {
          "name": "pipe_45.pipe",
          "content": "DESCRIPTION >\n    top 10 \"hottest\" commits\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 \"hottest\" commits"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.323,
          "totalDuration": 2.627,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 232,
            "totalTokens": 4366
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  event_type,\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nORDER BY created_at DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "HUPO-PSI/mzQC",
          "actor_login": "cbielow",
          "created_at": "2020-12-06 19:59:59",
          "action": "created",
          "comment_id": 0,
          "body": "from #85, #86, #87, #88, #89, #90, #91, #101\r\n* second pair of eyes for the metric types needed\r\n",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "mwalzer",
          "number": 102,
          "title": "added cv term in bulk",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "CONTRIBUTOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "b81af686506033be26901f68c8cc9394b4b0a5b2",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "bulk-cvterms",
          "head_sha": "1c5dbe28a1caa943ebdd148f4060532fe2de0055",
          "base_ref": "master",
          "base_sha": "82b17b54e44ea3c7198486fbaaced106f597aa49",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "aquasecurity/tracee",
          "actor_login": "itaysk",
          "created_at": "2020-12-06 19:59:56",
          "action": "created",
          "comment_id": 0,
          "body": "",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "yanivagman",
          "number": 347,
          "title": "Add host only mode",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "COLLABORATOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "f9d4c69c649703e199adcc4cd1b0351f067c52a8",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "add_host_only_mode",
          "head_sha": "6091f029bcbbea2948e991b79b10bb797c3560ef",
          "base_ref": "master",
          "base_sha": "741f1071db1fbd3de38f2bd64f92ff422ed13ca3",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "approved"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "KarolGrydz/hunter",
          "actor_login": "customcodepl",
          "created_at": "2020-12-06 19:59:55",
          "action": "created",
          "comment_id": 0,
          "body": "Dodałem to co Ci mówiłem przez telefon. Do tego dodałem funkcję filterLocation w pliku mapAPI.js, nie wiem czy tam ona może być czy jakiś inny plik robić?",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "KarolGrydz",
          "number": 4,
          "title": "Map add API",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "COLLABORATOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "map",
          "head_sha": "8a3632f8a977609c48bccd857a85ae35f5fac3ce",
          "base_ref": "main",
          "base_sha": "47635e85578cd1f70aa75cb2e6161cd9da8cf513",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "Thanu54/Group_cw2",
          "actor_login": "alishakhan01",
          "created_at": "2020-12-06 19:59:54",
          "action": "created",
          "comment_id": 0,
          "body": "This code does output the correct frequencies, I'm happy to merge this version to the draft 2 branch.",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "Dipsimodi",
          "number": 5,
          "title": "Lane frequencies",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "COLLABORATOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "c045f98b256db5d95f1c32885f4f10af93203a3b",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "Lane-Frequencies",
          "head_sha": "dc3f39c31163f47e0a3f2e5a587dce1e0fb29473",
          "base_ref": "Drunk-walk-draft-2",
          "base_sha": "88d6418f09bac6310cd3713c7a3730af68cb643d",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "approved"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "awslabs/dgl-lifesci",
          "actor_login": "mufeili",
          "created_at": "2020-12-06 19:59:54",
          "action": "created",
          "comment_id": 0,
          "body": "*Issue:*\r\n\r\n*Description of changes:*\r\n\r\nThis is a DGL implementation of the following paper:\r\nWeihua Hu*, Bowen Liu*, Joseph Gomes, Marinka Zitnik, Percy Liang, Vijay Pande, Jure Leskovec. Strategies for Pre-training Graph Neural Networks. ICLR 2020. [arXiv](https://arxiv.org/abs/1905.12265)\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "wenx00",
          "number": 110,
          "title": "[Example] Pretrain_gnns",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "CONTRIBUTOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "6de8a2ccbdf0c51a7d6a0b39c410561db9a18b6e",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "pretrain_gnns",
          "head_sha": "616ec8dbf545aeb4b191f30227f9d0454d6e5273",
          "base_ref": "master",
          "base_sha": "112ecb13b9f3961eb3f021fc0273a40e216bd78c",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "maryamkarimi/Recipe-App",
          "actor_login": "jole3227",
          "created_at": "2020-12-06 19:59:53",
          "action": "created",
          "comment_id": 0,
          "body": "",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "marc0manuel",
          "number": 15,
          "title": "Updated Recipe detail page info",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "COLLABORATOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "1ccac9370271fc6815134a1873236c518de85e73",
          "requested_reviewers": [
            "llamositopia",
            "maryamkarimi",
            "jerryiu424"
          ],
          "requested_teams": [],
          "head_ref": "new-dev-manuel",
          "head_sha": "b44ca63be90bb1b29acfef63cfa77ef9c9090ee6",
          "base_ref": "master",
          "base_sha": "f46c13037812e6a3f7ce590bae0c53325f5cff89",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "approved"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "bbuchfink/diamond",
          "actor_login": "bbuchfink",
          "created_at": "2020-12-06 19:59:30",
          "action": "created",
          "comment_id": 0,
          "body": "",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "Yeahsmin",
          "number": 411,
          "title": "Combine connected components in set",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "OWNER",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "554b2160a7e3d5673562a1407d75827ef8410b21",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "master",
          "head_sha": "2b70b22ec53f153095611c7ed6af1cbdb541fed8",
          "base_ref": "master",
          "base_sha": "c0a82b8b415157fcedf17a0f65119a8de31acf10",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "ppy/osu-wiki",
          "actor_login": "Pachiru",
          "created_at": "2020-12-06 19:59:30",
          "action": "created",
          "comment_id": 0,
          "body": "First draft of the osu! Mapping Olympiad wiki article.",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "Pachiru",
          "number": 4556,
          "title": "Add osu! Mapping Olympiad wiki article",
          "labels": [
            "area:community",
            "size/M",
            "type:new article"
          ],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "CONTRIBUTOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "1e83d1cbda12ef534e44ba4e9e6ae6e324ed9bf8",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "osu!mapping-olympiad-article",
          "head_sha": "9f5a7d6e9f6198dd125bfe0529743c883b73e030",
          "base_ref": "master",
          "base_sha": "9f4088c6fa7df95e1d610e682fccca4ff294d05f",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "CXuesong/WikiClientLibrary",
          "actor_login": "RheingoldRiver",
          "created_at": "2020-12-06 19:59:24",
          "action": "created",
          "comment_id": 0,
          "body": "Resolves #77. See unit tests for its intended usage.\r\n\r\n* [x] `action=cargoquery` request\r\n* [ ] LINQ to Cargo MVP (`.Select`, `.Where`, `.OrderBy`)\r\n\r\n",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "CXuesong",
          "number": 78,
          "title": "Basic Cargo extension API support",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "acc8b6cf4ec77d679e561063c57994f890219823",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "dev-cargo",
          "head_sha": "db722959e3a921a8cba448dee1a80d433aaacd7c",
          "base_ref": "master",
          "base_sha": "f0713824b2e9d93035e06966855a6148b6902809",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        },
        {
          "event_type": "PullRequestReviewEvent",
          "repo_name": "Ekdohibs/camlboot",
          "actor_login": "gasche",
          "created_at": "2020-12-06 19:59:21",
          "action": "created",
          "comment_id": 0,
          "body": "Another refactoring PR on top of #16; this one does a larger change to the API so that the visibility handling is moved to one place.",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "gasche",
          "number": 17,
          "title": "Environments contain bindings",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 0,
          "author_association": "COLLABORATOR",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "6e72b182b0dabc1db5e2aa12759241a78ea51b47",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "environments-contain-bindings",
          "head_sha": "0a9f93650490ea87dda6d2b7a831fbf43a856f90",
          "base_ref": "master",
          "base_sha": "0b197cb705a9e7906d9cd318585ba9869de06e91",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "commented"
        }
      ],
      "meta": [
        {
          "name": "event_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "action",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_id",
          "type": "UInt64"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "path",
          "type": "Nullable(String)"
        },
        {
          "name": "position",
          "type": "Int32"
        },
        {
          "name": "line",
          "type": "Int32"
        },
        {
          "name": "ref",
          "type": "Nullable(String)"
        },
        {
          "name": "ref_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "creator_user_login",
          "type": "Nullable(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "locked",
          "type": "UInt8"
        },
        {
          "name": "assignee",
          "type": "LowCardinality(String)"
        },
        {
          "name": "assignees",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "comments",
          "type": "UInt32"
        },
        {
          "name": "author_association",
          "type": "LowCardinality(String)"
        },
        {
          "name": "closed_at",
          "type": "DateTime"
        },
        {
          "name": "merged_at",
          "type": "DateTime"
        },
        {
          "name": "merge_commit_sha",
          "type": "String"
        },
        {
          "name": "requested_reviewers",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "requested_teams",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "head_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "head_sha",
          "type": "String"
        },
        {
          "name": "base_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "base_sha",
          "type": "String"
        },
        {
          "name": "merged",
          "type": "UInt8"
        },
        {
          "name": "mergeable",
          "type": "UInt8"
        },
        {
          "name": "rebaseable",
          "type": "UInt8"
        },
        {
          "name": "mergeable_state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "merged_by",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_comments",
          "type": "UInt32"
        },
        {
          "name": "maintainer_can_modify",
          "type": "UInt8"
        },
        {
          "name": "commits",
          "type": "UInt32"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "diff_hunk",
          "type": "String"
        },
        {
          "name": "original_position",
          "type": "UInt32"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "original_commit_id",
          "type": "String"
        },
        {
          "name": "push_size",
          "type": "UInt32"
        },
        {
          "name": "push_distinct_size",
          "type": "UInt32"
        },
        {
          "name": "member_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "release_tag_name",
          "type": "String"
        },
        {
          "name": "release_name",
          "type": "String"
        },
        {
          "name": "review_state",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.473634847,
        "rows_read": 7561606,
        "bytes_read": 6163563233
      },
      "executionTime": 0.495,
      "requestId": "01JTG7PAT68V7ED2M1MGNWVCMT",
      "length": 12715
    },
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "I previously asked: \"top 10 most tough code reviews\"\n\nYou generated this SQL query:\n```sql\nTo find the top 10 most tough code reviews, you can use the following SQL query:\n\n\nSELECT\n  event_type,\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nORDER BY created_at DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.287,
      "totalDuration": 2.699,
      "tokens": {
        "promptTokens": 4449,
        "completionTokens": 249,
        "totalTokens": 4698
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "To find the top 10 most tough code reviews, you can use the following SQL query:\n\n\nSELECT\n  event_type,\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nORDER BY created_at DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": false,
          "data": [],
          "executionTime": 0.014,
          "requestId": "01JTG7P5Q61ZSX748Q3SJ6R8H2",
          "error": "{\"error\": \"DB::Exception: Syntax error: failed at position 1 ('To') (line 1, col 1): To find the top 10 most tough code reviews, you can use the following SQL query:\\n\\n\\nSELECT\\n  event_type,\\n  repo_name,\\n  actor_login,\\n  created_at,\\n  action,\\n  co. Expected one of: Query, Query with output, EXPLAIN, EXPLAIN, SELECT query, possibly with UNION, list of union elements, SELECT query, subquery, possibly with UNION, SELECT subquery, SELECT query, WITH, FROM, SELECT, SHOW CREATE QUOTA query, SHO",
          "length": 2
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most tough code reviews"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.403,
          "totalDuration": 2.794,
          "tokens": {
            "promptTokens": 4132,
            "completionTokens": 269,
            "totalTokens": 4401
          }
        },
        "error": null
      },
      {
        "sql": "\nSELECT\n  event_type,\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nORDER BY created_at DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "HUPO-PSI/mzQC",
              "actor_login": "cbielow",
              "created_at": "2020-12-06 19:59:59",
              "action": "created",
              "comment_id": 0,
              "body": "from #85, #86, #87, #88, #89, #90, #91, #101\r\n* second pair of eyes for the metric types needed\r\n",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "mwalzer",
              "number": 102,
              "title": "added cv term in bulk",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "CONTRIBUTOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "b81af686506033be26901f68c8cc9394b4b0a5b2",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "bulk-cvterms",
              "head_sha": "1c5dbe28a1caa943ebdd148f4060532fe2de0055",
              "base_ref": "master",
              "base_sha": "82b17b54e44ea3c7198486fbaaced106f597aa49",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "aquasecurity/tracee",
              "actor_login": "itaysk",
              "created_at": "2020-12-06 19:59:56",
              "action": "created",
              "comment_id": 0,
              "body": "",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "yanivagman",
              "number": 347,
              "title": "Add host only mode",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "COLLABORATOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "f9d4c69c649703e199adcc4cd1b0351f067c52a8",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "add_host_only_mode",
              "head_sha": "6091f029bcbbea2948e991b79b10bb797c3560ef",
              "base_ref": "master",
              "base_sha": "741f1071db1fbd3de38f2bd64f92ff422ed13ca3",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "approved"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "KarolGrydz/hunter",
              "actor_login": "customcodepl",
              "created_at": "2020-12-06 19:59:55",
              "action": "created",
              "comment_id": 0,
              "body": "Dodałem to co Ci mówiłem przez telefon. Do tego dodałem funkcję filterLocation w pliku mapAPI.js, nie wiem czy tam ona może być czy jakiś inny plik robić?",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "KarolGrydz",
              "number": 4,
              "title": "Map add API",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "COLLABORATOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "map",
              "head_sha": "8a3632f8a977609c48bccd857a85ae35f5fac3ce",
              "base_ref": "main",
              "base_sha": "47635e85578cd1f70aa75cb2e6161cd9da8cf513",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "Thanu54/Group_cw2",
              "actor_login": "alishakhan01",
              "created_at": "2020-12-06 19:59:54",
              "action": "created",
              "comment_id": 0,
              "body": "This code does output the correct frequencies, I'm happy to merge this version to the draft 2 branch.",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "Dipsimodi",
              "number": 5,
              "title": "Lane frequencies",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "COLLABORATOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "c045f98b256db5d95f1c32885f4f10af93203a3b",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "Lane-Frequencies",
              "head_sha": "dc3f39c31163f47e0a3f2e5a587dce1e0fb29473",
              "base_ref": "Drunk-walk-draft-2",
              "base_sha": "88d6418f09bac6310cd3713c7a3730af68cb643d",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "approved"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "awslabs/dgl-lifesci",
              "actor_login": "mufeili",
              "created_at": "2020-12-06 19:59:54",
              "action": "created",
              "comment_id": 0,
              "body": "*Issue:*\r\n\r\n*Description of changes:*\r\n\r\nThis is a DGL implementation of the following paper:\r\nWeihua Hu*, Bowen Liu*, Joseph Gomes, Marinka Zitnik, Percy Liang, Vijay Pande, Jure Leskovec. Strategies for Pre-training Graph Neural Networks. ICLR 2020. [arXiv](https://arxiv.org/abs/1905.12265)\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "wenx00",
              "number": 110,
              "title": "[Example] Pretrain_gnns",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "CONTRIBUTOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "6de8a2ccbdf0c51a7d6a0b39c410561db9a18b6e",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "pretrain_gnns",
              "head_sha": "616ec8dbf545aeb4b191f30227f9d0454d6e5273",
              "base_ref": "master",
              "base_sha": "112ecb13b9f3961eb3f021fc0273a40e216bd78c",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "maryamkarimi/Recipe-App",
              "actor_login": "jole3227",
              "created_at": "2020-12-06 19:59:53",
              "action": "created",
              "comment_id": 0,
              "body": "",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "marc0manuel",
              "number": 15,
              "title": "Updated Recipe detail page info",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "COLLABORATOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "1ccac9370271fc6815134a1873236c518de85e73",
              "requested_reviewers": [
                "llamositopia",
                "maryamkarimi",
                "jerryiu424"
              ],
              "requested_teams": [],
              "head_ref": "new-dev-manuel",
              "head_sha": "b44ca63be90bb1b29acfef63cfa77ef9c9090ee6",
              "base_ref": "master",
              "base_sha": "f46c13037812e6a3f7ce590bae0c53325f5cff89",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "approved"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "bbuchfink/diamond",
              "actor_login": "bbuchfink",
              "created_at": "2020-12-06 19:59:30",
              "action": "created",
              "comment_id": 0,
              "body": "",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "Yeahsmin",
              "number": 411,
              "title": "Combine connected components in set",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "OWNER",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "554b2160a7e3d5673562a1407d75827ef8410b21",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "master",
              "head_sha": "2b70b22ec53f153095611c7ed6af1cbdb541fed8",
              "base_ref": "master",
              "base_sha": "c0a82b8b415157fcedf17a0f65119a8de31acf10",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "ppy/osu-wiki",
              "actor_login": "Pachiru",
              "created_at": "2020-12-06 19:59:30",
              "action": "created",
              "comment_id": 0,
              "body": "First draft of the osu! Mapping Olympiad wiki article.",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "Pachiru",
              "number": 4556,
              "title": "Add osu! Mapping Olympiad wiki article",
              "labels": [
                "area:community",
                "size/M",
                "type:new article"
              ],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "CONTRIBUTOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "1e83d1cbda12ef534e44ba4e9e6ae6e324ed9bf8",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "osu!mapping-olympiad-article",
              "head_sha": "9f5a7d6e9f6198dd125bfe0529743c883b73e030",
              "base_ref": "master",
              "base_sha": "9f4088c6fa7df95e1d610e682fccca4ff294d05f",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "CXuesong/WikiClientLibrary",
              "actor_login": "RheingoldRiver",
              "created_at": "2020-12-06 19:59:24",
              "action": "created",
              "comment_id": 0,
              "body": "Resolves #77. See unit tests for its intended usage.\r\n\r\n* [x] `action=cargoquery` request\r\n* [ ] LINQ to Cargo MVP (`.Select`, `.Where`, `.OrderBy`)\r\n\r\n",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "CXuesong",
              "number": 78,
              "title": "Basic Cargo extension API support",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "acc8b6cf4ec77d679e561063c57994f890219823",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "dev-cargo",
              "head_sha": "db722959e3a921a8cba448dee1a80d433aaacd7c",
              "base_ref": "master",
              "base_sha": "f0713824b2e9d93035e06966855a6148b6902809",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            },
            {
              "event_type": "PullRequestReviewEvent",
              "repo_name": "Ekdohibs/camlboot",
              "actor_login": "gasche",
              "created_at": "2020-12-06 19:59:21",
              "action": "created",
              "comment_id": 0,
              "body": "Another refactoring PR on top of #16; this one does a larger change to the API so that the visibility handling is moved to one place.",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "gasche",
              "number": 17,
              "title": "Environments contain bindings",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 0,
              "author_association": "COLLABORATOR",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "6e72b182b0dabc1db5e2aa12759241a78ea51b47",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "environments-contain-bindings",
              "head_sha": "0a9f93650490ea87dda6d2b7a831fbf43a856f90",
              "base_ref": "master",
              "base_sha": "0b197cb705a9e7906d9cd318585ba9869de06e91",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "commented"
            }
          ],
          "meta": [
            {
              "name": "event_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "action",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_id",
              "type": "UInt64"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "path",
              "type": "Nullable(String)"
            },
            {
              "name": "position",
              "type": "Int32"
            },
            {
              "name": "line",
              "type": "Int32"
            },
            {
              "name": "ref",
              "type": "Nullable(String)"
            },
            {
              "name": "ref_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "creator_user_login",
              "type": "Nullable(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "locked",
              "type": "UInt8"
            },
            {
              "name": "assignee",
              "type": "LowCardinality(String)"
            },
            {
              "name": "assignees",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "comments",
              "type": "UInt32"
            },
            {
              "name": "author_association",
              "type": "LowCardinality(String)"
            },
            {
              "name": "closed_at",
              "type": "DateTime"
            },
            {
              "name": "merged_at",
              "type": "DateTime"
            },
            {
              "name": "merge_commit_sha",
              "type": "String"
            },
            {
              "name": "requested_reviewers",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "requested_teams",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "head_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "head_sha",
              "type": "String"
            },
            {
              "name": "base_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "base_sha",
              "type": "String"
            },
            {
              "name": "merged",
              "type": "UInt8"
            },
            {
              "name": "mergeable",
              "type": "UInt8"
            },
            {
              "name": "rebaseable",
              "type": "UInt8"
            },
            {
              "name": "mergeable_state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "merged_by",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_comments",
              "type": "UInt32"
            },
            {
              "name": "maintainer_can_modify",
              "type": "UInt8"
            },
            {
              "name": "commits",
              "type": "UInt32"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "diff_hunk",
              "type": "String"
            },
            {
              "name": "original_position",
              "type": "UInt32"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "original_commit_id",
              "type": "String"
            },
            {
              "name": "push_size",
              "type": "UInt32"
            },
            {
              "name": "push_distinct_size",
              "type": "UInt32"
            },
            {
              "name": "member_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "release_tag_name",
              "type": "String"
            },
            {
              "name": "release_name",
              "type": "String"
            },
            {
              "name": "review_state",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 0.473634847,
            "rows_read": 7561606,
            "bytes_read": 6163563233
          },
          "executionTime": 0.495,
          "requestId": "01JTG7PAT68V7ED2M1MGNWVCMT",
          "length": 12715
        },
        "name": "pipe_46.pipe",
        "question": {
          "name": "pipe_46.pipe",
          "content": "DESCRIPTION >\n    top 10 most tough code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "I previously asked: \"top 10 most tough code reviews\"\n\nYou generated this SQL query:\n```sql\nTo find the top 10 most tough code reviews, you can use the following SQL query:\n\n\nSELECT\n  event_type,\n  repo_name,\n  actor_login,\n  created_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nWHERE event_type = 'PullRequestReviewEvent'\nORDER BY created_at DESC\nLIMIT 10\n\n```\n\nBut it resulted in this error:\n```\nnull\n```\n\nPlease fix the SQL query to correctly answer my original question. Make sure the SQL is valid for Tinybird/ClickHouse."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.287,
          "totalDuration": 2.699,
          "tokens": {
            "promptTokens": 4449,
            "completionTokens": 249,
            "totalTokens": 4698
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  actor_login,\n  COUNT(*) AS push_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  actor_login\nORDER BY\n  push_count DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "push_count": 46195052
        },
        {
          "actor_login": "github-actions[bot]",
          "push_count": 9432261
        },
        {
          "actor_login": "OpenLocalizationTest",
          "push_count": 4872353
        },
        {
          "actor_login": "pull[bot]",
          "push_count": 4191714
        },
        {
          "actor_login": "renovate[bot]",
          "push_count": 4180068
        },
        {
          "actor_login": "direwolf-github",
          "push_count": 3333365
        },
        {
          "actor_login": "renovate-bot",
          "push_count": 3184873
        },
        {
          "actor_login": "peter-clifford",
          "push_count": 3139278
        },
        {
          "actor_login": "newstools",
          "push_count": 2559470
        },
        {
          "actor_login": "unitydemo2",
          "push_count": 2331219
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.795138347,
        "rows_read": 1601472977,
        "bytes_read": 4801251086
      },
      "executionTime": 2.844,
      "requestId": "01JTG7PERSV4NZCT9J02KP232T",
      "length": 532
    },
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.793,
      "totalDuration": 1.026,
      "tokens": {
        "promptTokens": 4133,
        "completionTokens": 50,
        "totalTokens": 4183
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  actor_login,\n  COUNT(*) AS push_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  actor_login\nORDER BY\n  push_count DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "LombiqBot",
              "push_count": 46195052
            },
            {
              "actor_login": "github-actions[bot]",
              "push_count": 9432261
            },
            {
              "actor_login": "OpenLocalizationTest",
              "push_count": 4872353
            },
            {
              "actor_login": "pull[bot]",
              "push_count": 4191714
            },
            {
              "actor_login": "renovate[bot]",
              "push_count": 4180068
            },
            {
              "actor_login": "direwolf-github",
              "push_count": 3333365
            },
            {
              "actor_login": "renovate-bot",
              "push_count": 3184873
            },
            {
              "actor_login": "peter-clifford",
              "push_count": 3139278
            },
            {
              "actor_login": "newstools",
              "push_count": 2559470
            },
            {
              "actor_login": "unitydemo2",
              "push_count": 2331219
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.795138347,
            "rows_read": 1601472977,
            "bytes_read": 4801251086
          },
          "executionTime": 2.844,
          "requestId": "01JTG7PERSV4NZCT9J02KP232T",
          "length": 532
        },
        "name": "pipe_47.pipe",
        "question": {
          "name": "pipe_47.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.793,
          "totalDuration": 1.026,
          "tokens": {
            "promptTokens": 4133,
            "completionTokens": 50,
            "totalTokens": 4183
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    actor_login,\n    COUNT(*) AS total_pushes,\n    repo_name AS favorite_repository\nFROM\n    github_events\nWHERE\n    event_type = 'PushEvent'\n    AND author_association IN ('CONTRIBUTOR', 'OWNER', 'COLLABORATOR', 'MEMBER')\n    AND repo_name IN (\n        SELECT\n            repo_name\n        FROM\n            github_events\n        WHERE\n            event_type IN ('IssuesEvent', 'IssueCommentEvent')\n        GROUP BY\n            repo_name\n        HAVING\n            COUNT(*) >= 2\n    )\n    AND repo_name IN (\n        SELECT\n            repo_name\n        FROM\n            github_events\n        WHERE\n            event_type = 'StarEvent'\n        GROUP BY\n            repo_name\n        HAVING\n            COUNT(*) >= 2\n    )\nGROUP BY\n    actor_login,\n    repo_name\nORDER BY\n    total_pushes DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_pushes",
          "type": "UInt64"
        },
        {
          "name": "favorite_repository",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 6.455512872,
        "rows_read": 330039005,
        "bytes_read": 989183726
      },
      "executionTime": 6.504,
      "requestId": "01JTG7PP9NG0K087B6ZMTM9Q6P",
      "length": 2
    },
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.3,
      "totalDuration": 2.358,
      "tokens": {
        "promptTokens": 4188,
        "completionTokens": 205,
        "totalTokens": 4393
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    actor_login,\n    COUNT(*) AS total_pushes,\n    repo_name AS favorite_repository\nFROM\n    github_events\nWHERE\n    event_type = 'PushEvent'\n    AND author_association IN ('CONTRIBUTOR', 'OWNER', 'COLLABORATOR', 'MEMBER')\n    AND repo_name IN (\n        SELECT\n            repo_name\n        FROM\n            github_events\n        WHERE\n            event_type IN ('IssuesEvent', 'IssueCommentEvent')\n        GROUP BY\n            repo_name\n        HAVING\n            COUNT(*) >= 2\n    )\n    AND repo_name IN (\n        SELECT\n            repo_name\n        FROM\n            github_events\n        WHERE\n            event_type = 'StarEvent'\n        GROUP BY\n            repo_name\n        HAVING\n            COUNT(*) >= 2\n    )\nGROUP BY\n    actor_login,\n    repo_name\nORDER BY\n    total_pushes DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_pushes",
              "type": "UInt64"
            },
            {
              "name": "favorite_repository",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 6.455512872,
            "rows_read": 330039005,
            "bytes_read": 989183726
          },
          "executionTime": 6.504,
          "requestId": "01JTG7PP9NG0K087B6ZMTM9Q6P",
          "length": 2
        },
        "name": "pipe_48.pipe",
        "question": {
          "name": "pipe_48.pipe",
          "content": "DESCRIPTION >\n    top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories.\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.3,
          "totalDuration": 2.358,
          "tokens": {
            "promptTokens": 4188,
            "completionTokens": 205,
            "totalTokens": 4393
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.006235018,
        "rows_read": 136959,
        "bytes_read": 136959
      },
      "executionTime": 0.025,
      "requestId": "01JTG7PZVGVB30PKGF508X64JC",
      "length": 2
    },
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of stars"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.287,
      "totalDuration": 0.811,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 53,
        "totalTokens": 4187
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'StarEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "stars_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.006235018,
            "rows_read": 136959,
            "bytes_read": 136959
          },
          "executionTime": 0.025,
          "requestId": "01JTG7PZVGVB30PKGF508X64JC",
          "length": 2
        },
        "name": "pipe_49.pipe",
        "question": {
          "name": "pipe_49.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of stars\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of stars"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.287,
          "totalDuration": 0.811,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 53,
            "totalTokens": 4187
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS repo_count\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\nGROUP BY\n  repo_name\nORDER BY\n  repo_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "eclipse/eclipse.platform.common",
          "repo_count": 1890816
        },
        {
          "repo_name": "direwolf-github/my-app",
          "repo_count": 1426236
        },
        {
          "repo_name": "elasticvolcano/unicorn_api_proxy",
          "repo_count": 806614
        },
        {
          "repo_name": "CircleCITestOrg/smoke-test-test-repo",
          "repo_count": 799938
        },
        {
          "repo_name": "CLSPhila/DocketScraperAPI",
          "repo_count": 585944
        },
        {
          "repo_name": "CodePipeline-Test/feature-tests",
          "repo_count": 561200
        },
        {
          "repo_name": "efarbereger/tmp_clock_repo",
          "repo_count": 551558
        },
        {
          "repo_name": "regro/releases",
          "repo_count": 461245
        },
        {
          "repo_name": "dipper-github-fra-sin-syd-nrt/test-python-sample",
          "repo_count": 388167
        },
        {
          "repo_name": "dipper-github-lhr-yul-sfo-icn/test-python-sample",
          "repo_count": 378251
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 21.134159975,
        "rows_read": 448167202,
        "bytes_read": 1340828877
      },
      "executionTime": 21.18,
      "requestId": "01JTG7Q2ZTNWWDJGVTJJ2HSJMJ",
      "length": 686
    },
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the number of repositories"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.213,
      "totalDuration": 0.658,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 55,
        "totalTokens": 4189
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS repo_count\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\nGROUP BY\n  repo_name\nORDER BY\n  repo_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "eclipse/eclipse.platform.common",
              "repo_count": 1890816
            },
            {
              "repo_name": "direwolf-github/my-app",
              "repo_count": 1426236
            },
            {
              "repo_name": "elasticvolcano/unicorn_api_proxy",
              "repo_count": 806614
            },
            {
              "repo_name": "CircleCITestOrg/smoke-test-test-repo",
              "repo_count": 799938
            },
            {
              "repo_name": "CLSPhila/DocketScraperAPI",
              "repo_count": 585944
            },
            {
              "repo_name": "CodePipeline-Test/feature-tests",
              "repo_count": 561200
            },
            {
              "repo_name": "efarbereger/tmp_clock_repo",
              "repo_count": 551558
            },
            {
              "repo_name": "regro/releases",
              "repo_count": 461245
            },
            {
              "repo_name": "dipper-github-fra-sin-syd-nrt/test-python-sample",
              "repo_count": 388167
            },
            {
              "repo_name": "dipper-github-lhr-yul-sfo-icn/test-python-sample",
              "repo_count": 378251
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 21.134159975,
            "rows_read": 448167202,
            "bytes_read": 1340828877
          },
          "executionTime": 21.18,
          "requestId": "01JTG7Q2ZTNWWDJGVTJJ2HSJMJ",
          "length": 686
        },
        "name": "pipe_50.pipe",
        "question": {
          "name": "pipe_50.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the number of repositories\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the number of repositories"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.213,
          "totalDuration": 0.658,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 55,
            "totalTokens": 4189
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS community_size\nFROM\n  github_events\nGROUP BY\n  repo_name\nORDER BY\n  community_size DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "community_size": 736368
        },
        {
          "repo_name": "996icu/996.ICU",
          "community_size": 279405
        },
        {
          "repo_name": "jtleek/datasharing",
          "community_size": 264395
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "community_size": 259323
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "community_size": 223352
        },
        {
          "repo_name": "facebook/react",
          "community_size": 211153
        },
        {
          "repo_name": "vuejs/vue",
          "community_size": 205351
        },
        {
          "repo_name": "twbs/bootstrap",
          "community_size": 203955
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "community_size": 193542
        },
        {
          "repo_name": "github/gitignore",
          "community_size": 182330
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "community_size",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 98.252652063,
        "rows_read": 3124889133,
        "bytes_read": 12479080129
      },
      "executionTime": 98.276,
      "requestId": "01JTG7QV1YWXBP8Y8CKN3P6JSV",
      "length": 562
    },
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Organizations by the size of community"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.385,
      "totalDuration": 0.989,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 47,
        "totalTokens": 4181
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS community_size\nFROM\n  github_events\nGROUP BY\n  repo_name\nORDER BY\n  community_size DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "community_size": 736368
            },
            {
              "repo_name": "996icu/996.ICU",
              "community_size": 279405
            },
            {
              "repo_name": "jtleek/datasharing",
              "community_size": 264395
            },
            {
              "repo_name": "tensorflow/tensorflow",
              "community_size": 259323
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "community_size": 223352
            },
            {
              "repo_name": "facebook/react",
              "community_size": 211153
            },
            {
              "repo_name": "vuejs/vue",
              "community_size": 205351
            },
            {
              "repo_name": "twbs/bootstrap",
              "community_size": 203955
            },
            {
              "repo_name": "octocat/Spoon-Knife",
              "community_size": 193542
            },
            {
              "repo_name": "github/gitignore",
              "community_size": 182330
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "community_size",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 98.252652063,
            "rows_read": 3124889133,
            "bytes_read": 12479080129
          },
          "executionTime": 98.276,
          "requestId": "01JTG7QV1YWXBP8Y8CKN3P6JSV",
          "length": 562
        },
        "name": "pipe_51.pipe",
        "question": {
          "name": "pipe_51.pipe",
          "content": "DESCRIPTION >\n    top 10 Organizations by the size of community\n\nNODE endpoint\nSQL >\n    SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Organizations by the size of community"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.385,
          "totalDuration": 0.989,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 47,
            "totalTokens": 4181
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n    repo_name,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions\nFROM\n    github_events\nWHERE\n    action IN ('created', 'added', 'edited', 'deleted')\nGROUP BY\n    repo_name\nORDER BY\n    total_additions + total_deletions DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "nicholasprussen/cs354-project-proposal",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "bwitka/meda-fall2019-beau",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "Paveldub/js_course_ls",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "etzi71/devops-python",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "EgeYildir/Lab4",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "tektechnologies/WebTechnologiesCapstone",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "yunbademo/JavaScript-Console",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "adrianopatrick/ifan-docs",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "snsmith92/splurty",
          "total_additions": 0,
          "total_deletions": 0
        },
        {
          "repo_name": "skgtech/devit2016",
          "total_additions": 0,
          "total_deletions": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "total_additions",
          "type": "UInt64"
        },
        {
          "name": "total_deletions",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.474893637,
        "rows_read": 3124889133,
        "bytes_read": 5895980250
      },
      "executionTime": 2.54,
      "requestId": "01JTG7TZDE5RZF61T1RNNRADAE",
      "length": 814
    },
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.495,
      "totalDuration": 1.945,
      "tokens": {
        "promptTokens": 4152,
        "completionTokens": 83,
        "totalTokens": 4235
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n    repo_name,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions\nFROM\n    github_events\nWHERE\n    action IN ('created', 'added', 'edited', 'deleted')\nGROUP BY\n    repo_name\nORDER BY\n    total_additions + total_deletions DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "nicholasprussen/cs354-project-proposal",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "bwitka/meda-fall2019-beau",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "Paveldub/js_course_ls",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "etzi71/devops-python",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "EgeYildir/Lab4",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "tektechnologies/WebTechnologiesCapstone",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "yunbademo/JavaScript-Console",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "adrianopatrick/ifan-docs",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "snsmith92/splurty",
              "total_additions": 0,
              "total_deletions": 0
            },
            {
              "repo_name": "skgtech/devit2016",
              "total_additions": 0,
              "total_deletions": 0
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "total_additions",
              "type": "UInt64"
            },
            {
              "name": "total_deletions",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 2.474893637,
            "rows_read": 3124889133,
            "bytes_read": 5895980250
          },
          "executionTime": 2.54,
          "requestId": "01JTG7TZDE5RZF61T1RNNRADAE",
          "length": 814
        },
        "name": "pipe_52.pipe",
        "question": {
          "name": "pipe_52.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.495,
          "totalDuration": 1.945,
          "tokens": {
            "promptTokens": 4152,
            "completionTokens": 83,
            "totalTokens": 4235
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS push_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  push_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "peter-clifford/grax-hd-trial",
          "push_count": 3097263
        },
        {
          "repo_name": "Lombiq/Orchard",
          "push_count": 2471173
        },
        {
          "repo_name": "unitydemo2/Docworks",
          "push_count": 1779818
        },
        {
          "repo_name": "commit-b0t/commit-b0t",
          "push_count": 1688188
        },
        {
          "repo_name": "KenanSulayman/heartbeat",
          "push_count": 1595611
        },
        {
          "repo_name": "chuan12/shenzhouzd",
          "push_count": 1449096
        },
        {
          "repo_name": "othhotro/Roo.Exe",
          "push_count": 1437709
        },
        {
          "repo_name": "nicopeters/sigrhtest",
          "push_count": 1223998
        },
        {
          "repo_name": "himobi/hotspot",
          "push_count": 1215075
        },
        {
          "repo_name": "dotclear/dotclear",
          "push_count": 1195248
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "push_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 33.368779314,
        "rows_read": 1601472977,
        "bytes_read": 4797915227
      },
      "executionTime": 33.387,
      "requestId": "01JTG7V51SG8GE4NZ4ZBNHGET8",
      "length": 571
    },
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories by the number of pushes"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.252,
      "totalDuration": 0.776,
      "tokens": {
        "promptTokens": 4135,
        "completionTokens": 53,
        "totalTokens": 4188
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS push_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  push_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "peter-clifford/grax-hd-trial",
              "push_count": 3097263
            },
            {
              "repo_name": "Lombiq/Orchard",
              "push_count": 2471173
            },
            {
              "repo_name": "unitydemo2/Docworks",
              "push_count": 1779818
            },
            {
              "repo_name": "commit-b0t/commit-b0t",
              "push_count": 1688188
            },
            {
              "repo_name": "KenanSulayman/heartbeat",
              "push_count": 1595611
            },
            {
              "repo_name": "chuan12/shenzhouzd",
              "push_count": 1449096
            },
            {
              "repo_name": "othhotro/Roo.Exe",
              "push_count": 1437709
            },
            {
              "repo_name": "nicopeters/sigrhtest",
              "push_count": 1223998
            },
            {
              "repo_name": "himobi/hotspot",
              "push_count": 1215075
            },
            {
              "repo_name": "dotclear/dotclear",
              "push_count": 1195248
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "push_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 33.368779314,
            "rows_read": 1601472977,
            "bytes_read": 4797915227
          },
          "executionTime": 33.387,
          "requestId": "01JTG7V51SG8GE4NZ4ZBNHGET8",
          "length": 571
        },
        "name": "pipe_53.pipe",
        "question": {
          "name": "pipe_53.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories by the number of pushes\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories by the number of pushes"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.252,
          "totalDuration": 0.776,
          "tokens": {
            "promptTokens": 4135,
            "completionTokens": 53,
            "totalTokens": 4188
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  actor_login,\n  COUNT(*) AS review_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestReviewEvent'\nGROUP BY\n  actor_login\nORDER BY\n  review_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "github-learning-lab[bot]",
          "review_count": 104542
        },
        {
          "actor_login": "github-actions[bot]",
          "review_count": 89676
        },
        {
          "actor_login": "bot-monkey-2",
          "review_count": 31702
        },
        {
          "actor_login": "staging-muse-bot[bot]",
          "review_count": 29429
        },
        {
          "actor_login": "foreign-sub",
          "review_count": 17630
        },
        {
          "actor_login": "renovate-approve[bot]",
          "review_count": 16563
        },
        {
          "actor_login": "kodiakhq[bot]",
          "review_count": 10876
        },
        {
          "actor_login": "Katsuno0814",
          "review_count": 6966
        },
        {
          "actor_login": "BrewTestBot",
          "review_count": 6718
        },
        {
          "actor_login": "accesslint[bot]",
          "review_count": 6668
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.029644051,
        "rows_read": 7561606,
        "bytes_read": 22380968
      },
      "executionTime": 0.048,
      "requestId": "01JTG7W8RMKW1S0ATP9TESHVNW",
      "length": 557
    },
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Authors with the most code reviews"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.22,
      "totalDuration": 0.682,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 55,
        "totalTokens": 4189
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  actor_login,\n  COUNT(*) AS review_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestReviewEvent'\nGROUP BY\n  actor_login\nORDER BY\n  review_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "actor_login": "github-learning-lab[bot]",
              "review_count": 104542
            },
            {
              "actor_login": "github-actions[bot]",
              "review_count": 89676
            },
            {
              "actor_login": "bot-monkey-2",
              "review_count": 31702
            },
            {
              "actor_login": "staging-muse-bot[bot]",
              "review_count": 29429
            },
            {
              "actor_login": "foreign-sub",
              "review_count": 17630
            },
            {
              "actor_login": "renovate-approve[bot]",
              "review_count": 16563
            },
            {
              "actor_login": "kodiakhq[bot]",
              "review_count": 10876
            },
            {
              "actor_login": "Katsuno0814",
              "review_count": 6966
            },
            {
              "actor_login": "BrewTestBot",
              "review_count": 6718
            },
            {
              "actor_login": "accesslint[bot]",
              "review_count": 6668
            }
          ],
          "meta": [
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 0.029644051,
            "rows_read": 7561606,
            "bytes_read": 22380968
          },
          "executionTime": 0.048,
          "requestId": "01JTG7W8RMKW1S0ATP9TESHVNW",
          "length": 557
        },
        "name": "pipe_54.pipe",
        "question": {
          "name": "pipe_54.pipe",
          "content": "DESCRIPTION >\n    top 10 Authors with the most code reviews\n\nNODE endpoint\nSQL >\n    SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Authors with the most code reviews"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.22,
          "totalDuration": 0.682,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 55,
            "totalTokens": 4189
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  labels,\n  count() as count\nFROM\n  github_events\nWHERE\n  event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY\n  labels\nORDER BY\n  count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [],
          "count": 274083977
        },
        {
          "labels": [
            "dependencies"
          ],
          "count": 8152801
        },
        {
          "labels": [
            "enhancement"
          ],
          "count": 4771004
        },
        {
          "labels": [
            ":arrow_heading_down: pull"
          ],
          "count": 4099386
        },
        {
          "labels": [
            "bug"
          ],
          "count": 3852960
        },
        {
          "labels": [
            "question"
          ],
          "count": 624874
        },
        {
          "labels": [
            "greenkeeper"
          ],
          "count": 481091
        },
        {
          "labels": [
            "dependencies",
            "javascript"
          ],
          "count": 454885
        },
        {
          "labels": [
            "cla: yes"
          ],
          "count": 426664
        },
        {
          "labels": [
            "feature"
          ],
          "count": 379913
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.479155914,
        "rows_read": 326129279,
        "bytes_read": 3089461441
      },
      "executionTime": 1.498,
      "requestId": "01JTG7WBWQC9RR86C76A91BJS5",
      "length": 426
    },
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.206,
      "totalDuration": 0.652,
      "tokens": {
        "promptTokens": 4136,
        "completionTokens": 55,
        "totalTokens": 4191
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  labels,\n  count() as count\nFROM\n  github_events\nWHERE\n  event_type IN ('IssuesEvent', 'PullRequestEvent')\nGROUP BY\n  labels\nORDER BY\n  count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [],
              "count": 274083977
            },
            {
              "labels": [
                "dependencies"
              ],
              "count": 8152801
            },
            {
              "labels": [
                "enhancement"
              ],
              "count": 4771004
            },
            {
              "labels": [
                ":arrow_heading_down: pull"
              ],
              "count": 4099386
            },
            {
              "labels": [
                "bug"
              ],
              "count": 3852960
            },
            {
              "labels": [
                "question"
              ],
              "count": 624874
            },
            {
              "labels": [
                "greenkeeper"
              ],
              "count": 481091
            },
            {
              "labels": [
                "dependencies",
                "javascript"
              ],
              "count": 454885
            },
            {
              "labels": [
                "cla: yes"
              ],
              "count": 426664
            },
            {
              "labels": [
                "feature"
              ],
              "count": 379913
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.479155914,
            "rows_read": 326129279,
            "bytes_read": 3089461441
          },
          "executionTime": 1.498,
          "requestId": "01JTG7WBWQC9RR86C76A91BJS5",
          "length": 426
        },
        "name": "pipe_55.pipe",
        "question": {
          "name": "pipe_55.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.206,
          "totalDuration": 0.652,
          "tokens": {
            "promptTokens": 4136,
            "completionTokens": 55,
            "totalTokens": 4191
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  labels,\n  count() AS count\nFROM\n  github_events\nWHERE\n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND labels IS NOT NULL\nGROUP BY\n  labels\nORDER BY\n  count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "labels": [],
          "count": 274083977
        },
        {
          "labels": [
            "dependencies"
          ],
          "count": 8152801
        },
        {
          "labels": [
            "enhancement"
          ],
          "count": 4771004
        },
        {
          "labels": [
            ":arrow_heading_down: pull"
          ],
          "count": 4099386
        },
        {
          "labels": [
            "bug"
          ],
          "count": 3852960
        },
        {
          "labels": [
            "question"
          ],
          "count": 624874
        },
        {
          "labels": [
            "greenkeeper"
          ],
          "count": 481091
        },
        {
          "labels": [
            "dependencies",
            "javascript"
          ],
          "count": 454885
        },
        {
          "labels": [
            "cla: yes"
          ],
          "count": 426664
        },
        {
          "labels": [
            "feature"
          ],
          "count": 379913
        }
      ],
      "meta": [
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.851736592,
        "rows_read": 326129279,
        "bytes_read": 3089461446
      },
      "executionTime": 1.871,
      "requestId": "01JTG7WGNP0YC8E09PM5ZYRKJH",
      "length": 426
    },
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.385,
      "totalDuration": 0.897,
      "tokens": {
        "promptTokens": 4142,
        "completionTokens": 62,
        "totalTokens": 4204
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  labels,\n  count() AS count\nFROM\n  github_events\nWHERE\n  event_type IN ('IssuesEvent', 'PullRequestEvent')\n  AND labels IS NOT NULL\nGROUP BY\n  labels\nORDER BY\n  count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "labels": [],
              "count": 274083977
            },
            {
              "labels": [
                "dependencies"
              ],
              "count": 8152801
            },
            {
              "labels": [
                "enhancement"
              ],
              "count": 4771004
            },
            {
              "labels": [
                ":arrow_heading_down: pull"
              ],
              "count": 4099386
            },
            {
              "labels": [
                "bug"
              ],
              "count": 3852960
            },
            {
              "labels": [
                "question"
              ],
              "count": 624874
            },
            {
              "labels": [
                "greenkeeper"
              ],
              "count": 481091
            },
            {
              "labels": [
                "dependencies",
                "javascript"
              ],
              "count": 454885
            },
            {
              "labels": [
                "cla: yes"
              ],
              "count": 426664
            },
            {
              "labels": [
                "feature"
              ],
              "count": 379913
            }
          ],
          "meta": [
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 1.851736592,
            "rows_read": 326129279,
            "bytes_read": 3089461446
          },
          "executionTime": 1.871,
          "requestId": "01JTG7WGNP0YC8E09PM5ZYRKJH",
          "length": 426
        },
        "name": "pipe_56.pipe",
        "question": {
          "name": "pipe_56.pipe",
          "content": "DESCRIPTION >\n    top 10 most popular labels for issues and pull requests? filter by bugs and features\n\nNODE endpoint\nSQL >\n    SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.385,
          "totalDuration": 0.897,
          "tokens": {
            "promptTokens": 4142,
            "completionTokens": 62,
            "totalTokens": 4204
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  repo_name,\n  length(repo_name) AS repo_name_length\nFROM\n  github_events\nWHERE\n  event_type = 'RepositoryEvent'\nORDER BY\n  repo_name_length DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 0.005262956,
        "rows_read": 136959,
        "bytes_read": 136959
      },
      "executionTime": 0.024,
      "requestId": "01JTG7WNJMDG4D939BPSXXY72X",
      "length": 2
    },
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 longest repository names"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.256,
      "totalDuration": 0.651,
      "tokens": {
        "promptTokens": 4131,
        "completionTokens": 48,
        "totalTokens": 4179
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  repo_name,\n  length(repo_name) AS repo_name_length\nFROM\n  github_events\nWHERE\n  event_type = 'RepositoryEvent'\nORDER BY\n  repo_name_length DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name_length",
              "type": "LowCardinality(UInt64)"
            }
          ],
          "statistics": {
            "elapsed": 0.005262956,
            "rows_read": 136959,
            "bytes_read": 136959
          },
          "executionTime": 0.024,
          "requestId": "01JTG7WNJMDG4D939BPSXXY72X",
          "length": 2
        },
        "name": "pipe_57.pipe",
        "question": {
          "name": "pipe_57.pipe",
          "content": "DESCRIPTION >\n    top 10 longest repository names\n\nNODE endpoint\nSQL >\n    SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 longest repository names"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.256,
          "totalDuration": 0.651,
          "tokens": {
            "promptTokens": 4131,
            "completionTokens": 48,
            "totalTokens": 4179
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n    repo_name,\n    MIN(LENGTH(repo_name)) AS shortest_length\nFROM\n    github_events\nGROUP BY\n    repo_name\nORDER BY\n    shortest_length\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "shortest_length": 1
        },
        {
          "repo_name": "/z",
          "shortest_length": 2
        },
        {
          "repo_name": "/x",
          "shortest_length": 2
        },
        {
          "repo_name": "/c",
          "shortest_length": 2
        },
        {
          "repo_name": "/a",
          "shortest_length": 2
        },
        {
          "repo_name": "/n",
          "shortest_length": 2
        },
        {
          "repo_name": "/h",
          "shortest_length": 2
        },
        {
          "repo_name": "/-",
          "shortest_length": 2
        },
        {
          "repo_name": "/av",
          "shortest_length": 3
        },
        {
          "repo_name": "/A1",
          "shortest_length": 3
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "shortest_length",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 49.700315522,
        "rows_read": 3124889133,
        "bytes_read": 6233646093
      },
      "executionTime": 83.612,
      "requestId": "01JTG7XSQMAY0FX29EP1Y1YZYA",
      "length": 392
    },
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 shortest repository names"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.205,
      "totalDuration": 0.614,
      "tokens": {
        "promptTokens": 4131,
        "completionTokens": 45,
        "totalTokens": 4176
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n    repo_name,\n    MIN(LENGTH(repo_name)) AS shortest_length\nFROM\n    github_events\nGROUP BY\n    repo_name\nORDER BY\n    shortest_length\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "/",
              "shortest_length": 1
            },
            {
              "repo_name": "/z",
              "shortest_length": 2
            },
            {
              "repo_name": "/x",
              "shortest_length": 2
            },
            {
              "repo_name": "/c",
              "shortest_length": 2
            },
            {
              "repo_name": "/a",
              "shortest_length": 2
            },
            {
              "repo_name": "/n",
              "shortest_length": 2
            },
            {
              "repo_name": "/h",
              "shortest_length": 2
            },
            {
              "repo_name": "/-",
              "shortest_length": 2
            },
            {
              "repo_name": "/av",
              "shortest_length": 3
            },
            {
              "repo_name": "/A1",
              "shortest_length": 3
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "shortest_length",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 49.700315522,
            "rows_read": 3124889133,
            "bytes_read": 6233646093
          },
          "executionTime": 83.612,
          "requestId": "01JTG7XSQMAY0FX29EP1Y1YZYA",
          "length": 392
        },
        "name": "pipe_58.pipe",
        "question": {
          "name": "pipe_58.pipe",
          "content": "DESCRIPTION >\n    top 10 shortest repository names\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 shortest repository names"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.205,
          "totalDuration": 0.614,
          "tokens": {
            "promptTokens": 4131,
            "completionTokens": 45,
            "totalTokens": 4176
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent' AND\n  body LIKE '%freecodecamp%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 3203
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 1155
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 359
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 248
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 178
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 104
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 87
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 76
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 71
        },
        {
          "repo_name": "frontendbr/forum",
          "comment_count": 63
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.819914876,
        "rows_read": 218620144,
        "bytes_read": 91676124350
      },
      "executionTime": 8.842,
      "requestId": "01JTG7ZE26GJDYE9M3Y5BJSCEW",
      "length": 613
    },
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp related comments"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.549,
      "totalDuration": 1.352,
      "tokens": {
        "promptTokens": 4137,
        "completionTokens": 68,
        "totalTokens": 4205
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent' AND\n  body LIKE '%freecodecamp%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 3203
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 1155
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 359
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 248
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 178
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 104
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 87
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 76
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 71
            },
            {
              "repo_name": "frontendbr/forum",
              "comment_count": 63
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.819914876,
            "rows_read": 218620144,
            "bytes_read": 91676124350
          },
          "executionTime": 8.842,
          "requestId": "01JTG7ZE26GJDYE9M3Y5BJSCEW",
          "length": 613
        },
        "name": "pipe_59.pipe",
        "question": {
          "name": "pipe_59.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp related comments\n\nNODE endpoint\nSQL >\n    SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp related comments"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.549,
          "totalDuration": 1.352,
          "tokens": {
            "promptTokens": 4137,
            "completionTokens": 68,
            "totalTokens": 4205
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\n  AND body LIKE '%freecodecamp%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_count DESC\nLIMIT 10\n",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "comment_count": 3203
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "comment_count": 1155
        },
        {
          "repo_name": "freeCodeCamp/guide",
          "comment_count": 359
        },
        {
          "repo_name": "FreeCodeCamp/freecodecamp",
          "comment_count": 248
        },
        {
          "repo_name": "freeCodeCamp/testable-projects-fcc",
          "comment_count": 178
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "comment_count": 104
        },
        {
          "repo_name": "FreeCodeCampChina/freecodecamp.cn",
          "comment_count": 87
        },
        {
          "repo_name": "freeCodeCamp/CurriculumExpansion",
          "comment_count": 76
        },
        {
          "repo_name": "FreeCodeCamp/wiki",
          "comment_count": 71
        },
        {
          "repo_name": "frontendbr/forum",
          "comment_count": 63
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comment_count",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.982051264,
        "rows_read": 218620144,
        "bytes_read": 91676121006
      },
      "executionTime": 9.008,
      "requestId": "01JTG7ZSZK88HG6QHA3TKHD34H",
      "length": 613
    },
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.291,
      "totalDuration": 0.863,
      "tokens": {
        "promptTokens": 4141,
        "completionTokens": 65,
        "totalTokens": 4206
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\n  AND body LIKE '%freecodecamp%'\nGROUP BY\n  repo_name\nORDER BY\n  comment_count DESC\nLIMIT 10\n",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "repo_name": "freeCodeCamp/freeCodeCamp",
              "comment_count": 3203
            },
            {
              "repo_name": "FreeCodeCamp/FreeCodeCamp",
              "comment_count": 1155
            },
            {
              "repo_name": "freeCodeCamp/guide",
              "comment_count": 359
            },
            {
              "repo_name": "FreeCodeCamp/freecodecamp",
              "comment_count": 248
            },
            {
              "repo_name": "freeCodeCamp/testable-projects-fcc",
              "comment_count": 178
            },
            {
              "repo_name": "freeCodeCamp/guides",
              "comment_count": 104
            },
            {
              "repo_name": "FreeCodeCampChina/freecodecamp.cn",
              "comment_count": 87
            },
            {
              "repo_name": "freeCodeCamp/CurriculumExpansion",
              "comment_count": 76
            },
            {
              "repo_name": "FreeCodeCamp/wiki",
              "comment_count": 71
            },
            {
              "repo_name": "frontendbr/forum",
              "comment_count": 63
            }
          ],
          "meta": [
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "comment_count",
              "type": "UInt64"
            }
          ],
          "statistics": {
            "elapsed": 8.982051264,
            "rows_read": 218620144,
            "bytes_read": 91676121006
          },
          "executionTime": 9.008,
          "requestId": "01JTG7ZSZK88HG6QHA3TKHD34H",
          "length": 613
        },
        "name": "pipe_60.pipe",
        "question": {
          "name": "pipe_60.pipe",
          "content": "DESCRIPTION >\n    top 10 Repositories with freecodecamp-related comments, sorted by stars\n\nNODE endpoint\nSQL >\n    SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.291,
          "totalDuration": 0.863,
          "tokens": {
            "promptTokens": 4141,
            "completionTokens": 65,
            "totalTokens": 4206
          }
        },
        "error": null
      }
    ]
  },
  {
    "sql": "SELECT\n  comment_id,\n  actor_login,\n  repo_name,\n  created_at,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nORDER BY comments DESC\nLIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "comment_id": 122528255,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528261,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528251,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528257,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528249,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528262,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528258,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528263,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528270,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        },
        {
          "comment_id": 122528269,
          "actor_login": "jaecSolutions",
          "repo_name": "jaecSolutions/Unito-dev",
          "created_at": "2015-07-18 10:39:02",
          "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
          "path": "",
          "position": 0,
          "line": 0,
          "ref": "",
          "ref_type": "none",
          "creator_user_login": "jaecSolutions",
          "number": 10,
          "title": "#4 OTro titul",
          "labels": [],
          "state": "open",
          "locked": 0,
          "assignee": "",
          "assignees": [],
          "comments": 2512,
          "author_association": "NONE",
          "closed_at": "1970-01-01 00:00:00",
          "merged_at": "1970-01-01 00:00:00",
          "merge_commit_sha": "",
          "requested_reviewers": [],
          "requested_teams": [],
          "head_ref": "",
          "head_sha": "",
          "base_ref": "",
          "base_sha": "",
          "merged": 0,
          "mergeable": 0,
          "rebaseable": 0,
          "mergeable_state": "unknown",
          "merged_by": "",
          "review_comments": 0,
          "maintainer_can_modify": 0,
          "commits": 0,
          "additions": 0,
          "deletions": 0,
          "changed_files": 0,
          "diff_hunk": "",
          "original_position": 0,
          "commit_id": "",
          "original_commit_id": "",
          "push_size": 0,
          "push_distinct_size": 0,
          "member_login": "",
          "release_tag_name": "",
          "release_name": "",
          "review_state": "none"
        }
      ],
      "meta": [
        {
          "name": "comment_id",
          "type": "UInt64"
        },
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "created_at",
          "type": "DateTime"
        },
        {
          "name": "body",
          "type": "Nullable(String)"
        },
        {
          "name": "path",
          "type": "Nullable(String)"
        },
        {
          "name": "position",
          "type": "Int32"
        },
        {
          "name": "line",
          "type": "Int32"
        },
        {
          "name": "ref",
          "type": "Nullable(String)"
        },
        {
          "name": "ref_type",
          "type": "LowCardinality(String)"
        },
        {
          "name": "creator_user_login",
          "type": "Nullable(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "title",
          "type": "Nullable(String)"
        },
        {
          "name": "labels",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "locked",
          "type": "UInt8"
        },
        {
          "name": "assignee",
          "type": "LowCardinality(String)"
        },
        {
          "name": "assignees",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "comments",
          "type": "UInt32"
        },
        {
          "name": "author_association",
          "type": "LowCardinality(String)"
        },
        {
          "name": "closed_at",
          "type": "DateTime"
        },
        {
          "name": "merged_at",
          "type": "DateTime"
        },
        {
          "name": "merge_commit_sha",
          "type": "String"
        },
        {
          "name": "requested_reviewers",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "requested_teams",
          "type": "Array(LowCardinality(String))"
        },
        {
          "name": "head_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "head_sha",
          "type": "String"
        },
        {
          "name": "base_ref",
          "type": "LowCardinality(String)"
        },
        {
          "name": "base_sha",
          "type": "String"
        },
        {
          "name": "merged",
          "type": "UInt8"
        },
        {
          "name": "mergeable",
          "type": "UInt8"
        },
        {
          "name": "rebaseable",
          "type": "UInt8"
        },
        {
          "name": "mergeable_state",
          "type": "LowCardinality(String)"
        },
        {
          "name": "merged_by",
          "type": "LowCardinality(String)"
        },
        {
          "name": "review_comments",
          "type": "UInt32"
        },
        {
          "name": "maintainer_can_modify",
          "type": "UInt8"
        },
        {
          "name": "commits",
          "type": "UInt32"
        },
        {
          "name": "additions",
          "type": "UInt32"
        },
        {
          "name": "deletions",
          "type": "UInt32"
        },
        {
          "name": "changed_files",
          "type": "UInt32"
        },
        {
          "name": "diff_hunk",
          "type": "String"
        },
        {
          "name": "original_position",
          "type": "UInt32"
        },
        {
          "name": "commit_id",
          "type": "String"
        },
        {
          "name": "original_commit_id",
          "type": "String"
        },
        {
          "name": "push_size",
          "type": "UInt32"
        },
        {
          "name": "push_distinct_size",
          "type": "UInt32"
        },
        {
          "name": "member_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "release_tag_name",
          "type": "String"
        },
        {
          "name": "release_name",
          "type": "String"
        },
        {
          "name": "review_state",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 203.788365298,
        "rows_read": 3124889133,
        "bytes_read": 1431187857754
      },
      "executionTime": 203.836,
      "requestId": "01JTG807SA59FD8K99P9C9JX0Z",
      "length": 10121
    },
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
      "question": "top 10 Most popular comments on GitHub"
    },
    "model": "ministral-8b",
    "provider": "mistralai",
    "metrics": {
      "timeToFirstToken": 0.392,
      "totalDuration": 2.595,
      "tokens": {
        "promptTokens": 4134,
        "completionTokens": 226,
        "totalTokens": 4360
      }
    },
    "error": null,
    "attempts": [
      {
        "sql": "SELECT\n  comment_id,\n  actor_login,\n  repo_name,\n  created_at,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nFROM github_events\nORDER BY comments DESC\nLIMIT 10",
        "sqlResult": {
          "success": true,
          "data": [
            {
              "comment_id": 122528255,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528261,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528251,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528257,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528249,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528262,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528258,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528263,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528270,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            },
            {
              "comment_id": 122528269,
              "actor_login": "jaecSolutions",
              "repo_name": "jaecSolutions/Unito-dev",
              "created_at": "2015-07-18 10:39:02",
              "body": "test comment\n\n\n#aa.commenter John\n#aa.id 41381941794704",
              "path": "",
              "position": 0,
              "line": 0,
              "ref": "",
              "ref_type": "none",
              "creator_user_login": "jaecSolutions",
              "number": 10,
              "title": "#4 OTro titul",
              "labels": [],
              "state": "open",
              "locked": 0,
              "assignee": "",
              "assignees": [],
              "comments": 2512,
              "author_association": "NONE",
              "closed_at": "1970-01-01 00:00:00",
              "merged_at": "1970-01-01 00:00:00",
              "merge_commit_sha": "",
              "requested_reviewers": [],
              "requested_teams": [],
              "head_ref": "",
              "head_sha": "",
              "base_ref": "",
              "base_sha": "",
              "merged": 0,
              "mergeable": 0,
              "rebaseable": 0,
              "mergeable_state": "unknown",
              "merged_by": "",
              "review_comments": 0,
              "maintainer_can_modify": 0,
              "commits": 0,
              "additions": 0,
              "deletions": 0,
              "changed_files": 0,
              "diff_hunk": "",
              "original_position": 0,
              "commit_id": "",
              "original_commit_id": "",
              "push_size": 0,
              "push_distinct_size": 0,
              "member_login": "",
              "release_tag_name": "",
              "release_name": "",
              "review_state": "none"
            }
          ],
          "meta": [
            {
              "name": "comment_id",
              "type": "UInt64"
            },
            {
              "name": "actor_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "repo_name",
              "type": "LowCardinality(String)"
            },
            {
              "name": "created_at",
              "type": "DateTime"
            },
            {
              "name": "body",
              "type": "Nullable(String)"
            },
            {
              "name": "path",
              "type": "Nullable(String)"
            },
            {
              "name": "position",
              "type": "Int32"
            },
            {
              "name": "line",
              "type": "Int32"
            },
            {
              "name": "ref",
              "type": "Nullable(String)"
            },
            {
              "name": "ref_type",
              "type": "LowCardinality(String)"
            },
            {
              "name": "creator_user_login",
              "type": "Nullable(String)"
            },
            {
              "name": "number",
              "type": "Int32"
            },
            {
              "name": "title",
              "type": "Nullable(String)"
            },
            {
              "name": "labels",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "locked",
              "type": "UInt8"
            },
            {
              "name": "assignee",
              "type": "LowCardinality(String)"
            },
            {
              "name": "assignees",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "comments",
              "type": "UInt32"
            },
            {
              "name": "author_association",
              "type": "LowCardinality(String)"
            },
            {
              "name": "closed_at",
              "type": "DateTime"
            },
            {
              "name": "merged_at",
              "type": "DateTime"
            },
            {
              "name": "merge_commit_sha",
              "type": "String"
            },
            {
              "name": "requested_reviewers",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "requested_teams",
              "type": "Array(LowCardinality(String))"
            },
            {
              "name": "head_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "head_sha",
              "type": "String"
            },
            {
              "name": "base_ref",
              "type": "LowCardinality(String)"
            },
            {
              "name": "base_sha",
              "type": "String"
            },
            {
              "name": "merged",
              "type": "UInt8"
            },
            {
              "name": "mergeable",
              "type": "UInt8"
            },
            {
              "name": "rebaseable",
              "type": "UInt8"
            },
            {
              "name": "mergeable_state",
              "type": "LowCardinality(String)"
            },
            {
              "name": "merged_by",
              "type": "LowCardinality(String)"
            },
            {
              "name": "review_comments",
              "type": "UInt32"
            },
            {
              "name": "maintainer_can_modify",
              "type": "UInt8"
            },
            {
              "name": "commits",
              "type": "UInt32"
            },
            {
              "name": "additions",
              "type": "UInt32"
            },
            {
              "name": "deletions",
              "type": "UInt32"
            },
            {
              "name": "changed_files",
              "type": "UInt32"
            },
            {
              "name": "diff_hunk",
              "type": "String"
            },
            {
              "name": "original_position",
              "type": "UInt32"
            },
            {
              "name": "commit_id",
              "type": "String"
            },
            {
              "name": "original_commit_id",
              "type": "String"
            },
            {
              "name": "push_size",
              "type": "UInt32"
            },
            {
              "name": "push_distinct_size",
              "type": "UInt32"
            },
            {
              "name": "member_login",
              "type": "LowCardinality(String)"
            },
            {
              "name": "release_tag_name",
              "type": "String"
            },
            {
              "name": "release_name",
              "type": "String"
            },
            {
              "name": "review_state",
              "type": "LowCardinality(String)"
            }
          ],
          "statistics": {
            "elapsed": 203.788365298,
            "rows_read": 3124889133,
            "bytes_read": 1431187857754
          },
          "executionTime": 203.836,
          "requestId": "01JTG807SA59FD8K99P9C9JX0Z",
          "length": 10121
        },
        "name": "pipe_61.pipe",
        "question": {
          "name": "pipe_61.pipe",
          "content": "DESCRIPTION >\n    top 10 Most popular comments on GitHub\n\nNODE endpoint\nSQL >\n    SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10\n\nTYPE endpoint",
          "question": "top 10 Most popular comments on GitHub"
        },
        "model": "ministral-8b",
        "provider": "mistralai",
        "metrics": {
          "timeToFirstToken": 0.392,
          "totalDuration": 2.595,
          "tokens": {
            "promptTokens": 4134,
            "completionTokens": 226,
            "totalTokens": 4360
          }
        },
        "error": null
      }
    ]
  }
]