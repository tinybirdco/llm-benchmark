[
  {
    "name": "pipe_01.pipe",
    "question": {
      "name": "pipe_01.pipe",
      "content": "Counting stars\n    The WatchEvent is the event when someone gives a star to a repo."
    },
    "sql": "SELECT count() FROM github_events WHERE event_type = 'WatchEvent'",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "count()": 232118474
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004554573,
        "rows_read": 154254,
        "bytes_read": 154269
      },
      "executionTime": 0.052,
      "requestId": "01JSXXM5GDM290CXGZPM8R2AJA"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_02.pipe",
    "question": {
      "name": "pipe_02.pipe",
      "content": "Top 10 repositories by stars"
    },
    "sql": "SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "stars": 354850
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "stars": 225490
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 199731
        },
        {
          "repo_name": "facebook/react",
          "stars": 188575
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 173681
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 160542
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "stars": 147561
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "stars": 144146
        },
        {
          "repo_name": "freeCodeCamp/freeCodeCamp",
          "stars": 140027
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 126371
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.237861118,
        "rows_read": 232206874,
        "bytes_read": 696284381
      },
      "executionTime": 1.362,
      "requestId": "01JSXXM6KRTX0J22WV65W12YMY"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_03.pipe",
    "question": {
      "name": "pipe_03.pipe",
      "content": "what is the distribution of repositories by stars? from 1 to 100000 in multiples of 10"
    },
    "sql": "SELECT\n        exp10(floor(log10(c))) AS stars,\n        uniq(k)\n    FROM\n    (\n        SELECT\n            repo_name AS k,\n            count() AS c\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY k\n    )\n    GROUP BY stars\n    ORDER BY stars ASC",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "stars": 1,
          "uniq(k)": 14946505
        },
        {
          "stars": 10,
          "uniq(k)": 1196622
        },
        {
          "stars": 100,
          "uniq(k)": 213026
        },
        {
          "stars": 1000,
          "uniq(k)": 28944
        },
        {
          "stars": 10000,
          "uniq(k)": 1847
        },
        {
          "stars": 100000,
          "uniq(k)": 20
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "Float64"
        },
        {
          "name": "uniq(k)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.315777895,
        "rows_read": 232206874,
        "bytes_read": 696284381
      },
      "executionTime": 1.377,
      "requestId": "01JSXXM8V8PFHM6QFRBQQ19GGZ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_04.pipe",
    "question": {
      "name": "pipe_04.pipe",
      "content": "The total number of repositories on GitHub"
    },
    "sql": "SELECT uniq(repo_name) FROM github_events",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.109,
      "requestId": "01JSXXMB5M8A088HAKRT3PBY9Z",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.002818483 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_05.pipe",
    "question": {
      "name": "pipe_05.pipe",
      "content": "How has the list of top repositories changed over the years from 2015"
    },
    "sql": "SELECT\n        year,\n        lower(repo_name) AS repo,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (year >= 2015)\n    GROUP BY\n        repo,\n        toYear(created_at) AS year\n    ORDER BY\n        year ASC,\n        count() DESC\n    LIMIT 10 BY year",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2015,
          "repo": "freecodecamp/freecodecamp",
          "count()": 53806
        },
        {
          "year": 2015,
          "repo": "facebook/react-native",
          "count()": 25888
        },
        {
          "year": 2015,
          "repo": "apple/swift",
          "count()": 25834
        },
        {
          "year": 2015,
          "repo": "sindresorhus/awesome",
          "count()": 24420
        },
        {
          "year": 2015,
          "repo": "facebook/react",
          "count()": 22977
        },
        {
          "year": 2015,
          "repo": "jlevy/the-art-of-command-line",
          "count()": 22105
        },
        {
          "year": 2015,
          "repo": "narkoz/hacker-scripts",
          "count()": 20450
        },
        {
          "year": 2015,
          "repo": "twbs/bootstrap",
          "count()": 19775
        },
        {
          "year": 2015,
          "repo": "google/material-design-lite",
          "count()": 17904
        },
        {
          "year": 2015,
          "repo": "airbnb/javascript",
          "count()": 17586
        },
        {
          "year": 2016,
          "repo": "freecodecamp/freecodecamp",
          "count()": 182203
        },
        {
          "year": 2016,
          "repo": "jwasham/google-interview-university",
          "count()": 31522
        },
        {
          "year": 2016,
          "repo": "vhf/free-programming-books",
          "count()": 28870
        },
        {
          "year": 2016,
          "repo": "vuejs/vue",
          "count()": 28831
        },
        {
          "year": 2016,
          "repo": "tensorflow/tensorflow",
          "count()": 28282
        },
        {
          "year": 2016,
          "repo": "facebook/react",
          "count()": 26046
        },
        {
          "year": 2016,
          "repo": "getify/you-dont-know-js",
          "count()": 24975
        },
        {
          "year": 2016,
          "repo": "sindresorhus/awesome",
          "count()": 24829
        },
        {
          "year": 2016,
          "repo": "chrislgarry/apollo-11",
          "count()": 23483
        },
        {
          "year": 2016,
          "repo": "yarnpkg/yarn",
          "count()": 21518
        },
        {
          "year": 2017,
          "repo": "freecodecamp/freecodecamp",
          "count()": 96359
        },
        {
          "year": 2017,
          "repo": "tensorflow/tensorflow",
          "count()": 49278
        },
        {
          "year": 2017,
          "repo": "vuejs/vue",
          "count()": 48185
        },
        {
          "year": 2017,
          "repo": "facebook/react",
          "count()": 34524
        },
        {
          "year": 2017,
          "repo": "mr-mig/every-programmer-should-know",
          "count()": 30991
        },
        {
          "year": 2017,
          "repo": "kamranahmedse/developer-roadmap",
          "count()": 30497
        },
        {
          "year": 2017,
          "repo": "sindresorhus/awesome",
          "count()": 29084
        },
        {
          "year": 2017,
          "repo": "getify/you-dont-know-js",
          "count()": 28902
        },
        {
          "year": 2017,
          "repo": "thedaviddias/front-end-checklist",
          "count()": 24745
        },
        {
          "year": 2017,
          "repo": "facebookincubator/create-react-app",
          "count()": 24479
        },
        {
          "year": 2018,
          "repo": "vuejs/vue",
          "count()": 51515
        },
        {
          "year": 2018,
          "repo": "trekhleb/javascript-algorithms",
          "count()": 39249
        },
        {
          "year": 2018,
          "repo": "facebook/react",
          "count()": 38817
        },
        {
          "year": 2018,
          "repo": "flutter/flutter",
          "count()": 38357
        },
        {
          "year": 2018,
          "repo": "danistefanovic/build-your-own-x",
          "count()": 37815
        },
        {
          "year": 2018,
          "repo": "tensorflow/tensorflow",
          "count()": 36976
        },
        {
          "year": 2018,
          "repo": "kamranahmedse/developer-roadmap",
          "count()": 35278
        },
        {
          "year": 2018,
          "repo": "x64dbg/x64dbg",
          "count()": 32381
        },
        {
          "year": 2018,
          "repo": "donnemartin/system-design-primer",
          "count()": 31384
        },
        {
          "year": 2018,
          "repo": "cyc2018/interview-notebook",
          "count()": 29941
        },
        {
          "year": 2019,
          "repo": "996icu/996.icu",
          "count()": 344825
        },
        {
          "year": 2019,
          "repo": "jackfrued/python-100-days",
          "count()": 76845
        },
        {
          "year": 2019,
          "repo": "m4cs/babysploit",
          "count()": 71013
        },
        {
          "year": 2019,
          "repo": "microsoft/terminal",
          "count()": 56844
        },
        {
          "year": 2019,
          "repo": "snailclimb/javaguide",
          "count()": 53444
        },
        {
          "year": 2019,
          "repo": "thealgorithms/python",
          "count()": 48859
        },
        {
          "year": 2019,
          "repo": "cyc2018/cs-notes",
          "count()": 46609
        },
        {
          "year": 2019,
          "repo": "misterbooo/leetcodeanimation",
          "count()": 41526
        },
        {
          "year": 2019,
          "repo": "vuejs/vue",
          "count()": 39159
        },
        {
          "year": 2019,
          "repo": "flutter/flutter",
          "count()": 38733
        },
        {
          "year": 2020,
          "repo": "labuladong/fucking-algorithm",
          "count()": 77568
        },
        {
          "year": 2020,
          "repo": "jwasham/coding-interview-university",
          "count()": 54591
        },
        {
          "year": 2020,
          "repo": "kamranahmedse/developer-roadmap",
          "count()": 50944
        },
        {
          "year": 2020,
          "repo": "donnemartin/system-design-primer",
          "count()": 37384
        },
        {
          "year": 2020,
          "repo": "ebookfoundation/free-programming-books",
          "count()": 36686
        },
        {
          "year": 2020,
          "repo": "public-apis/public-apis",
          "count()": 36405
        },
        {
          "year": 2020,
          "repo": "thealgorithms/python",
          "count()": 33837
        },
        {
          "year": 2020,
          "repo": "cyc2018/cs-notes",
          "count()": 33517
        },
        {
          "year": 2020,
          "repo": "danistefanovic/build-your-own-x",
          "count()": 33283
        },
        {
          "year": 2020,
          "repo": "microsoft/powertoys",
          "count()": 33137
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.322238983,
        "rows_read": 206893429,
        "bytes_read": 1447743065
      },
      "executionTime": 5.447,
      "requestId": "01JSXXMP0X5PYCJ3GHZEPEPZGZ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_06.pipe",
    "question": {
      "name": "pipe_06.pipe",
      "content": "How has the total number of stars changed over time?"
    },
    "sql": "SELECT toYear(created_at) AS year, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "year": 2011,
          "stars": 1831742
        },
        {
          "year": 2012,
          "stars": 4048676
        },
        {
          "year": 2013,
          "stars": 7432800
        },
        {
          "year": 2014,
          "stars": 11952935
        },
        {
          "year": 2015,
          "stars": 18994833
        },
        {
          "year": 2016,
          "stars": 26166310
        },
        {
          "year": 2017,
          "stars": 32640040
        },
        {
          "year": 2018,
          "stars": 37068153
        },
        {
          "year": 2019,
          "stars": 46118187
        },
        {
          "year": 2020,
          "stars": 45864798
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.239116804,
        "rows_read": 232206874,
        "bytes_read": 1161034370
      },
      "executionTime": 0.288,
      "requestId": "01JSXXMWAGNW2SA7BCYBZBXANX"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_07.pipe",
    "question": {
      "name": "pipe_07.pipe",
      "content": "Who are top 10 people giving stars?"
    },
    "sql": "SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "4148",
          "stars": 232492
        },
        {
          "actor_login": "salifm",
          "stars": 202534
        },
        {
          "actor_login": "x0rzkov",
          "stars": 73531
        },
        {
          "actor_login": "fly51fly",
          "stars": 57756
        },
        {
          "actor_login": "PCOffline",
          "stars": 56725
        },
        {
          "actor_login": "baslr",
          "stars": 50363
        },
        {
          "actor_login": "gkze",
          "stars": 49078
        },
        {
          "actor_login": "StarTheWorld",
          "stars": 45691
        },
        {
          "actor_login": "thanhtoan1196",
          "stars": 44715
        },
        {
          "actor_login": "mcanthony",
          "stars": 44331
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.143577887,
        "rows_read": 232206874,
        "bytes_read": 696620622
      },
      "executionTime": 6.204,
      "requestId": "01JSXXMXJT9QC974DH32BJ1VTJ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_08.pipe",
    "question": {
      "name": "pipe_08.pipe",
      "content": "what are the top 10 repositories sorted by the number of stars from people who starred the freecodecamp/freecodecamp repository?"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS stars\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT IN ('freecodecamp/freecodecamp'))\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.220355017,
        "rows_read": 232341684,
        "bytes_read": 696998922
      },
      "executionTime": 2.273,
      "requestId": "01JSXXN4M6E3TTTX9V8DVZAN3T"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_09.pipe",
    "question": {
      "name": "pipe_09.pipe",
      "content": "top 10 \"friends\" to javisantana through counting stars"
    },
    "sql": "WITH repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE (event_type = 'WatchEvent') AND (actor_login IN ('javisantana'))\n    ) AS is_my_repo\n    SELECT\n        actor_login,\n        sum(is_my_repo) AS stars_my,\n        sum(NOT is_my_repo) AS stars_other,\n        round(stars_my / (stars_my + stars_other), 3) AS ratio\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY actor_login\n    ORDER BY ratio DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "gearfreak",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "erik-h11",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "kingwide",
          "stars_my": 2,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "klh0306tw",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "dstra",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "hackerboy725",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "simba163",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "shuwaiee",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "20180430Zhang",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        },
        {
          "actor_login": "doughslz",
          "stars_my": 1,
          "stars_other": 0,
          "ratio": 1
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_my",
          "type": "UInt64"
        },
        {
          "name": "stars_other",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 9.707393586,
        "rows_read": 464413748,
        "bytes_read": 1857829909
      },
      "executionTime": 9.761,
      "requestId": "01JSXXN7TG2NS6BNTQNJDKCQSP"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_10.pipe",
    "question": {
      "name": "pipe_10.pipe",
      "content": "top 10 Authors that contributed to freecodecamp also contributed to what repositories?"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (repo_name IN ('yandex/ClickHouse', 'ClickHouse/ClickHouse'))\n    )) AND (repo_name NOT ILIKE '%ClickHouse%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Homebrew/homebrew-core",
          "prs": 33,
          "authors": 15
        },
        {
          "repo_name": "pocoproject/poco",
          "prs": 28,
          "authors": 14
        },
        {
          "repo_name": "saltstack/salt",
          "prs": 38,
          "authors": 13
        },
        {
          "repo_name": "apache/flink",
          "prs": 54,
          "authors": 12
        },
        {
          "repo_name": "ansible/ansible",
          "prs": 42,
          "authors": 12
        },
        {
          "repo_name": "grafana/grafana",
          "prs": 87,
          "authors": 10
        },
        {
          "repo_name": "helm/charts",
          "prs": 35,
          "authors": 10
        },
        {
          "repo_name": "avelino/awesome-go",
          "prs": 33,
          "authors": 10
        },
        {
          "repo_name": "getredash/redash",
          "prs": 20,
          "authors": 9
        },
        {
          "repo_name": "apache/spark",
          "prs": 18,
          "authors": 9
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "prs",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.921608373,
        "rows_read": 215000847,
        "bytes_read": 1181144848
      },
      "executionTime": 0.972,
      "requestId": "01JSXXNJAT8PXSTBMDVEWNRMXM"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_11.pipe",
    "question": {
      "name": "pipe_11.pipe",
      "content": "top 10 Authors that filed an issue in freecodecamp also filed issues in what repositories?"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'IssuesEvent') AND (action = 'opened') AND (repo_name IN ('freecodecamp/freecodecamp'))\n    )) AND (repo_name NOT ILIKE '%freecodecamp%')\n    GROUP BY repo_name\n    ORDER BY authors DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "prs",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.309603181,
        "rows_read": 111592167,
        "bytes_read": 445625035
      },
      "executionTime": 0.362,
      "requestId": "01JSXXNM8NXMRER4100FSXGMRA"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_12.pipe",
    "question": {
      "name": "pipe_12.pipe",
      "content": "top 10 Repositories with the most stars over one day"
    },
    "sql": "SELECT\n        repo_name,\n        toDate(created_at) AS day,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        day\n    ORDER BY count() DESC\n    LIMIT 1 BY repo_name\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.396,
      "requestId": "01JSXXNNK43JHRZZ6VPCJSQ5SM",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.007327902 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_13.pipe",
    "question": {
      "name": "pipe_13.pipe",
      "content": "top 10 Repositories with the highest growth YoY 2019 and 2020"
    },
    "sql": "WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "puppeteer/puppeteer",
          "stars2020": 11310,
          "stars2019": 1255,
          "yoy": 9.012,
          "first_seen": "2014-03-14 12:01:39"
        },
        {
          "repo_name": "ohmyzsh/ohmyzsh",
          "stars2020": 21705,
          "stars2019": 2529,
          "yoy": 8.582,
          "first_seen": "2017-03-22 16:44:20"
        },
        {
          "repo_name": "halfrost/LeetCode-Go",
          "stars2020": 8887,
          "stars2019": 1191,
          "yoy": 7.462,
          "first_seen": "2018-04-16 09:29:48"
        },
        {
          "repo_name": "jitsi/jitsi-meet",
          "stars2020": 10451,
          "stars2019": 1548,
          "yoy": 6.751,
          "first_seen": "2014-03-31 20:41:15"
        },
        {
          "repo_name": "desktop/desktop",
          "stars2020": 12512,
          "stars2019": 2600,
          "yoy": 4.812,
          "first_seen": "2017-05-16 17:10:37"
        },
        {
          "repo_name": "TheAlgorithms/Javascript",
          "stars2020": 6009,
          "stars2019": 1312,
          "yoy": 4.58,
          "first_seen": "2017-08-03 16:27:42"
        },
        {
          "repo_name": "iamadamdev/bypass-paywalls-chrome",
          "stars2020": 9503,
          "stars2019": 2246,
          "yoy": 4.231,
          "first_seen": "2018-04-07 23:54:45"
        },
        {
          "repo_name": "r-spacex/SpaceX-API",
          "stars2020": 4020,
          "stars2019": 1083,
          "yoy": 3.712,
          "first_seen": "2017-06-26 07:00:38"
        },
        {
          "repo_name": "loadimpact/k6",
          "stars2020": 5018,
          "stars2019": 1352,
          "yoy": 3.712,
          "first_seen": "2017-01-18 18:26:09"
        },
        {
          "repo_name": "openspug/spug",
          "stars2020": 4086,
          "stars2019": 1116,
          "yoy": 3.661,
          "first_seen": "2018-02-10 11:01:08"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars2020",
          "type": "UInt64"
        },
        {
          "name": "stars2019",
          "type": "UInt64"
        },
        {
          "name": "yoy",
          "type": "Float64"
        },
        {
          "name": "first_seen",
          "type": "DateTime"
        }
      ],
      "statistics": {
        "elapsed": 1.650037888,
        "rows_read": 232206874,
        "bytes_read": 1625111877
      },
      "executionTime": 1.706,
      "requestId": "01JSXXP0QC2W9ZCAADFK8550CD"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_14.pipe",
    "question": {
      "name": "pipe_14.pipe",
      "content": "top 10 Repositories with the worst stagnation in 2019 vs 2020"
    },
    "sql": "WITH toYear(created_at) AS year\n    SELECT\n        repo_name,\n        sum(year = 2020) AS stars2020,\n        sum(year = 2019) AS stars2019,\n        round(stars2020 / stars2019, 3) AS yoy,\n        min(created_at) AS first_seen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING (min(created_at) <= '2019-01-01 00:00:00') AND (max(created_at) >= '2020-06-01 00:00:00') AND (stars2019 >= 1000)\n    ORDER BY yoy ASC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "arpitjindal97/technology_books",
          "stars2020": 1,
          "stars2019": 4001,
          "yoy": 0,
          "first_seen": "2017-08-16 19:08:59"
        },
        {
          "repo_name": "DoubleLabyrinth/navicat-keygen",
          "stars2020": 1,
          "stars2019": 6459,
          "yoy": 0,
          "first_seen": "2017-12-08 02:04:48"
        },
        {
          "repo_name": "b3log/pipe",
          "stars2020": 2,
          "stars2019": 2380,
          "yoy": 0.001,
          "first_seen": "2017-12-20 05:08:15"
        },
        {
          "repo_name": "energicryptocurrency/energi",
          "stars2020": 12,
          "stars2019": 6720,
          "yoy": 0.002,
          "first_seen": "2017-07-14 16:01:39"
        },
        {
          "repo_name": "M4cs/BabySploit",
          "stars2020": 126,
          "stars2019": 71013,
          "yoy": 0.002,
          "first_seen": "2018-11-11 10:10:30"
        },
        {
          "repo_name": "AioiLight/TJAPlayer3",
          "stars2020": 29,
          "stars2019": 5308,
          "yoy": 0.005,
          "first_seen": "2018-01-17 19:59:10"
        },
        {
          "repo_name": "everitoken/evt",
          "stars2020": 8,
          "stars2019": 1366,
          "yoy": 0.006,
          "first_seen": "2018-04-23 03:57:30"
        },
        {
          "repo_name": "SqueezerIO/squeezer",
          "stars2020": 41,
          "stars2019": 3307,
          "yoy": 0.012,
          "first_seen": "2017-05-15 07:31:14"
        },
        {
          "repo_name": "dengyuhan/magnetW",
          "stars2020": 54,
          "stars2019": 4215,
          "yoy": 0.013,
          "first_seen": "2018-03-09 09:18:23"
        },
        {
          "repo_name": "react-native-training/react-native-elements",
          "stars2020": 48,
          "stars2019": 3341,
          "yoy": 0.014,
          "first_seen": "2017-04-03 04:27:02"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars2020",
          "type": "UInt64"
        },
        {
          "name": "stars2019",
          "type": "UInt64"
        },
        {
          "name": "yoy",
          "type": "Float64"
        },
        {
          "name": "first_seen",
          "type": "DateTime"
        }
      ],
      "statistics": {
        "elapsed": 1.777434547,
        "rows_read": 232206874,
        "bytes_read": 1625111877
      },
      "executionTime": 1.916,
      "requestId": "01JSXXP3C0MYCGYXCTKC3GSB17"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_15.pipe",
    "question": {
      "name": "pipe_15.pipe",
      "content": "top 10 Repositories with the most steady growth over time"
    },
    "sql": "SELECT\n        repo_name,\n        max(stars) AS daily_stars,\n        sum(stars) AS total_stars,\n        total_stars / daily_stars AS rate\n    FROM\n    (\n        SELECT\n            repo_name,\n            toDate(created_at) AS day,\n            count() AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY\n            repo_name,\n            day\n    )\n    GROUP BY repo_name\n    ORDER BY rate DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.774,
      "requestId": "01JSXXP677NAAQSEHFB49TXB00",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.229022145 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_16.pipe",
    "question": {
      "name": "pipe_16.pipe",
      "content": "What is the best day of the week to catch a star?"
    },
    "sql": "SELECT toDayOfWeek(created_at) AS day, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day ORDER BY day",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "day": 1,
          "stars": 36491986
        },
        {
          "day": 2,
          "stars": 38094378
        },
        {
          "day": 3,
          "stars": 37570733
        },
        {
          "day": 4,
          "stars": 37208005
        },
        {
          "day": 5,
          "stars": 34924484
        },
        {
          "day": 6,
          "stars": 23726322
        },
        {
          "day": 7,
          "stars": 24102566
        }
      ],
      "meta": [
        {
          "name": "day",
          "type": "UInt8"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.185358662,
        "rows_read": 232206874,
        "bytes_read": 1161034370
      },
      "executionTime": 0.233,
      "requestId": "01JSXXPHQ6J1VPXXX7ZT1DCD6A"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_17.pipe",
    "question": {
      "name": "pipe_17.pipe",
      "content": "The total number of users on GitHub"
    },
    "sql": "SELECT uniq(actor_login) FROM github_events",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 34138551
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.806175531,
        "rows_read": 3124889133,
        "bytes_read": 6244747853
      },
      "executionTime": 8.925,
      "requestId": "01JSXXPJXSJ3N2DE6FRP5TW8QQ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_18.pipe",
    "question": {
      "name": "pipe_18.pipe",
      "content": "Total number of users that gave at least one star"
    },
    "sql": "SELECT uniq(actor_login) FROM github_events WHERE event_type = 'WatchEvent'",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 10176170
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.705166735,
        "rows_read": 232206874,
        "bytes_read": 696620622
      },
      "executionTime": 2.787,
      "requestId": "01JSXXPWM10AJHH6JJBXCWKZFB"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_19.pipe",
    "question": {
      "name": "pipe_19.pipe",
      "content": "Total number of users with at least one push"
    },
    "sql": "SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PushEvent'",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 18796966
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.26152953,
        "rows_read": 1601467785,
        "bytes_read": 4801468604
      },
      "executionTime": 2.376,
      "requestId": "01JSXXQ0AJ6S2BKG0EK5F1W0ZJ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_20.pipe",
    "question": {
      "name": "pipe_20.pipe",
      "content": "Total number of users with at least one created PR"
    },
    "sql": "SELECT uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened'",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 6407734
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.727300086,
        "rows_read": 214758704,
        "bytes_read": 858481247
      },
      "executionTime": 0.779,
      "requestId": "01JSXXQ3M4ENCXZSRKA222V72N"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_21.pipe",
    "question": {
      "name": "pipe_21.pipe",
      "content": "What if we count top 10 starred repositories but only from those users who made at least one PR in at least one repo?"
    },
    "sql": "SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "count()": 121976
        },
        {
          "repo_name": "vuejs/vue",
          "count()": 109518
        },
        {
          "repo_name": "996icu/996.ICU",
          "count()": 109244
        },
        {
          "repo_name": "sindresorhus/awesome",
          "count()": 106729
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "count()": 102997
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "count()": 96960
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "count()": 93499
        },
        {
          "repo_name": "FreeCodeCamp/FreeCodeCamp",
          "count()": 89246
        },
        {
          "repo_name": "airbnb/javascript",
          "count()": 81594
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "count()": 79909
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 8.305857673,
        "rows_read": 446965578,
        "bytes_read": 2019062015
      },
      "executionTime": 8.38,
      "requestId": "01JSXXQ5BTFM2NGCP8EPQXGKK5"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_22.pipe",
    "question": {
      "name": "pipe_22.pipe",
      "content": "top 10 authors who have made at least 10 PRs?"
    },
    "sql": "SELECT\n        repo_name,\n        count()\n    FROM github_events\n    WHERE (event_type = 'WatchEvent') AND (actor_login IN\n    (\n        SELECT actor_login\n        FROM github_events\n        WHERE (event_type = 'PullRequestEvent') AND (action = 'opened')\n        GROUP BY actor_login\n        HAVING count() >= 10\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "facebook/react",
          "count()": 56889
        },
        {
          "repo_name": "getify/You-Dont-Know-JS",
          "count()": 49496
        },
        {
          "repo_name": "sindresorhus/awesome",
          "count()": 48750
        },
        {
          "repo_name": "vuejs/vue",
          "count()": 43864
        },
        {
          "repo_name": "airbnb/javascript",
          "count()": 40277
        },
        {
          "repo_name": "kamranahmedse/developer-roadmap",
          "count()": 39809
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "count()": 38087
        },
        {
          "repo_name": "resume/resume.github.com",
          "count()": 37815
        },
        {
          "repo_name": "robbyrussell/oh-my-zsh",
          "count()": 37015
        },
        {
          "repo_name": "donnemartin/system-design-primer",
          "count()": 36259
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.044791336,
        "rows_read": 446965578,
        "bytes_read": 2018974825
      },
      "executionTime": 6.097,
      "requestId": "01JSXXQEGXMZVBRCH7NA1NK37Z"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_23.pipe",
    "question": {
      "name": "pipe_23.pipe",
      "content": "top 10 Repositories with the maximum amount of pull requests"
    },
    "sql": "SELECT repo_name, count(), uniq(actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY count() DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "google-test/signcla-probe-repo",
          "count()": 351806,
          "uniq(actor_login)": 4
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "count()": 158134,
          "uniq(actor_login)": 18
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "count()": 93222,
          "uniq(actor_login)": 338
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "count()": 84557,
          "uniq(actor_login)": 3816
        },
        {
          "repo_name": "Homebrew/homebrew-core",
          "count()": 60457,
          "uniq(actor_login)": 5852
        },
        {
          "repo_name": "sauron-demo/sauron",
          "count()": 54806,
          "uniq(actor_login)": 1
        },
        {
          "repo_name": "elastic/kibana",
          "count()": 52317,
          "uniq(actor_login)": 832
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "count()": 51409,
          "uniq(actor_login)": 4
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "count()": 51280,
          "uniq(actor_login)": 716
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "count()": 51006,
          "uniq(actor_login)": 6
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        },
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.877830978,
        "rows_read": 214758704,
        "bytes_read": 1287855735
      },
      "executionTime": 2.93,
      "requestId": "01JSXXQNER5AWMETDMNTSJJP60"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_24.pipe",
    "question": {
      "name": "pipe_24.pipe",
      "content": "top 10 Repositories with the maximum amount of pull request contributors"
    },
    "sql": "SELECT repo_name, count(), uniq(actor_login) AS u FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY u DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "count()": 36787,
          "u": 31919
        },
        {
          "repo_name": "firstcontributions/first-contributions",
          "count()": 27015,
          "u": 24995
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "count()": 20116,
          "u": 18204
        },
        {
          "repo_name": "DefinitelyTyped/DefinitelyTyped",
          "count()": 36240,
          "u": 13826
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "count()": 15925,
          "u": 9751
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "count()": 10132,
          "u": 9749
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "count()": 10423,
          "u": 8839
        },
        {
          "repo_name": "JetBrains/swot",
          "count()": 9866,
          "u": 8291
        },
        {
          "repo_name": "udacity/course-collaboration-travel-plans",
          "count()": 8417,
          "u": 8132
        },
        {
          "repo_name": "zero-to-mastery/start-here-guidelines",
          "count()": 8940,
          "u": 8112
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        },
        {
          "name": "u",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.571208101,
        "rows_read": 214758704,
        "bytes_read": 1287855735
      },
      "executionTime": 2.621,
      "requestId": "01JSXXQS9J8YY2ZJ46929ESXZD"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_25.pipe",
    "question": {
      "name": "pipe_25.pipe",
      "content": "top 10 Repositories with the maximum amount of issues"
    },
    "sql": "SELECT repo_name, count() AS c, uniq(actor_login) AS u FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY c DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "koorellasuresh/UKRegionTest",
          "c": 379379,
          "u": 4
        },
        {
          "repo_name": "pddemo/demo",
          "c": 216215,
          "u": 1
        },
        {
          "repo_name": "lstjsuperman/fabric",
          "c": 173986,
          "u": 1
        },
        {
          "repo_name": "Khan/khan-exercises",
          "c": 157016,
          "u": 462
        },
        {
          "repo_name": "No-CQRT/GooGuns",
          "c": 149264,
          "u": 1
        },
        {
          "repo_name": "Khan/khan-i18n",
          "c": 130920,
          "u": 3
        },
        {
          "repo_name": "jlippold/tweakCompatible",
          "c": 127029,
          "u": 11243
        },
        {
          "repo_name": "Ramos-dev/jniwebshell",
          "c": 108096,
          "u": 1
        },
        {
          "repo_name": "ron190/jsql-injection",
          "c": 91086,
          "u": 30
        },
        {
          "repo_name": "debricked/debricked-test-integration",
          "c": 83341,
          "u": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        },
        {
          "name": "u",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.945650736,
        "rows_read": 111436382,
        "bytes_read": 667828265
      },
      "executionTime": 0.994,
      "requestId": "01JSXXQWTVGATNJQXGWE6HMXNB"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_26.pipe",
    "question": {
      "name": "pipe_26.pipe",
      "content": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars"
    },
    "sql": "WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING stars >= 1000\n    ORDER BY c DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Khan/khan-exercises",
          "c": 157016,
          "u": 462,
          "stars": 1749
        },
        {
          "repo_name": "Microsoft/vscode",
          "c": 65122,
          "u": 27038,
          "stars": 82043
        },
        {
          "repo_name": "flutter/flutter",
          "c": 45920,
          "u": 16677,
          "stars": 116303
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "c": 44131,
          "u": 21036,
          "stars": 4888
        },
        {
          "repo_name": "microsoft/vscode",
          "c": 34798,
          "u": 19479,
          "stars": 38395
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "c": 31644,
          "u": 8615,
          "stars": 68644
        },
        {
          "repo_name": "golang/go",
          "c": 31443,
          "u": 10190,
          "stars": 92407
        },
        {
          "repo_name": "hq450/fancyss",
          "c": 31124,
          "u": 778,
          "stars": 7921
        },
        {
          "repo_name": "cockroachdb/cockroach",
          "c": 28390,
          "u": 1049,
          "stars": 21147
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "c": 28380,
          "u": 16377,
          "stars": 173681
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        },
        {
          "name": "u",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.826356785,
        "rows_read": 343590366,
        "bytes_read": 2060836035
      },
      "executionTime": 6.884,
      "requestId": "01JSXXQYS7A29807Q6V5D4FGE4"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_27.pipe",
    "question": {
      "name": "pipe_27.pipe",
      "content": "top 10 Repositories with the maximum amount of issues, distinguish real issues from robot ones, add a cutoff at 1000 stars sort by the number of issue authors"
    },
    "sql": "WITH (event_type = 'IssuesEvent') AND (action = 'opened') AS issue_created\n    SELECT\n        repo_name,\n        sum(issue_created) AS c,\n        uniqIf(actor_login, issue_created) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "Microsoft/vscode",
          "c": 65122,
          "u": 27038,
          "stars": 82043
        },
        {
          "repo_name": "MicrosoftDocs/azure-docs",
          "c": 44131,
          "u": 21036,
          "stars": 4888
        },
        {
          "repo_name": "microsoft/vscode",
          "c": 34798,
          "u": 19479,
          "stars": 38395
        },
        {
          "repo_name": "flutter/flutter",
          "c": 45920,
          "u": 16677,
          "stars": 116303
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "c": 28380,
          "u": 16377,
          "stars": 173681
        },
        {
          "repo_name": "ansible/ansible",
          "c": 27774,
          "u": 13050,
          "stars": 51144
        },
        {
          "repo_name": "996icu/996.ICU",
          "c": 22791,
          "u": 12818,
          "stars": 354850
        },
        {
          "repo_name": "FortAwesome/Font-Awesome",
          "c": 16438,
          "u": 12745,
          "stars": 75924
        },
        {
          "repo_name": "facebook/react-native",
          "c": 19926,
          "u": 11861,
          "stars": 105346
        },
        {
          "repo_name": "npm/npm",
          "c": 14494,
          "u": 11403,
          "stars": 16774
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        },
        {
          "name": "u",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 6.535916352,
        "rows_read": 343590366,
        "bytes_read": 2060836035
      },
      "executionTime": 6.589,
      "requestId": "01JSXXR6FQCNN3JXD950RZSXD0"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_28.pipe",
    "question": {
      "name": "pipe_28.pipe",
      "content": "top 10 Repositories with the most people who have push access"
    },
    "sql": "SELECT repo_name, uniqIf(actor_login, event_type = 'PushEvent') AS u, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('PushEvent', 'WatchEvent') AND repo_name != '/' GROUP BY repo_name ORDER BY u DESC LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.453,
      "requestId": "01JSXXRDX0FXZ2CN1AZJ9MTA9X",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.011285601 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_29.pipe",
    "question": {
      "name": "pipe_29.pipe",
      "content": "top 10 Repositories with the most people who have push access to the main branch"
    },
    "sql": "SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    ORDER BY u DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.531,
      "requestId": "01JSXXRS3411EFMEQSG1JBS7Z6",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.292419069 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_30.pipe",
    "question": {
      "name": "pipe_30.pipe",
      "content": "top 10 Repositories with the most people who have push access to the main branch With a cutoff for the number of stars at more than 99"
    },
    "sql": "SELECT\n        repo_name,\n        uniqIf(actor_login, (event_type = 'PushEvent') AND match(ref, '/(main|master)$')) AS u,\n        sum(event_type = 'WatchEvent') AS stars\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'WatchEvent')) AND (repo_name != '/')\n    GROUP BY repo_name\n    HAVING stars >= 100\n    ORDER BY u DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.267,
      "requestId": "01JSXXS4BT23ZG1KRJ6XX6BFKV",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.002360639 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_31.pipe",
    "question": {
      "name": "pipe_31.pipe",
      "content": "top 10 Repositories with the maximum number of accepted invitations"
    },
    "sql": "SELECT repo_name, sum(event_type = 'MemberEvent') AS invitations, sum(event_type = 'WatchEvent') AS stars FROM github_events WHERE event_type IN ('MemberEvent', 'WatchEvent') GROUP BY repo_name HAVING stars >= 100 ORDER BY invitations DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "invitations": 10453,
          "stars": 921
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "invitations": 3161,
          "stars": 51589
        },
        {
          "repo_name": "/",
          "invitations": 3144,
          "stars": 5496
        },
        {
          "repo_name": "openjournals/joss-reviews",
          "invitations": 1733,
          "stars": 411
        },
        {
          "repo_name": "InfiniteFlightAirportEditing/Airports",
          "invitations": 684,
          "stars": 192
        },
        {
          "repo_name": "zulip/zulip",
          "invitations": 644,
          "stars": 14027
        },
        {
          "repo_name": "tencentyun/qcloud-documents",
          "invitations": 446,
          "stars": 1032
        },
        {
          "repo_name": "w3c/web-platform-tests",
          "invitations": 343,
          "stars": 1662
        },
        {
          "repo_name": "llvm/llvm-project",
          "invitations": 322,
          "stars": 7228
        },
        {
          "repo_name": "koppi/iso-country-flags-svg-collection",
          "invitations": 318,
          "stars": 408
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "invitations",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.531254992,
        "rows_read": 246586238,
        "bytes_read": 739323095
      },
      "executionTime": 2.583,
      "requestId": "01JSXXSFC9SYJWHGJRXA2CVZ2J"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_32.pipe",
    "question": {
      "name": "pipe_32.pipe",
      "content": "top 10 Most forked repositories"
    },
    "sql": "SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.814754615,
        "rows_read": 84878767,
        "bytes_read": 254421046
      },
      "executionTime": 0.862,
      "requestId": "01JSXXSJW81KX034YCK36P2AKQ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_33.pipe",
    "question": {
      "name": "pipe_33.pipe",
      "content": "top 10 reposistories by ratio between stars and forks"
    },
    "sql": "SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 3) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    ORDER BY forks DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "jtleek/datasharing",
          "forks": 262926,
          "stars": 6364,
          "ratio": 0.024
        },
        {
          "repo_name": "octocat/Spoon-Knife",
          "forks": 198031,
          "stars": 4601,
          "ratio": 0.023
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990,
          "ratio": 0.006
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "forks": 98226,
          "stars": 173681,
          "ratio": 1.768
        },
        {
          "repo_name": "twbs/bootstrap",
          "forks": 92878,
          "stars": 126371,
          "ratio": 1.361
        },
        {
          "repo_name": "github/gitignore",
          "forks": 84075,
          "stars": 119322,
          "ratio": 1.419
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 78551,
          "stars": 2073,
          "ratio": 0.026
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 68601,
          "stars": 8185,
          "ratio": 0.119
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271,
          "ratio": 0.004
        },
        {
          "repo_name": "nightscout/cgm-remote-monitor",
          "forks": 59420,
          "stars": 1784,
          "ratio": 0.03
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 2.720693399,
        "rows_read": 317052873,
        "bytes_read": 950662186
      },
      "executionTime": 2.773,
      "requestId": "01JSXXSMPFQAJR53CG6AT10N8B"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_34.pipe",
    "question": {
      "name": "pipe_34.pipe",
      "content": "find out top 10 repositories are the most \"for forks\" and \"for stars\""
    },
    "sql": "SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(stars / forks, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "M4cs/BabySploit",
          "forks": 147,
          "stars": 71572,
          "ratio": 486.88
        },
        {
          "repo_name": "tipsy/github-profile-summary",
          "forks": 330,
          "stars": 22397,
          "ratio": 67.87
        },
        {
          "repo_name": "doctrine/inflector",
          "forks": 155,
          "stars": 10236,
          "ratio": 66.04
        },
        {
          "repo_name": "phpDocumentor/ReflectionDocBlock",
          "forks": 143,
          "stars": 8547,
          "ratio": 59.77
        },
        {
          "repo_name": "pakastin/open-source-flash",
          "forks": 128,
          "stars": 7326,
          "ratio": 57.23
        },
        {
          "repo_name": "egulias/EmailValidator",
          "forks": 177,
          "stars": 9835,
          "ratio": 55.56
        },
        {
          "repo_name": "symfony/var-dumper",
          "forks": 127,
          "stars": 6770,
          "ratio": 53.31
        },
        {
          "repo_name": "laravel/tinker",
          "forks": 129,
          "stars": 6773,
          "ratio": 52.5
        },
        {
          "repo_name": "guzzle/promises",
          "forks": 126,
          "stars": 6596,
          "ratio": 52.35
        },
        {
          "repo_name": "paragonie/random_compat",
          "forks": 157,
          "stars": 7941,
          "ratio": 50.58
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 2.662997221,
        "rows_read": 317052873,
        "bytes_read": 950662186
      },
      "executionTime": 2.769,
      "requestId": "01JSXXSRCFP223X19FBKD31NZG"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_35.pipe",
    "question": {
      "name": "pipe_35.pipe",
      "content": "find out top 10 repositories have more forks and less stars"
    },
    "sql": "SELECT\n        repo_name,\n        sum(event_type = 'ForkEvent') AS forks,\n        sum(event_type = 'WatchEvent') AS stars,\n        round(forks / stars, 2) AS ratio\n    FROM github_events\n    WHERE event_type IN ('ForkEvent', 'WatchEvent')\n    GROUP BY repo_name\n    HAVING (stars > 100) AND (forks > 100)\n    ORDER BY ratio DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "rdpeng/RepData_PeerAssessment1",
          "forks": 44449,
          "stars": 124,
          "ratio": 358.46
        },
        {
          "repo_name": "rdpeng/ExData_Plotting1",
          "forks": 67182,
          "stars": 271,
          "ratio": 247.9
        },
        {
          "repo_name": "LarryMad/recipes",
          "forks": 38317,
          "stars": 170,
          "ratio": 225.39
        },
        {
          "repo_name": "rdpeng/ProgrammingAssignment2",
          "forks": 160794,
          "stars": 990,
          "ratio": 162.42
        },
        {
          "repo_name": "jenkins-docs/simple-java-maven-app",
          "forks": 14484,
          "stars": 222,
          "ratio": 65.24
        },
        {
          "repo_name": "deadlyvipers/dojo_rules",
          "forks": 13600,
          "stars": 213,
          "ratio": 63.85
        },
        {
          "repo_name": "google/it-cert-automation-practice",
          "forks": 15163,
          "stars": 288,
          "ratio": 52.65
        },
        {
          "repo_name": "jleetutorial/maven-project",
          "forks": 8191,
          "stars": 171,
          "ratio": 47.9
        },
        {
          "repo_name": "jenkins-docs/simple-node-js-react-npm-app",
          "forks": 5946,
          "stars": 128,
          "ratio": 46.45
        },
        {
          "repo_name": "udacity/fullstack-nanodegree-vm",
          "forks": 16782,
          "stars": 373,
          "ratio": 44.99
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 2.673073638,
        "rows_read": 317052873,
        "bytes_read": 950662186
      },
      "executionTime": 2.721,
      "requestId": "01JSXXSW2A0198FFZK2KM8QK0X"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_36.pipe",
    "question": {
      "name": "pipe_36.pipe",
      "content": "overall proportion between stars and forks"
    },
    "sql": "SELECT sum(event_type = 'ForkEvent') AS forks, sum(event_type = 'WatchEvent') AS stars, round(stars / forks, 2) AS ratio FROM github_events WHERE event_type IN ('ForkEvent', 'WatchEvent')",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "forks": 84709181,
          "stars": 232118474,
          "ratio": 2.74
        }
      ],
      "meta": [
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.103133913,
        "rows_read": 317052873,
        "bytes_read": 317052873
      },
      "executionTime": 0.156,
      "requestId": "01JSXXSZPRBEA0QH6NK4FZ2HYR"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_37.pipe",
    "question": {
      "name": "pipe_37.pipe",
      "content": "Total number of issues on GitHub"
    },
    "sql": "SELECT count() FROM github_events WHERE event_type = 'IssueCommentEvent'",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "count()": 218460262
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.004760166,
        "rows_read": 238599,
        "bytes_read": 238614
      },
      "executionTime": 0.066,
      "requestId": "01JSXXT0VFEWW44799VAHXPT5A"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_38.pipe",
    "question": {
      "name": "pipe_38.pipe",
      "content": "The top 10 repositories by issue comments"
    },
    "sql": "SELECT repo_name, count() FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count() DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "count()": 1450081
        },
        {
          "repo_name": "apache/spark",
          "count()": 790480
        },
        {
          "repo_name": "rust-lang/rust",
          "count()": 502960
        },
        {
          "repo_name": "cms-sw/cmssw",
          "count()": 478607
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "count()": 477302
        },
        {
          "repo_name": "openshift/origin",
          "count()": 445639
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "count()": 392474
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "count()": 349733
        },
        {
          "repo_name": "elastic/kibana",
          "count()": 330168
        },
        {
          "repo_name": "ansible/ansible",
          "count()": 312424
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.521633262,
        "rows_read": 218616677,
        "bytes_read": 655163665
      },
      "executionTime": 0.613,
      "requestId": "01JSXXT1XVTKT009VBGK1HCEXX"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_39.pipe",
    "question": {
      "name": "pipe_39.pipe",
      "content": "top 10 repositories by ratio between issue comments and issues"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS comments,\n        uniq(number) AS issues,\n        round(comments / issues, 2) AS ratio\n    FROM github_events\n    WHERE event_type = 'IssueCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "kubernetes/kubernetes",
          "comments": 1450081,
          "issues": 85379,
          "ratio": 16.98
        },
        {
          "repo_name": "apache/spark",
          "comments": 790480,
          "issues": 26868,
          "ratio": 29.42
        },
        {
          "repo_name": "rust-lang/rust",
          "comments": 502960,
          "issues": 58464,
          "ratio": 8.6
        },
        {
          "repo_name": "cms-sw/cmssw",
          "comments": 478607,
          "issues": 25416,
          "ratio": 18.83
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "comments": 477302,
          "issues": 353981,
          "ratio": 1.35
        },
        {
          "repo_name": "openshift/origin",
          "comments": 445639,
          "issues": 24421,
          "ratio": 18.25
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "comments": 392474,
          "issues": 75732,
          "ratio": 5.18
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "comments": 349733,
          "issues": 75080,
          "ratio": 4.66
        },
        {
          "repo_name": "elastic/kibana",
          "comments": 330168,
          "issues": 75118,
          "ratio": 4.4
        },
        {
          "repo_name": "ansible/ansible",
          "comments": 312424,
          "issues": 56428,
          "ratio": 5.54
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 1.109403921,
        "rows_read": 218616677,
        "bytes_read": 1529333938
      },
      "executionTime": 1.917,
      "requestId": "01JSXXT42103NG0N04XHZDKYV8"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_40.pipe",
    "question": {
      "name": "pipe_40.pipe",
      "content": "find top 10 repositories by the most active issues"
    },
    "sql": "SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "sauron-demo/sauron",
          "number": 1,
          "comments": 21297
        },
        {
          "repo_name": "gafusion/regression_notifications",
          "number": 1,
          "comments": 15677
        },
        {
          "repo_name": "odoo-mergebot-testing-org/repo",
          "number": 1,
          "comments": 13315
        },
        {
          "repo_name": "zeit-github-test/github-utils-test",
          "number": 1,
          "comments": 9260
        },
        {
          "repo_name": "odoo-mergebot-testing-org/proj",
          "number": 1,
          "comments": 7681
        },
        {
          "repo_name": "tphongio/elasticbox-plugin",
          "number": 1,
          "comments": 6167
        },
        {
          "repo_name": "openshift/oc",
          "number": 270,
          "comments": 5917
        },
        {
          "repo_name": "openfoodfacts/openfoodfacts-server",
          "number": 3767,
          "comments": 5098
        },
        {
          "repo_name": "codecov/ci-repo",
          "number": 4,
          "comments": 5078
        },
        {
          "repo_name": "openshift/cluster-resource-override-admission-operator",
          "number": 29,
          "comments": 4562
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.558877367,
        "rows_read": 218616677,
        "bytes_read": 1631789770
      },
      "executionTime": 5.645,
      "requestId": "01JSXXT6B9NHXM62QCVD6NE5VZ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_41.pipe",
    "question": {
      "name": "pipe_41.pipe",
      "content": "find top 10 repositories with \"epic bugs\", filter out by issue number"
    },
    "sql": "SELECT\n        repo_name,\n        number,\n        count() AS comments\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "openshift/oc",
          "number": 270,
          "comments": 5917
        },
        {
          "repo_name": "openfoodfacts/openfoodfacts-server",
          "number": 3767,
          "comments": 5098
        },
        {
          "repo_name": "openshift/cluster-resource-override-admission-operator",
          "number": 29,
          "comments": 4562
        },
        {
          "repo_name": "ingvagabund/kubernetes",
          "number": 58,
          "comments": 4136
        },
        {
          "repo_name": "Kitware/CDash",
          "number": 80,
          "comments": 4005
        },
        {
          "repo_name": "cockpit-project/cockpit",
          "number": 7636,
          "comments": 3330
        },
        {
          "repo_name": "openshift/tektoncd-pipeline-operator",
          "number": 494,
          "comments": 3303
        },
        {
          "repo_name": "xbrianlee/liferay-portal",
          "number": 369,
          "comments": 3201
        },
        {
          "repo_name": "D00Med/farlands",
          "number": 77,
          "comments": 3183
        },
        {
          "repo_name": "getlantern/forum",
          "number": 313,
          "comments": 3123
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.190501977,
        "rows_read": 218616677,
        "bytes_read": 1631469386
      },
      "executionTime": 4.399,
      "requestId": "01JSXXTCSZM9JXYYMM4S8J7ZR1"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_42.pipe",
    "question": {
      "name": "pipe_42.pipe",
      "content": "find top 10 repositories with \"epic bugs\", filter out by issue number. Let's also count the number of comment authors and add a threshold"
    },
    "sql": "SELECT\n        repo_name,\n        number,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n    GROUP BY\n        repo_name,\n        number\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "getlantern/forum",
          "number": 313,
          "comments": 3123,
          "authors": 1658
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "number": 927,
          "comments": 3005,
          "authors": 1362
        },
        {
          "repo_name": "OpenKore/openkore",
          "number": 628,
          "comments": 2574,
          "authors": 373
        },
        {
          "repo_name": "D00Med/farlands",
          "number": 108,
          "comments": 2554,
          "authors": 11
        },
        {
          "repo_name": "ros-infrastructure/roswiki",
          "number": 139,
          "comments": 2483,
          "authors": 1427
        },
        {
          "repo_name": "Kodi-vStream/venom-xbmc-addons",
          "number": 2908,
          "comments": 2374,
          "authors": 12
        },
        {
          "repo_name": "gcp/leela-zero",
          "number": 78,
          "comments": 1978,
          "authors": 97
        },
        {
          "repo_name": "andreiw/RaspberryPiPkg",
          "number": 12,
          "comments": 1940,
          "authors": 137
        },
        {
          "repo_name": "ValveSoftware/halflife",
          "number": 387,
          "comments": 1716,
          "authors": 60
        },
        {
          "repo_name": "MarlinFirmware/Marlin",
          "number": 7076,
          "comments": 1695,
          "authors": 120
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 5.733604757,
        "rows_read": 218616677,
        "bytes_read": 2029929014
      },
      "executionTime": 5.849,
      "requestId": "01JSXXTJ43KVTGM7DX54ZBA6HA"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_43.pipe",
    "question": {
      "name": "pipe_43.pipe",
      "content": "Top 10 commented issues for the top repositories"
    },
    "sql": "SELECT\n        concat('https://github.com/', repo_name, '/issues/', toString(number)) AS URL,\n        max(comments),\n        argMax(authors, comments) AS authors,\n        argMax(number, comments) AS number,\n        sum(stars) AS stars\n    FROM\n    (\n        SELECT *\n        FROM\n        (\n            SELECT\n                repo_name,\n                number,\n                count() AS comments,\n                uniq(actor_login) AS authors\n            FROM github_events\n            WHERE (event_type = 'IssueCommentEvent') AND (action = 'created') AND (number > 10)\n            GROUP BY\n                repo_name,\n                number\n            HAVING authors >= 10\n        ) AS t1\n        INNER JOIN\n        (\n            SELECT\n                repo_name,\n                count() AS stars\n            FROM github_events\n            WHERE event_type = 'WatchEvent'\n            GROUP BY repo_name\n            HAVING stars > 10000\n        ) AS t2 USING (repo_name)\n    )\n    GROUP BY repo_name\n    ORDER BY stars DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.431,
      "requestId": "01JSXXTRS6M51QQKN1ZVHKR8QB",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.115518416 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_44.pipe",
    "question": {
      "name": "pipe_44.pipe",
      "content": "top 10 repositories by the number of commit comments"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE event_type = 'CommitCommentEvent'\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "comments": 99251,
          "authors": 16
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "comments": 74922,
          "authors": 41
        },
        {
          "repo_name": "miabot/galleries.csv",
          "comments": 52634,
          "authors": 2
        },
        {
          "repo_name": "siggetest/githubtest",
          "comments": 52171,
          "authors": 1
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "comments": 46876,
          "authors": 1
        },
        {
          "repo_name": "mozilla/rust",
          "comments": 33708,
          "authors": 82
        },
        {
          "repo_name": "TrinityCore/TrinityCore",
          "comments": 24386,
          "authors": 1550
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "comments": 21406,
          "authors": 268
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "comments": 18893,
          "authors": 28
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "comments": 17979,
          "authors": 1
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.181046581,
        "rows_read": 9974466,
        "bytes_read": 49868298
      },
      "executionTime": 0.228,
      "requestId": "01JSXXV3YB6BCWT3RKV7YXR5W5"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_45.pipe",
    "question": {
      "name": "pipe_45.pipe",
      "content": "top 10 \"hottest\" commits"
    },
    "sql": "SELECT\n        concat('https://github.com/', repo_name, '/commit/', commit_id) AS URL,\n        count() AS comments,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'CommitCommentEvent') AND notEmpty(commit_id)\n    GROUP BY\n        repo_name,\n        commit_id\n    HAVING authors >= 10\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "URL": "https://github.com/nixxquality/WebMConverter/commit/c1ac0baac06fa7175677a4a1bf65860a84708d67",
          "comments": 467,
          "authors": 156
        },
        {
          "URL": "https://github.com/torvalds/linux/commit/8a104f8b5867c682d994ffa7a74093c54469c11f",
          "comments": 410,
          "authors": 181
        },
        {
          "URL": "https://github.com/SEI-ATL/select-best-player/commit/fdc6e0e073fa30acf2041ca0b1c9fecd662d88c8",
          "comments": 408,
          "authors": 31
        },
        {
          "URL": "https://github.com/goagent/goagent/commit/e492ed0283f5cde7cf71d7ac47429f64aa48cd13",
          "comments": 378,
          "authors": 346
        },
        {
          "URL": "https://github.com/apple/swift/commit/18844bc65229786b96b89a9fc7739c0fc897905e",
          "comments": 345,
          "authors": 331
        },
        {
          "URL": "https://github.com/shadowsocks/shadowsocks/commit/938bba32a4008bdde9c064dda6a0597987ddef54",
          "comments": 309,
          "authors": 258
        },
        {
          "URL": "https://github.com/mosh-hamedani/vidly-mvc-5/commit/b727a26e1b4b88abe84a8b48208fec537db2ed43",
          "comments": 283,
          "authors": 157
        },
        {
          "URL": "https://github.com/hklcf/myTV-api/commit/375fa7520455b53fad622c0149a473ebee048e15",
          "comments": 272,
          "authors": 26
        },
        {
          "URL": "https://github.com/NecronomiconCoding/NecroBot/commit/26e57d9feac57ab372ac466ef6cd66218faa475c",
          "comments": 262,
          "authors": 75
        },
        {
          "URL": "https://github.com/zhaohmng/-21-/commit/0cc2b2a546ad51fb360ba800c67b057ea3270869",
          "comments": 249,
          "authors": 187
        }
      ],
      "meta": [
        {
          "name": "URL",
          "type": "String"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.350050131,
        "rows_read": 9974466,
        "bytes_read": 439430972
      },
      "executionTime": 0.408,
      "requestId": "01JSXXV54SK3Z2R9K8FRFMD1NS"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_46.pipe",
    "question": {
      "name": "pipe_46.pipe",
      "content": "top 10 most tough code reviews"
    },
    "sql": "SELECT\n        concat('https://github.com/', repo_name, '/pull/', toString(number)) AS URL,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY\n        repo_name,\n        number\n    ORDER BY authors DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "URL": "https://github.com/torvalds/linux/pull/684",
          "authors": 66
        },
        {
          "URL": "https://github.com/sunpy/sunpy/pull/3391",
          "authors": 52
        },
        {
          "URL": "https://github.com/NixOS/rfcs/pull/49",
          "authors": 52
        },
        {
          "URL": "https://github.com/dashbitco/mix_phx_gen_auth_demo/pull/1",
          "authors": 51
        },
        {
          "URL": "https://github.com/reactjs/rfcs/pull/2",
          "authors": 44
        },
        {
          "URL": "https://github.com/php/php-rfcs/pull/1",
          "authors": 40
        },
        {
          "URL": "https://github.com/danielmiessler/SecLists/pull/155",
          "authors": 38
        },
        {
          "URL": "https://github.com/symfony/symfony/pull/33553",
          "authors": 35
        },
        {
          "URL": "https://github.com/kubernetes/community/pull/306",
          "authors": 34
        },
        {
          "URL": "https://github.com/rust-lang/rfcs/pull/2850",
          "authors": 33
        }
      ],
      "meta": [
        {
          "name": "URL",
          "type": "String"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.646426642,
        "rows_read": 56090777,
        "bytes_read": 551370613
      },
      "executionTime": 0.698,
      "requestId": "01JSXXV6GX9MP0MTMSTPGP298S"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_47.pipe",
    "question": {
      "name": "pipe_47.pipe",
      "content": "top 10 authors with the most pushes"
    },
    "sql": "SELECT\n        actor_login,\n        count() AS c,\n        uniq(repo_name) AS repos\n    FROM github_events\n    WHERE event_type = 'PushEvent'\n    GROUP BY actor_login\n    ORDER BY c DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.301,
      "requestId": "01JSXXV88S7YFFM4QDADGSE5CC",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.029287507 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_48.pipe",
    "question": {
      "name": "pipe_48.pipe",
      "content": "top 10 authors with the most pushes, filter out bots. Add a threshold on the number of repositories. Also count only those who created at least two issues and gave at least two stars. And also output the favorite repository for every user. And also count only across the top 10k repositories."
    },
    "sql": "SELECT\n        actor_login,\n        sum(event_type = 'PushEvent') AS c,\n        uniqIf(repo_name, event_type = 'PushEvent') AS repos,\n        sum(event_type = 'IssuesEvent') AS issues,\n        sum(event_type = 'WatchEvent') AS stars,\n        anyHeavy(repo_name)\n    FROM github_events\n    WHERE (event_type IN ('PushEvent', 'IssuesEvent', 'WatchEvent')) AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY actor_login\n    HAVING (repos < 10000) AND (issues > 1) AND (stars > 1)\n    ORDER BY c DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.234,
      "requestId": "01JSXXVK7B2DJGA0YH60SN58P8",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.006796082 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_49.pipe",
    "question": {
      "name": "pipe_49.pipe",
      "content": "top 10 Organizations by the number of stars"
    },
    "sql": "SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY org\n    ORDER BY stars DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "org": "google/",
          "stars": 1414877
        },
        {
          "org": "microsoft/",
          "stars": 1361303
        },
        {
          "org": "facebook/",
          "stars": 1123380
        },
        {
          "org": "alibaba/",
          "stars": 580707
        },
        {
          "org": "sindresorhus/",
          "stars": 565535
        },
        {
          "org": "apache/",
          "stars": 553204
        },
        {
          "org": "vuejs/",
          "stars": 494824
        },
        {
          "org": "tensorflow/",
          "stars": 425613
        },
        {
          "org": "freecodecamp/",
          "stars": 407610
        },
        {
          "org": "fossasia/",
          "stars": 398255
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.224035994,
        "rows_read": 232206874,
        "bytes_read": 696284381
      },
      "executionTime": 1.359,
      "requestId": "01JSXXVY6CQC79M0E6R46DYHNN"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_50.pipe",
    "question": {
      "name": "pipe_50.pipe",
      "content": "top 10 Organizations by the number of repositories"
    },
    "sql": "SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(repo_name) AS repos\n    FROM\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() >= 10\n    )\n    GROUP BY org\n    ORDER BY repos DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "org": "microsoft/",
          "repos": 3359
        },
        {
          "org": "google/",
          "repos": 1599
        },
        {
          "org": "openstack/",
          "repos": 1412
        },
        {
          "org": "packtpublishing/",
          "repos": 1381
        },
        {
          "org": "apache/",
          "repos": 1017
        },
        {
          "org": "sindresorhus/",
          "repos": 1016
        },
        {
          "org": "azure/",
          "repos": 818
        },
        {
          "org": "aws-samples/",
          "repos": 761
        },
        {
          "org": "mozilla/",
          "repos": 727
        },
        {
          "org": "googlecloudplatform/",
          "repos": 718
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.41032104,
        "rows_read": 232206874,
        "bytes_read": 696284381
      },
      "executionTime": 1.461,
      "requestId": "01JSXXW0G5FWWBYB3FQ9CJD6H1"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_51.pipe",
    "question": {
      "name": "pipe_51.pipe",
      "content": "top 10 Organizations by the size of community"
    },
    "sql": "SELECT\n        lower(substring(repo_name, 1, position(repo_name, '/'))) AS org,\n        uniq(actor_login) AS authors,\n        uniqIf(actor_login, event_type = 'PullRequestEvent') AS pr_authors,\n        uniqIf(actor_login, event_type = 'IssuesEvent') AS issue_authors,\n        uniqIf(actor_login, event_type = 'IssueCommentEvent') AS comment_authors,\n        uniqIf(actor_login, event_type = 'PullRequestReviewCommentEvent') AS review_authors,\n        uniqIf(actor_login, event_type = 'PushEvent') AS push_authors\n    FROM github_events\n    WHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PullRequestReviewCommentEvent', 'PushEvent')\n    GROUP BY org\n    ORDER BY authors DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.38,
      "requestId": "01JSXXW2X8PXGZPGZGMX0ZD7JP",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.003651432 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_52.pipe",
    "question": {
      "name": "pipe_52.pipe",
      "content": "top 10 Repositories by amount of modified code\n    I want to get the repositories with the most added and removed code over time"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS prs,\n        uniq(actor_login) AS authors,\n        sum(additions) AS adds,\n        sum(deletions) AS dels\n    FROM github_events\n    WHERE (event_type = 'PullRequestEvent') AND (action = 'opened') AND (additions < 10000) AND (deletions < 10000)\n    GROUP BY repo_name\n    HAVING (adds / dels) < 10\n    ORDER BY adds + dels DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "everypolitician/everypolitician-data",
          "prs": 150531,
          "authors": 18,
          "adds": 66782324,
          "dels": 71203492
        },
        {
          "repo_name": "brianchandotcom/liferay-portal",
          "prs": 91962,
          "authors": 337,
          "adds": 29304605,
          "dels": 13799025
        },
        {
          "repo_name": "googleapis/google-api-java-client-services",
          "prs": 4689,
          "authors": 17,
          "adds": 12184021,
          "dels": 9874444
        },
        {
          "repo_name": "code-dot-org/code-dot-org",
          "prs": 35776,
          "authors": 125,
          "adds": 14329448,
          "dels": 6810679
        },
        {
          "repo_name": "elastic/kibana",
          "prs": 51783,
          "authors": 798,
          "adds": 12478455,
          "dels": 6092002
        },
        {
          "repo_name": "dotnet/roslyn",
          "prs": 23642,
          "authors": 580,
          "adds": 12112106,
          "dels": 5703835
        },
        {
          "repo_name": "shuyangzhou/liferay-portal",
          "prs": 7334,
          "authors": 140,
          "adds": 11510525,
          "dels": 6287677
        },
        {
          "repo_name": "cms-sw/cmssw",
          "prs": 28087,
          "authors": 947,
          "adds": 9488742,
          "dels": 5076486
        },
        {
          "repo_name": "Azure/azure-sdk-for-python",
          "prs": 10323,
          "authors": 339,
          "adds": 10692004,
          "dels": 3691779
        },
        {
          "repo_name": "Azure/azure-sdk-for-net",
          "prs": 9775,
          "authors": 935,
          "adds": 9759909,
          "dels": 3188655
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "prs",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        },
        {
          "name": "adds",
          "type": "UInt64"
        },
        {
          "name": "dels",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.312119214,
        "rows_read": 214758704,
        "bytes_read": 3005344217
      },
      "executionTime": 2.378,
      "requestId": "01JSXXWE0TACY8C6D23NA8ETBC"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_53.pipe",
    "question": {
      "name": "pipe_53.pipe",
      "content": "top 10 Repositories by the number of pushes"
    },
    "sql": "SELECT\n        repo_name,\n        count() AS pushes,\n        uniq(actor_login) AS authors\n    FROM github_events\n    WHERE (event_type = 'PushEvent') AND (repo_name IN\n    (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        ORDER BY count() DESC\n        LIMIT 10000\n    ))\n    GROUP BY repo_name\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "CocoaPods/Specs",
          "pushes": 516861,
          "authors": 375
        },
        {
          "repo_name": "odoo/odoo",
          "pushes": 239208,
          "authors": 95
        },
        {
          "repo_name": "docker-library/docs",
          "pushes": 237496,
          "authors": 6
        },
        {
          "repo_name": "openstack/openstack",
          "pushes": 202003,
          "authors": 2
        },
        {
          "repo_name": "greatfire/wiki",
          "pushes": 169566,
          "authors": 4
        },
        {
          "repo_name": "pytorch/pytorch",
          "pushes": 147447,
          "authors": 212
        },
        {
          "repo_name": "/",
          "pushes": 145675,
          "authors": 18546
        },
        {
          "repo_name": "NixOS/nixpkgs",
          "pushes": 125285,
          "authors": 177
        },
        {
          "repo_name": "Automattic/wp-calypso",
          "pushes": 120883,
          "authors": 432
        },
        {
          "repo_name": "edx/edx-platform",
          "pushes": 118395,
          "authors": 330
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "pushes",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.517432619,
        "rows_read": 633733397,
        "bytes_read": 2278162451
      },
      "executionTime": 4.567,
      "requestId": "01JSXXWHAFEYX2Z2VY3PEDMY7E"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_54.pipe",
    "question": {
      "name": "pipe_54.pipe",
      "content": "top 10 Authors with the most code reviews"
    },
    "sql": "SELECT\n        actor_login,\n        count(),\n        uniq(repo_name) AS repos,\n        uniq(repo_name, number) AS prs,\n        replaceRegexpAll(substringUTF8(anyHeavy(body), 1, 100), '[\\r\\n]', ' ') AS comment\n    FROM github_events\n    WHERE (event_type = 'PullRequestReviewCommentEvent') AND (action = 'created')\n    GROUP BY actor_login\n    ORDER BY count() DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "actor_login": "houndci-bot",
          "count()": 991954,
          "repos": 5877,
          "prs": 78600,
          "comment": "Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping."
        },
        {
          "actor_login": "houndci",
          "count()": 342114,
          "repos": 3102,
          "prs": 28679,
          "comment": "Selector should have depth of applicability no greater than 2, but was 3"
        },
        {
          "actor_login": "codacy-bot",
          "count()": 327712,
          "repos": 2313,
          "prs": 21581,
          "comment": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Usage of get on optional t"
        },
        {
          "actor_login": "hound[bot]",
          "count()": 224854,
          "repos": 1734,
          "prs": 13812,
          "comment": "Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or speci"
        },
        {
          "actor_login": "codeclimate[bot]",
          "count()": 90778,
          "repos": 1424,
          "prs": 11589,
          "comment": "Similar blocks of code found in 2 locations. Consider refactoring."
        },
        {
          "actor_login": "github-learning-lab[bot]",
          "count()": 64453,
          "repos": 15296,
          "prs": 27480,
          "comment": "Thanks for opening this pull request, @swaroop1.   ```suggestion You can play the game at: https://s"
        },
        {
          "actor_login": "stickler-ci",
          "count()": 56022,
          "repos": 457,
          "prs": 7757,
          "comment": "E1601 print statement used"
        },
        {
          "actor_login": "golangcibot",
          "count()": 40329,
          "repos": 885,
          "prs": 8305,
          "comment": "ineffectual assignment to `err` (from `ineffassign`)"
        },
        {
          "actor_login": "github-actions[bot]",
          "count()": 38216,
          "repos": 733,
          "prs": 3321,
          "comment": "W504: line break after binary operator  <!-- Automatically posted by Lintly -->"
        },
        {
          "actor_login": "accesslint[bot]",
          "count()": 37459,
          "repos": 1121,
          "prs": 3889,
          "comment": "This image is missing a text alternative (`alt` attribute). This is a problem for people using scree"
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        },
        {
          "name": "repos",
          "type": "UInt64"
        },
        {
          "name": "prs",
          "type": "UInt64"
        },
        {
          "name": "comment",
          "type": "Nullable(String)"
        }
      ],
      "statistics": {
        "elapsed": 1.916517822,
        "rows_read": 56090777,
        "bytes_read": 8399967278
      },
      "executionTime": 1.971,
      "requestId": "01JSXXWPRM0ZBNB36XDVJ3TNV7"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_55.pipe",
    "question": {
      "name": "pipe_55.pipe",
      "content": "top 10 most popular labels for issues and pull requests"
    },
    "sql": "SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "c": 11193148
        },
        {
          "label": "enhancement",
          "c": 10885289
        },
        {
          "label": "dependencies",
          "c": 7752896
        },
        {
          "label": "question",
          "c": 3086354
        },
        {
          "label": "help wanted",
          "c": 2280160
        },
        {
          "label": "greenkeeper",
          "c": 2225510
        },
        {
          "label": "approved",
          "c": 1880281
        },
        {
          "label": "cla: yes",
          "c": 1802662
        },
        {
          "label": "cncf-cla: yes",
          "c": 1541233
        },
        {
          "label": "lgtm",
          "c": 1526217
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.494029157,
        "rows_read": 544588009,
        "bytes_read": 5743760831
      },
      "executionTime": 1.587,
      "requestId": "01JSXXWSNHYTRW60051CCN72MA"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_56.pipe",
    "question": {
      "name": "pipe_56.pipe",
      "content": "top 10 most popular labels for issues and pull requests? filter by bugs and features"
    },
    "sql": "SELECT\n        arrayJoin(labels) AS label,\n        count() AS c\n    FROM github_events\n    WHERE (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) AND (action IN ('created', 'opened', 'labeled')) AND ((label ILIKE '%bug%') OR (label ILIKE '%feature%'))\n    GROUP BY label\n    ORDER BY c DESC\n    LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "label": "bug",
          "c": 11193148
        },
        {
          "label": "feature",
          "c": 1198997
        },
        {
          "label": "Bug",
          "c": 1186836
        },
        {
          "label": "kind/bug",
          "c": 709181
        },
        {
          "label": "Feature",
          "c": 475471
        },
        {
          "label": "feature request",
          "c": 428393
        },
        {
          "label": "type: bug",
          "c": 346937
        },
        {
          "label": "kind/feature",
          "c": 336981
        },
        {
          "label": "bugzilla/valid-bug",
          "c": 319332
        },
        {
          "label": "Type: Bug",
          "c": 247042
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 2.117133551,
        "rows_read": 544588009,
        "bytes_read": 5743524225
      },
      "executionTime": 2.17,
      "requestId": "01JSXXWW6E0C4XZGQGSSS6WEV4"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_57.pipe",
    "question": {
      "name": "pipe_57.pipe",
      "content": "top 10 longest repository names"
    },
    "sql": "SELECT count(), repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) DESC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "count()": 1,
          "repo_name": "JonathanJonathanJonathanJonathanJonatha/JonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJonathanJona"
        },
        {
          "count()": 1,
          "repo_name": "dldadnasjndfsjafajnsdfadnfadfkoafasdklk/fjkdasifjasdiofasiodfasjdogasdgajsdpgasdpgasjkdgo-askdpgspkdgvjaspgpasjidpgjiajisdgpjioasdpigasgpjia"
        },
        {
          "count()": 15,
          "repo_name": "fkdjfkdkfjskfjsldkfjvndkslakfjgkdlskfjg/fksfekgkslgkkdjfkdlskfjkfkdlslakdjfkekjlklfkjdkslkjfojksjdfaskdjfsalkdfj-laskfjls-kdajfoasjfpoawefjk"
        },
        {
          "count()": 1,
          "repo_name": "UDtUf4aRyjv7nU3YTg056xCJw1ghAJYXgad7oB5/hJJRB7rpa3IXwX8HRsA1B4jCDmlZBY9fAzXZWNPyhrsXYG5kCeC4RPFqKQ4I9sAu1aNzX2G6wAkBjm8BjPfKjdubEqkmeAIkIwgu"
        },
        {
          "count()": 3,
          "repo_name": "uwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwu/uwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuwuuwuwuwuwuwuwuwuwuwuwuw"
        },
        {
          "count()": 1,
          "repo_name": "accounts-inheritance-finders-of-america/eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
        },
        {
          "count()": 1,
          "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo"
        },
        {
          "count()": 4,
          "repo_name": "joooooooooooooooooooooooooooooooooooooj/jooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooj"
        },
        {
          "count()": 1,
          "repo_name": "a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a/a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-a-"
        },
        {
          "count()": 2,
          "repo_name": "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy/yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        },
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 1.312527222,
        "rows_read": 232206874,
        "bytes_read": 696284381
      },
      "executionTime": 1.386,
      "requestId": "01JSXXWZ9DPVYWPAESYPGD75E5"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_58.pipe",
    "question": {
      "name": "pipe_58.pipe",
      "content": "top 10 shortest repository names"
    },
    "sql": "SELECT repo_name, count() FROM github_events WHERE event_type = 'WatchEvent' AND repo_name LIKE '%_/_%' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10",
    "sqlResult": {
      "success": true,
      "data": [
        {
          "repo_name": "2/t",
          "count()": 1
        },
        {
          "repo_name": "f/f",
          "count()": 7
        },
        {
          "repo_name": "e/m",
          "count()": 1
        },
        {
          "repo_name": "s/s",
          "count()": 1
        },
        {
          "repo_name": "19/x",
          "count()": 2
        },
        {
          "repo_name": "as/a",
          "count()": 289
        },
        {
          "repo_name": "Xe/h",
          "count()": 7
        },
        {
          "repo_name": "f/r3",
          "count()": 6
        },
        {
          "repo_name": "nd/e",
          "count()": 1
        },
        {
          "repo_name": "69/a",
          "count()": 3
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.323960459,
        "rows_read": 232206874,
        "bytes_read": 696032609
      },
      "executionTime": 1.431,
      "requestId": "01JSXXX1MCEJJAE6X8S8B7AZEQ"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_59.pipe",
    "question": {
      "name": "pipe_59.pipe",
      "content": "top 10 Repositories with freecodecamp related comments"
    },
    "sql": "SELECT repo_name, count() FROM github_events WHERE body ILIKE '%freecodecamp%' GROUP BY repo_name ORDER BY count() DESC LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.15,
      "requestId": "01JSXXX40A9J1NWW3GSFD6Z6ZX",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.057148165 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_60.pipe",
    "question": {
      "name": "pipe_60.pipe",
      "content": "top 10 Repositories with freecodecamp-related comments, sorted by stars"
    },
    "sql": "SELECT\n        repo_name,\n        sum(event_type = 'WatchEvent') AS num_stars,\n        sum(body ILIKE '%freecodecamp%') AS num_comments\n    FROM github_events\n    WHERE (body ILIKE '%freecodecamp%') OR (event_type = 'WatchEvent')\n    GROUP BY repo_name\n    HAVING num_comments > 0\n    ORDER BY num_stars DESC\n    LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.066,
      "requestId": "01JSXXXEWVGY98CYS5K28V69F2",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.010073177 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  },
  {
    "name": "pipe_61.pipe",
    "question": {
      "name": "pipe_61.pipe",
      "content": "top 10 Most popular comments on GitHub"
    },
    "sql": "SELECT body, count() FROM github_events WHERE notEmpty(body) AND length(body) < 100 GROUP BY body ORDER BY count() DESC LIMIT 10",
    "sqlResult": {
      "success": false,
      "data": [],
      "executionTime": 10.383,
      "requestId": "01JSXXXSPNF852Z9ACCDSGH2NK",
      "error": "{\"error\": \"[Error] Timeout exceeded: elapsed 10.217150521 seconds, maximum: 10. Upgrade your plan for higher capacity, ensure your cluster isn't overloaded (dedicated infrastructure only), or optimize your query with filters.\", \"documentation\": \"https://docs.tinybird.co/get-started/plans/limits\"}"
    },
    "model": "human",
    "provider": "human",
    "error": null,
    "attempts": []
  }
]