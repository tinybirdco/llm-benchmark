{
  "pipe_01.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(*) as total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS star_count \nFROM github_events \nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS total_stars FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n COUNT(*) \nFROM \n github_events \nWHERE \n event_type = 'WatchEvent' \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  COUNT(*) AS total_stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT() AS stars_count FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() stars FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS total_stars FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) AS total_stars FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) AS count_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) as total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) as total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) AS total_stars FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() FROM github_events WHERE event_type = 'WatchEvent'"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "To count all stars, which corresponds to counting all events of type 'WatchEvent' in the `github_events` table, the correct query is to count these events without a limit. However, given the instruction to add limits for pagination and the large dataset size, there's ambiguity in whether to perform a full count or to list a limited number of star events.\n\nGiven the constraints and the \"URI too large\" error from the initial attempt, the feasible approach is to list star events with a limit of 10. This adheres to the instruction and avoids performance issues. This query does not count all stars but lists a limited number of star events, which can be used to infer a partial count.\n\nFinal SQL query:\n\n\nSELECT * FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() stars FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "count()": 7305112
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.003389542,
        "rows_read": 32769,
        "bytes_read": 32784
      },
      "executionTime": 0.04,
      "requestId": "01JTN5KGZGVXR4S8EJE9JSPK5H"
    }
  },
  "pipe_02.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count() AS stars \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    ORDER BY stars DESC \n    LIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as stars\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    repo_name\nORDER BY \n    stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS stars\nFROM\n    github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY\n    repo_name\nORDER BY\n    stars DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT() AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT event_type) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events \nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() star_count FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY star_count DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "tensorflow/tensorflow",
          "stars": 49278
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 48185
        },
        {
          "repo_name": "yarnpkg/yarn",
          "stars": 31023
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 29084
        },
        {
          "repo_name": "thedaviddias/Front-End-Checklist",
          "stars": 24745
        },
        {
          "repo_name": "sdmg15/Best-websites-a-programmer-should-visit",
          "stars": 21764
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 21157
        },
        {
          "repo_name": "toddmotto/public-apis",
          "stars": 20881
        },
        {
          "repo_name": "robbyrussell/oh-my-zsh",
          "stars": 19325
        },
        {
          "repo_name": "vuejs/awesome-vue",
          "stars": 18499
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.048980833,
        "rows_read": 7319235,
        "bytes_read": 21919077
      },
      "executionTime": 0.087,
      "requestId": "01JTN5KJ01M99QDZXYDY1QM184"
    }
  },
  "pipe_03.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n    pow(10, floor(log10(stars))) AS stars_power_of_10,\n    count(*) AS repos_count\nFROM (\n    SELECT repo_name, count(*) AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING stars > 0\n)\nGROUP BY floor(log10(stars))\nORDER BY stars_power_of_10 ASC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT \n    pow(10, floor(log10(stars))) AS star_count_bucket,\n    count(*) AS repo_count\nFROM (\n    SELECT \n        repo_name,\n        count(*) AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING stars > 0\n) \nGROUP BY star_count_bucket\nORDER BY star_count_bucket ASC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.8888888888888888,
          "numeric": 0.031759168854124296,
          "fScore": 0.20000000000000007
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT \n    pow(10, floor(log10(stars + 1))) as star_power,\n    count(*) as repo_count\nFROM (\n    SELECT \n        repo_name, \n        count(*) as stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n) t\nGROUP BY star_power\nORDER BY star_power ASC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "SELECT \n    pow(10, floor(log10(count()))) AS star_count_bucket,\n    count() AS repo_count\nFROM (\n    SELECT repo_name, count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nGROUP BY star_count_bucket\nORDER BY star_count_bucket ASC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "\nSELECT\n    floor(log10(star_count)) AS power_of_10,\n    count() AS repo_count\nFROM (\n    SELECT\n        repo_name,\n        count() AS star_count\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nGROUP BY power_of_10\nORDER BY power_of_10\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 10,
        "sql": "SELECT\n    pow(10, floor(log10(count()))) AS star_count_approx,\n    count() AS repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count_approx ASC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n    bucket_floor AS star_power_of_10,\n    count() AS num_repositories\nFROM (\n    SELECT\n        CASE\n            WHEN count() >= 10000000 THEN 10000000\n            WHEN count() >= 1000000 THEN 1000000\n            WHEN count() >= 100000 THEN 100000\n            WHEN count() >= 10000 THEN 10000\n            WHEN count() >= 1000 THEN 1000\n            WHEN count() >= 100 THEN 100\n            WHEN count() >= 10 THEN 10\n            WHEN count() >= 1 THEN 1\n        END AS bucket_floor\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n) AS repo_star_buckets\nGROUP BY bucket_floor\nORDER BY bucket_floor ASC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "\nSELECT \n  floor(log10(stars)) AS power_of_10,\n  count(*) AS num_repos\nFROM \n  (SELECT \n     repo_name, \n     count(*) AS stars \n   FROM \n     github_events \n   WHERE \n     event_type = 'WatchEvent' \n   GROUP BY \n     repo_name) \nGROUP BY \n  power_of_10 \nORDER BY \n  power_of_10 ASC \nLIMIT 10\n"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    FLOOR(LOG10(star_count)) AS power_of_10,\n    COUNT(*) AS repo_count\nFROM \n    (\n    SELECT \n        repo_name,\n        COUNT(*) AS star_count\n    FROM \n        github_events\n    WHERE \n        event_type = 'WatchEvent'\n        AND action = 'created'\n    GROUP BY \n        repo_name\n    ) AS subquery\nGROUP BY \n    FLOOR(LOG10(star_count))\nORDER BY \n    power_of_10 ASC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  power_of_ten,\n  count(*) AS num_repos\nFROM \n  (\n    SELECT \n      repo_name, \n      pow(10, toInt(log10(star_count))) AS power_of_ten\n    FROM \n      (\n        SELECT \n          repo_name, \n          sum(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS star_count\n        FROM \n          github_events\n        GROUP BY \n          repo_name\n      ) AS subquery\n  ) AS subquery2\nGROUP BY \n  power_of_ten\nORDER BY \n  power_of_ten\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  ROUND(COUNT(DISTINCT repo_name) / 10) AS star_count,\n  COUNT(DISTINCT repo_name) AS repo_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  ROUND(COUNT(DISTINCT repo_name) / 10)\nORDER BY\n  star_count\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "SELECT\n  power,\n  count() AS repo_count\nFROM (\n  SELECT\n    repo_name,\n    power(10, floor(log10(count_stars))) AS power\n  FROM (\n    SELECT\n      repo_name,\n      count() AS count_stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n  ) AS stars_count\n  GROUP BY repo_name\n)\nGROUP BY power\nORDER BY power ASC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 6,
        "sql": " %\nSELECT\n  floor(log10(push_size)) AS power_of_10,\n  COUNT(DISTINCT repo_name) AS repo_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  power_of_10\nORDER BY\n  power_of_10\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.16666666666666663,
          "numeric": 1,
          "fScore": 0.9090909090909091
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 6,
        "sql": "SELECT\n  pow(10, floor(log10(star_count))) star_bucket,\n  count() repo_count\nFROM (\n  SELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') star_count\n  FROM github_events\n  GROUP BY repo_name\n)\nGROUP BY star_bucket\nORDER BY star_bucket ASC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "SELECT\n    pow(10, floor(log10(toUInt64(arrayJoin(arrayMap(x -> toUInt64(x), labels)))))) AS star_power,\n    count() AS repo_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY star_power\nORDER BY star_power\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.07419146549062967,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 5,
        "llmRowCount": 1,
        "sql": "SELECT \n    pow(10, number) AS star_count,\n    count(DISTINCT repo_name) AS repo_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    number\nHAVING \n    star_count IN (1, 10, 100, 1000, 10000, 100000, 1000000)\nORDER BY \n    star_count\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n  star_bucket,\n  count(*) AS repo_count\nFROM\n(\n    SELECT\n      CASE\n        WHEN stars < 10 THEN 1\n        WHEN stars < 100 THEN 10\n        WHEN stars < 1000 THEN 100\n        WHEN stars < 10000 THEN 1000\n        WHEN stars < 100000 THEN 10000\n        WHEN stars < 1000000 THEN 100000\n        ELSE 1000000\n      END AS star_bucket\n    FROM\n    (\n        SELECT\n          repo_name,\n          count(*) AS stars\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n    )\n)\nGROUP BY star_bucket\nORDER BY star_bucket\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT bucket, count() AS repo_count\nFROM (\n  SELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS star_count,\n    CASE\n      WHEN countIf(event_type = 'WatchEvent') BETWEEN 1 AND 9 THEN 1\n      WHEN countIf(event_type = 'WatchEvent') BETWEEN 10 AND 99 THEN 10\n      WHEN countIf(event_type = 'WatchEvent') BETWEEN 100 AND 999 THEN 100\n      WHEN countIf(event_type = 'WatchEvent') BETWEEN 1000 AND 9999 THEN 1000\n      WHEN countIf(event_type = 'WatchEvent') BETWEEN 10000 AND 99999 THEN 10000\n      WHEN countIf(event_type = 'WatchEvent') BETWEEN 100000 AND 999999 THEN 100000\n      WHEN countIf(event_type = 'WatchEvent') >= 1000000 THEN 1000000\n      ELSE 0\n    END AS bucket\n  FROM github_events\n  GROUP BY repo_name\n)\nWHERE bucket > 0\nGROUP BY bucket\nORDER BY bucket\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT pow(10, floor(log10(repo_stars))) AS star_bucket, count(*) AS repo_count\nFROM (\n  SELECT repo_name, sum(CAST(event_type = 'WatchEvent' AS UInt8)) AS repo_stars\n  FROM github_events\n  GROUP BY repo_name\n)\nWHERE repo_stars > 0\nGROUP BY star_bucket\nORDER BY star_bucket\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "\nSELECT \n    floor(log10(star_count + 1)) AS power_of_10,\n    pow(10, floor(log10(star_count + 1))) AS star_range,\n    count(DISTINCT repo_name) AS repo_count\nFROM (\n    SELECT \n        repo_name,\n        countIf(event_type = 'WatchEvent') AS star_count\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nWHERE star_count > 0\nGROUP BY power_of_10, star_range\nORDER BY star_range\nLIMIT 20\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT \n    CASE \n        WHEN star_count = 0 THEN 0\n        WHEN star_count >= 1 AND star_count < 10 THEN 1\n        WHEN star_count >= 10 AND star_count < 100 THEN 10\n        WHEN star_count >= 100 AND star_count < 1000 THEN 100\n        WHEN star_count >= 1000 AND star_count < 10000 THEN 1000\n        WHEN star_count >= 10000 AND star_count < 100000 THEN 10000\n        WHEN star_count >= 100000 AND star_count < 1000000 THEN 100000\n        ELSE 1000000\n    END AS power_of_10,\n    count(DISTINCT repo_name) AS repo_count\nFROM (\n    SELECT \n        repo_name,\n        count(*) AS star_count\n    FROM github_events \n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n) \nGROUP BY power_of_10\nORDER BY power_of_10\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n    power_of_10,\n    count() AS repo_count\nFROM (\n    SELECT\n        repo_name,\n        floor(log10(count())) AS power_of_10\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nGROUP BY power_of_10\nORDER BY power_of_10 ASC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 1,
        "sql": "SELECT\n    powerOfTen,\n    COUNT(*) AS repo_count\nFROM (\n    SELECT\n        repo_name,\n        MAX(comments) AS star_count,\n        FLOOR(LOG10(MAX(comments))) AS powerOfTen\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nGROUP BY powerOfTen\nORDER BY powerOfTen ASC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n    CASE\n        WHEN stars >= 1 AND stars < 10 THEN 1\n        WHEN stars >= 10 AND stars < 100 THEN 10\n        WHEN stars >= 100 AND stars < 1000 THEN 100\n        WHEN stars >= 1000 AND stars < 10000 THEN 1000\n        WHEN stars >= 10000 AND stars < 100000 THEN 10000\n        WHEN stars >= 100000 AND stars < 1000000 THEN 100000\n        ELSE 1000000\n    END AS bucket,\n    COUNT(*) AS repo_count\nFROM (\n    SELECT repo_name, COUNT(*) AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n) AS subquery_group\nGROUP BY bucket\nORDER BY bucket\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n    CASE\n        WHEN stars >= 1 AND stars < 10 THEN 1\n        WHEN stars >= 10 AND stars < 100 THEN 10\n        WHEN stars >= 100 AND stars < 1000 THEN 100\n        WHEN stars >= 1000 AND stars < 10000 THEN 1000\n        WHEN stars >= 10000 AND stars < 100000 THEN 10000\n        WHEN stars >= 100000 AND stars < 1000000 THEN 100000\n        ELSE 1000000\n    END AS star_bucket,\n    count() AS repository_count\nFROM\n(\n    SELECT\n        count() AS stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nGROUP BY star_bucket\nORDER BY star_bucket ASC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 5,
        "llmRowCount": 0,
        "sql": "\nWITH star_counts AS (\n  SELECT\n    repo_name,\n    COUNT(*) AS star_count\n  FROM github_events\n  WHERE event_type = 15  -- WatchEvent\n  GROUP BY repo_name\n),\npower_definitions AS (\n  SELECT 0 AS power, 1 AS power_of_10, 0 AS lower, 1 AS upper UNION ALL\n  SELECT 1 AS power, 10 AS power_of_10, 9 AS lower, 11 AS upper UNION ALL\n  SELECT 2 AS power, 100 AS power_of_10, 90 AS lower, 110 AS upper UNION ALL\n  SELECT 3 AS power, 1000 AS power_of_10, 900 AS lower, 1100 AS upper UNION ALL\n  SELECT 4 AS power, 10000 AS power_of_10, 9000 AS lower, 11000 AS upper UNION ALL\n  SELECT 5 AS power, 100000 AS power_of_10, 90000 AS lower, 110000 AS upper\n),\ncounted AS (\n  SELECT\n    pd.power,\n    pd.power_of_10,\n    COUNT(DISTINCT sc.repo_name) AS repo_count\n  FROM\n    power_definitions pd\n  JOIN\n    star_counts sc ON sc.star_count BETWEEN pd.lower AND pd.upper\n  GROUP BY\n    pd.power, pd.power_of_10\n)\nSELECT\n  power,\n  power_of_10,\n  repo_count\nFROM counted\nORDER BY power\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "\nSELECT\n    CASE\n        WHEN star_count < 10 THEN '1-9'\n        WHEN star_count >= 10 AND star_count < 100 THEN '10-99'\n        WHEN star_count >= 100 AND star_count < 1000 THEN '100-999'\n        WHEN star_count >= 1000 AND star_count < 10000 THEN '1000-9999'\n        WHEN star_count >= 10000 AND star_count < 100000 THEN '10000-99999'\n        WHEN star_count >= 100000 AND star_count < 1000000 THEN '100000-999999'\n        WHEN star_count >= 1000000 AND star_count < 10000000 THEN '1000000-9999999'\n        WHEN star_count >= 10000000 AND star_count < 100000000 THEN '10000000-99999999'\n        WHEN star_count >= 100000000 AND star_count < 1000000000 THEN '100000000-999999999'\n        ELSE '1000000000+'\n    END AS star_range,\n    COUNT(*) AS repository_count,\n    CASE\n        WHEN star_count < 10 THEN 1\n        WHEN star_count >= 10 AND star_count < 100 THEN 10\n        WHEN star_count >= 100 AND star_count < 1000 THEN 100\n        WHEN star_count >= 1000 AND star_count < 10000 THEN 1000\n        WHEN star_count >= 10000 AND star_count < 100000 THEN 10000\n        WHEN star_count >= 100000 AND star_count < 1000000 THEN 100000\n        WHEN star_count >= 1000000 AND star_count < 10000000 THEN 1000000\n        WHEN star_count >= 10000000 AND star_count < 100000000 THEN 10000000\n        WHEN star_count >= 100000000 AND star_count < 1000000000 THEN 100000000\n        ELSE 1000000000\n    END AS range_min\nFROM (\n    SELECT\n        repo_name,\n        COUNT(*) AS star_count\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nGROUP BY star_range, range_min\nORDER BY range_min\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 5,
        "llmRowCount": 5,
        "sql": "SELECT\n  stars_bucket,\n  count() repositories\nFROM\n(\n  SELECT\n    repo_name,\n    count() AS star_cnt,\n    CASE\n      WHEN count() < 10 THEN 1\n      WHEN count() < 100 THEN 10\n      WHEN count() < 1000 THEN 100\n      WHEN count() < 10000 THEN 1000\n      WHEN count() < 100000 THEN 10000\n      WHEN count() < 1000000 THEN 100000\n      WHEN count() < 10000000 THEN 1000000\n      WHEN count() < 100000000 THEN 10000000\n      WHEN count() < 1000000000 THEN 100000000\n      ELSE 1000000000\n    END AS stars_bucket\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name\n)\nGROUP BY stars_bucket\nORDER BY stars_bucket\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "stars": 1,
          "uniqExact(k)": 537389
        },
        {
          "stars": 10,
          "uniqExact(k)": 49995
        },
        {
          "stars": 100,
          "uniqExact(k)": 8578
        },
        {
          "stars": 1000,
          "uniqExact(k)": 902
        },
        {
          "stars": 10000,
          "uniqExact(k)": 31
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "Float64"
        },
        {
          "name": "uniqExact(k)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.088803963,
        "rows_read": 7319235,
        "bytes_read": 21919077
      },
      "executionTime": 0.109,
      "requestId": "01JTN5KK246DXY7QCTNWXP8EY1"
    }
  },
  "pipe_04.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    count(DISTINCT repo_name) as total_repos\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 1"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 1"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) AS total_repositories FROM github_events LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) FROM github_events LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) FROM github_events LIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    COUNT(DISTINCT repo_name) \nFROM \n    github_events"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories FROM github_events LIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) FROM github_events LIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) total_repositories FROM github_events LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "SELECT countDistinct(repo_name) AS total_repositories LIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories FROM github_events LIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) total_repos\nFROM github_events\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5207657641735737,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(repo_name) total_repositories\nFROM github_events\nWHERE event_type = 'CreateEvent'\n  AND ref_type = 'repository'\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) total_repositories\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) as total_repositories\nFROM github_events\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories FROM github_events LIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT repo_name) AS total_repos FROM github_events LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.004930508785468425,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniq(repo_name) AS total_repositories FROM github_events"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT repo_name) AS total_repositories\nFROM github_events\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(repo_name) AS total_repositories FROM github_events LIMIT 10"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(repo_name) total_repositories FROM github_events LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "uniqExact(repo_name)": 25138721
        }
      ],
      "meta": [
        {
          "name": "uniqExact(repo_name)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.315251897,
        "rows_read": 200000000,
        "bytes_read": 394943756
      },
      "executionTime": 1.358,
      "requestId": "01JTN5KM5HA71G4WX41M4KD79B"
    }
  },
  "pipe_05.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    toYear(created_at) as year,\n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND toYear(created_at) >= 2015\nGROUP BY year, repo_name\nORDER BY year ASC, stars DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND toYear(created_at) >= 2015\nGROUP BY year, repo_name\nORDER BY year ASC, stars DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    toYear(created_at) AS year,\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year, stars DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    toYear(created_at) AS year,\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year, stars DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    YEAR(created_at) AS year,\n    repo_name,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND YEAR(created_at) >= 2015\nGROUP BY YEAR(created_at), repo_name\nORDER BY year, event_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8511407397204364,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND toYear(created_at) >= 2015\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year DESC,\n    stars DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.00112660298352644,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 6,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    topK(10)(repo_name) AS top_repositories\nFROM github_events\nWHERE toYear(created_at) >= 2015\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5,
          "numeric": 0.4884875640384983,
          "fScore": 0.6666666666666666
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 20,
        "sql": "%\nSELECT \n  toYear(created_at) AS year,\n  repo_name,\n  count() AS stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND created_at >= '2015-01-01'\nGROUP BY \n  year, \n  repo_name\nORDER BY \n  year ASC, \n  stars DESC\nLIMIT 10 BY year LIMIT 100"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND created_at >= '2015-01-01'\nGROUP BY \n    repo_name\nORDER BY \n    count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9,
          "numeric": 1,
          "fScore": 0.18181818181818188
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 100,
        "sql": "\n%\nSELECT \n  toYear(created_at) AS year,\n  repo_name,\n  COUNT(*) AS count\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  AND toYear(created_at) >= 2015\nGROUP BY \n  year, repo_name\nORDER BY \n  year, count DESC\nLIMIT 100\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS event_count\nFROM\n    github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND created_at >= '2015-01-01'\nGROUP BY\n    repo_name\nORDER BY\n    event_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  toYear(created_at) AS year,\n  repo_name,\n  COUNT() AS event_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND toYear(created_at) >= 2015\nGROUP BY\n  year,\n  repo_name\nORDER BY\n  year,\n  event_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " %\nSELECT\n  toYear(created_at) AS year,\n  repo_name,\n  COUNT() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year, repo_name\nORDER BY year, stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    YEAR(created_at) year,\n    repo_name,\n    count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year, stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "% \nSELECT\n  toYear(created_at) AS year,\n  repo_name,\n  count() AS event_count\nFROM github_events\nWHERE toYear(created_at) >= 2015\nGROUP BY year, repo_name\nORDER BY year, event_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT repo_name, COUNT(*) AS event_count, toYear(created_at) AS year\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY repo_name, year\nORDER BY year, event_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5,
          "numeric": 0.4884875640384983,
          "fScore": 0.6666666666666666
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 20,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year ASC, stars DESC\nLIMIT 10 BY year"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND toYear(created_at) >= 2015\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year ASC,\n    stars DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0003506604419472093,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 2,
        "sql": "SELECT toYear(created_at) year, approx_top_count(10)(repo_name) top_repos\nFROM github_events\nWHERE event_type = 'WatchEvent' AND toYear(created_at) >= 2015\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 60,
        "sql": "SELECT \n    toYear(created_at) AS year,\n    repo_name,\n    count() AS total_events\nFROM github_events\nWHERE created_at >= '2015-01-01'\nGROUP BY year, repo_name\nORDER BY year, total_events DESC\nLIMIT 10 BY year"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    toYear(created_at) as year,\n    repo_name,\n    count() as total_events\nFROM github_events \nWHERE toYear(created_at) >= 2015\nGROUP BY year, repo_name\nORDER BY year ASC, total_events DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS total_events\nFROM github_events\nWHERE toYear(created_at) >= 2015\nGROUP BY\n    year,\n    repo_name\nORDER BY\n    year ASC,\n    total_events DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    toYear(created_at) AS year,\n    repo_name,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE created_at >= '2015-01-01 00:00:00'\nGROUP BY year, repo_name\nORDER BY year, event_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT toYear(created_at) AS year, repo_name, count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND toYear(created_at) >= 2015\nGROUP BY year, repo_name\nORDER BY year, star_count DESC\nLIMIT 10 BY year\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND year >= 2015\nGROUP BY\n    year,\n    repo_name\nQUALIFY row_number() OVER (PARTITION BY year ORDER BY stars DESC) <= 10\nORDER BY\n    year ASC,\n    stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.8575712207596997,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  YEAR(created_at) as year,\n  repo_name,\n  COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND YEAR(created_at) >= 2015\nGROUP BY year, repo_name\nORDER BY star_count DESC, year\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Final SQL query with corrected parameters and window function:\n\n\n%\nSELECT\n    YEAR(created_at) AS year,\n    repo_name,\n    COUNT(*) AS star_count,\n    row_number() OVER (PARTITION BY YEAR(created_at) ORDER BY COUNT(*) DESC) AS rank\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= '2015-01-01 00:00:00'\nGROUP BY year, repo_name\nORDER BY year, rank\nLIMIT {{{{UInt32(limit, 10)}}}}\nOFFSET {{{{UInt32(offset, 0)}}}}\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0003506604419472093,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 2,
        "sql": "SELECT\n  YEAR(created_at) year,\n  topK(5)(repo_name) top_repositories\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= CAST('2015-01-01 00:00:00', 'DateTime')\nGROUP BY year\nORDER BY year\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "year": 2016,
          "repo": "yarnpkg/yarn",
          "count()": 21518
        },
        {
          "year": 2016,
          "repo": "zeit/hyperterm",
          "count()": 9086
        },
        {
          "year": 2016,
          "repo": "zeit/next.js",
          "count()": 7877
        },
        {
          "year": 2016,
          "repo": "xitu/gold-miner",
          "count()": 6022
        },
        {
          "year": 2016,
          "repo": "zenorocha/clipboard.js",
          "count()": 5594
        },
        {
          "year": 2016,
          "repo": "yelouafi/redux-saga",
          "count()": 5463
        },
        {
          "year": 2016,
          "repo": "yhatt/marp",
          "count()": 5254
        },
        {
          "year": 2016,
          "repo": "zyedidia/micro",
          "count()": 4952
        },
        {
          "year": 2016,
          "repo": "zeit/hyper",
          "count()": 4926
        },
        {
          "year": 2016,
          "repo": "zxing/zxing",
          "count()": 4890
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "repo",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.076035367,
        "rows_read": 7319235,
        "bytes_read": 51225945
      },
      "executionTime": 0.096,
      "requestId": "01JTN5KPEKKWQ9MQMXW0V65D06"
    }
  },
  "pipe_06.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n    toYear(created_at) as year,\n    count() as total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": " \nSELECT \n    toYear(created_at) AS year,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT \n    toYear(created_at) AS year,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "\nSELECT\n    YEAR(created_at) AS year,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT toYear(created_at) AS year, count() AS total_stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "%\nSELECT \n  toYear(created_at) AS year,\n  count() AS total_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  year\nORDER BY \n  year\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT \n  toYear(created_at) AS year,\n  COUNT(*) AS total_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  year\nORDER BY \n  year\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 2,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    toYear(created_at) AS year,\n    countIf(event_type = 15) AS total_stars\nFROM \n    github_events\nGROUP BY \n    year\nORDER BY \n    year\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n  toYear(created_at) AS year,\n  countIf(event_type = 'WatchEvent') AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n  toYear(created_at) AS year,\n  count() AS total_stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  year\nORDER BY\n  year\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": " %\n\nSELECT\n  toYear(created_at) as year,\n  countIf(event_type = 'WatchEvent') as total_stars\nFROM\n  github_events\nWHERE\n  event_type IN ('WatchEvent')\nGROUP BY\n  year\nORDER BY\n  year\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT toYear(created_at) year, count() total_stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "%\nSELECT\n  toYear(created_at) AS year,\n  count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.4
        },
        "details": "Results don't match",
        "humanRowCount": 2,
        "llmRowCount": 8,
        "sql": "SELECT \n    toYear(created_at) AS year, \n    countIf(event_type = 'WatchEvent') AS total_stars \nFROM github_events \nGROUP BY year \nORDER BY year \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n  toYear(created_at) AS year,\n  count(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT toYear(created_at) year, count() total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT year(created_at) year, count(*) total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "\nSELECT \n    toYear(created_at) AS year,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT \n    toYear(created_at) as year,\n    count() as total_stars\nFROM github_events \nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    count() AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n    toYear(created_at) AS year,\n    COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year ASC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT YEAR(created_at) AS year, COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n  YEAR(created_at) AS year,\n  count() AS total_stars\nFROM github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  year\nORDER BY\n  year ASC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "\nSELECT\n    YEAR(created_at) AS year,\n    COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY year\nORDER BY year\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 2,
        "llmRowCount": 0,
        "sql": "The SQL query to track the number of stars over time by year is:\n\n\nSELECT toYear(created_at) AS year, COUNT(*) AS total_stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year LIMIT 10\n\n\nThis query filters for 'WatchEvent' events, extracts the year from the created_at timestamp, counts the stars per year, groups by year, orders by year, and limits to 10 results for pagination. This should provide a clear view of how the number of stars has changed over time by year.\n\n\nSELECT toYear(created_at) AS year, COUNT(*) AS total_stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY year ORDER BY year LIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 2,
        "llmRowCount": 2,
        "sql": "SELECT\n  YEAR(created_at) event_year,\n  count() stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND action = 'started'\nGROUP BY event_year\nORDER BY event_year\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "year": 2016,
          "stars": 814207
        },
        {
          "year": 2017,
          "stars": 6490905
        }
      ],
      "meta": [
        {
          "name": "year",
          "type": "UInt16"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.016956088,
        "rows_read": 7319235,
        "bytes_read": 36596175
      },
      "executionTime": 0.035,
      "requestId": "01JTN5KQGWHG1NJ4C7MJH27X13"
    }
  },
  "pipe_07.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    count(*) as stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "  \nSELECT  \n    actor_login,  \n    COUNT(*) AS stars_given  \nFROM github_events  \nWHERE event_type = 'WatchEvent'  \nGROUP BY actor_login  \nORDER BY stars_given DESC  \nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY actor_login ORDER BY stars DESC LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, count() as num_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY num_stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  actor_login, \n  COUNT(*) as count \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nGROUP BY \n  actor_login \nORDER BY \n  count DESC \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT actor_login, count(*) as num_stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY actor_login \nORDER BY num_stars DESC \nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login\nORDER BY\n  stars_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count() AS star_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login\nORDER BY\n  star_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.47467350038586215,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " SELECT\n  actor_login,\n  COUNT(DISTINCT repo_name) as stars_given\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login\nORDER BY\n  stars_given DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, count() as stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT actor_login, count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) AS stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count(*) AS star_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login\nORDER BY\n  star_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n  actor_login\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count() star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as stars_given\nFROM github_events \nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    COUNT(*) AS stars_given\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY stars_given DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login, \n    COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'started'\nGROUP BY actor_login\nORDER BY stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT actor_login, COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, count() stars_given FROM github_events WHERE event_type = 'WatchEvent' AND actor_login != '' GROUP BY actor_login ORDER BY stars_given DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "actor_login": "baslr",
          "stars": 11953
        },
        {
          "actor_login": "korolr",
          "stars": 6428
        },
        {
          "actor_login": "roscopecoltran",
          "stars": 3625
        },
        {
          "actor_login": "AlexxNica",
          "stars": 2637
        },
        {
          "actor_login": "maoabc1818",
          "stars": 2348
        },
        {
          "actor_login": "fly51fly",
          "stars": 2171
        },
        {
          "actor_login": "jenniemanphonsy",
          "stars": 1930
        },
        {
          "actor_login": "pranavlathigara",
          "stars": 1885
        },
        {
          "actor_login": "aidan-n",
          "stars": 1882
        },
        {
          "actor_login": "bestwpw",
          "stars": 1740
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.19022966,
        "rows_read": 7319235,
        "bytes_read": 21957705
      },
      "executionTime": 0.209,
      "requestId": "01JTN5KRH98XCWP54XH3MHJMT7"
    }
  },
  "pipe_08.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    AND repo_name = 'tensorflow/tensorflow'\n)\nAND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'WatchEvent'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'tensorflow/tensorflow' AND event_type = 'WatchEvent')\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE\n            event_type = 'WatchEvent'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.22277322028599822,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    gh2.repo_name,\n    count(DISTINCT gh2.actor_login) AS stars\nFROM\n    github_events AS gh1\nJOIN\n    github_events AS gh2 ON gh1.actor_login = gh2.actor_login\nWHERE\n    gh1.event_type = 'WatchEvent' AND gh1.repo_name = 'tensorflow/tensorflow'\n    AND gh2.event_type = 'WatchEvent' AND gh2.repo_name != 'tensorflow/tensorflow'\nGROUP BY\n    gh2.repo_name\nORDER BY\n    stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n  repo_name, \n  count() as stars \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'WatchEvent' \n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY \n  repo_name \nORDER BY \n  stars DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n    repo_name, \n    COUNT(*) as star_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT \n            actor_login \n        FROM \n            github_events \n        WHERE \n            event_type = 'WatchEvent' \n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    star_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    repo_name, \n    COUNT(*) as num_stars\nFROM \n    github_events\nWHERE \n    event_type = 15 \n    AND actor_login IN (\n        SELECT \n            DISTINCT actor_login \n        FROM \n            github_events \n        WHERE \n            event_type = 15 \n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY \n    repo_name\nORDER BY \n    num_stars DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND repo_name = 'tensorflow/tensorflow'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT() AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_login IN (SELECT\n    actor_login\n  FROM\n    github_events\n  WHERE\n    event_type = 'WatchEvent'\n    AND repo_name = 'tensorflow/tensorflow')\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND repo_name = 'tensorflow/tensorflow'\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (\n  SELECT actor_login\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  AND repo_name = 'tensorflow/tensorflow'\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'WatchEvent' AND repo_name = 'tensorflow/tensorflow'\n)\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  other.repo_name,\n  count(*) AS stars\nFROM github_events AS other\nJOIN github_events AS tf ON other.actor_login = tf.actor_login\nWHERE other.event_type = 'WatchEvent'\n  AND tf.event_type = 'WatchEvent'\n  AND tf.repo_name = 'tensorflow/tensorflow'\nGROUP BY other.repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  e2.repo_name repo_name, \n  count() stars_count \nFROM github_events AS e1 \nJOIN github_events AS e2 \n  ON e1.actor_login = e2.actor_login \nWHERE \n  e1.event_type = 'WatchEvent' \n  AND e1.repo_name = 'tensorflow/tensorflow' \n  AND e2.event_type = 'WatchEvent' \n  AND e2.repo_name != 'tensorflow/tensorflow' \nGROUP BY e2.repo_name \nORDER BY stars_count DESC \nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT ge2.repo_name, count() AS stars\nFROM github_events AS ge1\nINNER JOIN github_events AS ge2\n  ON ge1.actor_login = ge2.actor_login\nWHERE ge1.event_type = 'WatchEvent'\n  AND ge1.repo_name = 'tensorflow/tensorflow'\n  AND ge2.event_type = 'WatchEvent'\n  AND ge2.repo_name != 'tensorflow/tensorflow'\nGROUP BY ge2.repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'WatchEvent'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.530949015185979,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as star_count\nFROM github_events \nWHERE event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND actor_login IN (\n      SELECT actor_login\n      FROM github_events\n      WHERE event_type = 'WatchEvent'\n        AND repo_name = 'tensorflow/tensorflow'\n  )\n  AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    ge.repo_name, \n    COUNT(*) as star_count\nFROM github_events ge\nWHERE ge.event_type = 'WatchEvent'\n    AND ge.actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND ge.repo_name != 'tensorflow/tensorflow'\nGROUP BY ge.repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT e2.repo_name, COUNT(*) AS star_count\nFROM github_events e1\nJOIN github_events e2 ON e1.actor_login = e2.actor_login AND e2.event_type = 'WatchEvent'\nWHERE e1.event_type = 'WatchEvent' AND e1.repo_name = 'tensorflow/tensorflow' AND e2.repo_name != 'tensorflow/tensorflow'\nGROUP BY e2.repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.22277322028599822,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    T2.repo_name,\n    uniq(T2.actor_login) AS stars\nFROM github_events AS T1\nINNER JOIN github_events AS T2 ON T1.actor_login = T2.actor_login\nWHERE\n    T1.event_type = 'WatchEvent' AND T1.repo_name = 'tensorflow/tensorflow' AND T2.event_type = 'WatchEvent' AND T2.repo_name != 'tensorflow/tensorflow'\nGROUP BY T2.repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND repo_name = 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Here is the corrected SQL query:\n\n\nSELECT t2.repo_name, COUNT(DISTINCT t2.actor_login) AS star_count\nFROM github_events t1\nJOIN github_events t2\nON t1.actor_login = t2.actor_login\nWHERE t1.event_type = 'WatchEvent'\nAND t1.repo_name = 'tensorflow/tensorflow'\nAND t2.event_type = 'WatchEvent'\nAND t2.repo_name != 'tensorflow/tensorflow'\nGROUP BY t2.repo_name\nORDER BY star_count DESC\nLIMIT 10\n\n\nThis query:\n1. Joins the github_events table to itself on actor_login (user)\n2. Filters for users who starred tensorflow/tensorflow (t1 table)\n3. Finds all other repos these users starred (t2 table)\n4. Counts distinct users (which equals number of stars) for each repo\n5. Orders by star count descending and limits to top 10"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  g2.repo_name repo_name,\n  count() stars\nFROM github_events AS g2\nANY INNER JOIN github_events AS g1 ON g1.actor_login = g2.actor_login\nWHERE\n  g1.event_type = 'WatchEvent'\n  AND g1.action = 'started'\n  AND g1.repo_name = 'tensorflow/tensorflow'\n  AND g2.event_type = 'WatchEvent'\n  AND g2.action = 'started'\n  AND g2.repo_name != 'tensorflow/tensorflow'\nGROUP BY\n  g2.repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "tensorflow/models",
          "stars": 6088
        },
        {
          "repo_name": "vuejs/vue",
          "stars": 5399
        },
        {
          "repo_name": "sindresorhus/awesome",
          "stars": 4613
        },
        {
          "repo_name": "scikit-learn/scikit-learn",
          "stars": 3781
        },
        {
          "repo_name": "torvalds/linux",
          "stars": 3698
        },
        {
          "repo_name": "twbs/bootstrap",
          "stars": 3453
        },
        {
          "repo_name": "vinta/awesome-python",
          "stars": 2948
        },
        {
          "repo_name": "robbyrussell/oh-my-zsh",
          "stars": 2887
        },
        {
          "repo_name": "webpack/webpack",
          "stars": 2774
        },
        {
          "repo_name": "yarnpkg/yarn",
          "stars": 2774
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.151749218,
        "rows_read": 7360195,
        "bytes_read": 36693147
      },
      "executionTime": 0.186,
      "requestId": "01JTN5KSQ3Z0M8R1NCZHFZ91KW"
    }
  },
  "pipe_09.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    actor_login,\n    countIf(repo_name LIKE 'javisantana/%') as stars_to_javisantana,\n    countIf(repo_name NOT LIKE 'javisantana/%') as stars_to_others,\n    (stars_to_javisantana / (stars_to_javisantana + stars_to_others)) as ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND actor_login != 'javisantana'\nGROUP BY actor_login\nHAVING stars_to_javisantana > 0\nORDER BY ratio DESC, stars_to_javisantana DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    actor_login,\n    countIf(repo_name LIKE 'javisantana/%') AS stars_to_javisantana,\n    countIf(repo_name NOT LIKE 'javisantana/%') AS stars_to_others,\n    stars_to_javisantana / (stars_to_javisantana + stars_to_others) AS javisantana_ratio\nFROM github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING stars_to_javisantana > 0\nORDER BY javisantana_ratio DESC, stars_to_javisantana DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    actor_login AS user_name,\n    COUNTIf(repo_name LIKE 'javisantana/%') AS stars_to_javisantana,\n    COUNTIf(repo_name NOT LIKE 'javisantana/%') AS stars_to_others,\n    stars_to_javisantana / (stars_to_javisantana + stars_to_others) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING stars_to_javisantana > 0\nORDER BY ratio DESC, stars_to_javisantana DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    actor_login AS user_name,\n    COUNTIf(repo_name LIKE 'javisantana/%') AS javisantana_stars,\n    COUNTIf(repo_name NOT LIKE 'javisantana/%') AS other_stars,\n    javisantana_stars / (javisantana_stars + other_stars) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING javisantana_stars > 0\nORDER BY ratio DESC, javisantana_stars DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    actor_login,\n    COUNTIf(repo_name LIKE 'javisantana%') AS javisantana_stars,\n    COUNT() - COUNTIf(repo_name LIKE 'javisantana%') AS other_stars,\n    javisantana_stars / COUNT() AS javisantana_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY javisantana_ratio DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    actor_login,\n    SUM(CASE WHEN repo_name LIKE 'javisantana/%' THEN 1 ELSE 0 END) AS javisantana_stars,\n    SUM(CASE WHEN repo_name NOT LIKE 'javisantana/%' THEN 1 ELSE 0 END) AS other_stars,\n    toFloat64(SUM(CASE WHEN repo_name LIKE 'javisantana/%' THEN 1 ELSE 0 END)) / COUNT(*) AS javisantana_star_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING SUM(CASE WHEN repo_name LIKE 'javisantana/%' THEN 1 ELSE 0 END) > 0\nORDER BY javisantana_star_ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    sum(repo_name LIKE 'javisantana/%') AS javisantana_stars,\n    sum(repo_name NOT LIKE 'javisantana/%') AS other_stars,\n    CAST(javisantana_stars AS Float64) / (javisantana_stars + other_stars) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n    actor_login AS user_name, \n    sumIf(push_distinct_size, repo_name LIKE 'javisantana/%') AS javisantana_stars,\n    sumIf(push_distinct_size, repo_name NOT LIKE 'javisantana/%') AS other_stars,\n    javisantana_stars / (javisantana_stars + other_stars) AS ratio\nFROM \n    github_events \nWHERE \n    event_type = 'WatchEvent' AND \n    (repo_name LIKE 'javisantana/%' OR repo_name NOT LIKE 'javisantana/%')\nGROUP BY \n    actor_login\nORDER BY \n    ratio DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT \n  actor_login,\n  SUM(CASE WHEN repo_name LIKE '%/javisantana%' THEN 1 ELSE 0 END) AS javisantana_stars,\n  SUM(CASE WHEN repo_name NOT LIKE '%/javisantana%' THEN 1 ELSE 0 END) AS other_stars,\n  SUM(CASE WHEN repo_name LIKE '%/javisantana%' THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS ratio\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND action = 'created'\nGROUP BY \n  actor_login\nORDER BY \n  ratio DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT \n  actor_login,\n  sum(if(repo_name like '%javisantana%', 1, 0)) as javisantana_stars,\n  sum(if(repo_name not like '%javisantana%', 1, 0)) as other_stars,\n  sum(if(repo_name like '%javisantana%', 1, 0.0)) / (sum(if(repo_name like '%javisantana%', 1, 0.0)) + sum(if(repo_name not like '%javisantana%', 1, 0.0))) as ratio\nFROM \n  github_events\nWHERE \n  event_type = 15\n  AND actor_login != ''\nGROUP BY \n  actor_login\nHAVING \n  sum(if(repo_name like '%javisantana%', 1, 0.0)) + sum(if(repo_name not like '%javisantana%', 1, 0.0)) > 0\nORDER BY \n  ratio DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  actor_login,\n  COUNT(CASE WHEN repo_name = 'javisantana' THEN 1 END) AS javisantana_stars,\n  COUNT(CASE WHEN repo_name != 'javisantana' THEN 1 END) AS other_stars,\n  COUNT(CASE WHEN repo_name = 'javisantana' THEN 1 END) * 1.0 / COUNT(*) AS javisantana_star_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY javisantana_star_ratio DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  actor_login user_name,\n  COUNTIF(repo_name LIKE '%javisantana%') stars_to_javisantana,\n  COUNTIF(repo_name NOT LIKE '%javisantana%') stars_to_other_repos,\n  COUNTIF(repo_name LIKE '%javisantana%') / COUNT(*) ratio_javisantana_stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login\nHAVING\n  COUNT(*) > 0\nORDER BY\n  ratio_javisantana_stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\n%\nSELECT\n  actor_login,\n  COUNT_IF(event_type = 'WatchEvent' AND repo_name LIKE 'javisantana%') AS javisantana_stars,\n  COUNT_IF(event_type = 'WatchEvent') AS total_stars,\n  (COUNT_IF(event_type = 'WatchEvent' AND repo_name LIKE 'javisantana%') * 1.0) / COUNT_IF(event_type = 'WatchEvent') AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC\nLIMIT 10\n"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  actor_login,\n  sum(if(startsWith(repo_name, 'javisantana/'), 1, 0)) as javisantana_stars,\n  sum(if(not startsWith(repo_name, 'javisantana/'), 1, 0)) as other_stars,\n  sum(if(startsWith(repo_name, 'javisantana/'), 1, 0)) / count() as ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING javisantana_stars > 0\nORDER BY ratio DESC, javisantana_stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  actor_login AS user_name,\n  countIf(event_type = 'WatchEvent' AND repo_name LIKE '%javisantana%') AS javisantana_stars,\n  countIf(event_type = 'WatchEvent' AND repo_name NOT LIKE '%javisantana%') AS other_stars,\n  javisantana_stars / (javisantana_stars + other_stars) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY user_name\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login AS user_name,\n    COUNTIf(repo_name = 'javisantana') AS javisantana_stars,\n    COUNTIf(repo_name != 'javisantana') AS other_stars,\n    COUNTIf(repo_name = 'javisantana') / (COUNTIf(repo_name = 'javisantana') + COUNTIf(repo_name != 'javisantana')) AS star_ratio\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    actor_login\nORDER BY \n    star_ratio DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  sum(if(repo_name LIKE 'javisantana/%', 1, 0)) AS javisantana_stars,\n  sum(if(repo_name NOT LIKE 'javisantana/%', 1, 0)) AS other_stars,\n  sum(if(repo_name LIKE 'javisantana/%', 1, 0)) / count(*) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.4022967426109692,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  sum(case when substring_index(repo_name, '/', 1) = 'javisantana' then 1 else 0 end) num_javisantana_stars,\n  sum(case when substring_index(repo_name, '/', 1) != 'javisantana' then 1 else 0 end) num_other_stars,\n  sum(case when substring_index(repo_name, '/', 1) = 'javisantana' then 1 else 0 end) / count() ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.4022967426109692,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  countIf(substring_index(repo_name, '/', 1) = 'javisantana') javisantana_stars,\n  countIf(substring_index(repo_name, '/', 1) != 'javisantana') other_stars,\n  countIf(substring_index(repo_name, '/', 1) = 'javisantana')*1.0/count() ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    actor_login,\n    countIf(repo_name LIKE 'javisantana/%') AS stars_to_javisantana,\n    countIf(repo_name NOT LIKE 'javisantana/%') AS stars_to_others,\n    stars_to_javisantana / (stars_to_javisantana + stars_to_others) AS ratio_javisantana_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND actor_login != ''\n    AND actor_login != 'javisantana'\nGROUP BY actor_login\nHAVING stars_to_javisantana > 0\nORDER BY ratio_javisantana_stars DESC, stars_to_javisantana DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    actor_login,\n    countIf(repo_name LIKE 'javisantana/%') as javisantana_stars,\n    countIf(repo_name NOT LIKE 'javisantana/%') as other_stars,\n    countIf(repo_name LIKE 'javisantana/%') / count(*) as javisantana_ratio\nFROM github_events \nWHERE event_type = 'WatchEvent'\n    AND actor_login != ''\nGROUP BY actor_login\nHAVING javisantana_stars > 0\nORDER BY javisantana_ratio DESC, javisantana_stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    actor_login,\n    countIf(repo_name LIKE 'javisantana/%') AS stars_to_javisantana,\n    countIf(repo_name NOT LIKE 'javisantana/%') AS stars_to_others,\n    stars_to_javisantana / (stars_to_javisantana + stars_to_others) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING stars_to_javisantana > 0\nORDER BY ratio DESC, stars_to_javisantana DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    actor_login AS user_name,\n    SUM(CASE WHEN repo_name LIKE 'javisantana/%' THEN 1 ELSE 0 END) AS javisantana_stars,\n    SUM(CASE WHEN repo_name NOT LIKE 'javisantana/%' THEN 1 ELSE 0 END) AS other_stars,\n    SUM(CASE WHEN repo_name LIKE 'javisantana/%' THEN 1 ELSE 0 END) / COUNT(*) AS javisantana_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING javisantana_stars > 0\nORDER BY javisantana_ratio DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  actor_login AS user_name,\n  SUM(IF(SUBSTRING_INDEX(repo_name, '/', 1) = 'javisantana', 1, 0)) AS stars_to_javisantana,\n  COUNT(*) - SUM(IF(SUBSTRING_INDEX(repo_name, '/', 1) = 'javisantana', 1, 0)) AS stars_to_other_repos,\n  (SUM(IF(SUBSTRING_INDEX(repo_name, '/', 1) = 'javisantana', 1, 0)) / COUNT(*)) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING ratio > 0  -- To avoid users with 0 stars\nORDER BY ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    actor_login,\n    sum(if(REGEXP_EXTRACT(repo_name, '^([^/]+)') = 'javisantana', 1, 0)) AS javisantana_stars,\n    sum(if(REGEXP_EXTRACT(repo_name, '^([^/]+)') != 'javisantana', 1, 0)) AS other_stars,\n    javisantana_stars / count() AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING javisantana_stars > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.4022967426109692,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    actor_login as name,\n    SUM(REGEXP_MATCHES(repo_name, '^javisantana/')) as stars_given_to_javisantana_repos,\n    COUNT(*) - SUM(REGEXP_MATCHES(repo_name, '^javisantana/')) as stars_given_to_other_repos,\n    SUM(REGEXP_MATCHES(repo_name, '^javisantana/')) / COUNT(*) as ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n    actor_login,\n    SUM(CASE WHEN repo_name LIKE '%javisantana%' THEN 1 ELSE 0 END) AS javisantana_stars,\n    COUNT(*) AS total_stars,\n    SUM(CASE WHEN repo_name LIKE '%javisantana%' THEN 1 ELSE 0 END) / COUNT(*) AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nHAVING SUM(CASE WHEN repo_name LIKE '%javisantana%' THEN 1 ELSE 0 END) > 0\nORDER BY ratio DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.32732676121846455,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS user_name,\n  sum(substring_index(repo_name, '/', 1) = 'javisantana') AS javisantana_stars,\n  count() - sum(substring_index(repo_name, '/', 1) = 'javisantana') AS other_stars,\n  sum(substring_index(repo_name, '/', 1) = 'javisantana') / count() AS ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY actor_login\nORDER BY ratio DESC, javisantana_stars DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "actor_login": "DevAShah",
          "stars_my": 0,
          "stars_other": 13,
          "ratio": 0
        },
        {
          "actor_login": "obetancourthunicah",
          "stars_my": 0,
          "stars_other": 1,
          "ratio": 0
        },
        {
          "actor_login": "vijayantkatyal",
          "stars_my": 0,
          "stars_other": 27,
          "ratio": 0
        },
        {
          "actor_login": "amievon",
          "stars_my": 0,
          "stars_other": 1,
          "ratio": 0
        },
        {
          "actor_login": "whatsupDu",
          "stars_my": 0,
          "stars_other": 1,
          "ratio": 0
        },
        {
          "actor_login": "alanmacleod",
          "stars_my": 0,
          "stars_other": 15,
          "ratio": 0
        },
        {
          "actor_login": "fierayan",
          "stars_my": 0,
          "stars_other": 6,
          "ratio": 0
        },
        {
          "actor_login": "tallate",
          "stars_my": 0,
          "stars_other": 4,
          "ratio": 0
        },
        {
          "actor_login": "BaBallover",
          "stars_my": 0,
          "stars_other": 1,
          "ratio": 0
        },
        {
          "actor_login": "spale777",
          "stars_my": 0,
          "stars_other": 1,
          "ratio": 0
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars_my",
          "type": "UInt64"
        },
        {
          "name": "stars_other",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.306655873,
        "rows_read": 14638470,
        "bytes_read": 58515252
      },
      "executionTime": 0.326,
      "requestId": "01JTN5KTW6T3D79MZVEWTS67BN"
    }
  },
  "pipe_10.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5224784532230342,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) as unique_contributors,\n    count(*) as total_prs\nFROM github_events\nWHERE \n    event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE \n            event_type = 'PullRequestEvent' \n            AND action = 'opened'\n            AND repo_name LIKE 'tensorflow/%'\n    )\n    AND repo_name NOT LIKE 'tensorflow/%'\nGROUP BY repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.7609239644154207,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_contributors,\n    COUNT(*) AS total_pull_requests\nFROM github_events\nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'PullRequestEvent' \n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY unique_contributors DESC, total_pull_requests DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.6420945035773395,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_contributors,\n    COUNT(*) AS total_pull_requests\nFROM github_events\nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE \n            event_type = 'PullRequestEvent' \n            AND action = 'opened'\n            AND repo_name LIKE '%tensorflow%'\n    )\n    AND repo_name NOT LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY unique_contributors DESC, total_pull_requests DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.7169426085929435,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_contributors,\n    COUNT(*) AS total_pull_requests\nFROM github_events\nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE repo_name LIKE '%tensorflow%' \n        AND event_type = 'PullRequestEvent'\n    )\n    AND repo_name NOT LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY unique_contributors DESC, total_pull_requests DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name, \n    COUNT(DISTINCT actor_login) AS num_unique_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n  AND action = 'opened'\n  AND actor_login IN (SELECT DISTINCT actor_login FROM github_events WHERE repo_name LIKE '%tensorflow%')\n  AND repo_name NOT LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY num_unique_contributors DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS unique_contributors\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'\n    AND repo_name NOT LIKE '%tensorflow%'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE repo_name LIKE '%tensorflow%'\n    )\nGROUP BY\n    repo_name\nORDER BY\n    unique_contributors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.5984488296289485,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    t2.repo_name,\n    count(DISTINCT t2.actor_login) AS num_tf_contributors\nFROM\n    github_events AS t1\nINNER JOIN\n    github_events AS t2\nON\n    t1.actor_login = t2.actor_login\nWHERE\n    t1.event_type = 'PullRequestEvent' AND t1.action = 'opened' AND t1.repo_name LIKE 'tensorflow/%'\n    AND t2.event_type = 'PullRequestEvent' AND t2.action = 'opened' AND t2.repo_name NOT LIKE 'tensorflow/%'\nGROUP BY\n    t2.repo_name\nORDER BY\n    num_tf_contributors DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT \n  repo_name, \n  COUNT(DISTINCT actor_login) as unique_contributors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened' \n  AND author_association IN ('CONTRIBUTOR', 'MEMBER', 'COLLABORATOR') \n  AND repo_name NOT LIKE '%tensorflow%' \n  AND actor_login LIKE '%tensorflow%'\nGROUP BY \n  repo_name\nORDER BY \n  unique_contributors DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) AS unique_contributors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND repo_name NOT LIKE '%tensorflow%'\n  AND actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      event_type = 'PullRequestEvent'\n      AND action = 'opened'\n      AND repo_name LIKE '%tensorflow%'\n  )\nGROUP BY \n  repo_name\nORDER BY \n  unique_contributors DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\n%\nSELECT \n  github_events.repo_name, \n  count(DISTINCT github_events.actor_login) AS unique_contributors\nFROM \n  github_events\nWHERE \n  github_events.event_type = 10 \n  AND github_events.action = 'opened' \n  AND github_events.repo_name NOT LIKE '%tensorflow%'\n  AND github_events.actor_login IN (\n    SELECT \n      DISTINCT actor_login \n    FROM \n      github_events \n    WHERE \n      repo_name LIKE '%tensorflow%'\n  )\nGROUP BY \n  github_events.repo_name\nORDER BY \n  unique_contributors DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS unique_contributors\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND actor_login LIKE '%tensorflow%'\nGROUP BY\n  repo_name\nORDER BY\n  unique_contributors DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  uniq(actor_login) AS unique_contributors\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND repo_name NOT LIKE '%tensorflow%'\n  AND author_association = 'CONTRIBUTOR'\nGROUP BY\n  repo_name\nORDER BY\n  unique_contributors DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": " %\nSELECT\n  r.repo_name,\n  COUNT(DISTINCT t.actor_login) AS unique_contributors\nFROM\n  github_events r\nJOIN\n  github_events t\nON\n  r.repo_name = t.repo_name\nAND\n  r.event_type = 'PullRequestEvent'\nAND\n  t.event_type = 'PushEvent'\nAND\n  t.actor_login LIKE 'TensorFlow%'\nAND\n  t.repo_name = 'tensorflow/tensorflow'\nWHERE\n  r.repo_name NOT LIKE 'TensorFlow%'\nGROUP BY\n  r.repo_name\nORDER BY\n  unique_contributors DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "SELECT\n  repo_name,\n  count(DISTINCT actor_login) as unique_contributors,\n  count() as total_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND actor_login LIKE 'tensorflow%'\n  AND repo_name NOT LIKE 'tensorflow/%'\nGROUP BY repo_name\nORDER BY unique_contributors DESC, total_prs DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "% \nSELECT \n    repo_name, \n    countDistinct(member_login) AS unique_contributors\nFROM \n    github_events\nWHERE \n    event_type = 'PullRequestEvent'\n    AND repo_name NOT LIKE '%TensorFlow%'\n    AND actor_login IN (\n        SELECT \n            DISTINCT member_login\n        FROM \n            github_events\n        WHERE \n            event_type = 'PullRequestEvent'\n            AND repo_name LIKE '%TensorFlow%'\n    )\nGROUP BY \n    repo_name\nORDER BY \n    unique_contributors DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8286907663597917,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(DISTINCT actor_login) AS unique_contributors \nFROM \n    github_events \nWHERE \n    event_type = 'PullRequestEvent' \n    AND creator_user_login IN (SELECT DISTINCT actor_login FROM github_events WHERE repo_name LIKE '%TensorFlow%') \n    AND repo_name NOT LIKE '%TensorFlow%' \nGROUP BY \n    repo_name \nORDER BY \n    unique_contributors DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  pr.repo_name,\n  countDistinct(pr.actor_login) AS unique_contributors\nFROM github_events pr\nJOIN github_events tf ON pr.actor_login = tf.actor_login\nWHERE pr.event_type = 'PullRequestEvent'\n  AND pr.action = 'opened'\n  AND pr.repo_name NOT LIKE 'tensorflow/%'\n  AND tf.repo_name LIKE 'tensorflow/%'\nGROUP BY pr.repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.5984488296289485,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT e.repo_name repo_name,\n       uniqExact(e.actor_login) unique_contributors\nFROM github_events AS e\nINNER JOIN github_events AS tf\n  ON e.actor_login = tf.actor_login\nWHERE e.event_type = 'PullRequestEvent'\n  AND e.action = 'opened'\n  AND e.repo_name NOT LIKE 'tensorflow/%'\n  AND tf.event_type = 'PullRequestEvent'\n  AND tf.action = 'opened'\n  AND tf.repo_name LIKE 'tensorflow/%'\nGROUP BY e.repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.5984488296289485,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  ev2.repo_name,\n  uniqExact(ev2.actor_login) AS unique_contributors\nFROM github_events AS ev1\nINNER JOIN github_events AS ev2\n  ON ev2.actor_login = ev1.actor_login\n  AND ev1.event_type = 'PullRequestEvent'\n  AND ev1.action = 'opened'\n  AND ev1.repo_name LIKE 'tensorflow/%'\n  AND ev2.event_type = 'PullRequestEvent'\n  AND ev2.action = 'opened'\n  AND ev2.repo_name NOT LIKE 'tensorflow/%'\nGROUP BY\n  ev2.repo_name\nORDER BY\n  unique_contributors DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.6420945035773395,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as unique_tensorflow_contributors,\n    COUNT(*) as total_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND repo_name NOT LIKE '%tensorflow%'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE repo_name LIKE '%tensorflow%' \n        AND event_type = 'PullRequestEvent'\n        AND action = 'opened'\n    )\nGROUP BY repo_name\nORDER BY unique_tensorflow_contributors DESC, total_pull_requests DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.7609239644154207,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) unique_contributors,\n    COUNT(*) total_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND actor_login IN (\n      SELECT DISTINCT actor_login\n      FROM github_events\n      WHERE event_type = 'PullRequestEvent'\n        AND action = 'opened'\n        AND repo_name = 'tensorflow/tensorflow'\n  )\n  AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY unique_contributors DESC, total_pull_requests DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.18095166080355407,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    ge.repo_name,\n    COUNT(DISTINCT ge.actor_login) AS unique_contributors\nFROM github_events ge\nWHERE ge.event_type = 'PullRequestEvent'\n    AND ge.action = 'opened'\n    AND ge.repo_name != 'tensorflow/tensorflow'\n    AND ge.actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE event_type = 'PullRequestEvent'\n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY ge.repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.18095166080355407,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT pr.repo_name, COUNT(DISTINCT pr.actor_login) AS unique_contributors\nFROM github_events AS pr\nJOIN github_events AS tf ON pr.actor_login = tf.actor_login\nWHERE tf.repo_name = 'tensorflow/tensorflow' AND tf.event_type = 'PullRequestEvent' AND tf.action = 'opened'\nAND pr.event_type = 'PullRequestEvent' AND pr.action = 'opened' AND pr.repo_name != 'tensorflow/tensorflow'\nGROUP BY pr.repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.6033737492838893,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    t2.repo_name,\n    count(DISTINCT t2.actor_login) AS unique_contributors\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.actor_login = t2.actor_login\nWHERE t1.repo_name LIKE 'tensorflow/%' AND t1.event_type = 'PullRequestEvent' AND t2.repo_name NOT LIKE 'tensorflow/%' AND t2.event_type = 'PullRequestEvent' AND t2.action = 'opened'\nGROUP BY t2.repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_contributors\nFROM\n    github_events\nWHERE\n    event_type = 'PullRequestEvent' AND\n    action = 'opened' AND\n    repo_name != 'tensorflow/tensorflow'\nGROUP BY\n    repo_name\nORDER BY\n    unique_contributors DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "### Final SQL Query\n\n\nSELECT g2.repo_name, COUNT(DISTINCT g2.actor_login) AS unique_contributors FROM github_events g1 JOIN github_events g2 ON g1.actor_login = g2.actor_login WHERE g1.event_type = 'PullRequestEvent' AND g1.repo_name LIKE 'tensorflow/%' AND g1.action = 'opened' AND g2.event_type = 'PullRequestEvent' AND g2.repo_name NOT LIKE 'tensorflow/%' AND g2.action = 'opened' GROUP BY g2.repo_name ORDER BY unique_contributors DESC LIMIT 10\n\n\nThis query should correctly identify the top 10 non-TensorFlow repositories that have received pull requests from TensorFlow contributors, ranked by the number of unique contributors."
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  g1.repo_name repo,\n  uniq(g1.actor_login) unique_contributors\nFROM github_events AS g1\nANY INNER JOIN github_events AS g2\n  ON g1.actor_login = g2.actor_login\nWHERE g1.event_type = 'PullRequestEvent'\n  AND g1.action = 'opened'\n  AND g1.repo_name NOT LIKE 'tensorflow/%'\n  AND g2.event_type = 'PullRequestEvent'\n  AND g2.action = 'opened'\n  AND g2.repo_name LIKE 'tensorflow/%'\nGROUP BY g1.repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "fchollet/keras",
          "authors": 31
        },
        {
          "repo_name": "pytorch/pytorch",
          "authors": 25
        },
        {
          "repo_name": "scikit-learn/scikit-learn",
          "authors": 25
        },
        {
          "repo_name": "tflearn/tflearn",
          "authors": 18
        },
        {
          "repo_name": "google/protobuf",
          "authors": 10
        },
        {
          "repo_name": "openai/gym",
          "authors": 10
        },
        {
          "repo_name": "python/cpython",
          "authors": 9
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "authors": 9
        },
        {
          "repo_name": "kubernetes/kubernetes.github.io",
          "authors": 8
        },
        {
          "repo_name": "numpy/numpy",
          "authors": 7
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.155141698,
        "rows_read": 37129518,
        "bytes_read": 184711487
      },
      "executionTime": 0.174,
      "requestId": "01JTN5KW5PV21DHPG4TEZGD154"
    }
  },
  "pipe_11.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    actor_login,\n    count(*) as issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n        AND action = 'opened'\n        AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name, actor_login\nORDER BY issues_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    actor_login,\n    COUNT(*) as issue_count\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'IssuesEvent' \n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name, actor_login\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9140535671637724,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count,\n    actor_login AS author\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events\n        WHERE \n            event_type = 'IssuesEvent'\n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY repo_name, actor_login\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9140535671637724,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count,\n    actor_login AS author\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'IssuesEvent' \n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY repo_name, actor_login\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS authors_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND actor_login IN (SELECT actor_login FROM github_events WHERE repo_name = 'tensorflow/tensorflow' AND event_type = 'IssuesEvent' AND action = 'opened')\nGROUP BY repo_name\nORDER BY authors_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n    repo_name,\n    actor_login,\n    count() AS issue_count\nFROM github_events\nWHERE\n    event_type = 'IssuesEvent' AND action = 'opened'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent' AND action = 'opened' AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY\n    repo_name,\n    actor_login\nORDER BY\n    issue_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    actor_login,\n    count() AS num_issues_by_author\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND actor_login IN (\n      SELECT DISTINCT actor_login\n      FROM github_events\n      WHERE repo_name = 'tensorflow/tensorflow'\n        AND event_type = 'IssuesEvent'\n        AND action = 'opened'\n  )\n  AND repo_name IN (\n      SELECT repo_name\n      FROM github_events\n      WHERE event_type = 'IssuesEvent'\n        AND action = 'opened'\n        AND repo_name != 'tensorflow/tensorflow'\n        AND actor_login IN (\n            SELECT DISTINCT actor_login\n            FROM github_events\n            WHERE repo_name = 'tensorflow/tensorflow'\n              AND event_type = 'IssuesEvent'\n              AND action = 'opened'\n        )\n      GROUP BY repo_name\n      ORDER BY count() DESC\n      LIMIT 10\n  )\nGROUP BY repo_name, actor_login\nORDER BY actor_login ASC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9075117708184967,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n  repo_name, \n  count(DISTINCT number) as issues_count, \n  count(DISTINCT actor_login) as authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      DISTINCT actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 'IssuesEvent' \n      AND action = 'opened' \n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY \n  repo_name\nORDER BY \n  authors_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(DISTINCT number) AS issue_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND actor_login IN (\n    SELECT \n      actor_login\n    FROM \n      github_events\n    WHERE \n      repo_name = 'tensorflow/tensorflow'\n      AND event_type = 'IssuesEvent'\n      AND action = 'opened'\n  )\nGROUP BY \n  repo_name\nORDER BY \n  issue_count DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  repo_name, \n  actor_login, \n  count() as num_issues\nFROM \n  github_events\nWHERE \n  event_type = 7 \n  AND action = 'opened' \n  AND actor_login IN (\n    SELECT \n      actor_login \n    FROM \n      github_events \n    WHERE \n      event_type = 7 \n      AND action = 'opened' \n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY \n  repo_name, \n  actor_login\nORDER BY \n  num_issues DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND actor_login IN (\n    SELECT\n      actor_login\n    FROM\n      github_events\n    WHERE\n      repo_name = 'tensorflow/tensorflow'\n      AND event_type = 'IssuesEvent'\n  )\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 2,
        "sql": "%\nSELECT\n  repo_name,\n  author_association,\n  count() AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND author_association IN ('CONTRIBUTOR', 'OWNER', 'COLLABORATOR', 'MEMBER')\n  AND repo_name IN (\n    SELECT\n      repo_name\n    FROM\n      github_events\n    WHERE\n      event_type = 'IssuesEvent'\n      AND action = 'opened'\n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY\n  repo_name,\n  author_association\nORDER BY\n  issue_count DESC,\n  author_association\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\n%\nSELECT\n  repo_name,\n  COUNT(DISTINCT number) AS issue_count,\n  ARRAY_JOIN(ARRAY(DISTINCT creator_user_login), ', ') AS authors\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND creator_user_login IN (\n    SELECT\n      DISTINCT creator_user_login\n    FROM\n      github_events\n    WHERE\n      event_type = 'IssuesEvent'\n      AND action = 'opened'\n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, actor_login, count() AS issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n      AND action = 'opened'\n      AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY repo_name, actor_login\nORDER BY issues_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8241224886899032,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(state = 'open') AS open_issues_count,\n  actor_login\nFROM github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name != 'tensorflow/tensorflow'\n  AND actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent' AND action = 'opened' AND repo_name = 'tensorflow/tensorflow'\n  )\nGROUP BY repo_name, actor_login\nORDER BY open_issues_count DESC, actor_login\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9140535671637724,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS issue_count, actor_login\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened' AND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE repo_name = 'tensorflow/tensorflow' AND event_type = 'IssuesEvent' AND action = 'opened'\n)\nGROUP BY repo_name, actor_login\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  ge.repo_name,\n  count(*) AS issues_count,\n  countDistinct(ge.actor_login) AS author_count\nFROM github_events AS ge\nINNER JOIN github_events AS tf\n  ON ge.actor_login = tf.actor_login\nWHERE \n  ge.event_type = 'IssuesEvent'\n  AND ge.action = 'opened'\n  AND tf.repo_name = 'tensorflow/tensorflow'\n  AND tf.event_type = 'IssuesEvent'\n  AND tf.action = 'opened'\nGROUP BY ge.repo_name\nORDER BY issues_count DESC, author_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  ge1.actor_login actor_login,\n  ge1.repo_name repo_name,\n  count() issues_count,\n  row_number() OVER (PARTITION BY ge1.actor_login ORDER BY issues_count DESC) rank_by_author\nFROM github_events AS ge1\nINNER JOIN github_events AS ge2\n  ON ge1.actor_login = ge2.actor_login\n    AND ge2.event_type = 'IssuesEvent'\n    AND ge2.action = 'opened'\n    AND ge2.repo_name = 'tensorflow/tensorflow'\nWHERE\n  ge1.event_type = 'IssuesEvent'\n  AND ge1.action = 'opened'\nGROUP BY\n  ge1.actor_login,\n  ge1.repo_name\nQUALIFY\n  rank_by_author <= 10\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  e.repo_name repo_name,\n  COUNT(*) issues_count\nFROM github_events AS e\nANY INNER JOIN github_events AS tf\n  ON e.actor_login = tf.actor_login\n  AND tf.event_type = 'IssuesEvent'\n  AND tf.action = 'opened'\n  AND tf.repo_name = 'tensorflow/tensorflow'\nWHERE\n  e.event_type = 'IssuesEvent'\n  AND e.action = 'opened'\nGROUP BY\n  e.repo_name\nORDER BY\n  issues_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8235294117647058,
          "numeric": 1,
          "fScore": 0.30000000000000004
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    COUNT(*) AS total_issues\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE \n            event_type = 'IssuesEvent'\n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY unique_authors DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    actor_login,\n    COUNT(*) as issue_count\nFROM github_events \nWHERE event_type = 'IssuesEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'IssuesEvent' \n            AND action = 'opened' \n            AND repo_name = 'tensorflow/tensorflow'\n    )\n    AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name, actor_login\nORDER BY issue_count DESC, actor_login\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.921366691261145,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND actor_login IN (\n      SELECT DISTINCT actor_login\n      FROM github_events\n      WHERE event_type = 'IssuesEvent'\n        AND action = 'opened'\n        AND repo_name = 'tensorflow/tensorflow'\n  )\n  AND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    ge.repo_name,\n    ge.actor_login,\n    COUNT(*) as issue_count,\n    RANK() OVER (PARTITION BY ge.repo_name ORDER BY issue_count DESC) as author_rank\nFROM github_events ge\nWHERE ge.event_type = 'IssuesEvent'\n    AND ge.action = 'opened'\n    AND ge.actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE event_type = 'IssuesEvent'\n            AND action = 'opened'\n            AND repo_name = 'tensorflow/tensorflow'\n    )\nGROUP BY ge.repo_name, ge.actor_login\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8983882063777464,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT main.repo_name, COUNT(DISTINCT main.number) AS issue_count\nFROM github_events AS main\nJOIN github_events AS sub_users ON main.actor_login = sub_users.actor_login\nWHERE main.event_type = 'IssuesEvent' AND main.action = 'opened'\nAND sub_users.event_type = 'IssuesEvent' AND sub_users.action = 'opened' AND sub_users.repo_name = 'tensorflow/tensorflow'\nAND main.repo_name != 'tensorflow/tensorflow'\nGROUP BY main.repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    t2.repo_name,\n    count() AS issues_count,\n    groupArray(t2.actor_login) AS authors\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.actor_login = t2.actor_login\nWHERE t1.repo_name = 'tensorflow/tensorflow' AND t1.event_type = 'IssuesEvent' AND t1.action = 'opened' AND t2.event_type = 'IssuesEvent' AND t2.action = 'opened' AND t2.repo_name != 'tensorflow/tensorflow'\nGROUP BY\n    t2.repo_name\nORDER BY\n    issues_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.921366691261145,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nAND repo_name != 'tensorflow/tensorflow'\nAND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent' AND action = 'opened' AND repo_name = 'tensorflow/tensorflow'\n)\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    actor_login as author,\n    COUNT(*) as issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nAND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\n    AND repo_name = 'tensorflow/tensorflow'\n)\nAND repo_name != 'tensorflow/tensorflow'\nGROUP BY repo_name, actor_login\nORDER BY issue_count DESC, author\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  ge2.repo_name repo_name,\n  uniq(ge2.actor_login) distinct_authors\nFROM github_events ge1\nANY INNER JOIN github_events ge2 ON ge1.actor_login = ge2.actor_login\nWHERE ge1.event_type = 'IssuesEvent'\n  AND ge1.action = 'opened'\n  AND ge1.repo_name = 'tensorflow/tensorflow'\n  AND ge2.event_type = 'IssuesEvent'\n  AND ge2.action = 'opened'\n  AND ge2.repo_name != 'tensorflow/tensorflow'\nGROUP BY ge2.repo_name\nORDER BY distinct_authors DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "pytorch/pytorch",
          "prs": 1071,
          "authors": 140
        },
        {
          "repo_name": "opencv/opencv",
          "prs": 214,
          "authors": 64
        },
        {
          "repo_name": "numpy/numpy",
          "prs": 114,
          "authors": 44
        },
        {
          "repo_name": "scikit-learn/scikit-learn",
          "prs": 153,
          "authors": 43
        },
        {
          "repo_name": "ray-project/ray",
          "prs": 244,
          "authors": 42
        },
        {
          "repo_name": "ultralytics/yolov5",
          "prs": 75,
          "authors": 32
        },
        {
          "repo_name": "pandas-dev/pandas",
          "prs": 178,
          "authors": 31
        },
        {
          "repo_name": "fchollet/keras",
          "prs": 111,
          "authors": 28
        },
        {
          "repo_name": "onnx/onnx",
          "prs": 76,
          "authors": 26
        },
        {
          "repo_name": "scipy/scipy",
          "prs": 81,
          "authors": 23
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "prs",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.108104252,
        "rows_read": 15857078,
        "bytes_read": 85431490
      },
      "executionTime": 0.128,
      "requestId": "01JTN5KXAFGGKTZAGS0YB1C8M7"
    }
  },
  "pipe_12.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniq(actor_login) as stars_count,\n    toDate(created_at) as date\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name, toDate(created_at)\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND toDate(created_at) = toDate(now())\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT DISTINCT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY COUNT(*) DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    repo_name,\n    count(actor_login) AS stars \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    AND created_at >= now() - interval 1 day\n    GROUP BY repo_name \n    ORDER BY stars DESC \n    LIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY stars DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as star_count \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY star_count DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND created_at >= now() - INTERVAL 1 DAY\nGROUP BY \n  repo_name\nORDER BY \n  stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as stars \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY stars DESC \nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  uniqMerge(uniq_state) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND created_at >= today() - interval 1 day\n  AND created_at < today()\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\n%\nSELECT\n  repo_name,\n  COUNT() as stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND created_at >= {{{{DateTime(start_date, \"2022-01-01\")}}}}\n  AND created_at < {{{{DateTime(end_date, \"2022-01-02\")}}}}\nGROUP BY\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT\n  10\n"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  max(stars) stars\nFROM\n(\n  SELECT\n    repo_name,\n    toDate(created_at) as star_day,\n    count() as stars\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name, star_day\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "% \nSELECT \n    repo_name, \n    count() AS star_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND created_at >= now() - interval 1 day\nGROUP BY \n    repo_name\nORDER BY \n    star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT repo_name, COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND created_at >= now() - interval 1 day\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  max(star_count) AS max_stars\nFROM \n(\n  SELECT \n    repo_name,\n    toDate(created_at) AS day,\n    count(*) AS star_count\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name, day\n  LIMIT 100000\n) AS ds\nGROUP BY repo_name\nORDER BY max_stars DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= {{DateTime(start_date, \"2023-01-01 00:00:00\")}}\n  AND created_at < {{DateTime(end_date, \"2023-01-02 00:00:00\")}}\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n  repo_name, \n  count() AS stars_last_24h \nFROM github_events \nWHERE event_type = 'WatchEvent' \n  AND created_at >= utc_timestamp() - INTERVAL 1 day \nGROUP BY repo_name \nORDER BY stars_last_24h DESC \nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= today() - 1\n    AND created_at < today()\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events \nWHERE event_type = 'WatchEvent'\n    AND toDate(created_at) = (\n        SELECT toDate(created_at) as day\n        FROM github_events \n        WHERE event_type = 'WatchEvent'\n        GROUP BY day\n        ORDER BY count() DESC\n        LIMIT 1\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name, DATE(created_at)\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, max(c) AS max_daily_stars FROM (SELECT repo_name, count() AS c FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name, toDate(created_at)) GROUP BY repo_name ORDER BY max_daily_stars DESC LIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\n\nSELECT\n  repo_name,\n  event_type,\n  actor_login,\n  created_at,\n  updated_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state,\n  count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'created'\nGROUP BY\n  repo_name,\n  event_type,\n  actor_login,\n  created_at,\n  updated_at,\n  action,\n  comment_id,\n  body,\n  path,\n  position,\n  line,\n  ref,\n  ref_type,\n  creator_user_login,\n  number,\n  title,\n  labels,\n  state,\n  locked,\n  assignee,\n  assignees,\n  comments,\n  author_association,\n  closed_at,\n  merged_at,\n  merge_commit_sha,\n  requested_reviewers,\n  requested_teams,\n  head_ref,\n  head_sha,\n  base_ref,\n  base_sha,\n  merged,\n  mergeable,\n  rebaseable,\n  mergeable_state,\n  merged_by,\n  review_comments,\n  maintainer_can_modify,\n  commits,\n  additions,\n  deletions,\n  changed_files,\n  diff_hunk,\n  original_position,\n  commit_id,\n  original_commit_id,\n  push_size,\n  push_distinct_size,\n  member_login,\n  release_tag_name,\n  release_name,\n  review_state\nORDER BY star_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  MAX(daily_count) AS max_daily_stars\nFROM (\n  SELECT\n    repo_name,\n    DATE_TRUNC('day', created_at) AS day,\n    COUNT(*) AS daily_count\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name, day\n)\nGROUP BY repo_name\nORDER BY max_daily_stars DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT repo_name, count() stars FROM github_events WHERE event_type = 'WatchEvent' AND created_at >= UTCTimestamp() - INTERVAL 1 DAY GROUP BY repo_name ORDER BY stars DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "yarnpkg/yarn",
          "day": "2016-10-12",
          "stars": 5823
        },
        {
          "repo_name": "sdmg15/Best-websites-a-programmer-should-visit",
          "day": "2017-06-07",
          "stars": 4056
        },
        {
          "repo_name": "tipsy/github-profile-summary",
          "day": "2017-12-21",
          "stars": 2458
        },
        {
          "repo_name": "zeit/next.js",
          "day": "2016-10-26",
          "stars": 1982
        },
        {
          "repo_name": "warner/magic-wormhole",
          "day": "2017-06-28",
          "stars": 1935
        },
        {
          "repo_name": "shengxinjing/programmer-job-blacklist",
          "day": "2017-02-23",
          "stars": 1842
        },
        {
          "repo_name": "toddmotto/public-apis",
          "day": "2017-07-26",
          "stars": 1825
        },
        {
          "repo_name": "wearehive/project-guidelines",
          "day": "2017-07-05",
          "stars": 1805
        },
        {
          "repo_name": "thedaviddias/Front-End-Checklist",
          "day": "2017-10-19",
          "stars": 1786
        },
        {
          "repo_name": "vahidk/EffectiveTensorflow",
          "day": "2017-08-14",
          "stars": 1661
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "day",
          "type": "Date"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.185731401,
        "rows_read": 7319235,
        "bytes_read": 51196017
      },
      "executionTime": 0.21,
      "requestId": "01JTN5KYDSH90R3J44Z1MWAXJ6"
    }
  },
  "pipe_13.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": false,
        "distance": {
          "exact": 0,
          "numeric": 1,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) as stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) as stars_2017,\n    round((stars_2017 - stars_2016) / stars_2016 * 100, 2) as growth_percentage\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth_percentage DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": false,
        "distance": {
          "exact": 0,
          "numeric": 1,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(CASE WHEN toYear(created_at) = 2016 THEN 1 END) AS stars_2016,\n    COUNT(CASE WHEN toYear(created_at) = 2017 THEN 1 END) AS stars_2017,\n    (stars_2017 - stars_2016) / stars_2016 * 100 AS growth_percentage\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth_percentage DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    (stars_2017 - stars_2016) AS yoy_growth,\n    countIf(event_type = 'WatchEvent') AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2016 >= 1 AND total_stars < 10000\nORDER BY yoy_growth DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "I see the confusion. The previous response was a Python solution for a different problem, not the SQL query you originally asked for. Let me provide the correct SQL query for your original question about finding repositories with the highest growth year-over-year between 2016 and 2017 starting from 1 star.\n\nHere's the corrected SQL query:\n\n\nSELECT \n    repo_name,\n    countIf(toYear(created_at) = 2016) AS stars_2016,\n    countIf(toYear(created_at) = 2017) AS stars_2017,\n    (stars_2017 - stars_2016) AS yoy_growth\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND toYear(created_at) IN (2016, 2017)\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        WHERE \n            event_type = 'WatchEvent' \n            AND toYear(created_at) = 2016\n        GROUP BY repo_name\n        HAVING COUNT() >= 1\n    )\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY yoy_growth DESC\nLIMIT 10\n\n\nKey fixes:\n1. Removed the incorrect condition `star_2016 >= 1` from the WHERE clause (it was trying to reference an alias that wasn't available yet)\n2. Added a subquery to properly filter repositories that had at least 1 star in 2016\n3. Simplified the countIf expressions by removing the redundant event_type check (already in WHERE clause)\n4. Kept the HAVING clause to ensure we only include repositories with at least 1 star in 2016\n\nThis query will correctly identify repositories with the highest growth in stars between 2016 and 2017, starting from at least 1 star in 2016."
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    YEAR(created_at) AS year,\n    count(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND YEAR(created_at) IN (2016, 2017)\nGROUP BY\n    repo_name,\n    year\nHAVING count(*) >= 1\nORDER BY\n    stars DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    (stars_2017 - stars_2016) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent' AND (toYear(created_at) = 2016 OR toYear(created_at) = 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    sum(if(toYear(created_at) = 2017, 1, 0)) AS stars_gained_2017,\n    sum(if(toYear(created_at) <= 2016, 1, 0)) AS total_stars_end_2016,\n    divide(stars_gained_2017, total_stars_end_2016) AS yoy_growth_rate\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND toYear(created_at) <= 2017\nGROUP BY repo_name\nHAVING total_stars_end_2016 >= 1\nORDER BY yoy_growth_rate DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT \n  repo_name, \n  count() as stars \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND created_at >= '2016-01-01 00:00:00' \n  AND created_at < '2018-01-01 00:00:00'\n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    AND created_at < '2016-01-01 00:00:00' \n    AND repo_name IN (\n      SELECT repo_name \n      FROM github_events \n      WHERE event_type = 'WatchEvent' \n      AND created_at < '2017-01-01 00:00:00' \n      GROUP BY repo_name \n      HAVING count() = 1\n    )\n    GROUP BY repo_name \n    HAVING count() > 1\n  )\nGROUP BY \n  repo_name \nORDER BY \n  stars DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 1,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(DISTINCT CASE WHEN created_at BETWEEN '2016-01-01' AND '2016-12-31' THEN actor_login END) AS stars_2016,\n  COUNT(DISTINCT CASE WHEN created_at BETWEEN '2017-01-01' AND '2017-12-31' THEN actor_login END) AS stars_2017,\n  (COUNT(DISTINCT CASE WHEN created_at BETWEEN '2017-01-01' AND '2017-12-31' THEN actor_login END) * 1.0 / \n   COUNT(DISTINCT CASE WHEN created_at BETWEEN '2016-01-01' AND '2016-12-31' THEN actor_login END) - 1) * 100 AS growth_yoy\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND created_at BETWEEN '2016-01-01' AND '2017-12-31'\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'WatchEvent'\n      AND created_at BETWEEN '2016-01-01' AND '2017-12-31'\n    GROUP BY \n      repo_name\n    HAVING \n      COUNT(DISTINCT CASE WHEN created_at BETWEEN '2016-01-01' AND '2016-12-31' THEN actor_login END) > 0\n      AND COUNT(DISTINCT CASE WHEN created_at BETWEEN '2017-01-01' AND '2017-12-31' THEN actor_login END) > 0\n  )\nGROUP BY \n  repo_name\nORDER BY \n  growth_yoy DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    repo_name, \n    COUNT(DISTINCT IF(toYear(created_at) = 2017, actor_login, NULL)) as num_stars_2017,\n    COUNT(DISTINCT IF(toYear(created_at) = 2016, actor_login, NULL)) as num_stars_2016\nFROM \n    github_events\nWHERE \n    event_type = 15 \n    AND created_at BETWEEN '2016-01-01' AND '2018-01-01' \n    AND action = 'created'\nGROUP BY \n    repo_name\nHAVING \n    num_stars_2016 > 0 AND num_stars_2017 > 0\nORDER BY \n    (num_stars_2017 - num_stars_2016) / num_stars_2016 DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS stars_2016,\n  COUNT(*) AS stars_2017\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_login IS NOT NULL\n  AND repo_name IS NOT NULL\n  AND created_at >= '2016-01-01'\n  AND created_at < '2017-01-01'\nGROUP BY\n  repo_name\nORDER BY\n  stars_2017 DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  count() AS stars_2016,\n  count() - lag(count(), 1) OVER (ORDER BY repo_name) AS stars_2017,\n  (count() - lag(count(), 1) OVER (ORDER BY repo_name)) / count() AS growth_yoy\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= {{{{Date(start_date, '2016-01-01')}}}\n  AND created_at < {{{{Date(end_date, '2017-01-01')}}}\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth_yoy DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\n%\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS growth_2016,\n    COUNT(DISTINCT actor_login) OVER (PARTITION BY repo_name ORDER BY created_at RANGE BETWEEN INTERVAL 1 YEAR PRECEDING AND CURRENT ROW) AS growth_2017\nFROM\n    github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND created_at >= '2016-01-01' AND created_at < '2018-01-01'\nGROUP BY\n    repo_name\nORDER BY\n    growth_2017 DESC\nLIMIT 10\n"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n  (countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) - countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016)) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND (toYear(created_at) = 2016 OR toYear(created_at) = 2017)\nGROUP BY repo_name\nHAVING stars_2016 = 1\nORDER BY growth DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n  (countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) - countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016)) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent' AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(*) AS stars_count \nFROM \n    github_events \nWHERE \n    event_type = 'WatchEvent' \n    AND created_at >= '2016-01-01' \n    AND created_at < '2018-01-01' \nGROUP BY \n    repo_name \nHAVING \n    stars_count > 0 \nORDER BY \n    stars_count DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(toYear(created_at) = 2016) AS stars_2016,\n  countIf(toYear(created_at) = 2017) AS stars_2017,\n  (countIf(toYear(created_at) = 2017) / countIf(toYear(created_at) = 2016)) AS growth_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth_ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(toYear(created_at)=2017) - sum(toYear(created_at)=2016) growth\nFROM github_events\nWHERE event_type='WatchEvent'\nGROUP BY repo_name\nHAVING sum(toYear(created_at)=2016) >= 1\nORDER BY growth DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(created_at >= '2016-01-01' AND created_at < '2017-01-01') AS stars_2016,\n  countIf(created_at >= '2017-01-01' AND created_at < '2018-01-01') AS stars_2017,\n  stars_2017 / stars_2016 AS growth_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= '2016-01-01'\n  AND created_at < '2018-01-01'\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth_ratio DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nWITH stars_2016 AS (\n    SELECT \n        repo_name,\n        COUNT(*) AS stars_2016\n    FROM github_events\n    WHERE event_type = 'WatchEvent' \n        AND toYear(created_at) = 2016\n    GROUP BY repo_name\n),\nstars_2017 AS (\n    SELECT \n        repo_name,\n        COUNT(*) AS stars_2017\n    FROM github_events\n    WHERE event_type = 'WatchEvent' \n        AND toYear(created_at) = 2017\n    GROUP BY repo_name\n)\nSELECT \n    s2017.repo_name,\n    s2016.stars_2016,\n    s2017.stars_2017,\n    s2017.stars_2017 - s2016.stars_2016 AS absolute_growth,\n    round((s2017.stars_2017 - s2016.stars_2016) / s2016.stars_2016 * 100, 2) AS growth_percentage\nFROM stars_2017 s2017\nINNER JOIN stars_2016 s2016 ON s2017.repo_name = s2016.repo_name\nWHERE s2016.stars_2016 >= 1\nORDER BY growth_percentage DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) as stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) as stars_2017,\n    stars_2017 - stars_2016 as growth_absolute,\n    CASE \n        WHEN stars_2016 > 0 THEN (stars_2017 - stars_2016) / stars_2016 * 100\n        ELSE 0\n    END as growth_percentage\nFROM github_events\nWHERE event_type = 'WatchEvent' \n    AND toYear(created_at) IN (2016, 2017)\n    AND repo_name != ''\nGROUP BY repo_name\nHAVING stars_2016 >= 1 AND stars_2017 > stars_2016\nORDER BY growth_absolute DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNTIf(event_type = 'WatchEvent' AND created_at >= '2017-01-01' AND created_at < '2018-01-01') AS stars_2017,\n    COUNTIf(event_type = 'WatchEvent' AND created_at >= '2016-01-01' AND created_at < '2017-01-01') AS stars_2016,\n    (stars_2017 - stars_2016) AS growth,\n    ((stars_2017 - stars_2016) / stars_2016) * 100 AS growth_percentage\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth_percentage DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    t1.repo_name, \n    t1.star_count_2017,\n    t2.star_count_2016,\n    (t1.star_count_2017 - t2.star_count_2016) as growth\nFROM \n    (SELECT repo_name, COUNT(*) as star_count_2017\n     FROM github_events\n     WHERE event_type = 'WatchEvent'\n     AND created_at >= '2017-01-01 00:00:00'\n     AND created_at < '2018-01-01 00:00:00'\n     GROUP BY repo_name) t1\nINNER JOIN \n    (SELECT repo_name, COUNT(*) as star_count_2016\n     FROM github_events\n     WHERE event_type = 'WatchEvent'\n     AND created_at >= '2016-01-01 00:00:00'\n     AND created_at < '2017-01-01 00:00:00'\n     GROUP BY repo_name) t2\nON t1.repo_name = t2.repo_name\nWHERE t2.star_count_2016 >= 1 \nAND (t1.star_count_2017 - t2.star_count_2016) > 0\nORDER BY growth DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  SUM(IF(YEAR(created_at) = 2016, 1, 0)) AS stars_2016,\n  SUM(IF(YEAR(created_at) = 2017, 1, 0)) AS stars_2017,\n  (SUM(IF(YEAR(created_at) = 2017, 1, 0)) - SUM(IF(YEAR(created_at) = 2016, 1, 0))) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND YEAR(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.6337751278342458,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    (countIf(YEAR(created_at) = 2017) - countIf(YEAR(created_at) = 2016)) / CAST(countIf(YEAR(created_at) = 2016), 'Float64') AS yoy_growth\nFROM github_events\nWHERE\n    event_type = 'WatchEvent' AND YEAR(created_at) IN (2016, 2017)\nGROUP BY\n    repo_name\nHAVING\n    countIf(YEAR(created_at) = 2016) >= 1\nORDER BY\n    yoy_growth DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  SUM(IF(toYear(created_at) = 2016, 1, 0)) AS stars_2016,\n  SUM(IF(toYear(created_at) = 2017, 1, 0)) AS stars_2017,\n  SUM(IF(toYear(created_at) = 2017, 1, 0)) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2016 = 1\nORDER BY growth DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Final SQL query (just the query itself without any additional text):\n\n\nSELECT\n    repo_name,\n    COUNT(DISTINCT IF(YEAR(created_at) = 2016, actor_login, NULL)) AS stars_2016,\n    COUNT(DISTINCT IF(YEAR(created_at) = 2017, actor_login, NULL)) AS stars_2017,\n    (COUNT(DISTINCT IF(YEAR(created_at) = 2017, actor_login, NULL)) -\n     COUNT(DISTINCT IF(YEAR(created_at) = 2016, actor_login, NULL))) AS growth\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND (YEAR(created_at) = 2016 OR YEAR(created_at) = 2017)\nGROUP BY repo_name\nHAVING stars_2016 >= 1\nORDER BY growth DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sumIf(1, toYear(created_at) = 2016) stars_2016,\n  sumIf(1, toYear(created_at) = 2017) stars_2017,\n  sumIf(1, toYear(created_at) = 2017) - sumIf(1, toYear(created_at) = 2016) growth\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING sumIf(1, toYear(created_at) = 2016) = 1\nORDER BY growth DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "xuset/planktos",
          "stars2017": 392,
          "stars2016": 2,
          "yoy": 19500
        },
        {
          "repo_name": "zyphs21/HSStockChart",
          "stars2017": 319,
          "stars2016": 2,
          "yoy": 15850
        },
        {
          "repo_name": "xinglie/gameboy",
          "stars2017": 153,
          "stars2016": 1,
          "yoy": 15200
        },
        {
          "repo_name": "xulayen/WeChat",
          "stars2017": 147,
          "stars2016": 1,
          "yoy": 14600
        },
        {
          "repo_name": "yacy/yacybot",
          "stars2017": 136,
          "stars2016": 1,
          "yoy": 13500
        },
        {
          "repo_name": "yenchenlin/awesome-adversarial-machine-learning",
          "stars2017": 518,
          "stars2016": 4,
          "yoy": 12850
        },
        {
          "repo_name": "xuexb/learn-nginx",
          "stars2017": 227,
          "stars2016": 2,
          "yoy": 11250
        },
        {
          "repo_name": "xlab/treeprint",
          "stars2017": 112,
          "stars2016": 1,
          "yoy": 11100
        },
        {
          "repo_name": "yaozs/YzsBaseActivity",
          "stars2017": 176,
          "stars2016": 2,
          "yoy": 8700
        },
        {
          "repo_name": "zvovov/whatsapp-web",
          "stars2017": 84,
          "stars2016": 1,
          "yoy": 8300
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars2017",
          "type": "UInt64"
        },
        {
          "name": "stars2016",
          "type": "UInt64"
        },
        {
          "name": "yoy",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.056378255,
        "rows_read": 7319235,
        "bytes_read": 51196017
      },
      "executionTime": 0.092,
      "requestId": "01JTN5KZKNEM5PJP8FNVC5R4GQ"
    }
  },
  "pipe_14.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) as stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) as stars_2017,\n    (stars_2016 - stars_2017) as stars_diff\nFROM github_events\nWHERE toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2017 >= 1\nORDER BY stars_diff DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    stars_2016 - stars_2017 AS star_decrease\nFROM github_events\nWHERE \n    (toYear(created_at) = 2016 OR toYear(created_at) = 2017) AND\n    event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2017 > 0\nORDER BY star_decrease DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    COUNTIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    (stars_2017 - stars_2016) AS star_growth\nFROM github_events\nWHERE \n    (toYear(created_at) = 2016 OR toYear(created_at) = 2017)\n    AND event_type = 'WatchEvent'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND toYear(created_at) = 2017\n        GROUP BY repo_name\n        HAVING COUNT(*) >= 1\n    )\nGROUP BY repo_name\nHAVING stars_2016 > 0 AND stars_2017 > 0\nORDER BY star_growth ASC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    COUNTIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    (stars_2017 - stars_2016) AS stagnation\nFROM github_events\nWHERE \n    (toYear(created_at) = 2016 OR toYear(created_at) = 2017) \n    AND event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2017 >= 1\nORDER BY stagnation ASC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    (stars_2017 - stars_2016) AS star_difference\nFROM\n(\n    SELECT\n        repo_name,\n        SUM(CASE WHEN YEAR(created_at) = 2016 THEN 1 ELSE 0 END) AS stars_2016,\n        SUM(CASE WHEN YEAR(created_at) = 2017 THEN 1 ELSE 0 END) AS stars_2017\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n)\nWHERE stars_2017 > 0\nORDER BY star_difference ASC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n    repo_name,\n    sum(if(toYear(created_at) = 2017, 1, 0)) AS stars_2017,\n    sum(if(toYear(created_at) = 2016, 1, 0)) AS stars_2016,\n    (sum(if(toYear(created_at) = 2016, 1, 0)) - sum(if(toYear(created_at) = 2017, 1, 0))) AS stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2017 > 0\nORDER BY stagnation DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    stars_2017 - stars_2016 AS stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent' AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2017 >= 1\nORDER BY stagnation ASC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    countIf(event_type = 'WatchEvent', 1) AS stars_2017,\n    countIf(event_type = 'WatchEvent', created_at BETWEEN '2016-01-01' AND '2016-12-31') AS stars_2016\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND created_at BETWEEN '2017-01-01' AND '2017-12-31'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND created_at BETWEEN '2017-01-01' AND '2017-12-31'\n        GROUP BY repo_name \n        HAVING count(*) > 0\n    )\nGROUP BY \n    repo_name\nORDER BY \n    (stars_2017 - stars_2016) / stars_2016 ASC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(CASE WHEN toYear(created_at) = 2016 THEN 1 END) AS events_2016,\n  COUNT(CASE WHEN toYear(created_at) = 2017 THEN 1 END) AS events_2017\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\n  AND toYear(created_at) IN (2016, 2017)\n  AND repo_name IN (\n    SELECT \n      repo_name\n    FROM \n      github_events\n    WHERE \n      event_type = 'WatchEvent'\n      AND toYear(created_at) = 2017\n    GROUP BY \n      repo_name\n    HAVING \n      COUNT(*) > 0\n  )\nGROUP BY \n  repo_name\nORDER BY \n  events_2017 / NULLIF(events_2016, 0) ASC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n  repo_name, \n  SUM(CASE WHEN event_type = 'WatchEvent' AND toYear(created_at) = 2016 THEN 1 ELSE 0 END) AS stars_2016,\n  SUM(CASE WHEN event_type = 'WatchEvent' AND toYear(created_at) = 2017 THEN 1 ELSE 0 END) AS stars_2017,\n  (SUM(CASE WHEN event_type = 'WatchEvent' AND toYear(created_at) = 2016 THEN 1 ELSE 0 END) - SUM(CASE WHEN event_type = 'WatchEvent' AND toYear(created_at) = 2017 THEN 1 ELSE 0 END)) / SUM(CASE WHEN event_type = 'WatchEvent' AND toYear(created_at) = 2016 THEN 1 ELSE 0 END) AS stagnation\nFROM \n  github_events\nWHERE \n  toYear(created_at) IN (2016, 2017) \n  AND event_type = 'WatchEvent'\nGROUP BY \n  repo_name\nHAVING \n  SUM(CASE WHEN event_type = 'WatchEvent' AND toYear(created_at) = 2017 THEN 1 ELSE 0 END) > 0\nORDER BY \n  stagnation DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS total_events\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND YEAR(created_at) IN (2017, 2016)\nGROUP BY\n  repo_name\nHAVING\n  COUNT(*) > 0\nORDER BY\n  total_events DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  COUNT(DISTINCT repo_name) AS repo_stars_2017\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND\n  {{%if not defined(start_date)%}}\n  created_at BETWEEN '2017-01-01 00:00:00' AND '2017-12-31 23:59:59'\n  {{%else%}}\n  created_at BETWEEN {{{{DateTime(start_date, '2017-01-01 00:00:00')}}}} AND {{{{DateTime(end_date, '2017-12-31 23:59:59')}}}}\n  {{%end%}}\nGROUP BY\n  repo_name\nHAVING\n  repo_stars_2017 > 0\nINTO node_1\n\nSELECT\n  repo_name,\n  repo_stars_2017,\n  COUNT(DISTINCT repo_name) AS repo_stars_2016\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND\n  {{%if not defined(start_date)%}}\n  created_at BETWEEN '2016-01-01 00:00:00' AND '2016-12-31 23:59:59'\n  {{%else%}}\n  created_at BETWEEN {{{{DateTime(start_date, '2016-01-01 00:00:00')}}}} AND {{{{DateTime(end_date, '2016-12-31 23:59:59')}}}}\n  {{%end%}}\nGROUP BY\n  repo_name\nINTO node_2\n\nSELECT\n  node_1.repo_name,\n  node_1.repo_stars_2017,\n  node_2.repo_stars_2016,\n  node_1.repo_stars_2017 - node_2.repo_stars_2016 AS repo_stars_diff\nFROM\n  node_1\n  LEFT JOIN node_2 ON node_1.repo_name = node_2.repo_name\nORDER BY\n  repo_stars_diff ASC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  (SUM(CASE WHEN event_type = 'WatchEvent' AND YEAR(created_at) = 2017 THEN 1 ELSE 0 END) - SUM(CASE WHEN event_type = 'WatchEvent' AND YEAR(created_at) = 2016 THEN 1 ELSE 0 END)) AS stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING SUM(CASE WHEN event_type = 'WatchEvent' AND YEAR(created_at) = 2017 THEN 1 ELSE 0 END) > 0\nORDER BY stagnation DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) stars_2016,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) stars_2017,\n  (countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) - countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016)) stagnation\nFROM github_events\nWHERE (event_type = 'WatchEvent') AND (toYear(created_at) IN (2016,2017))\nGROUP BY repo_name\nHAVING stars_2017 > 0\nORDER BY stagnation ASC, stars_2017 DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n  countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n  (stars_2017 - stars_2016) AS stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent' AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING stars_2017 > 0\nORDER BY stagnation ASC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.6994258094314829,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS stagnation_count\nFROM github_events\nWHERE created_at >= '2016-01-01' AND created_at < '2018-01-01'\nAND event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING COUNT(*) > 0\nORDER BY stagnation_count ASC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(toYear(created_at) = 2016 AND event_type = 'WatchEvent') AS stars_2016,\n  countIf(toYear(created_at) = 2017 AND event_type = 'WatchEvent') AS stars_2017,\n  countIf(toYear(created_at) = 2017 AND event_type = 'WatchEvent') / countIf(toYear(created_at) = 2016 AND event_type = 'WatchEvent') AS growth_ratio\nFROM github_events\nWHERE toYear(created_at) IN (2016, 2017)\n  AND event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2017 >= 1\n  AND stars_2016 > 0\nORDER BY growth_ratio ASC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(year(created_at) = 2016) stars_2016,\n  countIf(year(created_at) = 2017) stars_2017,\n  countIf(year(created_at) = 2017) - countIf(year(created_at) = 2016) stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND created_at >= '2016-01-01'\n  AND created_at < '2018-01-01'\nGROUP BY repo_name\nHAVING countIf(year(created_at) = 2017) >= 1\nORDER BY stagnation ASC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  sum(YEAR(created_at)=2016) stars_2016,\n  sum(YEAR(created_at)=2017) stars_2017,\n  sum(YEAR(created_at)=2017)-sum(YEAR(created_at)=2016) diff\nFROM github_events\nWHERE event_type='WatchEvent'\n  AND YEAR(created_at) IN (2016,2017)\nGROUP BY repo_name\nHAVING sum(YEAR(created_at)=2017)>0\nORDER BY diff ASC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    stars_2016 - stars_2017 AS star_decline,\n    round((stars_2016 - stars_2017) * 100.0 / stars_2016, 2) AS decline_percentage\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND toYear(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING \n    stars_2017 >= 1 \n    AND stars_2016 > stars_2017\nORDER BY decline_percentage DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) as stars_2016,\n    countIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) as stars_2017,\n    stars_2016 - stars_2017 as stagnation_score\nFROM github_events\nWHERE event_type = 'WatchEvent' \n    AND toYear(created_at) IN (2016, 2017)\n    AND repo_name != ''\nGROUP BY repo_name\nHAVING stars_2017 >= 1\nORDER BY stagnation_score DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNTIf(event_type = 'WatchEvent' AND toYear(created_at) = 2016) AS stars_2016,\n    COUNTIf(event_type = 'WatchEvent' AND toYear(created_at) = 2017) AS stars_2017,\n    (stars_2017 - stars_2016) AS star_diff\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_2017 >= 1\nORDER BY star_diff ASC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    SUM(CASE WHEN toYear(created_at) = 2016 THEN 1 ELSE 0 END) AS stars_2016,\n    SUM(CASE WHEN toYear(created_at) = 2017 THEN 1 ELSE 0 END) AS stars_2017,\n    (stars_2017 - stars_2016) AS stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND toYear(created_at) IN (2016, 2017)\n    AND repo_name IN (\n        SELECT DISTINCT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        AND toYear(created_at) = 2017\n    )\nGROUP BY repo_name\nORDER BY stagnation ASC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  SUM(IF(YEAR(created_at) = 2016, 1, 0)) AS stars_2016,\n  SUM(IF(YEAR(created_at) = 2017, 1, 0)) AS stars_2017,\n  SUM(IF(YEAR(created_at) = 2016, 1, 0)) - SUM(IF(YEAR(created_at) = 2017, 1, 0)) AS stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent' AND YEAR(created_at) IN (2016, 2017)\nGROUP BY repo_name\nHAVING SUM(IF(YEAR(created_at) = 2017, 1, 0)) >= 1\nORDER BY stagnation DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(year(created_at) = 2017) AS stars_2017,\n    countIf(year(created_at) = 2016) AS stars_2016,\n    stars_2017 - stars_2016 AS stagnation\nFROM github_events\nWHERE (event_type = 'WatchEvent') AND (year(created_at) IN (2016, 2017))\nGROUP BY repo_name\nHAVING stars_2017 > 0\nORDER BY stagnation ASC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n    s2017.repo_name,\n    s2016.stars as stars_2016,\n    s2017.stars as stars_2017,\n    (s2017.stars - s2016.stars) as diff\nFROM (\n    SELECT\n        repo_name,\n        count(distinct actor_login) as stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent' and year(created_at) = 2017\n    GROUP BY repo_name\n) as s2017\nJOIN (\n    SELECT\n        repo_name,\n        count(distinct actor_login) as stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent' and year(created_at) = 2016\n    GROUP BY repo_name\n) as s2016 ON s2017.repo_name = s2016.repo_name\nWHERE s2017.stars >= 1\nORDER BY diff ASC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT IF(YEAR(created_at) = 2016 AND event_type = 'WatchEvent', actor_login, NULL)) AS new_stars_2016,\n    COUNT(DISTINCT IF(YEAR(created_at) = 2017 AND event_type = 'WatchEvent', actor_login, NULL)) AS new_stars_2017,\n    COUNT(DISTINCT IF(YEAR(created_at) = 2017 AND event_type = 'WatchEvent', actor_login, NULL)) - COUNT(DISTINCT IF(YEAR(created_at) = 2016 AND event_type = 'WatchEvent', actor_login, NULL)) AS stagnation_diff\nFROM github_events\nGROUP BY repo_name\nHAVING COUNT(DISTINCT IF(YEAR(created_at) = 2017 AND event_type = 'WatchEvent', actor_login, NULL)) >= 1\nORDER BY stagnation_diff ASC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(year(created_at) = 2016) stars_2016,\n  sum(year(created_at) = 2017) stars_2017,\n  sum(year(created_at) = 2017) - sum(year(created_at) = 2016) stagnation\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND (year(created_at) = 2016 OR year(created_at) = 2017)\nGROUP BY repo_name\nHAVING sum(year(created_at) = 2017) > 0\nORDER BY stagnation ASC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "zymtom/DidIStealThis",
          "stars2017": 2,
          "stars2016": 514,
          "yoy": -99.61
        },
        {
          "repo_name": "zverok/wheretz",
          "stars2017": 1,
          "stars2016": 73,
          "yoy": -98.63
        },
        {
          "repo_name": "zzz40500/AndroidSweetBehavior",
          "stars2017": 2,
          "stars2016": 134,
          "yoy": -98.51
        },
        {
          "repo_name": "zyqf/DNS",
          "stars2017": 16,
          "stars2016": 1022,
          "yoy": -98.43
        },
        {
          "repo_name": "xyproto/simplehstore",
          "stars2017": 1,
          "stars2016": 49,
          "yoy": -97.96
        },
        {
          "repo_name": "zuzuleinen/dave",
          "stars2017": 1,
          "stars2016": 48,
          "yoy": -97.92
        },
        {
          "repo_name": "zzarcon/psaux",
          "stars2017": 2,
          "stars2016": 94,
          "yoy": -97.87
        },
        {
          "repo_name": "xjbeta/AppleDNS-GUI",
          "stars2017": 1,
          "stars2016": 47,
          "yoy": -97.87
        },
        {
          "repo_name": "xxycode/NELivePlayer",
          "stars2017": 2,
          "stars2016": 90,
          "yoy": -97.78
        },
        {
          "repo_name": "zzarcon/animotion",
          "stars2017": 1,
          "stars2016": 43,
          "yoy": -97.67
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "stars2017",
          "type": "UInt64"
        },
        {
          "name": "stars2016",
          "type": "UInt64"
        },
        {
          "name": "yoy",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.055668621,
        "rows_read": 7319235,
        "bytes_read": 51196017
      },
      "executionTime": 0.075,
      "requestId": "01JTN5M0NVHHGMQAKXKT8RG7NJ"
    }
  },
  "pipe_15.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as total_stars,\n    count(*) / ((max(created_at) - min(created_at)) / 86400) as stars_per_day,\n    min(created_at) as first_star,\n    max(created_at) as last_star\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING (last_star - first_star) > 86400 * 30\nORDER BY stars_per_day DESC, total_stars DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS total_stars,\n    MIN(created_at) AS first_star_date,\n    MAX(created_at) AS last_star_date,\n    COUNT(*) / (dateDiff('day', MIN(created_at), MAX(created_at)) + 1) AS stars_per_day,\n    stddevSamp(daily_stars) / avgIf(daily_stars, daily_stars > 0) AS coefficient_of_variation\nFROM (\n    SELECT \n        repo_name,\n        toDate(created_at) AS day,\n        COUNT(*) AS daily_stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name, day\n)\nGROUP BY repo_name\nHAVING dateDiff('day', first_star_date, last_star_date) >= 30\nAND isFinite(coefficient_of_variation)\nORDER BY coefficient_of_variation ASC, total_stars DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\n\nSELECT repo_name, COUNT(*) AS star_count FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY star_count DESC LIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(*) AS star_count,\n    COUNT(*) / (DATEDIFF(day, MIN(created_at), MAX(created_at)) + 1) AS stars_per_day\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY stars_per_day DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT() AS stars,\n    stddevPop(toUnixTimestamp(created_at)) AS time_stddev\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY time_stddev ASC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    repo_name,\n    avg(stars_in_month) AS avg_monthly_stars,\n    STDDEV_POP(stars_in_month) AS stddev_monthly_stars,\n    count() AS num_months_active,\n    CASE\n        WHEN avg(stars_in_month) > 0 THEN STDDEV_POP(stars_in_month) / avg(stars_in_month)\n        ELSE NULL\n    END AS coefficient_of_variation\nFROM repo_monthly_star_counts\nGROUP BY repo_name\nHAVING avg(stars_in_month) > 10 AND count() >= 6\nORDER BY coefficient_of_variation ASC NULLS LAST, avg_monthly_stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n  repo_name, \n  COUNT(*) as num_stars \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \n  AND action = 'started' \nGROUP BY \n  repo_name \nORDER BY \n  num_stars DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS total_stars,\n  COUNT(DISTINCT created_at) AS days,\n  COUNT(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN created_at END) / COUNT(DISTINCT created_at) AS star_growth_rate\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent' \n  OR event_type = 'CreateEvent'\nGROUP BY \n  repo_name\nORDER BY \n  star_growth_rate DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    repo_name, \n    countIf(event_type = 15) as total_watches\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    total_watches DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS star_count,\n  AVG(created_at) AS avg_star_time\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  avg_star_time DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  count() AS star_count,\n  avgMerge(avg_star_growth_rate_state) AS avg_star_growth_rate\nFROM (\n  SELECT\n    repo_name,\n    count() AS star_count,\n    avgState(count()) AS avg_star_growth_rate_state\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name\n  ORDER BY star_count DESC\n  LIMIT 10\n) AS node_1\nGROUP BY repo_name\nORDER BY avg_star_growth_rate DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  AVG(IF(event_type = 'WatchEvent', 1, 0)) AS avg_stars_per_day\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  avg_stars_per_day DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() stars,\n  min(created_at) first_star,\n  max(created_at) last_star,\n  (count() / (1 + dateDiff('day', min(created_at), max(created_at)))) steady_growth_rate\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY steady_growth_rate DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "% \nSELECT \n    repo_name, \n    count() AS total_stars, \n    (toUnixTimestamp(max(created_at)) - toUnixTimestamp(min(created_at))) AS duration_seconds, \n    total_stars / NULLIF(duration_seconds, 0) AS star_growth_rate\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_growth_rate DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNTIf(event_type = 'WatchEvent') AS stars_count,\n    COUNTIf(event_type = 'WatchEvent') / (dateDiff('day', min(created_at), max(created_at)) + 1) AS growth_rate\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    repo_name\nHAVING \n    growth_rate IS NOT NULL\nORDER BY \n    growth_rate DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  stddevPop(daily_stars) AS daily_stddev,\n  avg(daily_stars) AS avg_daily\nFROM\n(\n  SELECT\n    repo_name,\n    toDate(created_at) AS day,\n    count(*) AS daily_stars\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name, day\n) AS daily_stats\nGROUP BY repo_name\nORDER BY daily_stddev ASC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  avg(monthly_stars) avg_monthly_stars,\n  stddevPop(monthly_stars) std_monthly_stars,\n  avg(monthly_stars)/stddevPop(monthly_stars) steadiness_metric\nFROM\n(\n  SELECT\n    repo_name,\n    toStartOfMonth(created_at) month,\n    count() monthly_stars\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name, month\n)\nGROUP BY repo_name\nHAVING stddevPop(monthly_stars) > 0\nORDER BY steadiness_metric DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  stddevPop(stars) stddev_daily_stars,\n  avg(stars) avg_daily_stars,\n  avg(stars)/nullIf(stddevPop(stars),0) stability_score\nFROM\n(\n  SELECT\n    repo_name,\n    toDate(created_at) AS day,\n    count(*) AS stars\n  FROM github_events\n  WHERE event_type = 'WatchEvent'\n  GROUP BY repo_name, day\n)\nGROUP BY repo_name\nORDER BY stability_score DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    count(*) as total_stars,\n    min(created_at) as first_star_date,\n    max(created_at) as last_star_date,\n    dateDiff('day', min(created_at), max(created_at)) + 1 as days_active,\n    count(*) / (dateDiff('day', min(created_at), max(created_at)) + 1) as stars_per_day,\n    stddevPop(count(*)) as star_growth_volatility\nFROM github_events \nWHERE event_type = 'WatchEvent'\nAND created_at >= '2020-01-01'\nAND repo_name != ''\nGROUP BY repo_name\nHAVING total_stars >= 100 AND days_active >= 30\nORDER BY star_growth_volatility ASC, stars_per_day DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS total_stars,\n    STDDEV_POP(toUnixTimestamp(created_at)) AS star_time_stddev\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_time_stddev ASC, total_stars DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS total_stars,\n    COUNT(*) / DATEDIFF('day', MIN(created_at), MAX(created_at)) AS daily_growth_rate\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY daily_growth_rate DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY total_stars DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    stddevPop(weekly_stars) / avg(weekly_stars) AS coefficient_of_variation\nFROM\n(\n    SELECT\n        repo_name,\n        count() AS weekly_stars\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY\n        repo_name,\n        toStartOfWeek(created_at)\n)\nGROUP BY repo_name\nHAVING avg(weekly_stars) > 10\nORDER BY coefficient_of_variation ASC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS star_count,\n  min(created_at) AS first_star_time,\n  max(created_at) AS last_star_time,\n  DATEDIFF('day', min(created_at), max(created_at)) AS days_between,\n  IF(DATEDIFF('day', min(created_at), max(created_at)) = 0, 0, COUNT(*) / DATEDIFF('day', min(created_at), max(created_at))) AS growth_rate\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'created'\nGROUP BY repo_name\nORDER BY growth_rate DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count(*) as total_stars,\n    count(DISTINCT toStartOfMonth(created_at)) as active_months,\n    (toYear(max(toStartOfMonth(created_at))) - toYear(min(toStartOfMonth(created_at)))) * 12 +\n    (toMonth(max(toStartOfMonth(created_at))) - toMonth(min(toStartOfMonth(created_at)))) + 1 as duration_months,\n    count(DISTINCT toStartOfMonth(created_at)) /\n    ((toYear(max(toStartOfMonth(created_at))) - toYear(min(toStartOfMonth(created_at)))) * 12 +\n    (toMonth(max(toStartOfMonth(created_at))) - toMonth(min(toStartOfMonth(created_at)))) + 1) as month_coverage_ratio,\n    count(*) / count(DISTINCT toStartOfMonth(created_at)) as avg_stars_per_month\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING count(*) > 1000 AND count(DISTINCT toStartOfMonth(created_at)) >= 6\nORDER BY month_coverage_ratio DESC, avg_stars_per_month DESC, duration_months DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() stars_total,\n    uniqExact(DATE_TRUNC('day', created_at)) distinct_star_days,\n    TIMESTAMP_DIFF('day', min(created_at), max(created_at)) + 1 total_days,\n    uniqExact(DATE_TRUNC('day', created_at)) / toFloat64(TIMESTAMP_DIFF('day', min(created_at), max(created_at)) + 1) steadiness_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars_total > 100\nORDER BY steadiness_ratio DESC, stars_total DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "zurb/foundation-sites",
          "daily_stars": 24,
          "total_stars": 6165,
          "rate": 256.875
        },
        {
          "repo_name": "yannickcr/eslint-plugin-react",
          "daily_stars": 12,
          "total_stars": 2909,
          "rate": 242.41666666666666
        },
        {
          "repo_name": "zxing/zxing",
          "daily_stars": 46,
          "total_stars": 10708,
          "rate": 232.7826086956522
        },
        {
          "repo_name": "xgrommx/awesome-redux",
          "daily_stars": 35,
          "total_stars": 7793,
          "rate": 222.65714285714284
        },
        {
          "repo_name": "zzzeek/sqlalchemy",
          "daily_stars": 7,
          "total_stars": 1508,
          "rate": 215.42857142857142
        },
        {
          "repo_name": "reactjs/redux",
          "daily_stars": 56,
          "total_stars": 11414,
          "rate": 203.82142857142858
        },
        {
          "repo_name": "robbyrussell/oh-my-zsh",
          "daily_stars": 99,
          "total_stars": 19325,
          "rate": 195.2020202020202
        },
        {
          "repo_name": "yasserg/crawler4j",
          "daily_stars": 11,
          "total_stars": 2053,
          "rate": 186.63636363636363
        },
        {
          "repo_name": "reactjs/react-redux",
          "daily_stars": 27,
          "total_stars": 5013,
          "rate": 185.66666666666666
        },
        {
          "repo_name": "twbs/bootstrap",
          "daily_stars": 114,
          "total_stars": 21157,
          "rate": 185.58771929824562
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "daily_stars",
          "type": "UInt64"
        },
        {
          "name": "total_stars",
          "type": "UInt64"
        },
        {
          "name": "rate",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.240157008,
        "rows_read": 7319235,
        "bytes_read": 51196017
      },
      "executionTime": 0.26,
      "requestId": "01JTN5M1QFATAVT5Y6VG1NHMZ3"
    }
  },
  "pipe_16.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 7,
        "llmRowCount": 0,
        "sql": "SELECT\n    toDayOfWeek(created_at) AS day_of_week,\n    count() as stars,\n    round(count() / sum(count()) OVER () * 100, 2) as percentage\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND created_at >= now() - INTERVAL 1 YEAR\nGROUP BY day_of_week\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT \n    dayOfWeek(created_at) AS day_of_week,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT \n    toDayOfWeek(created_at) AS day_of_week,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "reason": "Missing data in results",
        "sql": null
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8571428571428572,
          "numeric": 0.7081035047179752,
          "fScore": 0.25
        },
        "details": "Results don't match",
        "humanRowCount": 7,
        "llmRowCount": 1,
        "sql": "\nSELECT\n    dayOfWeek(created_at) AS day_of_week,\n    count(*) AS total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY total_stars DESC\nLIMIT 1\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT toDayOfWeek(created_at) AS day_of_week, count() AS stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day_of_week ORDER BY stars DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8571428571428572,
          "numeric": 0.7081035047179752,
          "fScore": 0.25
        },
        "details": "Results don't match",
        "humanRowCount": 7,
        "llmRowCount": 1,
        "sql": "SELECT\n    DAYOFWEEK(created_at) AS day_of_week,\n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 1"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8571428571428572,
          "numeric": 0.7081035047179752,
          "fScore": 0.25
        },
        "details": "Results don't match",
        "humanRowCount": 7,
        "llmRowCount": 1,
        "sql": "SELECT \n  DAYOFWEEK(created_at) AS day_of_week, \n  COUNT(*) AS num_stars\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  day_of_week\nORDER BY \n  num_stars DESC\nLIMIT 1"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT \n    dayofweek(created_at) as day_of_week,\n    count(*) as stars\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    day_of_week\nORDER BY \n    stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 7,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  DAYOFWEEK(created_at) as day_of_week,\n  count(*) as num_stars\nFROM \n  github_events\nWHERE \n  event_type = 15\nGROUP BY \n  day_of_week\nORDER BY \n  num_stars DESC\nLIMIT 1\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 7,
        "llmRowCount": 10,
        "sql": "SELECT\n  toStartOfWeek(created_at) AS week,\n  COUNT(*) AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY week\nORDER BY stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n  dayofweek(created_at) AS day_of_week,\n  count() AS star_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  day_of_week\nORDER BY\n  star_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n  dayOfWeek(created_at) as day_of_week,\n  countIf(event_type = 'WatchEvent') as stars_received\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  day_of_week\nORDER BY\n  stars_received DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT dayofweek(created_at) day_of_week, count() stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY day_of_week ORDER BY stars DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT \n    toDayOfWeek(created_at) AS day_of_week, \n    count(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "%\nSELECT \n    toDayOfWeek(created_at) AS day_of_week, \n    count(*) AS stars_count \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY day_of_week \nORDER BY stars_count DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.013821492945413797,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT \n  date_format(created_at, '%W') day,\n  count(*) total_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY total_stars DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.013821492945413797,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT date_format(created_at, '%W') day_of_week, count() star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.053114468723305865,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 7,
        "llmRowCount": 1,
        "sql": "SELECT date_format(created_at, '%W') day, count() star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY star_count DESC\nLIMIT 1"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "\nSELECT \n    toDayOfWeek(created_at) as day_of_week,\n    count() as stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY stars_count DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT \n    dayOfWeek(created_at) as day_of_week,\n    count() as star_count\nFROM github_events \nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n    toDayOfWeek(created_at) AS day_of_week,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n    DAYOFWEEK(created_at) AS day_of_week,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT dayofweek(created_at) AS day_of_week, COUNT(*) AS event_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY event_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.013821492945413797,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n    multiIf(dayOfWeek(created_at) = 1, 'Monday', dayOfWeek(created_at) = 2, 'Tuesday', dayOfWeek(created_at) = 3, 'Wednesday', dayOfWeek(created_at) = 4, 'Thursday', dayOfWeek(created_at) = 5, 'Friday', dayOfWeek(created_at) = 6, 'Saturday', 'Sunday') AS day,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day\nORDER BY stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n    dayofweek(created_at) as day_of_week,\n    count(*) as star_count\nFROM\n    github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY\n    day_of_week\nORDER BY\n    star_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.013821492945413797,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "\nSELECT\n    CASE DAYOFWEEK(created_at)\n        WHEN 1 THEN 'Sunday'\n        WHEN 2 THEN 'Monday'\n        WHEN 3 THEN 'Tuesday'\n        WHEN 4 THEN 'Wednesday'\n        WHEN 5 THEN 'Thursday'\n        WHEN 6 THEN 'Friday'\n        WHEN 7 THEN 'Saturday'\n    END AS day_of_week,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_of_week\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 7,
        "llmRowCount": 7,
        "sql": "SELECT\n  dayofweek(created_at) day_num,\n  date_format(created_at,'%W') day_name,\n  count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY day_num, day_name\nORDER BY stars DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "day": 1,
          "stars": 1142998
        },
        {
          "day": 2,
          "stars": 1202453
        },
        {
          "day": 3,
          "stars": 1205364
        },
        {
          "day": 4,
          "stars": 1192271
        },
        {
          "day": 5,
          "stars": 1113820
        },
        {
          "day": 6,
          "stars": 722911
        },
        {
          "day": 7,
          "stars": 725295
        }
      ],
      "meta": [
        {
          "name": "day",
          "type": "UInt8"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.013890286,
        "rows_read": 7319235,
        "bytes_read": 36596175
      },
      "executionTime": 0.032,
      "requestId": "01JTN5M2YVN49KQS9ZEQW0Z4XH"
    }
  },
  "pipe_17.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.00005304021190625461,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE actor_login != ''\nLIMIT 1"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    count(DISTINCT actor_login)\nFROM github_events\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n COUNT(DISTINCT actor_login) \nFROM \n github_events \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": " %SELECT COUNT(DISTINCT actor_login) FROM github_events"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) total_users FROM github_events LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT countDistinct(actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT countDistinct(actor_login) AS total_users\nFROM github_events\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  uniqExact(actor_login) total_users\nFROM github_events\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) total_users\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events LIMIT 1"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniq(actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) FROM github_events LIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events LIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.000052934128674804696,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT uniqExact(actor_login) AS total_users FROM github_events\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.00005304021190625461,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) total_users FROM github_events WHERE actor_login != '' LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 9427060
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.493136245,
        "rows_read": 200000000,
        "bytes_read": 394865005
      },
      "executionTime": 0.512,
      "requestId": "01JTN5M3Z4GGQK6GVE4XR95W0C"
    }
  },
  "pipe_18.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) \nFROM github_events \nWHERE event_type = 'WatchEvent' \nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_users FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_star_givers\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": " %\n\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_users_starred FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) as total_users_with_stars\nFROM github_events \nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniq(actor_login) total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'WatchEvent' LIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(distinct(actor_login)) as total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'WatchEvent'\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0014793406252330366,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) total_users FROM github_events WHERE event_type = 'WatchEvent' AND action = 'started' LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 1241335
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.110345661,
        "rows_read": 7319235,
        "bytes_read": 21957705
      },
      "executionTime": 0.128,
      "requestId": "01JTN5M5EDXH7CVCFCP03ZSZ18"
    }
  },
  "pipe_19.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) \nFROM github_events \nWHERE event_type = 'PushEvent' \nAND created_at >= now() - INTERVAL 30 DAY\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_users FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n  COUNT(DISTINCT actor_login) \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_users_with_push FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT countDistinct(actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) AS total_push_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniq(actor_login) users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) as total_users_with_push\nFROM github_events \nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    count(DISTINCT actor_login)\nFROM github_events\nWHERE event_type = 'PushEvent'"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "select count(distinct(actor_login)) as total_users_with_push from github_events where event_type = 'PushEvent' limit 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "Final SQL query to return:\n\n\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n\n\nBut to strictly follow the instructions, here's just the SQL query itself without any additional text or formatting:\n\n\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n\n\n\nSELECT COUNT(DISTINCT actor_login) AS total_users_with_push\nFROM github_events\nWHERE event_type = 'PushEvent'\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0018759619527295886,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) users_with_push FROM github_events WHERE event_type = 'PushEvent' LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 1724999
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.154536048,
        "rows_read": 75689153,
        "bytes_read": 223381427
      },
      "executionTime": 0.173,
      "requestId": "01JTN5M6HQ2GWF3AN58E00R9JB"
    }
  },
  "pipe_20.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) as total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nAND action = 'opened'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nAND action = 'opened'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) \nFROM github_events \nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    count(DISTINCT actor_login)\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n  COUNT(DISTINCT actor_login) \nFROM \n  github_events \nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened' \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events WHERE event_type = 10 AND action = 'opened' LIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'created'\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": " SELECT COUNT(DISTINCT actor_login) FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) total_users_with_pr FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT countDistinct(actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'created'\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT countDistinct(actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) total_users_opened_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(DISTINCT actor_login) total_users_with_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) as total_users\nFROM github_events \nWHERE event_type = 'PullRequestEvent' \nAND action = 'opened'\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    uniq(actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(DISTINCT actor_login) AS total_users FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    count(DISTINCT actor_login)\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(DISTINCT actor_login) AS total_users_with_created_pr\nFROM\n    github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 1\n\nSELECT COUNT(DISTINCT actor_login) AS total_users\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nLIMIT 1"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.0017507922334856522,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT uniqExact(actor_login) total_users FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "uniq(actor_login)": 914672
        }
      ],
      "meta": [
        {
          "name": "uniq(actor_login)",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.086800121,
        "rows_read": 18564759,
        "bytes_read": 73368008
      },
      "executionTime": 0.105,
      "requestId": "01JTN5M7PERXYAAKH77D5GKTJ6"
    }
  },
  "pipe_21.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent' \n        AND action = 'opened'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars\nFROM github_events\nWHERE \n    event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent' \n        AND action = 'opened'\n    )\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (\n    SELECT DISTINCT actor_login \n    FROM github_events \n    WHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\n)\nGROUP BY repo_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.062278712339204734,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND actor_login IN (SELECT DISTINCT actor_login FROM github_events WHERE event_type = 'PullRequestEvent')\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.062278712339204734,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS stars\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT actor_login\n        FROM github_events\n        WHERE event_type = 'PullRequestEvent'\n        GROUP BY actor_login\n        HAVING count() >= 1\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.2881151347249415,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    s.repo_name,\n    count(DISTINCT s.actor_login) AS stars\nFROM\n    github_events AS s\nINNER JOIN\n    github_events AS p ON s.actor_login = p.actor_login\nWHERE\n    s.event_type = 'WatchEvent'\n    AND p.event_type = 'PullRequestEvent'\n    AND p.action = 'opened'\nGROUP BY\n    s.repo_name\nORDER BY\n    stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as count \nFROM github_events \nWHERE event_type = 'WatchEvent' AND actor_login IN (\n  SELECT DISTINCT actor_login \n  FROM github_events \n  WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n) \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT \n    repo_name, \n    COUNT(DISTINCT actor_login) as users_count \nFROM \n    github_events \nWHERE \n    event_type = 'WatchEvent'\n    AND action = 'created'\n    AND actor_login IN (\n        SELECT DISTINCT \n            actor_login \n        FROM \n            github_events \n        WHERE \n            event_type = 'PullRequestEvent'\n            AND action = 'opened'\n    )\nGROUP BY \n    repo_name \nORDER BY \n    users_count DESC \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT repo_name, count(*) as star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND actor_login IN (\n  SELECT actor_login\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n  GROUP BY actor_login\n)\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS star_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_association IN ('CONTRIBUTOR', 'OWNER', 'COLLABORATOR', 'MEMBER')\nGROUP BY\n  repo_name\nHAVING\n  COUNT(DISTINCT CASE WHEN action = 'opened' THEN number END) >= 1\nORDER BY\n  star_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  COUNT() AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n  )\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.2881151347249415,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\n  AND actor_login IN (\n    SELECT\n      DISTINCT actor_login\n    FROM\n      github_events\n    WHERE\n      event_type = 'PullRequestEvent'\n      AND action = 'opened'\n  )\nGROUP BY\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nAND actor_login IN (\n  SELECT DISTINCT actor_login\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n)\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n  )\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' \nAND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\n)\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT star.repo_name, count() AS star_count\nFROM github_events AS star\nINNER JOIN (\n    SELECT DISTINCT actor_login \n    FROM github_events \n    WHERE event_type = 'PullRequestEvent'\n      AND action = 'opened'\n) AS pr_users\nON star.actor_login = pr_users.actor_login\nWHERE star.event_type = 'WatchEvent'\nGROUP BY star.repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() count\nFROM github_events\nANY INNER JOIN (\n  SELECT\n    actor_login\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n  GROUP BY actor_login\n) pr_actors USING actor_login\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  g2.repo_name,\n  count() AS star_count\nFROM github_events AS g2\nANY INNER JOIN github_events AS g1\n  ON (\n    g2.actor_login = g1.actor_login\n    AND g1.event_type = 'PullRequestEvent'\n    AND g1.action = 'opened'\n  )\nWHERE g2.event_type = 'WatchEvent'\nGROUP BY g2.repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.062278712339204734,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count() AS star_count\nFROM github_events\nWHERE \n    event_type = 'WatchEvent'\n    AND actor_login IN (\n        SELECT DISTINCT actor_login\n        FROM github_events\n        WHERE event_type = 'PullRequestEvent'\n    )\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as stars\nFROM github_events \nWHERE event_type = 'WatchEvent' \n    AND actor_login IN (\n        SELECT DISTINCT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent' \n            AND action = 'opened'\n    )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND actor_login IN (\n      SELECT DISTINCT actor_login\n      FROM github_events\n      WHERE event_type = 'PullRequestEvent'\n        AND action = 'opened'\n  )\nGROUP BY repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    ge.repo_name, \n    COUNT(*) as star_count\nFROM github_events ge\nWHERE ge.event_type = 'WatchEvent'\nAND ge.actor_login IN (\n    SELECT DISTINCT actor_login \n    FROM github_events \n    WHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\n)\nGROUP BY ge.repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT w.repo_name, COUNT(*) AS star_count\nFROM github_events AS w\nINNER JOIN github_events AS pr ON w.actor_login = pr.actor_login AND pr.event_type = 'PullRequestEvent' AND pr.action = 'opened'\nWHERE w.event_type = 'WatchEvent'\nGROUP BY w.repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.2881151347249415,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    t1.repo_name,\n    count(DISTINCT t1.actor_login) AS stars\nFROM github_events AS t1\nINNER JOIN github_events AS t2 ON t1.actor_login = t2.actor_login\nWHERE (t1.event_type = 'WatchEvent') AND (t2.event_type = 'PullRequestEvent' AND t2.action = 'opened')\nGROUP BY t1.repo_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.2881151347249415,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT repo_name, COUNT(DISTINCT actor_login) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND actor_login IN (\n    SELECT DISTINCT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    LIMIT 1000000\n  )\nGROUP BY repo_name\nORDER BY star_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.2881151347249415,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    star.repo_name,\n    COUNT(DISTINCT star.actor_login, star.repo_name) AS star_count\nFROM\n    github_events AS star\nJOIN github_events AS pr ON\n    star.actor_login = pr.actor_login\nWHERE\n    star.event_type = 'WatchEvent'\n    AND pr.event_type = 'PullRequestEvent'\n    AND pr.action = 'opened'\nGROUP BY\n    star.repo_name\nORDER BY\n    star_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  star.repo_name,\n  count() stars_count\nFROM github_events AS star\nANY INNER JOIN github_events AS pr\n  ON star.actor_login = pr.actor_login\n     AND pr.event_type = 'PullRequestEvent'\n     AND pr.action = 'opened'\nWHERE star.event_type = 'WatchEvent'\n  AND star.action = 'started'\nGROUP BY\n  star.repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "yarnpkg/yarn",
          "count()": 15414
        },
        {
          "repo_name": "vuejs/vue",
          "count()": 10698
        },
        {
          "repo_name": "tipsy/github-profile-summary",
          "count()": 10572
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "count()": 10072
        },
        {
          "repo_name": "thedaviddias/Front-End-Checklist",
          "count()": 9339
        },
        {
          "repo_name": "sindresorhus/awesome",
          "count()": 8207
        },
        {
          "repo_name": "toddmotto/public-apis",
          "count()": 8104
        },
        {
          "repo_name": "sdmg15/Best-websites-a-programmer-should-visit",
          "count()": 7799
        },
        {
          "repo_name": "ryanmcdermott/clean-code-javascript",
          "count()": 7573
        },
        {
          "repo_name": "yangshun/tech-interview-handbook",
          "count()": 6530
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.465112267,
        "rows_read": 25883994,
        "bytes_read": 109955483
      },
      "executionTime": 0.484,
      "requestId": "01JTN5M8S15KG1DRPZ8A5FKS8V"
    }
  },
  "pipe_22.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    actor_login,\n    count(*) as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.19280648633400396,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS author_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY repo_name\nHAVING SUM(CASE WHEN actor_login IN (\n    SELECT actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent'\n        AND action = 'opened'\n    GROUP BY actor_login\n    HAVING COUNT(*) >= 10\n) THEN 1 ELSE 0 END) > 0\nORDER BY author_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    actor_login,\n    COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \nAND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING COUNT(*) >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \nAND action = 'opened'\nGROUP BY repo_name\nHAVING count() >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.1951259743828988,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_authors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nHAVING COUNT(DISTINCT actor_login) >= 10\nORDER BY num_authors DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.19280648633400396,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS authors_count\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY\n    repo_name\nHAVING\n    count(DISTINCT actor_login) >= 10\nORDER BY\n    authors_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_authors_summary.repo_name,\n    count(*) AS num_authors_meeting_criteria\nFROM (\n    SELECT\n        repo_name,\n        actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    GROUP BY repo_name, actor_login\n    HAVING count(*) >= 10\n) AS repo_authors_summary\nGROUP BY repo_authors_summary.repo_name\nORDER BY num_authors_meeting_criteria DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count() as total_prs, \n  count(DISTINCT actor_login) as unique_authors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened'\nGROUP BY \n  repo_name\nHAVING \n  count(DISTINCT actor_login) > 0 \n  AND countIf(action = 'opened', actor_login IN (SELECT actor_login FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY actor_login HAVING count() >= 10)) > 0\nORDER BY \n  total_prs DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.7732288431992489,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(DISTINCT number) as total_prs\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND author_association != 'NONE'\nGROUP BY \n  repo_name\nHAVING \n  COUNT(DISTINCT number) >= 10\nORDER BY \n  total_prs DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, actor_login, count(*) as num_prs \nFROM github_events \nWHERE event_type = 'PullRequestEvent' AND action = 'opened' \nGROUP BY repo_name, actor_login \nHAVING count(*) >= 10 \nORDER BY num_prs DESC \nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.19280648633400396,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS author_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nHAVING\n  author_count >= 10\nORDER BY\n  author_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.19280648633400396,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS pr_authors\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nHAVING\n  COUNT(DISTINCT actor_login) >= 10\nORDER BY\n  pr_authors DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_authors,\n  COUNT(*) AS num_prs\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nHAVING\n  num_authors >= 10\nORDER BY\n  num_prs DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, actor_login, count() as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "% \nSELECT \n  repo_name, \n  author_association, \n  count(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, author_association\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, actor_login, COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS qualifying_authors\nFROM \n(\n  SELECT\n    repo_name,\n    actor_login,\n    count(*) AS pr_count\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n  GROUP BY repo_name, actor_login\n)\nWHERE pr_count >= 10\nGROUP BY repo_name\nORDER BY qualifying_authors DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  actor_login, \n  count() pr_count \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \n  AND action = 'opened' \nGROUP BY \n  repo_name, \n  actor_login \nHAVING \n  pr_count >= 10 \nORDER BY \n  pr_count DESC \nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  actor_login,\n  count(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name,\n  actor_login\nHAVING\n  pr_count >= 10\nORDER BY\n  pr_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.2281446469078486,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as authors_with_10plus_prs,\n    COUNT(*) as total_prs\nFROM github_events \nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND actor_login IN (\n        SELECT actor_login \n        FROM github_events \n        WHERE event_type = 'PullRequestEvent' \n            AND action = 'opened'\n        GROUP BY actor_login \n        HAVING COUNT(*) >= 10\n    )\nGROUP BY repo_name\nORDER BY authors_with_10plus_prs DESC, total_prs DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT number) AS total_prs\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING COUNT(DISTINCT number) >= 10\nORDER BY total_prs DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    actor_login AS author, \n    COUNT(*) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING pr_count >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, SUM(pr_count) AS total_PRs_from_top_authors\nFROM (\n    SELECT repo_name, actor_login, COUNT(*) AS pr_count\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    GROUP BY repo_name, actor_login\n    HAVING pr_count >= 10\n) AS subquery\nGROUP BY repo_name\nORDER BY total_PRs_from_top_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS c\nFROM\n(\n    SELECT\n        repo_name,\n        actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    GROUP BY\n        repo_name,\n        actor_login\n    HAVING count() >= 10\n)\nGROUP BY repo_name\nORDER BY c DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nHAVING count(*) >= 10\nORDER BY count(*) DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Based on the constraints and the problem at hand, it seems impossible to write a single SQL query that answers the original question without using subqueries or CTEs. Therefore, the best we can do is to provide a query that lists repositories and authors with at least 10 PRs, which can be further processed to get the final answer.\n\n\nSELECT\n    repo_name,\n    actor_login,\n    COUNT(*) as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING COUNT(*) >= 10\nORDER BY repo_name, pr_count DESC\nLIMIT 100\n\n\nHowever, this does not fully answer the original question. To fully answer the original question, we would need to count the number of distinct authors per repository who have made at least 10 PRs, and then order by that count in descending order to get the top 10 repositories.\n\nGiven the constraints, here is the closest we can get to answering the original question with a single query:\n\n\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) as author_count\nFROM github_events\nWHERE (repo_name, actor_login) IN (\n    SELECT\n        repo_name,\n        actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    GROUP BY repo_name, actor_login\n    HAVING COUNT(*) >= 10\n)\nGROUP BY repo_name\nORDER BY author_count DESC\nLIMIT 10\n\n\nBut this uses a subquery, which is not allowed. Therefore, under the given constraints, it is not possible to write a single SQL query that answers the original question.\n\nGiven that, the best we can do is to provide a query that lists repositories and authors with at least 10 PRs, which can be further processed to get the final answer:\n\n\nSELECT\n    repo_name,\n    actor_login,\n    COUNT(*) as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING COUNT(*) >= 10\nORDER BY repo_name, pr_count DESC\nLIMIT 100\n\n\nBut this does not answer the original question. Therefore, the correct SQL query that answers the original question, despite using a subquery, is:\n\n\nSELECT repo_name, COUNT(DISTINCT actor_login) as author_count\nFROM (\n    SELECT repo_name, actor_login\n    FROM github_events\n    WHERE event_type = 'PullRequestEvent' AND action = 'opened'\n    GROUP BY repo_name, actor_login\n    HAVING COUNT(*) >= 10\n)\nGROUP BY repo_name\nORDER BY author_count DESC\nLIMIT 10\n\n\nHowever, since subqueries are not allowed, we cannot provide a single SQL query that answers the original question under the given constraints.\n\nGiven that, here is the final SQL query that gets us part of the way there:\n\n\nSELECT\n    repo_name,\n    actor_login,\n    COUNT(*) as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING COUNT(*) >= 10\nORDER BY repo_name, pr_count DESC\nLIMIT 100\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name repo, actor_login author, count() pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, actor_login\nHAVING count() >= 10\nORDER BY pr_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "yarnpkg/yarn",
          "count()": 5414
        },
        {
          "repo_name": "tipsy/github-profile-summary",
          "count()": 4186
        },
        {
          "repo_name": "thedaviddias/Front-End-Checklist",
          "count()": 2669
        },
        {
          "repo_name": "vuejs/vue",
          "count()": 2515
        },
        {
          "repo_name": "ryanmcdermott/clean-code-javascript",
          "count()": 2356
        },
        {
          "repo_name": "toddmotto/public-apis",
          "count()": 2300
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "count()": 2163
        },
        {
          "repo_name": "sdmg15/Best-websites-a-programmer-should-visit",
          "count()": 2068
        },
        {
          "repo_name": "resume/resume.github.com",
          "count()": 1955
        },
        {
          "repo_name": "sindresorhus/awesome",
          "count()": 1937
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.235189344,
        "rows_read": 25883994,
        "bytes_read": 109955483
      },
      "executionTime": 0.256,
      "requestId": "01JTN5MA7E6X5D3QGFJKFCEMHK"
    }
  },
  "pipe_23.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nAND action = 'opened'\nGROUP BY repo_name\nORDER BY total_pull_requests DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nAND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS pr_count FROM github_events WHERE event_type = 'PullRequestEvent' GROUP BY repo_name ORDER BY pr_count DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as num_prs \nFROM github_events \nWHERE event_type = 'PullRequestEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY num_prs DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(*) as pull_requests_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  pull_requests_count DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(number) as total_pr \nFROM github_events \nWHERE event_type = 'PullRequestEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY total_pr DESC \nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS pr_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  pr_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS pull_requests_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  pull_requests_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT number) AS total_prs\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\nGROUP BY\n  repo_name\nORDER BY\n  total_prs DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as pull_request_count FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY pull_request_count DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'PullRequestEvent') AS pull_requests_count\nFROM github_events\nGROUP BY repo_name\nORDER BY pull_requests_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  COUNT(*) AS total_pull_requests\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  total_pull_requests DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() pull_request_count\nFROM github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nORDER BY\n  pull_request_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as pull_request_count\nFROM github_events \nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nGROUP BY repo_name \nORDER BY pull_request_count DESC \nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9929439966674258,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) as pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8235294117647058,
          "numeric": 1,
          "fScore": 0.30000000000000004
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(DISTINCT number) AS pr_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pr_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() pull_request_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "sauron-demo/sauron",
          "count()": 109608
        },
        {
          "repo_name": "google-test/signcla-probe-repo",
          "count()": 43435
        },
        {
          "repo_name": "sauron-demo/sauron-demo",
          "count()": 31288
        },
        {
          "repo_name": "rust-lang/rust",
          "count()": 13365
        },
        {
          "repo_name": "everypolitician/everypolitician-data",
          "count()": 13277
        },
        {
          "repo_name": "ros/rosdistro",
          "count()": 12932
        },
        {
          "repo_name": "jlord/patchwork",
          "count()": 12708
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "count()": 11347
        },
        {
          "repo_name": "saltstack/salt",
          "count()": 10494
        },
        {
          "repo_name": "nodejs/node",
          "count()": 9708
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.095280679,
        "rows_read": 18564759,
        "bytes_read": 73326053
      },
      "executionTime": 0.114,
      "requestId": "01JTN5MBEQ0071XM4TC8WQNM1V"
    }
  },
  "pipe_24.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nAND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS num_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY num_contributors DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.007013121364457529,
          "fScore": 0.09999999999999998
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) as contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as contributors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  contributors DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT creator_user_login) AS num_contributors\nFROM\n    github_events\nWHERE\n    event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY\n    repo_name\nORDER BY\n    num_contributors DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countDistinct(actor_login) AS contributors_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nORDER BY\n  contributors_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT creator_user_login) AS contributors_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY\n  repo_name\nORDER BY\n  contributors_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, uniq(actor_login) as pr_contributors FROM github_events WHERE event_type = 'PullRequestEvent' AND action = 'opened' GROUP BY repo_name ORDER BY pr_contributors DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    countDistinct(assignees) AS contributor_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributor_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) AS contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countDistinct(actor_login) AS pull_request_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY pull_request_contributors DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  uniqExact(actor_login) contributors\nFROM github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  uniqExact(actor_login) contributors \nFROM github_events \nWHERE event_type = 'PullRequestEvent' \n  AND action = 'opened' \nGROUP BY repo_name \nORDER BY contributors DESC \nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) AS contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributors DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_contributors\nFROM github_events \nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\nGROUP BY repo_name\nORDER BY unique_contributors DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.007013121364457529,
          "fScore": 0.09999999999999998
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniq(actor_login) AS contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.007013121364457529,
          "fScore": 0.09999999999999998
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributor_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\nGROUP BY repo_name\nORDER BY contributor_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) AS contributor_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY contributor_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniq(actor_login) AS pr_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY pr_contributors DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_contributors\nFROM\n    github_events\nWHERE\n    event_type = 'PullRequestEvent'\n    AND action = 'opened'\nGROUP BY\n    repo_name\nORDER BY\n    unique_contributors DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    uniq(actor_login) AS unique_contributors\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY unique_contributors DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo_name,\n  uniqExact(actor_login) contributors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND actor_login != ''\nGROUP BY repo_name\nORDER BY contributors_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "jlord/patchwork",
          "u": 5802
        },
        {
          "repo_name": "githubschool/open-enrollment-classes-introduction-to-github",
          "u": 3586
        },
        {
          "repo_name": "learn-co-students/javascript-intro-to-functions-lab-bootcamp-prep-000",
          "u": 3027
        },
        {
          "repo_name": "learn-co-students/js-functions-lab-bootcamp-prep-000",
          "u": 2899
        },
        {
          "repo_name": "learn-co-students/js-from-dom-to-node-bootcamp-prep-000",
          "u": 2860
        },
        {
          "repo_name": "learn-co-students/javascript-arithmetic-lab-bootcamp-prep-000",
          "u": 2681
        },
        {
          "repo_name": "udacity/create-your-own-adventure",
          "u": 2622
        },
        {
          "repo_name": "learn-co-students/js-node-practice-lab-bootcamp-prep-000",
          "u": 2594
        },
        {
          "repo_name": "freeCodeCamp/guides",
          "u": 2587
        },
        {
          "repo_name": "learn-co-students/js-if-else-files-lab-bootcamp-prep-000",
          "u": 2581
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "u",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.161992541,
        "rows_read": 18564759,
        "bytes_read": 109818681
      },
      "executionTime": 0.181,
      "requestId": "01JTN5MCHKXAKAEDXB8KGTPM9B"
    }
  },
  "pipe_25.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) as total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nGROUP BY repo_name\nORDER BY total_issues DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issues_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count() AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS issues FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY issues DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issues_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as issues_count \nFROM github_events \nWHERE event_type = 'IssuesEvent' AND action = 'opened' \nGROUP BY repo_name \nORDER BY issues_count DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(*) as issues_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY \n  repo_name\nORDER BY \n  issues_count DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    count(*) as total_issues\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened'\nGROUP BY \n    repo_name\nORDER BY \n    total_issues DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS issue_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nORDER BY\n  issue_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8888888888888888,
          "numeric": 0.807879000957369,
          "fScore": 0.20000000000000007
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " SELECT\n  repo_name,\n  COUNT(DISTINCT number) AS total_issues\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\nGROUP BY\n  repo_name\nORDER BY\n  total_issues DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as total_issues FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' GROUP BY repo_name ORDER BY total_issues DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.7601018714800803,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(state = 'open') AS open_issues,\n    countIf(state = 'closed') AS closed_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY open_issues + closed_issues DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name\nORDER BY\n  issues_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY repo_name\nORDER BY issues_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as total_issues\nFROM github_events \nWHERE event_type = 'IssuesEvent' \n    AND action = 'opened'\nGROUP BY repo_name \nORDER BY total_issues DESC \nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 0.7423662929097522,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) as issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS issues\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name\nORDER BY issues DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 0.7423662929097522,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS issue_count\nFROM\n    github_events\nWHERE\n    event_type = 'IssuesEvent'\nGROUP BY\n    repo_name\nORDER BY\n    issue_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Here's the corrected SQL query:\n\n\n%\nSELECT repo_name, COUNT(DISTINCT number) AS issue_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n{{% if defined(start_date) %}}\nAND created_at >= {{{{DateTime(start_date)}}}}\n{{% else %}}\nAND created_at >= now() - interval 30 day\n{{% end %}}\n{{% if defined(end_date) %}}\nAND created_at <= {{{{DateTime(end_date)}}}}\n{{% else %}}\nAND created_at <= now()\n{{% end %}}\nGROUP BY repo_name\nORDER BY issue_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() issues_count\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND repo_name != ''\nGROUP BY repo_name\nORDER BY issues_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "pddemo/demo",
          "c": 432430
        },
        {
          "repo_name": "support-ops/sit-repo",
          "c": 59634
        },
        {
          "repo_name": "nainardev/tamil-dubbed",
          "c": 58392
        },
        {
          "repo_name": "bippybop/iitest",
          "c": 41581
        },
        {
          "repo_name": "test-organization-kkjeer/app-test",
          "c": 35864
        },
        {
          "repo_name": "test-organization-kkjeer/bot-validation",
          "c": 35850
        },
        {
          "repo_name": "theapache64/movie-monk-creator",
          "c": 34666
        },
        {
          "repo_name": "ouyanxia2/hgmgmg",
          "c": 29922
        },
        {
          "repo_name": "pavlo-byshovets/Tutorials",
          "c": 23302
        },
        {
          "repo_name": "ruben-archisketch/tinkerbell-template",
          "c": 23268
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.078165991,
        "rows_read": 15470766,
        "bytes_read": 61143811
      },
      "executionTime": 0.097,
      "requestId": "01JTN5MDPHZWD3KE20N0WDZ8JK"
    }
  },
  "pipe_26.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT member_login) as push_access_members\nFROM github_events\nWHERE event_type = 'MemberEvent'\n    AND action = 'added'\nGROUP BY repo_name\nORDER BY push_access_members DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\n\nSELECT \n    repo_name,\n    countIf(event_type = 'PushEvent' AND action = 'opened') as push_access_count\nFROM github_events\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) AS push_access_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(DISTINCT actor_login) AS pushers FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY pushers DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(DISTINCT actor_login) as count FROM github_events WHERE event_type = 'PushEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as contributors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nGROUP BY \n  repo_name\nORDER BY \n  contributors_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(DISTINCT actor_login) as count \nFROM github_events \nWHERE event_type = 'MemberEvent' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_people_with_push_access\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  num_people_with_push_access DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  push_access_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT creator_user_login) AS push_access_users\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  repo_name\nORDER BY\n  push_access_users DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9884849082571378,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(DISTINCT actor_login) as push_access_users\nFROM github_events\nWHERE event_type IN ('PushEvent', 'PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'CommitCommentEvent', 'ReleaseEvent')\n  AND author_association IN ('OWNER', 'COLLABORATOR', 'MEMBER')\nGROUP BY repo_name\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  repo_name,\n  countDistinct(assignee) AS people_with_push_access\nFROM github_events\nWHERE action = 'push'\nGROUP BY repo_name\nORDER BY people_with_push_access DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT member_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countDistinct(actor_login) AS num_people_with_push_access\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY num_people_with_push_access DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  uniqExact(member_login) people_with_push_access\nFROM github_events\nWHERE event_type = 'MemberEvent'\n  AND action = 'added'\nGROUP BY repo_name\nORDER BY people_with_push_access DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  uniqExact(actor_login) pushers_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushers_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_pushers\nFROM github_events \nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY unique_pushers DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniq(actor_login) AS push_access_users\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT member_login) AS member_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY member_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniq(actor_login) AS pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushers DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) as contributor_count\nFROM\n    github_events\nWHERE\n    event_type = 'PushEvent'\nGROUP BY\n    repo_name\nORDER BY\n    contributor_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(DISTINCT actor_login) AS num_users_with_push_access\nFROM github_events\nWHERE (event_type IN ('PushEvent', 'ReleaseEvent'))\n   OR (event_type IN ('CreateEvent', 'DeleteEvent') AND ref_type IN ('branch', 'tag'))\n   OR (event_type = 'PullRequestEvent' AND action = 'merged')\n   OR (author_association IN ('COLLABORATOR', 'MEMBER', 'OWNER'))\nGROUP BY repo_name\nORDER BY num_users_with_push_access DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo,\n  uniqExact(actor_login) pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nORDER BY pushers DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "u": 18290
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "u": 269
        },
        {
          "repo_name": "githubteacher/github-for-developers-sept-2015",
          "u": 189
        },
        {
          "repo_name": "Automattic/wp-calypso",
          "u": 184
        },
        {
          "repo_name": "eecs183/lecture_practice",
          "u": 176
        },
        {
          "repo_name": "cs371p-fall-2015/collatz-tests",
          "u": 170
        },
        {
          "repo_name": "becodeorg/La-Veille",
          "u": 161
        },
        {
          "repo_name": "gatsbyjs/gatsby",
          "u": 144
        },
        {
          "repo_name": "flutter/flutter",
          "u": 118
        },
        {
          "repo_name": "edx/edx-platform",
          "u": 118
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "u",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.91293473,
        "rows_read": 82975620,
        "bytes_read": 407391602
      },
      "executionTime": 0.932,
      "requestId": "01JTN5MERV7JQKJKZ7VQJ6XDPE"
    }
  },
  "pipe_27.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT member_login) as push_access_members\nFROM github_events\nWHERE event_type = 'MemberEvent'\n    AND action = 'added'\nGROUP BY repo_name\nORDER BY push_access_members DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) AS pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pushers DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\n\n\n\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_user_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_user_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pusher_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE\n    event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY\n    repo_name\nORDER BY\n    push_access_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.00016392880189796628,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE\n    event_type = 'PushEvent'\n    AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as num_pushers\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND ref = 'refs/heads/main'\nGROUP BY \n  repo_name\nORDER BY \n  num_pushers DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) as contributors_count\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\n    AND ref_type = 'branch'\n    AND ref = 'main'\nGROUP BY \n    repo_name\nORDER BY \n    contributors_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  repo_name, \n  count(DISTINCT actor_login) as number_of_people_with_push_access\nFROM \n  github_events \nWHERE \n  event_type = 12 \n  AND ref_type = 'branch' \n  AND ref = 'main'\n  AND action = 'created'\nGROUP BY \n  repo_name\nORDER BY \n  number_of_people_with_push_access DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_actors\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent' AND\n  ref_type = 'branch' AND\n  ref = 'main'\nGROUP BY\n  repo_name\nORDER BY\n  num_actors DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND ref = 'main'\nGROUP BY\n  repo_name\nORDER BY\n  push_access_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  repo_name,\n  COUNT(DISTINCT creator_user_login) AS push_access_users\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent' AND\n  ref_type = 'branch' AND\n  ref = 'main'\nGROUP BY\n  repo_name\nORDER BY\n  push_access_users DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(DISTINCT actor_login) as push_access_users\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND (ref = 'refs/heads/main' OR ref = 'main')\nGROUP BY repo_name\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  countDistinct(actor_login) AS unique_reviewers\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY unique_reviewers DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT member_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(DISTINCT actor_login) AS distinct_pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY distinct_pushers DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countDistinct(actor_login) people_with_push_access\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND (ref = 'refs/heads/main' OR ref = 'main')\nGROUP BY repo_name\nORDER BY people_with_push_access DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  countDistinct(actor_login) pushers_count \nFROM github_events \nWHERE event_type = 'PushEvent' \n  AND ref = 'refs/heads/main' \nGROUP BY repo_name \nORDER BY pushers_count DESC \nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.00016392880189796628,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_pushers\nFROM github_events \nWHERE event_type = 'PushEvent' \n    AND (ref = 'refs/heads/main' OR ref = 'refs/heads/master')\nGROUP BY repo_name \nORDER BY unique_pushers DESC \nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_users\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n    AND base_ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT actor_login) AS push_users_count\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniq(actor_login) AS pushers\nFROM github_events\nWHERE event_type = 'PushEvent' AND ref = 'refs/heads/main'\nGROUP BY repo_name\nORDER BY pushers DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS contributors_with_push_access\nFROM\n    github_events\nWHERE\n    event_type = 'PushEvent' AND\n    ref_type = 'branch' AND\n    ref = 'main'\nGROUP BY\n    repo_name\nORDER BY\n    contributors_with_push_access DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8173351991465853,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n    github_events\nWHERE\n    author_association IN ('OWNER', 'COLLABORATOR', 'MEMBER')\nGROUP BY\n    repo_name\nORDER BY\n    push_access_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  uniqExact(actor_login) num_pushers\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\n  AND actor_login != ''\nGROUP BY repo_name\nORDER BY num_pushers DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "u": 17366
        },
        {
          "repo_name": "bioconda/bioconda-recipes",
          "u": 244
        },
        {
          "repo_name": "Automattic/wp-calypso",
          "u": 172
        },
        {
          "repo_name": "cs371p-fall-2015/collatz-tests",
          "u": 170
        },
        {
          "repo_name": "githubteacher/github-for-developers-sept-2015",
          "u": 170
        },
        {
          "repo_name": "becodeorg/La-Veille",
          "u": 161
        },
        {
          "repo_name": "flutter/flutter",
          "u": 112
        },
        {
          "repo_name": "cs371p-fall-2015/allocator-tests",
          "u": 107
        },
        {
          "repo_name": "edx/edx-platform",
          "u": 106
        },
        {
          "repo_name": "cs371p-fall-2015/voting-tests",
          "u": 105
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "u",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.120833113,
        "rows_read": 82975620,
        "bytes_read": 2651509833
      },
      "executionTime": 1.191,
      "requestId": "01JTN5MGPTXX9M6FZPHGBH2CJP"
    }
  },
  "pipe_28.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) as push_users,\n    count(DISTINCT CASE WHEN event_type = 'WatchEvent' THEN actor_login END) as stars\nFROM github_events\nWHERE event_type = 'PushEvent' \nGROUP BY repo_name\nHAVING stars > 99\nORDER BY push_users DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT IF(event_type = 'PushEvent' AND ref = 'refs/heads/main', actor_login, NULL)) AS push_access_count\nFROM github_events\nWHERE repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING COUNT(*) > 99\n)\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) AS push_users_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND ref = 'refs/heads/main'\n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY repo_name \n        HAVING count() > 99\n    )\nGROUP BY repo_name\nORDER BY push_users_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE \n    event_type = 'PushEvent' \n    AND ref = 'refs/heads/main'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING COUNT(*) > 99\n    )\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS pusher_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY repo_name\nHAVING COUNT(DISTINCT actor_login) > 99\nORDER BY pusher_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE\n    event_type = 'PushEvent'\n    AND ref = 'refs/heads/main'\n    AND repo_name IN (\n        SELECT repo_name\n        FROM github_events\n        WHERE event_type = 'WatchEvent'\n        GROUP BY repo_name\n        HAVING count() > 99\n    )\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT if(event_type = 'PushEvent' AND ref = 'refs/heads/main', actor_login, NULL)) AS num_main_branch_pushers\nFROM github_events\nGROUP BY repo_name\nHAVING count(DISTINCT if(event_type = 'WatchEvent', actor_login, NULL)) > 99\nORDER BY num_main_branch_pushers DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n  repo_name, \n  count(DISTINCT actor_login) as pushers_count\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' \n  AND ref = 'refs/heads/main' \n  AND repo_name IN (\n    SELECT repo_name \n    FROM github_events \n    WHERE event_type = 'WatchEvent' \n    GROUP BY repo_name \n    HAVING count() > 99\n  )\nGROUP BY \n  repo_name\nORDER BY \n  pushers_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n  repo_name,\n  COUNT(DISTINCT actor_login) as count_push \nFROM \n  github_events \nWHERE \n  event_type = 'PushEvent' \n  AND action = 'added'\n  AND ref_type = 'branch'\n  AND ref = 'main'\n  AND created_at  >  now() - interval  30  day \nGROUP BY \n  repo_name \nHAVING \n  COUNT(DISTINCT actor_login) > 99 \nORDER BY \n  count_push DESC \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  repo_name, \n  count(DISTINCT actor_login) as num_push_access\nFROM \n  github_events\nWHERE \n  event_type = 10 \n  AND ref_type = 'branch' \n  AND ref = 'main' \n  AND action = 'opened'\n  AND repo_name IN (\n    SELECT \n      repo_name \n    FROM \n      github_events \n    WHERE \n      event_type = 15 \n    GROUP BY \n      repo_name \n    HAVING \n      count(DISTINCT actor_login) > 99\n  )\nGROUP BY \n  repo_name \nORDER BY \n  num_push_access DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS num_actors\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND ref_type = 'branch'\n  AND ref = 'main'\n  AND repo_name IN (\n    SELECT\n      repo_name\n    FROM\n      github_events\n    WHERE\n      event_type = 'WatchEvent'\n    GROUP BY\n      repo_name\n    HAVING\n      COUNT(DISTINCT actor_login) > 99\n  )\nGROUP BY\n  repo_name\nORDER BY\n  num_actors DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND repo_name IN (\n    SELECT\n      repo_name\n    FROM\n      github_events\n    WHERE\n      event_type = 'WatchEvent'\n    GROUP BY\n      repo_name\n    HAVING\n      COUNT() > 99\n  )\nGROUP BY\n  repo_name\nORDER BY\n  push_access_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": " %\n\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS push_access_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND ref_type = 'branch'\n  AND ref = 'main'\n  AND repo_name IN (\n    SELECT\n      repo_name\n    FROM\n      github_events\n    WHERE\n      event_type = 'WatchEvent'\n      AND repo_name > ''\n    GROUP BY\n      repo_name\n    HAVING\n      COUNT(*) > 99\n  )\nGROUP BY\n  repo_name\nORDER BY\n  push_access_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(DISTINCT actor_login) as push_access_users,\n  sum(event_type = 'WatchEvent') as stars\nFROM github_events\nWHERE\n  (event_type = 'PushEvent' AND ref = 'refs/heads/main')\n  OR event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  countDistinct(member_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND ref = 'refs/heads/main'\n  AND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING count(*) > 99\n  )\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(DISTINCT member_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'MemberEvent' \nAND repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING COUNT(*) > 99\n)\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.9473684210526316,
          "numeric": 0.37056804198436133,
          "fScore": 0.09999999999999998
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  uniqIf(actor_login, event_type = 'PushEvent' AND ref = 'refs/heads/main') AS push_access_users,\n  uniqIf(actor_login, event_type = 'WatchEvent') AS stars\nFROM github_events\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 0.37134685706017195,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  uniqExactIf(actor_login, event_type = 'PushEvent' AND ref_type = 'branch' AND ref = 'main') AS push_user_count,\n  sumIf(1, event_type = 'WatchEvent') AS star_count\nFROM github_events\nGROUP BY repo_name\nHAVING star_count > 99\nORDER BY push_user_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  uniqExactIf(actor_login, event_type = 'PushEvent' AND ref = 'refs/heads/main') AS push_access_users\nFROM github_events\nGROUP BY repo_name\nHAVING countIf(event_type = 'WatchEvent') > 99\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(DISTINCT actor_login) as push_users,\n    count(DISTINCT IF(event_type = 'WatchEvent', actor_login, NULL)) as stars\nFROM github_events\nWHERE event_type IN ('PushEvent', 'WatchEvent')\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY push_users DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    uniq(actor_login) as unique_pushers,\n    uniqIf(actor_login, event_type = 'WatchEvent') as stars\nFROM github_events \nWHERE event_type IN ('PushEvent', 'WatchEvent')\n    AND (event_type != 'PushEvent' OR ref = 'refs/heads/main' OR ref = 'refs/heads/master')\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY unique_pushers DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    repo_name,\n    COUNT(DISTINCT actor_login) AS push_access_users\nFROM github_events\nWHERE event_type = 'PushEvent'\n  AND base_ref = 'main'\n  AND repo_name IN (\n      SELECT repo_name\n      FROM github_events\n      WHERE event_type = 'WatchEvent'\n      GROUP BY repo_name\n      HAVING COUNT(*) > 99\n  )\nGROUP BY repo_name\nORDER BY push_access_users DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name, \n    COUNT(DISTINCT actor_login) AS push_access_count\nFROM github_events\nWHERE event_type = 'PushEvent' \n    AND ref = 'refs/heads/main' \n    AND repo_name IN (\n        SELECT repo_name \n        FROM github_events \n        WHERE event_type = 'WatchEvent' \n        GROUP BY repo_name \n        HAVING COUNT(*) > 99\n    )\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name,\n       COUNT(DISTINCT IF(event_type = 'PushEvent' AND ref = 'refs/heads/main', actor_login, NULL)) AS push_access_count\nFROM github_events\nGROUP BY repo_name\nHAVING SUM(IF(event_type = 'WatchEvent', 1, 0)) > 99\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    uniqIf(actor_login, event_type = 'PushEvent' AND (ref IN ('refs/heads/main', 'refs/heads/master'))) AS push_access_count\nFROM github_events\nWHERE repo_name IN (\n    SELECT repo_name\n    FROM github_events\n    WHERE event_type = 'WatchEvent'\n    GROUP BY repo_name\n    HAVING count() > 99\n)\nGROUP BY repo_name\nORDER BY push_access_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS star_count,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' AND (ref IN ('main', 'refs/heads/main')) THEN actor_login END) AS distinct_pushers\nFROM github_events\nGROUP BY repo_name\nHAVING COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) > 99\nORDER BY distinct_pushers DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name\nFROM github_events\nGROUP BY repo_name\nHAVING COUNT(DISTINCT IF(event_type = 'WatchEvent', actor_login, NULL)) > 99\nORDER BY COUNT(DISTINCT IF(event_type = 'PushEvent' AND ref_type = 'branch' AND (ref = 'main' OR ref = 'master'), actor_login, NULL)) DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 0.37134685706017195,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo_name,\n  uniqExact(\n    CASE\n      WHEN event_type = 'PushEvent' AND (ref = 'refs/heads/main' OR ref = 'main' OR ref LIKE '%/main')\n      THEN CAST(actor_login, 'Nullable(String)')\n      ELSE NULL\n    END\n  ) push_contributors,\n  sum(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) stars\nFROM github_events\nGROUP BY repo_name\nHAVING stars > 99\nORDER BY push_contributors DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "tj/should.js",
          "u": 0,
          "stars": 221
        },
        {
          "repo_name": "tuner24/django-cms",
          "u": 0,
          "stars": 205
        },
        {
          "repo_name": "transmission/transmission",
          "u": 0,
          "stars": 1060
        },
        {
          "repo_name": "vkhorikov/CSharpFunctionalExtensions",
          "u": 0,
          "stars": 129
        },
        {
          "repo_name": "radu-matei/websocket-manager",
          "u": 0,
          "stars": 181
        },
        {
          "repo_name": "spatie/laravel-responsecache",
          "u": 0,
          "stars": 300
        },
        {
          "repo_name": "wycm/zhihu-crawler",
          "u": 0,
          "stars": 366
        },
        {
          "repo_name": "zeit/next.js",
          "u": 0,
          "stars": 7877
        },
        {
          "repo_name": "x0rz/EQGRP_Lost_in_Translation",
          "u": 0,
          "stars": 1335
        },
        {
          "repo_name": "websockets/wscat",
          "u": 0,
          "stars": 151
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "u",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.020207635,
        "rows_read": 82807796,
        "bytes_read": 2646119992
      },
      "executionTime": 1.04,
      "requestId": "01JTN5MJSRGB8RMDP857RHCZPS"
    }
  },
  "pipe_29.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\n    AND action = 'added'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS num_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY num_invitations DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(*) AS member_invitation_count\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY member_invitation_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count() AS num_member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY num_member_invitations DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS members FROM github_events WHERE event_type = 'MemberEvent' GROUP BY repo_name ORDER BY members DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS invitations\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitations DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as count \nFROM github_events \nWHERE event_type = 'MemberEvent' AND action = 'added' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  max(comments) as max_member_invitations\nFROM \n  github_events\nWHERE \n  event_type = 'MemberEvent'\n  AND action = 'added'\nGROUP BY \n  repo_name\nORDER BY \n  max_member_invitations DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as num_invitations \nFROM github_events \nWHERE event_type = 'MemberEvent' \nGROUP BY repo_name \nORDER BY num_invitations DESC \nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 0.7417841590653783,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT member_login) AS member_invitations\nFROM\n  github_events\nWHERE\n  event_type = 'MemberEvent'\nGROUP BY\n  repo_name\nORDER BY\n  member_invitations DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS member_invitations\nFROM\n  github_events\nWHERE\n  event_type = 'MemberEvent'\nGROUP BY\n  repo_name\nORDER BY\n  member_invitations DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  MAX(IF(action = 'added', 1, 0)) AS max_member_invitations\nFROM\n  github_events\nWHERE\n  event_type = 'MemberEvent'\nGROUP BY\n  repo_name\nORDER BY\n  max_member_invitations DESC\nLIMIT 10\n"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    repo_name,\n    MAX(CAST(member_login AS String)) AS max_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'invited'\nGROUP BY repo_name\nORDER BY max_invitations DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  count(*) AS member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\n  AND action = 'added'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name AS repo,\n  count(*) AS invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\n  AND action = 'added'\nGROUP BY repo_name\nORDER BY invitations DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() invite_count\nFROM github_events\nWHERE event_type = 'MemberEvent'\n  AND action = 'added'\nGROUP BY repo_name\nORDER BY invite_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count() as member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as member_invitations\nFROM github_events \nWHERE event_type = 'MemberEvent' \n    AND action = 'added'\nGROUP BY repo_name \nORDER BY member_invitations DESC \nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS invitation_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitation_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS invitation_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitation_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS invitation_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitation_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS invitations\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY invitations DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS member_invitations\nFROM github_events\nWHERE event_type = 'MemberEvent'\nGROUP BY repo_name\nORDER BY member_invitations DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(*) as member_invitation_count\nFROM github_events\nWHERE event_type = 'MemberEvent' AND action = 'added'\nGROUP BY repo_name\nORDER BY member_invitation_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() invitations FROM github_events WHERE event_type = 'MemberEvent' AND action = 'added' GROUP BY repo_name ORDER BY invitations DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "/",
          "invitations": 2995
        },
        {
          "repo_name": "astro/gitpop",
          "invitations": 935
        },
        {
          "repo_name": "jeresig/thunderhub",
          "invitations": 445
        },
        {
          "repo_name": "matthewmccullough/hellogitworld",
          "invitations": 128
        },
        {
          "repo_name": "buhtip/buhtip-repo",
          "invitations": 55
        },
        {
          "repo_name": "braitsch/client1",
          "invitations": 44
        },
        {
          "repo_name": "societies/SOCIETIES-Platform",
          "invitations": 37
        },
        {
          "repo_name": "dm4/IntroCS-2011-Fall-Homework6",
          "invitations": 32
        },
        {
          "repo_name": "rperlinski/zpi-basic",
          "invitations": 32
        },
        {
          "repo_name": "tjhickey724/OctaveBat",
          "invitations": 32
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "invitations",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.026145805,
        "rows_read": 459796,
        "bytes_read": 803860
      },
      "executionTime": 0.044,
      "requestId": "01JTN5MMSK2DG2T7GTJRKBEA51"
    }
  },
  "pipe_30.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS fork_count \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY fork_count DESC \nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS fork_count \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY fork_count DESC \nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as num_forks \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY num_forks DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as fork_count\nFROM \n    github_events\nWHERE \n    event_type = 'ForkEvent'\nGROUP BY \n    repo_name\nORDER BY \n    fork_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(*) as num_forks \nFROM github_events \nWHERE event_type = 'ForkEvent' \nGROUP BY repo_name \nORDER BY num_forks DESC \nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS fork_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  fork_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT() AS fork_count\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  fork_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " %\n\nSELECT\n  repo_name,\n  COUNT() as forks\nFROM\n  github_events\nWHERE\n  event_type = 'ForkEvent'\nGROUP BY\n  repo_name\nORDER BY\n  forks DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as forks FROM github_events WHERE event_type = 'ForkEvent' GROUP BY repo_name ORDER BY forks DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() forks_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as fork_count\nFROM github_events \nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    COUNT(*) as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(*) as fork_count\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY fork_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() forks\nFROM github_events\nWHERE event_type = 'ForkEvent'\nGROUP BY repo_name\nORDER BY forks DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "forks": 25886
        },
        {
          "repo_name": "Snailclimb/JavaGuide",
          "forks": 18449
        },
        {
          "repo_name": "Pierian-Data/Complete-Python-3-Bootcamp",
          "forks": 16599
        },
        {
          "repo_name": "CyC2018/CS-Notes",
          "forks": 15413
        },
        {
          "repo_name": "TheAlgorithms/Python",
          "forks": 15212
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 14790
        },
        {
          "repo_name": "PanJiaChen/vue-element-admin",
          "forks": 9940
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 9155
        },
        {
          "repo_name": "ant-design/ant-design",
          "forks": 8592
        },
        {
          "repo_name": "ServiceNow/devtraining-needit-madrid",
          "forks": 8297
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.066701573,
        "rows_read": 5953720,
        "bytes_read": 17262692
      },
      "executionTime": 0.085,
      "requestId": "01JTN5MNT9RPASHFVRH49HZPED"
    }
  },
  "pipe_31.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') as stars,\n    countIf(event_type = 'ForkEvent') as forks,\n    CAST(countIf(event_type = 'WatchEvent') AS Float64) / nullIf(countIf(event_type = 'ForkEvent'), 0) as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    CASE WHEN forks > 0 THEN stars / forks ELSE 0 END AS ratio\nFROM github_events\nWHERE created_at >= '2020-01-01'\nGROUP BY repo_name\nHAVING forks > 0 AND stars > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'WatchEvent') AS stars,\n    COUNTIf(event_type = 'ForkEvent') AS forks,\n    stars / forks AS stars_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_forks_ratio DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'WatchEvent') AS stars,\n    COUNTIf(event_type = 'ForkEvent') AS forks,\n    stars / forks AS stars_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_forks_ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n    repo_name,\n    sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n    safeDivide(stars, forks) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nHAVING forks > 0 AND stars > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS stars_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_forks_ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.46269013667772363,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    sum(CAST(event_type = 'WatchEvent' AS UInt8)) AS stars,\n    sum(CAST(event_type = 'ForkEvent' AS UInt8)) AS forks,\n    CAST(stars AS Float64) / CAST(forks AS Float64) AS ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nORDER BY ratio DESC, stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'WatchEvent') AS stars, \n  countIf(event_type = 'ForkEvent') AS forks, \n  stars / forks AS ratio\nFROM \n  github_events\nWHERE \n  event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY \n  repo_name\nHAVING \n  forks > 0\nORDER BY \n  ratio DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n  SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n  SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / \n  NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0) AS ratio\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  ratio DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'WatchEvent') AS stars, \n  countIf(event_type = 'ForkEvent') AS forks, \n  stars / forks AS ratio\nFROM \n  github_events\nWHERE \n  event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY \n  repo_name\nORDER BY \n  ratio DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS stars,\n  COUNT(DISTINCT member_login) AS forks,\n  COUNT(DISTINCT actor_login) / COUNT(DISTINCT member_login) AS star_fork_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  repo_name,\n  COUNTIF(event_type = 'WatchEvent') AS stars,\n  COUNTIF(event_type = 'ForkEvent') AS forks,\n  COUNTIF(event_type = 'WatchEvent') / COUNTIF(event_type = 'ForkEvent') AS stars_to_forks_ratio\nFROM\n  github_events\nWHERE\n  event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY\n  repo_name\nHAVING\n  stars > 0\n  AND forks > 0\nORDER BY\n  stars_to_forks_ratio DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  (sumIf(action = 'WatchEvent', event_type = 'StarEvent') / sumIf(action = 'ForkEvent', event_type = 'ForkEvent')) AS star_fork_ratio\nFROM\n  github_events\nGROUP BY\n  repo_name\nORDER BY\n  star_fork_ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(event_type = 'WatchEvent') stars,\n  sum(event_type = 'ForkEvent') forks,\n  if(sum(event_type = 'ForkEvent') = 0, 0, sum(event_type = 'WatchEvent') / sum(event_type = 'ForkEvent')) as star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "% \nSELECT \n    repo_name, \n    countIf(event_type='WatchEvent') AS stars, \n    countIf(event_type='ForkEvent') AS forks, \n    stars / NULLIF(forks, 0) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY star_fork_ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars, \n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks, \n    (SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0)) AS star_fork_ratio \nFROM \n    github_events \nGROUP BY \n    repo_name \nORDER BY \n    star_fork_ratio DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(if(event_type = 'WatchEvent', 1, 0)) AS stars,\n  sum(if(event_type = 'ForkEvent', 1, 0)) AS forks,\n  sum(if(event_type = 'WatchEvent', 1, 0)) / NULLIF(sum(if(event_type = 'ForkEvent', 1, 0)), 0) AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(event_type = 'WatchEvent') AS stars,\n  countIf(event_type = 'ForkEvent') AS forks,\n  countIf(event_type = 'WatchEvent') / countIf(event_type = 'ForkEvent') AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nHAVING countIf(event_type = 'ForkEvent') > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    sum(cast(event_type = 'WatchEvent' AS UInt8)) stars,\n    sum(cast(event_type = 'ForkEvent' AS UInt8)) forks,\n    sum(cast(event_type = 'WatchEvent' AS UInt8)) / sum(cast(event_type = 'ForkEvent' AS UInt8)) ratio\nFROM github_events\nGROUP BY repo_name\nHAVING sum(cast(event_type = 'ForkEvent' AS UInt8)) > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'WatchEvent') as stars,\n    countIf(event_type = 'ForkEvent') as forks,\n    stars / nullIf(forks, 0) as star_fork_ratio\nFROM github_events \nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNTIf(event_type = 'WatchEvent') / COUNTIf(event_type = 'ForkEvent') AS stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING COUNTIf(event_type = 'ForkEvent') > 0\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n    (SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0)) AS stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY stars_to_forks_ratio DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  SUM(If(event_type = 'WatchEvent', 1, 0)) AS stars,\n  SUM(If(event_type = 'ForkEvent', 1, 0)) AS forks,\n  CASE WHEN SUM(If(event_type = 'ForkEvent', 1, 0)) > 0 THEN SUM(If(event_type = 'WatchEvent', 1, 0)) / SUM(If(event_type = 'ForkEvent', 1, 0)) ELSE 0 END AS ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    stars / forks AS ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nGROUP BY repo_name\nHAVING forks > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT() AS star_count,\n    COUNT() FILTER (WHERE event_type = 'ForkEvent') AS fork_count,\n    (COUNT() / NULLIF(COUNT() FILTER (WHERE event_type = 'ForkEvent'), 0)) AS star_to_fork_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY star_to_fork_ratio DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0) AS star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nHAVING stars > 0 AND forks > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(event_type = 'WatchEvent') star_count,\n  countIf(event_type = 'ForkEvent') fork_count,\n  countIf(event_type = 'WatchEvent') / countIf(event_type = 'ForkEvent') star_fork_ratio\nFROM github_events\nGROUP BY repo_name\nHAVING countIf(event_type = 'ForkEvent') > 0\nORDER BY star_fork_ratio DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "996icu/996.ICU",
          "forks": 25886,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "Snailclimb/JavaGuide",
          "forks": 18449,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "Pierian-Data/Complete-Python-3-Bootcamp",
          "forks": 16599,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "CyC2018/CS-Notes",
          "forks": 15413,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "TheAlgorithms/Python",
          "forks": 15212,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "SmartThingsCommunity/SmartThingsPublic",
          "forks": 14790,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "PanJiaChen/vue-element-admin",
          "forks": 9940,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "barryclark/jekyll-now",
          "forks": 9155,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "ant-design/ant-design",
          "forks": 8592,
          "stars": 0,
          "ratio": 0
        },
        {
          "repo_name": "ServiceNow/devtraining-needit-madrid",
          "forks": 8297,
          "stars": 0,
          "ratio": 0
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.112963876,
        "rows_read": 13272955,
        "bytes_read": 39320346
      },
      "executionTime": 0.132,
      "requestId": "01JTN5MPW6G7233FFMVGPDABEB"
    }
  },
  "pipe_32.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    countIf(event_type = 'WatchEvent') as total_stars,\n    countIf(event_type = 'ForkEvent') as total_forks,\n    ROUND(countIf(event_type = 'WatchEvent') / countIf(event_type = 'ForkEvent'), 2) as stars_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    ROUND(SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 2) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    COUNTIf(event_type = 'WatchEvent') AS total_stars,\n    COUNTIf(event_type = 'ForkEvent') AS total_forks,\n    ROUND(COUNTIf(event_type = 'WatchEvent') / NULLIF(COUNTIf(event_type = 'ForkEvent'), 0), 2) AS stars_forks_ratio\nFROM github_events\nLIMIT 1"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT\n    countIf(event_type = 'WatchEvent') AS total_stars,\n    countIf(event_type = 'ForkEvent') AS total_forks,\n    round(total_stars / total_forks, 2) AS stars_per_fork\nFROM github_events\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    sum(event_type = 'WatchEvent') AS stars,\n    sum(event_type = 'ForkEvent') AS forks,\n    round(sum(event_type = 'WatchEvent') / sum(event_type = 'ForkEvent'), 2) AS ratio\nFROM github_events\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    sum(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n    sum(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n    round(stars / CAST(forks AS Float64), 2) AS ratio\nFROM github_events\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n  COUNT(CASE WHEN event_type = 'WatchEvent' THEN 1 END) AS total_stars,\n  COUNT(CASE WHEN event_type = 'ForkEvent' THEN 1 END) AS total_forks,\n  round(total_stars / total_forks, 2) AS stars_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n  sum(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n  sum(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n  round(\n    sum(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / \n    nullif(sum(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0), \n    2\n  ) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  COUNT_IF(event_type = 15) AS total_stars,\n  COUNT_IF(event_type = 4) AS total_forks,\n  IF(COUNT_IF(event_type = 4) = 0, 0, ROUND(COUNT_IF(event_type = 15) / COUNT_IF(event_type = 4), 2)) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT\n  COUNT(DISTINCT actor_login) AS total_stars,\n  COUNT(DISTINCT member_login) AS total_forks,\n  ROUND(COUNT(DISTINCT actor_login) * 1.0 / COUNT(DISTINCT member_login), 2) AS stars_to_forks_ratio\nFROM github_events\nWHERE event_type = 'WatchEvent'\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  COUNTIF(event_type = 'WatchEvent') AS stars,\n  COUNTIF(event_type = 'ForkEvent') AS forks,\n  ROUND(COUNTIF(event_type = 'WatchEvent') / NULLIF(COUNTIF(event_type = 'ForkEvent'), 0), 2) AS stars_to_forks_ratio\nFROM github_events"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  SUM(IF(event_type = 'WatchEvent', 1, 0)) AS total_stars,\n  SUM(IF(event_type = 'ForkEvent', 1, 0)) AS total_forks,\n  ROUND(SUM(IF(event_type = 'WatchEvent', 1, 0)) / SUM(IF(event_type = 'ForkEvent', 1, 0)), 2) AS stars_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    countIf(event_type = 'WatchEvent') as total_stars,\n    countIf(event_type = 'ForkEvent') as total_forks,\n    round(\n        if(countIf(event_type = 'ForkEvent') = 0, 0, countIf(event_type = 'WatchEvent') / countIf(event_type = 'ForkEvent')),\n        2\n    ) as stars_to_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  countIf(event_type = 'WatchEvent') AS total_stars,\n  countIf(event_type = 'ForkEvent') AS total_forks,\n  round(\n    (countIf(event_type = 'WatchEvent') * 1.0) / NULLIF(countIf(event_type = 'ForkEvent'), 0),\n    2\n  ) AS star_fork_ratio\nFROM github_events\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    ROUND(SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END), 0), 2) AS star_fork_ratio\nFROM github_events\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n  countIf(event_type = 'WatchEvent') AS stars,\n  countIf(event_type = 'ForkEvent') AS forks,\n  round(countIf(event_type = 'WatchEvent') / nullIf(countIf(event_type = 'ForkEvent'), 0), 2) AS ratio\nFROM github_events\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT countIf(event_type = 'WatchEvent') AS stars, countIf(event_type = 'ForkEvent') AS forks, round(countIf(event_type = 'WatchEvent')/countIf(event_type = 'ForkEvent'), 2) AS ratio\nFROM github_events\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\ncountIf(event_type = 'WatchEvent') stars,\ncountIf(event_type = 'ForkEvent') forks,\nround(countIf(event_type = 'WatchEvent')/countIf(event_type = 'ForkEvent'), 2) ratio\nFROM github_events\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    countIf(event_type = 'WatchEvent') as total_stars,\n    countIf(event_type = 'ForkEvent') as total_forks,\n    round(countIf(event_type = 'WatchEvent') / countIf(event_type = 'ForkEvent'), 2) as stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    countIf(event_type = 'WatchEvent') AS total_stars,\n    countIf(event_type = 'ForkEvent') AS total_forks,\n    ROUND(countIf(event_type = 'WatchEvent') / countIf(event_type = 'ForkEvent'), 2) AS stars_to_forks_ratio\nFROM github_events\nWHERE event_type IN ('WatchEvent', 'ForkEvent')\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'WatchEvent') AS total_stars,\n    countIf(event_type = 'ForkEvent') AS total_forks,\n    round(total_stars / if(total_forks = 0, 1, total_forks), 2) AS stars_to_forks_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY total_stars DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS total_stars,\n    SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS total_forks,\n    ROUND(total_stars / NULLIF(total_forks, 0), 2) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS stars,\n  SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS forks,\n  ROUND(CAST(SUM(CASE WHEN event_type = 'WatchEvent' THEN 1 ELSE 0 END) AS Float64) / NULLIF(CAST(SUM(CASE WHEN event_type = 'ForkEvent' THEN 1 ELSE 0 END) AS Float64), 0), 2) AS ratio\nFROM github_events\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    countIf(event_type = 'WatchEvent') AS stars,\n    countIf(event_type = 'ForkEvent') AS forks,\n    round(divide(stars, forks), 2) AS ratio\nFROM github_events\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    SUM(IF(event_type = 'WatchEvent', 1, 0)) as total_stars,\n    SUM(IF(event_type = 'ForkEvent', 1, 0)) as total_forks,\n    ROUND(SUM(IF(event_type = 'WatchEvent', 1, 0)) / NULLIF(SUM(IF(event_type = 'ForkEvent', 1, 0)), 0), 2) as stars_to_forks_ratio\nFROM github_events\nWHERE repo_name IS NOT NULL\nGROUP BY repo_name\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT\n    COUNT(IF(event_type = 'WatchEvent', 1, NULL)) AS total_stars,\n    COUNT(IF(event_type = 'ForkEvent', 1, NULL)) AS total_forks,\n    ROUND(\n        COUNT(IF(event_type = 'WatchEvent', 1, NULL)) /\n        NULLIF(COUNT(IF(event_type = 'ForkEvent', 1, NULL)), 0),\n        2\n    ) AS stars_to_forks_ratio\nFROM github_events\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0.004424139993790239,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    sum(if(event_type = 'WatchEvent', 1, 0)) stars,\n    sum(if(event_type = 'ForkEvent', 1, 0)) forks,\n    CAST(sum(if(event_type = 'WatchEvent', 1, 0)) / sum(if(event_type = 'ForkEvent', 1, 0)) AS Decimal(18, 2)) ratio\nFROM github_events\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "stars": 7305112,
          "forks": 5595482,
          "ratio": 1.31
        }
      ],
      "meta": [
        {
          "name": "stars",
          "type": "UInt64"
        },
        {
          "name": "forks",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.015556008,
        "rows_read": 13272955,
        "bytes_read": 13272955
      },
      "executionTime": 0.033,
      "requestId": "01JTN5MQZKNGASBE4MNTF9K2QA"
    }
  },
  "pipe_33.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n    COUNT(*) as total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n    AND action = 'opened'\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n    COUNT(*) AS total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT count() AS total_issues_opened FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) total_issues FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT \n  COUNT(*) \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 1,
        "llmRowCount": 0,
        "sql": "SELECT COUNT(*) AS total_issues_opened FROM github_events WHERE event_type = 7 AND action = 'opened' LIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT\n  COUNT(*) AS total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT() AS total_issues_opened FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT() FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS total_issues_opened FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) AS total_issues_opened \nFROM github_events \nWHERE event_type = 'IssuesEvent' AND action = 'opened' \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) total_issues\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent'\n  AND action = 'opened'\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() total_issues_opened \nFROM github_events \nWHERE event_type = 'IssuesEvent' \n  AND action = 'opened' \nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) as total_issues_opened\nFROM github_events \nWHERE event_type = 'IssuesEvent' \nAND action = 'opened'\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count(*) AS total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) as total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT COUNT(*) AS total_issues_opened FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() AS total_issues_opened FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT count() as total_opened_issues FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "\nSELECT COUNT(*) as total_issues_opened\nFROM github_events\nWHERE event_type = 'IssuesEvent'\nAND action = 'opened'\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 1,
        "llmRowCount": 1,
        "sql": "SELECT count() total_issues_opened FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "count()": 8992824
        }
      ],
      "meta": [
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.019233222,
        "rows_read": 15470766,
        "bytes_read": 30701134
      },
      "executionTime": 0.038,
      "requestId": "01JTN5MRZZXAPTXMTR9XXS0A2T"
    }
  },
  "pipe_34.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(*) as total_issue_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY total_issue_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_events DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS comment_count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \nGROUP BY repo_name \nORDER BY comment_count DESC \nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    count() AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS count FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comments DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as count \nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \nGROUP BY repo_name \nORDER BY count DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  COUNT(*) as count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent'\nGROUP BY \n  repo_name\nORDER BY \n  count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as num_issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY num_issue_comment_events DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS issue_comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_comment_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT() AS issue_comment_events\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_comment_events DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(*) AS issue_comment_events\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  issue_comment_events DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_events DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    count() AS issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_events DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(*) AS event_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo,\n  count() issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_events DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(*) issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count() as comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as issue_comment_count\nFROM github_events \nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_events DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS issue_comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) as comment_count\nFROM\n    github_events\nWHERE\n    event_type = 'IssueCommentEvent' OR event_type = 6\nGROUP BY\n    repo_name\nORDER BY\n    comment_count DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(*) AS issue_comment_events\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY issue_comment_events DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() cnt\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name\nORDER BY cnt DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "rails/rails",
          "count()": 14225
        },
        {
          "repo_name": "contao/test",
          "count()": 13481
        },
        {
          "repo_name": "mxcl/homebrew",
          "count()": 12690
        },
        {
          "repo_name": "contao/import",
          "count()": 12494
        },
        {
          "repo_name": "symfony/symfony",
          "count()": 7375
        },
        {
          "repo_name": "jquery/jquery-mobile",
          "count()": 6944
        },
        {
          "repo_name": "joyent/node",
          "count()": 6562
        },
        {
          "repo_name": "sympy/sympy",
          "count()": 6532
        },
        {
          "repo_name": "spotweb/spotweb",
          "count()": 6313
        },
        {
          "repo_name": "diaspora/diaspora",
          "count()": 5164
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.027085342,
        "rows_read": 1250141,
        "bytes_read": 3081893
      },
      "executionTime": 0.046,
      "requestId": "01JTN5MT0EGTHSXQ9DGYN4NAQM"
    }
  },
  "pipe_35.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') as total_issues,\n    countIf(event_type = 'IssueCommentEvent') as total_comments,\n    CAST(countIf(event_type = 'IssueCommentEvent') AS Float64) / countIf(event_type = 'IssuesEvent' AND action = 'opened') as comment_ratio\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING total_issues > 0\nORDER BY comment_ratio DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues_opened,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    if(issues_opened > 0, issue_comments / issues_opened, 0) AS comment_issue_ratio\nFROM github_events\nWHERE created_at >= now() - INTERVAL 1 YEAR\nGROUP BY repo_name\nHAVING issues_opened > 0\nORDER BY comment_issue_ratio DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNTIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    COUNTIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues,\n    issue_comments / NULLIF(issues, 0) AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comment_count,\n    SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issue_count,\n    safeDivide(issue_comment_count, issue_count) AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issue_count > 0\nORDER BY ratio DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues,\n    issue_comments / issues AS ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS total_issue_comments,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS total_issues,\n    total_issue_comments / total_issues AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING total_issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues_count, \n  countIf(event_type = 'IssueCommentEvent') AS comments_count, \n  comments_count / issues_count AS ratio\nFROM \n  github_events\nWHERE \n  event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY \n  repo_name\nHAVING \n  issues_count > 100\nORDER BY \n  ratio DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comments,\n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issues,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) * 1.0 / \n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS comment_to_issue_ratio\nFROM \n  github_events\nWHERE \n  event_type IN ('IssueCommentEvent', 'IssuesEvent')\n  AND action IN ('', 'opened')\nGROUP BY \n  repo_name\nORDER BY \n  comment_to_issue_ratio DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name, \n  sum(if(event_type = 'IssueCommentEvent', 1, 0)) AS issue_comments, \n  sum(if(event_type = 'IssuesEvent' AND action = 'opened', 1, 0)) AS issues,\n  sum(if(event_type = 'IssueCommentEvent', 1, 0)) / sum(if(event_type = 'IssuesEvent' AND action = 'opened', 1, 0)) AS ratio\nFROM \n  github_events\nGROUP BY \n  repo_name\nORDER BY \n  ratio DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(comment_id) AS issue_comments_count,\n  COUNT(number) AS issues_count,\n  COUNT(comment_id) / COUNT(number) AS comment_to_issue_ratio\nFROM github_events\nWHERE action = 'opened'\nGROUP BY repo_name\nORDER BY comment_to_issue_ratio DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(event_type = 'IssueCommentEvent') / countIf(event_type = 'IssuesEvent') AS issue_comment_to_issue_ratio\nFROM\n  github_events\nWHERE\n  event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY\n  repo_name\nORDER BY\n  issue_comment_to_issue_ratio DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " %\n\nSELECT\n  repo_name,\n  (SUM(comments) / COUNT(DISTINCT number)) AS ratio\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' OR event_type = 'IssuesEvent'\nGROUP BY repo_name\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(event_type = 'IssueCommentEvent') AS issue_comments,\n  sum(event_type = 'IssuesEvent' AND action = 'opened') AS issues_opened,\n  if(sum(event_type = 'IssuesEvent' AND action = 'opened') = 0, 0, sum(event_type = 'IssueCommentEvent') / sum(event_type = 'IssuesEvent' AND action = 'opened')) AS comment_to_issue_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY comment_to_issue_ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    countIf(action='opened') AS issues, \n    sum(comments) AS issue_comments, \n    issue_comments / issues AS ratio\nFROM github_events\nWHERE event_type='IssuesEvent'\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comments,\n    SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issues,\n    (SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) / NULLIF(SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END), 0)) AS ratio\nFROM \n    github_events\nGROUP BY \n    repo_name\nORDER BY \n    ratio DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  countIf(event_type = 'IssueCommentEvent') AS issue_comments,\n  countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues_opened,\n  countIf(event_type = 'IssueCommentEvent') / countIf(event_type = 'IssuesEvent' AND action = 'opened') AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issues_opened > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(event_type = 'IssueCommentEvent') AS comments_count,\n  sum(event_type = 'IssuesEvent' AND action = 'opened') AS issues_count,\n  sum(event_type = 'IssueCommentEvent') / sum(event_type = 'IssuesEvent' AND action = 'opened') AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING sum(event_type = 'IssuesEvent' AND action = 'opened') > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum(event_type = 'IssueCommentEvent' AND action = 'created') AS comments,\n  sum(event_type = 'IssuesEvent' AND action = 'opened') AS issues,\n  sum(event_type = 'IssueCommentEvent' AND action = 'created')*1.0 / sum(event_type = 'IssuesEvent' AND action = 'opened') AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    countIf(event_type = 'IssueCommentEvent') AS comment_count,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issue_count,\n    comment_count / issue_count AS comment_to_issue_ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING issue_count > 0\nORDER BY comment_to_issue_ratio DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') as issues_count,\n    countIf(event_type = 'IssueCommentEvent') as issue_comments_count,\n    CASE \n        WHEN issues_count > 0 \n        THEN issue_comments_count / issues_count \n        ELSE 0 \n    END as comment_to_issue_ratio\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING issues_count > 0\nORDER BY comment_to_issue_ratio DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNTIf(event_type = 'IssueCommentEvent') / COUNTIf(event_type = 'IssuesEvent' AND action = 'opened') AS issue_comment_to_issue_ratio\nFROM github_events\nWHERE event_type IN ('IssueCommentEvent', 'IssuesEvent')\nGROUP BY repo_name\nHAVING COUNTIf(event_type = 'IssuesEvent' AND action = 'opened') > 0\nORDER BY issue_comment_to_issue_ratio DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comments,\n    SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issues,\n    issue_comments / NULLIF(issues, 0) AS comment_to_issue_ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY comment_to_issue_ratio DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) AS issue_comments_count,\n  SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) AS issues_count,\n  CASE\n    WHEN SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END) > 0\n    THEN SUM(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 ELSE 0 END) / SUM(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 ELSE 0 END)\n    ELSE 0\n  END AS ratio\nFROM github_events\nGROUP BY repo_name\nHAVING ratio > 0  -- To avoid repositories with no issues\nORDER BY ratio DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    countIf(event_type = 'IssueCommentEvent' AND action = 'created') AS comments,\n    countIf(event_type = 'IssuesEvent' AND action = 'opened') AS issues,\n    comments / issues AS ratio\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'IssueCommentEvent')\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 END) AS issue_comment_count,\n    COUNT(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 END) AS issue_count,\n    (COUNT(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 END) / NULLIF(COUNT(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN 1 END), 0)) AS comment_to_issue_ratio\nFROM github_events\nGROUP BY repo_name\nORDER BY comment_to_issue_ratio DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(DISTINCT CASE WHEN (event_type = 'IssuesEvent' OR event_type = 'PullRequestEvent') AND action = 'opened' THEN number END) AS issue_count,\n    COUNT(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 END) AS comment_count,\n    COUNT(CASE WHEN event_type = 'IssueCommentEvent' THEN 1 END) /\n    NULLIF(COUNT(DISTINCT CASE WHEN (event_type = 'IssuesEvent' OR event_type = 'PullRequestEvent') AND action = 'opened' THEN number END), 0) AS comment_issue_ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issue_count > 0\nORDER BY comment_issue_ratio DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  sum((event_type = 'IssueCommentEvent') AND (action = 'created')) issue_comments,\n  sum((event_type = 'IssuesEvent') AND (action = 'opened')) issues,\n  sum((event_type = 'IssueCommentEvent') AND (action = 'created')) / sum((event_type = 'IssuesEvent') AND (action = 'opened')) ratio\nFROM github_events\nGROUP BY repo_name\nHAVING issues > 0\nORDER BY ratio DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "rails/rails",
          "comments": 14225,
          "issues": 886,
          "ratio": 16.06
        },
        {
          "repo_name": "contao/test",
          "comments": 13481,
          "issues": 2376,
          "ratio": 5.67
        },
        {
          "repo_name": "mxcl/homebrew",
          "comments": 12690,
          "issues": 1403,
          "ratio": 9.04
        },
        {
          "repo_name": "contao/import",
          "comments": 12494,
          "issues": 2925,
          "ratio": 4.27
        },
        {
          "repo_name": "symfony/symfony",
          "comments": 7375,
          "issues": 541,
          "ratio": 13.63
        },
        {
          "repo_name": "jquery/jquery-mobile",
          "comments": 6944,
          "issues": 699,
          "ratio": 9.93
        },
        {
          "repo_name": "joyent/node",
          "comments": 6562,
          "issues": 732,
          "ratio": 8.96
        },
        {
          "repo_name": "sympy/sympy",
          "comments": 6532,
          "issues": 308,
          "ratio": 21.21
        },
        {
          "repo_name": "spotweb/spotweb",
          "comments": 6313,
          "issues": 324,
          "ratio": 19.48
        },
        {
          "repo_name": "diaspora/diaspora",
          "comments": 5164,
          "issues": 449,
          "ratio": 11.5
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "issues",
          "type": "UInt64"
        },
        {
          "name": "ratio",
          "type": "Float64"
        }
      ],
      "statistics": {
        "elapsed": 0.034001688,
        "rows_read": 1250141,
        "bytes_read": 6745397
      },
      "executionTime": 0.054,
      "requestId": "01JTN5MV16KBD9CABW3X0W78F1"
    }
  },
  "pipe_36.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number as issue_number,\n    count(*) as comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    number,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, comments FROM github_events WHERE event_type = 'IssueCommentEvent' LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, count() AS comments FROM github_events WHERE event_type = 'IssueCommentEvent' GROUP BY repo_name, number ORDER BY comments DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.4581689048996311,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number,\n    count(*) AS comments_count\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent' AND action = 'created'\nGROUP BY\n    repo_name,\n    number\nORDER BY\n    comments_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, comments FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' ORDER BY comments DESC LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  number, \n  comments \nFROM \n  github_events \nWHERE \n  event_type = 'IssuesEvent' \n  AND action = 'opened' \n  AND state = 'open' \nORDER BY \n  comments DESC \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, comments FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' ORDER BY comments DESC LIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  number,\n  comments\nFROM github_events\nWHERE action = 'opened'\nGROUP BY repo_name, number\nORDER BY comments DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  repo_name,\n  number,\n  comments,\n  concat(repo_name, ' #', cast(number, String)) AS repo_issue\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\nGROUP BY\n  repo_name,\n  number,\n  comments\nORDER BY\n  comments DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number,\n  COUNT(comment_id) AS comment_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\nGROUP BY\n  repo_name,\n  number\nORDER BY\n  comment_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, comments FROM github_events WHERE event_type = 'IssuesEvent' AND action = 'opened' ORDER BY comments DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  CONCAT(repo_name, ' #', number) AS repo_issue,\n  comments AS comment_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nORDER BY comments DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat(repo_name, '#', number) AS repo_issue, \n    comments \nFROM \n    github_events \nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened' \nORDER BY \n    comments DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  number,\n  count() AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.4581689048996311,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number,\n  count() comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY\n  repo_name,\n  number\nORDER BY\n  comment_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.4581689048996311,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number issue_number,\n  count() comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY\n  repo_name,\n  number\nORDER BY\n  comment_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number,\n    comments\nFROM github_events \nWHERE event_type = 'IssuesEvent' \n    AND action = 'opened'\n    AND comments > 0\nORDER BY comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number AS issue_number,\n    MAX(comments) AS total_comments\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nGROUP BY repo_name, issue_number\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number AS issue_number,\n    comments AS comment_count\nFROM github_events\nWHERE event_type = 'IssuesEvent' AND action = 'opened'\nORDER BY comments DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, number, count(*) AS comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.4581689048996311,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number,\n    count() AS comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' AND action = 'created'\nGROUP BY\n    repo_name,\n    number\nORDER BY comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.5601299529614375,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name AS repo,\n    number AS issue_number,\n    COUNT(DISTINCT comment_id) AS comment_count\nFROM\n    github_events\nWHERE\n    event_type = 'IssueCommentEvent'\nGROUP BY\n    repo_name, number\nORDER BY\n    comment_count DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    number as issue_number,\n    count(*) as comment_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, number\nORDER BY comment_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.4581689048996311,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name repo, number issue_number, count() comment_count FROM github_events WHERE event_type = 'IssueCommentEvent' AND action = 'created' GROUP BY repo_name, number ORDER BY comment_count DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "contao/issues",
          "number": 1,
          "comments": 169
        },
        {
          "repo_name": "plamoni/SiriProxy",
          "number": 226,
          "comments": 161
        },
        {
          "repo_name": "rails/rails",
          "number": 505,
          "comments": 130
        },
        {
          "repo_name": "mangosR2/mangos",
          "number": 456,
          "comments": 125
        },
        {
          "repo_name": "symphonycms/symphony-2",
          "number": 849,
          "comments": 113
        },
        {
          "repo_name": "robotlegs/robotlegs-framework",
          "number": 43,
          "comments": 110
        },
        {
          "repo_name": "spotweb/spotweb",
          "number": 1133,
          "comments": 103
        },
        {
          "repo_name": "jashkenas/coffee-script",
          "number": 1495,
          "comments": 101
        },
        {
          "repo_name": "phaed420/SimpleClans",
          "number": 87,
          "comments": 99
        },
        {
          "repo_name": "nose-devs/nose",
          "number": 125,
          "comments": 97
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.027527006,
        "rows_read": 1250141,
        "bytes_read": 7661273
      },
      "executionTime": 0.046,
      "requestId": "01JTN5MW26Y7ZK616P0E0W2ASQ"
    }
  },
  "pipe_37.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 1,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number,\n    count(DISTINCT actor_login) as unique_commenters,\n    count(*) as total_comments\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND number > 10\nGROUP BY repo_name, number\nHAVING total_comments >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number,\n    COUNT(*) AS comment_count,\n    COUNT(DISTINCT actor_login) AS author_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND number > 10\nGROUP BY repo_name, number\nHAVING comment_count >= 10\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    COUNT(*) AS comment_count,\n    COUNT(DISTINCT actor_login) AS unique_comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND action = 'created'\nGROUP BY repo_name, number, title\nHAVING comment_count > 10 AND unique_comment_authors >= 10\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "  \n\nSELECT \n    repo_name,\n    number AS issue_number,\n    COUNT(comment_id) AS total_comments,\n    COUNT(DISTINCT actor_login) AS unique_comment_authors\nFROM github_events\nWHERE \n    event_type = 'IssueCommentEvent'\n    AND number > 10\nGROUP BY \n    repo_name, \n    number\nHAVING \n    COUNT(comment_id) >= 10\nORDER BY \n    total_comments DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    number,\n    COUNT(comment_id) AS total_comments,\n    COUNT(DISTINCT actor_login) AS distinct_comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY\n    repo_name,\n    number\nHAVING total_comments >= 10\nORDER BY\n    total_comments DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number,\n    count() AS comments,\n    count(DISTINCT actor_login) AS authors\nFROM github_events\nWHERE\n    event_type = 'IssueCommentEvent'\nGROUP BY\n    repo_name,\n    number\nHAVING\n    comments >= 10 AND authors >= 10\nORDER BY\n    comments DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number,\n    count() AS total_comments,\n    uniq(actor_login) AS comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' AND action = 'created'\nGROUP BY repo_name, number\nHAVING total_comments >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  number, \n  count() as comment_count, \n  uniqExact(actor_login) as comment_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'IssueCommentEvent' \n  AND action = 'created'\n  AND number > 10\nGROUP BY \n  repo_name, \n  number\nHAVING \n  comment_count >= 10\nORDER BY \n  comment_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    repo_name,\n    number,\n    comments,\n    uniqMerge(comment_authors_state) AS comment_authors\nFROM \n    github_events\nWHERE \n    event_type = 'IssueCommentEvent'\n    AND action = 'created'\n    AND number > 10\n    AND comments >= 10\nGROUP BY \n    repo_name,\n    number\nORDER BY \n    comments DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    number, \n    comments, \n    countDistinct(actor_login) as comment_authors\nFROM \n    github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened' \n    AND comments >= 10\nGROUP BY \n    repo_name, \n    number, \n    comments\nORDER BY \n    comments DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  number,\n  COUNT(DISTINCT comment_id) AS comment_count,\n  COUNT(DISTINCT actor_login) AS author_count\nFROM github_events\nWHERE action = 'opened'\nGROUP BY repo_name, number\nHAVING comment_count >= 10\nORDER BY comment_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  repo_name,\n  number,\n  comments,\n  countDistinct(actor_login) as comment_authors\nFROM\n  github_events\nWHERE\n  event_type = 'IssuesEvent'\n  AND action = 'opened'\n  AND number >= 10\nGROUP BY\n  repo_name,\n  number\nHAVING\n  comments >= 10\n  AND countDistinct(actor_login) >= 10\nORDER BY\n  comments DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.8087249000814191,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number,\n  COUNT(DISTINCT comment_id) AS comment_count,\n  COUNT(DISTINCT creator_user_login) AS author_count\nFROM\n  github_events\nWHERE\n  event_type = 'IssueCommentEvent'\n  AND action = 'created'\nGROUP BY\n  repo_name,\n  number\nHAVING\n  comment_count >= 10\nORDER BY\n  comment_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  number, \n  count() AS total_comments, \n  uniq(actor_login) AS unique_comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND number > 10\nGROUP BY repo_name, number\nHAVING total_comments >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    number AS issue_number, \n    comments AS comments_count, \n    countDistinct(author_association) AS unique_comment_authors\nFROM github_events\nWHERE \n    event_type = 'IssuesEvent' \n    AND action = 'opened' \n    AND number > 10\nGROUP BY \n    repo_name, \n    issue_number, \n    comments\nHAVING \n    comments >= 10\nORDER BY \n    comments_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    number, \n    count(comments) AS total_comments, \n    count(DISTINCT actor_login) AS unique_authors \nFROM \n    github_events \nWHERE \n    event_type = 'IssuesEvent' \n    AND comments >= 10 \nGROUP BY \n    repo_name, \n    number \nHAVING \n    total_comments > 10 \nORDER BY \n    total_comments DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number,\n  count(*) comments_count,\n  count(DISTINCT actor_login) authors_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND number > 10\nGROUP BY repo_name, number\nHAVING comments_count >= 10 AND authors_count >= 10\nORDER BY comments_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number issue_number,\n  count() comment_count,\n  uniqExact(actor_login) author_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND action = 'created'\n  AND number > 10\nGROUP BY\n  repo_name,\n  number\nHAVING\n  author_count >= 10\nORDER BY\n  comment_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number,\n  count(*) comment_count,\n  uniq(actor_login) comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND action = 'created'\n  AND number > 10\nGROUP BY\n  repo_name,\n  number\nHAVING\n  comment_authors >= 10\nORDER BY\n  comment_count DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    number AS issue_number,\n    COUNT(*) AS comment_count,\n    COUNT(DISTINCT actor_login) AS unique_comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n    AND number > 10\nGROUP BY repo_name, number\nHAVING comment_count >= 10\nORDER BY comment_count DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    number,\n    title,\n    COUNT(*) as total_comments,\n    uniq(actor_login) as unique_comment_authors\nFROM github_events \nWHERE event_type = 'IssueCommentEvent' \n    AND number > 10\nGROUP BY repo_name, number, title\nHAVING total_comments >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number AS issue_number,\n    COUNT(*) AS total_comments,\n    COUNT(DISTINCT actor_login) AS unique_comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nGROUP BY repo_name, issue_number\nHAVING total_comments >= 10 AND issue_number > 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number AS issue_number,\n    COUNT(*) AS comment_count,\n    COUNT(DISTINCT actor_login) AS unique_comment_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\nAND number > 10\nGROUP BY repo_name, number\nHAVING comment_count >= 10\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  number AS issue_number,\n  COUNT(*) AS comment_count,\n  COUNT(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' AND number > 10\nGROUP BY repo_name, number\nHAVING COUNT(*) >= 10\nORDER BY COUNT(*) DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.421543742516876,
          "fScore": 0.9
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number,\n    count() AS comments,\n    uniq(actor_login) AS authors\nFROM github_events\nWHERE event_type = 'IssueCommentEvent' AND action = 'created'\nGROUP BY\n    repo_name,\n    number\nHAVING\n    comments >= 10 AND authors >= 10\nORDER BY comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 0.7633203615228886,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n    repo_name,\n    number AS issue_number,\n    COUNT(comment_id) AS comment_count,\n    COUNT(DISTINCT actor_login) AS comment_authors_count\nFROM\n    github_events\nWHERE\n    event_type = 'IssueCommentEvent'\n    AND number >= 10\nGROUP BY\n    repo_name,\n    number\nHAVING\n    COUNT(comment_id) >= 10\nORDER BY\n    comment_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    number AS issue_number,\n    countIf(event_type = 'IssueCommentEvent') AS comment_count,\n    uniqIf(actor_login, event_type = 'IssueCommentEvent') AS unique_comment_authors\nFROM github_events\nWHERE\n    ((event_type = 'IssuesEvent' AND action = 'opened') OR event_type = 'IssueCommentEvent')\n    AND number > 10\nGROUP BY repo_name, number\nHAVING unique_comment_authors >= 10\nORDER BY comment_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo_name,\n  number number,\n  count() comments_count,\n  uniqExact(actor_login) authors_count\nFROM github_events\nWHERE event_type = 'IssueCommentEvent'\n  AND action = 'created'\n  AND number > 10\nGROUP BY\n  repo_name,\n  number\nHAVING\n  count() >= 10\n  AND uniqExact(actor_login) >= 10\nORDER BY\n  comments_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "plamoni/SiriProxy",
          "number": 226,
          "comments": 161,
          "authors": 11
        },
        {
          "repo_name": "rails/rails",
          "number": 505,
          "comments": 130,
          "authors": 17
        },
        {
          "repo_name": "symphonycms/symphony-2",
          "number": 849,
          "comments": 113,
          "authors": 12
        },
        {
          "repo_name": "robotlegs/robotlegs-framework",
          "number": 43,
          "comments": 110,
          "authors": 12
        },
        {
          "repo_name": "jashkenas/coffee-script",
          "number": 1495,
          "comments": 101,
          "authors": 24
        },
        {
          "repo_name": "rgladwell/m2e-android",
          "number": 45,
          "comments": 97,
          "authors": 15
        },
        {
          "repo_name": "plamoni/SiriProxy",
          "number": 210,
          "comments": 90,
          "authors": 11
        },
        {
          "repo_name": "midgetspy/Sick-Beard",
          "number": 185,
          "comments": 87,
          "authors": 24
        },
        {
          "repo_name": "diaspora/diaspora",
          "number": 1750,
          "comments": 78,
          "authors": 22
        },
        {
          "repo_name": "chriseppstein/compass",
          "number": 516,
          "comments": 72,
          "authors": 10
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "number",
          "type": "Int32"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.041129198,
        "rows_read": 1250141,
        "bytes_read": 9493025
      },
      "executionTime": 0.06,
      "requestId": "01JTN5MX2YVMNFTE199MJXDABQ"
    }
  },
  "pipe_38.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as events_count\nFROM github_events\nWHERE lower(body) LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY events_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.766084966570525,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE body LIKE '%tensorflow%' OR title LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9033456423472802,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE \n    (event_type = 'IssueCommentEvent' OR event_type = 'IssuesEvent' OR event_type = 'PullRequestEvent' OR event_type = 'PullRequestReviewCommentEvent')\n    AND (body LIKE '%tensorflow%' OR title LIKE '%tensorflow%')\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5124684972975035,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE body LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE lower(repo_name) LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5124684972975035,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS events FROM github_events WHERE body LIKE '%tensorflow%' GROUP BY repo_name ORDER BY events DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5124684972975035,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS events_count\nFROM github_events\nWHERE multiSearchAny(body, ['tensorflow'])\nGROUP BY repo_name\nORDER BY events_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9230778668143195,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as num_events \nFROM github_events \nWHERE lower(body) LIKE '%tensorflow%' OR lower(title) LIKE '%tensorflow%' \nGROUP BY repo_name \nORDER BY num_events DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  repo_name,\n  COUNT(*) as count\nFROM \n  github_events\nWHERE \n  (LOWER(repo_name) LIKE '%tensorflow%' \n  OR LOWER(title) LIKE '%tensorflow%' \n  OR LOWER(body) LIKE '%tensorflow%' \n  OR arrayReduce('concat', labels) LIKE '%tensorflow%'\n  OR LOWER(assignee) LIKE '%tensorflow%' \n  OR arrayReduce('concat', assignees) LIKE '%tensorflow%' \n  OR LOWER(assignee) LIKE '%tensorflow%' \n  OR arrayReduce('concat', requested_reviewers) LIKE '%tensorflow%' \n  OR arrayReduce('concat', requested_teams) LIKE '%tensorflow%')\n  AND event_type != 'GollumEvent'\nGROUP BY \n  repo_name\nORDER BY \n  count DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count() as num_events\nFROM \n  github_events\nWHERE \n  lower(body) LIKE '%tensorflow%'\nGROUP BY \n  repo_name\nORDER BY \n  num_events DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(*) AS event_count\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent' AND\n  action = 'opened' AND\n  body LIKE '%tensorflow%'\nGROUP BY\n  repo_name\nORDER BY\n  event_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5124684972975035,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS events_count\nFROM\n  github_events\nWHERE\n  body LIKE '%tensorflow%'\nGROUP BY\n  repo_name\nORDER BY\n  events_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  repo_name,\n  count() as event_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent' AND\n  body LIKE '%tensorflow%'\nGROUP BY\n  repo_name\nORDER BY\n  event_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as event_count FROM github_events WHERE lower(repo_name) LIKE '%tensorflow%' GROUP BY repo_name ORDER BY event_count DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  count() AS event_count\nFROM github_events\nWHERE repo_name LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count(*) as event_count \nFROM github_events \nWHERE repo_name LIKE '%tensorflow%' \nGROUP BY repo_name \nORDER BY event_count DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.7665739882107923,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name AS repo_name, \n  count(*) AS event_count \nFROM github_events \nWHERE body IS NOT NULL \n  AND regexp_matches(body, '.*[Tt]ensorflow.*') \nGROUP BY repo_name \nORDER BY event_count DESC \nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.766084966570525,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS event_count\nFROM github_events\nWHERE (body LIKE '%tensorflow%' OR title LIKE '%tensorflow%')\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9230778668143195,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count() event_count \nFROM github_events \nWHERE \n  (REGEXP_MATCHES(body, '(?i)tensorflow') \n   OR REGEXP_MATCHES(title, '(?i)tensorflow')) \nGROUP BY repo_name \nORDER BY event_count DESC \nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as event_count\nFROM github_events \nWHERE lower(body) LIKE '%tensorflow%' \n   OR lower(title) LIKE '%tensorflow%'\n   OR lower(repo_name) LIKE '%tensorflow%'\nGROUP BY repo_name \nORDER BY event_count DESC \nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS event_count\nFROM github_events\nWHERE body ILIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS event_count\nFROM github_events\nWHERE body ILIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.5124684972975035,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS event_count\nFROM github_events\nWHERE body LIKE '%tensorflow%'\nGROUP BY repo_name\nORDER BY event_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9230778668143195,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS events_count\nFROM github_events\nWHERE\n    REGEXP_EXTRACT(body, '(?i)tensorflow', 0) != '' OR REGEXP_EXTRACT(title, '(?i)tensorflow', 0) != ''\nGROUP BY\n    repo_name\nORDER BY\n    events_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9031602273663993,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS event_count\nFROM\n    github_events\nWHERE\n    event_type = 'PullRequestEvent' AND body LIKE '%tensorflow%'\n    OR event_type = 'IssueCommentEvent' AND body LIKE '%tensorflow%'\n    OR event_type = 'CommitCommentEvent' AND body LIKE '%tensorflow%'\n    OR event_type = 'IssuesEvent' AND body LIKE '%tensorflow%'\nGROUP BY\n    repo_name\nORDER BY\n    event_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "The corrected SQL query to find the top 10 repositories with the most events mentioning \"tensorflow\" is:\n\n\nSELECT repo_name, COUNT(*) as event_count FROM github_events WHERE (isNotNull(body) AND regexp_matches(body, '(?i)tensorflow')) OR (isNotNull(title) AND regexp_matches(title, '(?i)tensorflow')) GROUP BY repo_name ORDER BY event_count DESC LIMIT 10\n\n\nThus, the final answer is:\n\n\nSELECT repo_name, COUNT(*) as event_count FROM github_events WHERE (isNotNull(body) AND regexp_matches(body, '(?i)tensorflow')) OR (isNotNull(title) AND regexp_matches(title, '(?i)tensorflow')) GROUP BY repo_name ORDER BY event_count DESC LIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() events_count\nFROM github_events\nWHERE\n  regexp_matches(repo_name, '(?i)tensorflow')\n  OR (body IS NOT NULL AND regexp_matches(body, '(?i)tensorflow'))\n  OR (title IS NOT NULL AND regexp_matches(title, '(?i)tensorflow'))\nGROUP BY repo_name\nORDER BY events_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "tensorflow/tensorflow",
          "count()": 27049
        },
        {
          "repo_name": "tensorflow/models",
          "count()": 5254
        },
        {
          "repo_name": "ray-project/ray",
          "count()": 3028
        },
        {
          "repo_name": "tensorflow/tfjs",
          "count()": 3003
        },
        {
          "repo_name": "tensorflow/addons",
          "count()": 1289
        },
        {
          "repo_name": "tensorflow/datasets",
          "count()": 1139
        },
        {
          "repo_name": "huggingface/transformers",
          "count()": 824
        },
        {
          "repo_name": "tensorflow/tensorboard",
          "count()": 752
        },
        {
          "repo_name": "onnx/tensorflow-onnx",
          "count()": 732
        },
        {
          "repo_name": "tensorflow/probability",
          "count()": 730
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 4.751203294,
        "rows_read": 200000000,
        "bytes_read": 29767745212
      },
      "executionTime": 4.796,
      "requestId": "01JTN5MY4X7W1730JS77XDHZE2"
    }
  },
  "pipe_39.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS comment_count \nFROM github_events \nWHERE event_type = 'CommitCommentEvent' \nGROUP BY repo_name \nORDER BY comment_count DESC \nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    COUNT(*) AS comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS total\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY total DESC\nLIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() AS num_commit_comments FROM github_events WHERE event_type = 'CommitCommentEvent' GROUP BY repo_name ORDER BY num_commit_comments DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS comments\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comments DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as count FROM github_events WHERE event_type = 'CommitCommentEvent' GROUP BY repo_name ORDER BY count DESC LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  COUNT(comment_id) as count \nFROM \n  github_events \nWHERE \n  event_type = 'CommitCommentEvent' \nGROUP BY \n  repo_name \nORDER BY \n  count DESC \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count(*) as num_commit_comments\nFROM \n  github_events\nWHERE \n  event_type = 'CommitCommentEvent'\nGROUP BY \n  repo_name\nORDER BY \n  num_commit_comments DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS commit_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'CommitCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  commit_comments_count DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS commit_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'CommitCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  commit_comments_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(comment_id) AS commit_comments_count\nFROM\n  github_events\nWHERE\n  event_type = 'CommitCommentEvent'\nGROUP BY\n  repo_name\nORDER BY\n  commit_comments_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, count() as commit_comment_count FROM github_events WHERE event_type = 'CommitCommentEvent' GROUP BY repo_name ORDER BY commit_comment_count DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    sumIf(comments, event_type = 'CommitCommentEvent') AS commit_comments_count\nFROM github_events\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(comment_id) AS commit_comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comment_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(*) commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() commit_comments\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() commit_comments\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count() AS commit_comments\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() as commit_comments_count\nFROM github_events \nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS commit_comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comment_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(*) AS commit_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS comments\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, COUNT(comment_id) as comment_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY comment_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name, COUNT(*) as commit_comments_count\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() commit_comments\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name\nORDER BY commit_comments DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "dcos/dcos",
          "comments": 99250
        },
        {
          "repo_name": "siggetest/githubtest",
          "comments": 52171
        },
        {
          "repo_name": "NREL/EnergyPlus",
          "comments": 47886
        },
        {
          "repo_name": "bambootest-bot/githubtest",
          "comments": 46876
        },
        {
          "repo_name": "w4ctech/front-end-rss",
          "comments": 35958
        },
        {
          "repo_name": "xamarin/xamarin-macios",
          "comments": 30631
        },
        {
          "repo_name": "zeit-github-test/github-e2e-tests-dev",
          "comments": 28463
        },
        {
          "repo_name": "miabot/galleries.csv",
          "comments": 18622
        },
        {
          "repo_name": "zeit-github-test/github-e2e-tests-dev-alias-v2-without-alias",
          "comments": 16107
        },
        {
          "repo_name": "zeit-github-test/github-e2e-tests-dev-alias-v2-with-alias",
          "comments": 16077
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "comments",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.074816732,
        "rows_read": 6806781,
        "bytes_read": 20333343
      },
      "executionTime": 0.094,
      "requestId": "01JTN5N3SAPFRBRPXFRBD4TS8E"
    }
  },
  "pipe_40.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name || '/commit/' || commit_id as commit_url,\n    count(*) as total_comments,\n    uniq(actor_login) as unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    commit_id,\n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count(*) AS total_comments,\n    uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count() AS total_comments,\n    uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count() AS total_comments,\n    countDistinct(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    commit_id,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    COUNT() AS total_comments,\n    'https://github.com/' || repo_name || '/commit/' || commit_id AS commit_url\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY\n    repo_name,\n    commit_id\nHAVING COUNT(DISTINCT actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count() AS total_comments,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE\n    event_type = 'CommitCommentEvent'\nGROUP BY\n    commit_url, commit_id, repo_name\nHAVING\n    count(DISTINCT actor_login) >= 10\nORDER BY\n    total_comments DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8898317945209641,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    commit_id,\n    count(*) AS total_comments,\n    uniqExact(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent' AND repo_name != '' AND commit_id != ''\nGROUP BY repo_name, commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n  count() AS total_events,\n  count(DISTINCT actor_login) AS unique_authors,\n  sum(comments) AS total_comments\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent' AND ref_type = 'branch'\nGROUP BY \n  commit_id, repo_name\nHAVING \n  count(DISTINCT actor_login) >= 10 AND total_events > 1\nORDER BY \n  total_events DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  repo_name,\n  commit_id,\n  COUNT(DISTINCT actor_login) AS unique_authors,\n  COUNT(comment_id) AS total_comments,\n  CONCAT('https://github.com/', repo_name, '/commit/', commit_id) AS full_commit_url\nFROM \n  github_events\nWHERE \n  event_type = 'CommitCommentEvent'\nGROUP BY \n  repo_name,\n  commit_id\nHAVING \n  COUNT(DISTINCT actor_login) >= 10\nORDER BY \n  COUNT(comment_id) DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count(*) AS total_comments,\n    count(DISTINCT actor_login) AS unique_authors\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\nGROUP BY \n    repo_name, commit_id\nHAVING \n    count(DISTINCT actor_login) >= 10\nORDER BY \n    count(*) DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT\n  repo_name,\n  count() AS total_commits,\n  count(DISTINCT actor_login) AS unique_authors,\n  count(DISTINCT comment_id) AS total_comments,\n  url AS full_commit_url\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\n  AND action = 'created'\nGROUP BY\n  repo_name\nHAVING\n  total_commits >= 10\n  AND unique_authors >= 10\nORDER BY\n  total_commits DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  github_events.commit_id commit_id,\n  concat('https://github.com/',github_events.repo_name,'/commit/',github_events.commit_id) full_commit_url,\n  count() total_comments,\n  uniq(github_events.actor_login) unique_authors\nFROM\n  github_events\nWHERE\n  github_events.event_type = 'CommitCommentEvent'\nGROUP BY\n  github_events.commit_id\nHAVING\n  uniq(github_events.actor_login) >= {{{{Int(min_comments,10)}}}}\n  AND count() >= 10\nORDER BY\n  total_comments DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  ref,\n  COUNT(DISTINCT actor_login) AS unique_authors,\n  COUNT(*) AS total_comments,\n  'https://github.com/' || repo_name || '/commit/' || ref AS commit_url\nFROM\n  github_events\nWHERE\n  event_type = 'CommitCommentEvent'\nGROUP BY\n  repo_name,\n  ref\nHAVING\n  COUNT(DISTINCT actor_login) >= 10\nORDER BY\n  total_comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  commit_id,\n  concat('https://github.com/', repo_name, '/commit/', commit_id) AS full_commit_url,\n  count() AS total_comments,\n  uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING uniq(actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "SELECT \n    commit_id AS commit_url,\n    comments AS total_comments,\n    countDistinct(author_association) AS unique_authors\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY commit_id, comments\nHAVING countDistinct(actor_login) >= 10\nORDER BY count(*) DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    CONCAT('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    comments AS total_comments,\n    COUNT(DISTINCT actor_login) AS unique_authors\nFROM \n    github_events\nWHERE \n    event_type = 'CommitCommentEvent'\nGROUP BY \n    commit_id, repo_name, comments\nHAVING \n    unique_authors >= 10\nORDER BY \n    COUNT(*) DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/commit/', commit_id) commit_url,\n    count(*) total_comments,\n    countDistinct(actor_login) unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING countDistinct(actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT concat('https://github.com/', repo_name, '/commit/', commit_id) commit_url, count() total_comments, uniqExact(actor_login) unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING uniqExact(actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT concat('https://github.com/',repo_name,'/commit/',commit_id) commit_url, count() total_comments, uniqExact(actor_login) unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING uniqExact(actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/commit/', commit_id) as full_commit_url,\n    count() as total_comments,\n    uniqExact(actor_login) as unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    CONCAT('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count() AS commit_events,\n    count(DISTINCT actor_login) AS unique_commenters,\n    uniq(actor_login) AS unique_authors\nFROM github_events \nWHERE event_type = 'CommitCommentEvent' \n    AND commit_id != ''\nGROUP BY repo_name, commit_id\nHAVING unique_commenters >= 10\nORDER BY commit_events DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count() AS total_comments,\n    uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY repo_name, commit_id\nHAVING uniq(actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    commit_id,\n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    COUNT(*) AS total_comments,\n    COUNT(DISTINCT actor_login) AS unique_commenters\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY commit_id, repo_name\nHAVING unique_commenters >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  commit_id AS full_commit_url,\n  COUNT(*) AS total_comments,\n  COUNT(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY commit_id\nHAVING COUNT(DISTINCT actor_login) >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS commit_url,\n    count() AS total_comments,\n    uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'CommitCommentEvent'\nGROUP BY\n    commit_url,\n    repo_name,\n    commit_id\nHAVING unique_authors >= 10\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n    commit_id,\n    count() as commit_count,\n    uniq(actor_login) as unique_authors,\n    uniq(commit_id) as unique_commits,\n    uniq(creator_user_login) as unique_commenters,\n    uniq(commit_id) as unique_commits,\n    groupArray(concat('https://github.com/', repo_name, '/commit/', commit_id)) as full_commit_url,\n    sum(comments) as total_comments,\n    uniq(creator_user_login) as unique_commenters_count\nFROM\n    github_events\nWHERE\n    event_type = 'CommitCommentEvent'\n    AND action = 'created'\nGROUP BY\n    commit_id\nHAVING\n    unique_commenters_count >= 10\nORDER BY\n    commit_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    concat('https://github.com/', repo_name, '/commit/', commit_id) AS full_commit_url,\n    sum(if(event_type = 'CommitCommentEvent', 1, 0)) AS total_comments,\n    count(DISTINCT IF(event_type = 'CommitCommentEvent', actor_login, NULL)) AS unique_authors,\n    count(*) AS commit_event_count\nFROM github_events\nWHERE commit_id != '' AND event_type = 'CommitCommentEvent'\nGROUP BY commit_id, repo_name\nHAVING unique_authors >= 10\nORDER BY commit_event_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  concat('https://github.com/', repo_name, '/commit/', commit_id) commit_url,\n  count() total_comments,\n  uniqExact(actor_login) unique_authors\nFROM github_events\nWHERE\n  event_type = 'CommitCommentEvent'\n  AND commit_id != ''\nGROUP BY\n  repo_name,\n  commit_id\nHAVING\n  uniqExact(actor_login) >= 10\nORDER BY\n  total_comments DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "URL": "https://github.com/torvalds/linux/commit/8a104f8b5867c682d994ffa7a74093c54469c11f",
          "comments": 411,
          "authors": 181
        },
        {
          "URL": "https://github.com/SEI-ATL/select-best-player/commit/fdc6e0e073fa30acf2041ca0b1c9fecd662d88c8",
          "comments": 408,
          "authors": 31
        },
        {
          "URL": "https://github.com/zhaohmng/-21-/commit/0cc2b2a546ad51fb360ba800c67b057ea3270869",
          "comments": 376,
          "authors": 187
        },
        {
          "URL": "https://github.com/mosh-hamedani/vidly-mvc-5/commit/b727a26e1b4b88abe84a8b48208fec537db2ed43",
          "comments": 262,
          "authors": 140
        },
        {
          "URL": "https://github.com/mlouielu/cn_constitution_2018/commit/646c76a573ad49414e708c091393ddb7c437f286",
          "comments": 245,
          "authors": 181
        },
        {
          "URL": "https://github.com/yuuwill/1024app-android/commit/0b02f1815686fa657d7b4a9583019fe4d203b80a",
          "comments": 230,
          "authors": 142
        },
        {
          "URL": "https://github.com/iride2020/iRide-Token/commit/8f810b3700a24de0ee4f945ef84be7b2f1605610",
          "comments": 228,
          "authors": 183
        },
        {
          "URL": "https://github.com/hklcf/myTV-api/commit/375fa7520455b53fad622c0149a473ebee048e15",
          "comments": 198,
          "authors": 23
        },
        {
          "URL": "https://github.com/mosh-hamedani/vidly-mvc-5/commit/93f39efe3ef0ce9c25ef09ebef60ad2dfc1fe7f3",
          "comments": 176,
          "authors": 104
        },
        {
          "URL": "https://github.com/udacity/ud843-QuakeReport/commit/14541da929b771249ea8209698d324b61bbeee7e",
          "comments": 169,
          "authors": 87
        }
      ],
      "meta": [
        {
          "name": "URL",
          "type": "String"
        },
        {
          "name": "comments",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.275921944,
        "rows_read": 6806781,
        "bytes_read": 315403702
      },
      "executionTime": 0.296,
      "requestId": "01JTN5N4VHYPTCBV1P43VEJHVR"
    }
  },
  "pipe_41.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    'https://github.com/' || repo_name || '/pull/' || toString(number) as pr_url,\n    uniq(actor_login) as unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    'https://github.com/' || repo_name || '/pull/' || toString(number) AS pr_url,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    number,\n    COUNT(DISTINCT actor_login) AS unique_commenters,\n    'https://github.com/' || repo_name || '/pull/' || toString(number) AS pr_url\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_commenters DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    number,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    CONCAT('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY\n    repo_name,\n    number\nORDER BY\n    unique_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.18315198425951282,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    uniqIf(actor_login, event_type IN ('PullRequestReviewCommentEvent', 'IssueCommentEvent')) AS unique_comment_authors\nFROM github_events\nWHERE number > 0\nGROUP BY repo_name, number\nHAVING max(if(event_type = 'PullRequestEvent', 1, 0)) = 1 AND unique_comment_authors > 0\nORDER BY unique_comment_authors DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  CONCAT('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n  uniqExact(actor_login) AS unique_authors_count\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent' \n  AND action = 'created'\nGROUP BY \n  repo_name, number\nORDER BY \n  unique_authors_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  CONCAT('https://github.com/', repo_name, '/pull/', number) AS pr_url,\n  COUNT(DISTINCT actor_login) AS num_authors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent'\n  AND action = 'created'\nGROUP BY \n  repo_name, number\nORDER BY \n  num_authors DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  concat('https://github.com/', repo_name, '/pull/', number) as pr_url,\n  count(DISTINCT actor_login) as num_authors\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent'\nGROUP BY \n  repo_name, number\nORDER BY \n  num_authors DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(DISTINCT actor_login) AS unique_authors,\n  CONCAT('https://github.com/', repo_name, '/pull/', number) AS pr_url\nFROM github_events\nWHERE action = 'opened'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  concat('https://github.com/', repo_name, '/pull/', number) AS full_url,\n  uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " %\n\nSELECT\n  repo_name,\n  head_sha,\n  COUNT(DISTINCT creator_user_login) AS unique_authors\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestReviewCommentEvent'\nGROUP BY\n  repo_name,\n  head_sha\nORDER BY\n  unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n  uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  CONCAT('https://github.com/', repo_name, '/pull/', number) AS pr_url,\n  countDistinct(assignees) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY pr_url, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    CONCAT('https://github.com/', repo_name, '/pull/', number) AS pr_url, \n    COUNT(DISTINCT actor_login) AS unique_authors \nFROM \n    github_events \nWHERE \n    event_type = 'PullRequestReviewCommentEvent' \nGROUP BY \n    pr_url \nORDER BY \n    unique_authors DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  concat('https://github.com/', repo_name, '/pull/', toString(number)) full_url,\n  countDistinct(actor_login) unique_author_count\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_author_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  concat('https://github.com/', repo_name, '/pull/', toString(number)) pr_url,\n  count(DISTINCT actor_login) unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT concat('https://github.com/', repo_name, '/pull/', CAST(number AS String)) url, uniqExact(actor_login) unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\n    AND number > 0\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    CONCAT('https://github.com/', repo_name, '/pull/', toString(number)) as pr_url,\n    count(DISTINCT actor_login) as unique_authors\nFROM github_events \nWHERE event_type = 'PullRequestReviewCommentEvent' \n    AND number > 0\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    uniq(actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.33333333333333337,
          "numeric": 0,
          "fScore": 0.8000000000000002
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  concat('https://github.com/', repo_name, '/pull/', toString(number)) AS full_url,\n  count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY repo_name, number\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    concat('https://github.com/', repo_name, '/pull/', toString(number)) AS pr_url,\n    count(DISTINCT actor_login) AS unique_authors\nFROM github_events\nWHERE\n    event_type IN ('PullRequestReviewCommentEvent', 'PullRequestReviewEvent', 'IssueCommentEvent')\nGROUP BY\n    repo_name,\n    number\nHAVING\n    countIf(event_type LIKE 'PullRequest%') > 0\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.78209228016201,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  CONCAT('https://github.com/', repo_name, '/pull/', number) AS pull_request_url,\n  COUNT(DISTINCT actor_login) AS unique_authors_count\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened'\nGROUP BY repo_name, number\nORDER BY unique_authors_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    concat('https://github.com/', prs.repo_name, '/pull/', toString(prs.number)) as pr_url,\n    uniq(comments.actor_login) as unique_authors\nFROM github_events AS prs\nJOIN github_events AS comments\nON prs.repo_name = comments.repo_name AND prs.number = comments.number\nWHERE prs.event_type = 'PullRequestEvent'\nAND comments.event_type = 'PullRequestReviewCommentEvent'\nGROUP BY prs.repo_name, prs.number\nORDER BY unique_authors DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT concat('https://github.com/', repo_name, '/pull/', CAST(number AS String)) pr_url, uniqExact(actor_login) unique_authors FROM github_events WHERE event_type = 'PullRequestReviewCommentEvent' AND action = 'created' GROUP BY repo_name, number ORDER BY unique_authors DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "URL": "https://github.com/tc39/ecma262/pull/1062",
          "authors": 30
        },
        {
          "URL": "https://github.com/iojs/io.js/pull/1457",
          "authors": 19
        },
        {
          "URL": "https://github.com/JuliaLang/julialang.github.com/pull/437",
          "authors": 17
        },
        {
          "URL": "https://github.com/symfony/symfony/pull/24411",
          "authors": 16
        },
        {
          "URL": "https://github.com/zephyrproject-rtos/zephyr/pull/24152",
          "authors": 16
        },
        {
          "URL": "https://github.com/tgstation/tgstation/pull/34916",
          "authors": 16
        },
        {
          "URL": "https://github.com/tgstation/tgstation/pull/40312",
          "authors": 16
        },
        {
          "URL": "https://github.com/symfony/recipes/pull/466",
          "authors": 16
        },
        {
          "URL": "https://github.com/ManageIQ/manageiq/pull/7517",
          "authors": 15
        },
        {
          "URL": "https://github.com/tgstation/tgstation/pull/35440",
          "authors": 15
        }
      ],
      "meta": [
        {
          "name": "URL",
          "type": "String"
        },
        {
          "name": "authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.067109167,
        "rows_read": 4172440,
        "bytes_read": 39109886
      },
      "executionTime": 0.087,
      "requestId": "01JTN5N6428XCXPP8DKYWXC9RV"
    }
  },
  "pipe_42.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as total_pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY total_pushes DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "  \nSELECT \n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login AS author, count() AS pushes FROM github_events WHERE event_type = 'PushEvent' GROUP BY author ORDER BY pushes DESC LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, count() AS pushes FROM github_events WHERE event_type = 'PushEvent' GROUP BY actor_login ORDER BY pushes DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY pushes DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) as num_pushes \nFROM github_events \nWHERE event_type = 'PushEvent' \nGROUP BY actor_login \nORDER BY num_pushes DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  actor_login,\n  COUNT(*) as num_pushes\nFROM \n  github_events\nWHERE \n  event_type = 'PushEvent'\nGROUP BY \n  actor_login\nORDER BY \n  num_pushes DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login, \n    count() as num_pushes\nFROM \n    github_events\nWHERE \n    event_type = 'PushEvent'\nGROUP BY \n    actor_login\nORDER BY \n    num_pushes DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  COUNT(*) AS push_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  actor_login\nORDER BY\n  push_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count() AS push_count\nFROM\n  github_events\nWHERE\n  event_type = 'PushEvent'\nGROUP BY\n  actor_login\nORDER BY\n  push_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    COUNT(*) as push_count\nFROM\n    github_events\nWHERE\n    event_type = 'PushEvent'\nGROUP BY\n    actor_login\nORDER BY\n    push_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, count() as push_count FROM github_events WHERE event_type = 'PushEvent' GROUP BY actor_login ORDER BY push_count DESC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  actor_login,\n  count() AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS author,\n  count(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY\n  actor_login\nORDER BY\n  pushes DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count(*) pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY pushes DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    count() AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login,\n    COUNT(*) as push_count\nFROM github_events \nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login AS author,\n    COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT actor_login, COUNT(*) AS push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS pushes\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY pushes DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT actor_login, COUNT(*) as push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT actor_login, COUNT(*) as push_count\nFROM github_events\nWHERE event_type = 'PushEvent'\nGROUP BY actor_login\nORDER BY push_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  count() pushes\nFROM github_events\nWHERE event_type = 'PushEvent' AND actor_login != ''\nGROUP BY actor_login\nORDER BY pushes DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "actor_login": "LombiqBot",
          "c": 3507260
        },
        {
          "actor_login": "frankbaele",
          "c": 369489
        },
        {
          "actor_login": "chuan12",
          "c": 356449
        },
        {
          "actor_login": "ItzLevvie",
          "c": 276592
        },
        {
          "actor_login": "geos4s",
          "c": 262170
        },
        {
          "actor_login": "applepaper",
          "c": 257240
        },
        {
          "actor_login": "github-actions[bot]",
          "c": 232538
        },
        {
          "actor_login": "datarods-svc",
          "c": 198853
        },
        {
          "actor_login": "c1d5dc29-94f0-4b46-bc0a-397a2885eade",
          "c": 180627
        },
        {
          "actor_login": "renovate[bot]",
          "c": 171382
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.162183915,
        "rows_read": 75689153,
        "bytes_read": 223381427
      },
      "executionTime": 0.181,
      "requestId": "01JTN5N762R2V47HJBYRPA8ZX0"
    }
  },
  "pipe_43.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] as org_name,\n    count() as stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY org_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(*) AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS org_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY org_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    SUBSTRING_INDEX(repo_name, '/', 1) AS org_name,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY org_name\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization_name,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization_name\nORDER BY stars DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    lower(splitByChar('/', repo_name)[1]) AS organization, \n    count() AS stars_count\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    organization\nORDER BY \n    stars_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n    COUNT(*) AS num_stars\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    organization\nORDER BY \n    num_stars DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n    substringBefore(repo_name, '/') AS organization_name,\n    count() AS number_of_stars\nFROM \n    github_events\nWHERE \n    event_type = 15\nGROUP BY \n    substringBefore(repo_name, '/')\nORDER BY \n    number_of_stars DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login,\n  repo_name,\n  COUNT(*) AS stars_count\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login,\n  repo_name\nORDER BY\n  stars_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  actor_login,\n  COUNT() AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name,\n  actor_login\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS user,\n  repo_name AS organization,\n  COUNT(*) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  actor_login,\n  repo_name\nORDER BY\n  stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  splitByChar('/', repo_name)[1] AS organization,\n  count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.6336230671198414,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name AS organization,\n  count() AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY star_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.6336230671198414,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name AS organization_name, \n    COUNT(*) AS stars_count \nFROM \n    github_events \nWHERE \n    event_type = 'WatchEvent' \nGROUP BY \n    organization_name \nORDER BY \n    stars_count DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT SUBSTRING_INDEX(repo_name, '/', 1) organization,\n       COUNT(*) stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT substring_index(repo_name, '/', 1) org, count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY org\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT SUBSTRING_INDEX(repo_name, '/', 1) organization, count() stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] as organization,\n    count(*) as stars\nFROM github_events \nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    count() AS stars_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY stars_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY organization\nORDER BY star_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT SUBSTRING_INDEX(repo_name, '/', 1) AS owner, COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY owner\nORDER BY star_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    substring_index(repo_name, '/', 1) AS user_or_org,\n    count() AS stars\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY\n    user_or_org\nORDER BY\n    stars DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n  COUNT(*) AS stars\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  organization\nORDER BY\n  stars DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS owner,\n    COUNT(*) AS star_count\nFROM github_events\nWHERE event_type = 'WatchEvent' AND repo_name != ''\nGROUP BY owner\nORDER BY star_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 1,
          "numeric": 0,
          "fScore": 0
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT substring_index(repo_name,'/',1) organization, count() stars FROM github_events WHERE event_type = 'WatchEvent' GROUP BY substring_index(repo_name,'/',1) ORDER BY stars DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "org": "vuejs/",
          "stars": 108982
        },
        {
          "org": "sindresorhus/",
          "stars": 93511
        },
        {
          "org": "tensorflow/",
          "stars": 86682
        },
        {
          "org": "shadowsocks/",
          "stars": 47997
        },
        {
          "org": "square/",
          "stars": 46713
        },
        {
          "org": "reactjs/",
          "stars": 39799
        },
        {
          "org": "yahoo/",
          "stars": 36455
        },
        {
          "org": "yarnpkg/",
          "stars": 31480
        },
        {
          "org": "spring-projects/",
          "stars": 30189
        },
        {
          "org": "zeit/",
          "stars": 27822
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "stars",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.053372069,
        "rows_read": 7319235,
        "bytes_read": 21919077
      },
      "executionTime": 0.075,
      "requestId": "01JTN5N8B1ZB49GVVD0RTAYP6S"
    }
  },
  "pipe_44.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] as org_name,\n    count(DISTINCT repo_name) as repo_count\nFROM github_events\nGROUP BY org_name\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nGROUP BY organization\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY organization\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "  \n\nSELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE repo_name LIKE '%/%'\nGROUP BY organization\nORDER BY repo_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    SUBSTRING_INDEX(repo_name, '/', 1) AS org_name,\n    count() AS repo_count\nFROM github_events\nGROUP BY org_name\nORDER BY repo_count DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization_name,\n    count(DISTINCT repo_name) AS repo_count\nFROM github_events\nGROUP BY organization_name\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS org,\n    count(DISTINCT repo_name) AS num_repos\nFROM github_events\nGROUP BY org\nORDER BY num_repos DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    lower(splitByChar('/', repo_name)[1]) AS organization, \n    COUNT(DISTINCT repo_name) AS num_repos\nFROM \n    github_events\nGROUP BY \n    organization\nORDER BY \n    num_repos DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    substring_index(repo_name, '/', 1) AS organization,\n    count(*) as num_repos\nFROM \n    github_events\nGROUP BY \n    organization\nORDER BY \n    num_repos DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    count(*) AS num_repos\nFROM \n    github_events\nWHERE \n    event_type = 'WatchEvent'\nGROUP BY \n    organization\nORDER BY \n    num_repos DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS repo_count\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\nGROUP BY\n  repo_name\nORDER BY\n  repo_count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  splitByString('/', repo_name)[1] organization_name,\n  count() repositories\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent'\nGROUP BY\n  organization_name\nORDER BY\n  repositories DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  regexpExtract(repo_name, '^(.*?)/') AS organization,\n  count() AS repo_count\nFROM\n  github_events\nWHERE\n  event_type = 'CreateEvent' OR event_type = 'PublicEvent'\nGROUP BY\n  organization\nORDER BY\n  repo_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  splitByChar('/', repo_name)[1] AS organization,\n  count(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY organization\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count() AS repo_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY repo_name\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name AS organization_name, \n    COUNT(*) AS repository_count \nFROM \n    github_events \nGROUP BY \n    organization_name \nORDER BY \n    repository_count DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  SUBSTRING_INDEX(repo_name, '/', 1) organization,\n  countDistinct(repo_name) repositories\nFROM github_events\nGROUP BY organization\nORDER BY repositories DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT substring_index(repo_name, '/', 1) org, uniqExact(repo_name) repo_count \nFROM github_events \nGROUP BY org \nORDER BY repo_count DESC \nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  SUBSTRING_INDEX(repo_name, '/', 1) organization,\n  uniqExact(repo_name) repo_count\nFROM github_events\nGROUP BY\n  organization\nORDER BY\n  repo_count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] as organization,\n    uniq(repo_name) as repository_count\nFROM github_events\nWHERE repo_name != ''\nGROUP BY organization\nORDER BY repository_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    COUNT(DISTINCT repo_name) AS repository_count\nFROM github_events\nGROUP BY organization\nORDER BY repository_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS org_name,\n    COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE event_type = 'CreateEvent' AND ref_type = 'repository'\nGROUP BY org_name\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT SUBSTRING_INDEX(repo_name, '/', 1) AS organization, COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nGROUP BY organization\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    substring_index(repo_name, '/', 1) AS organization,\n    count(DISTINCT repo_name) AS repository_count\nFROM github_events\nGROUP BY\n    organization\nORDER BY\n    repository_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n  splitByString('/', repo_name)[1] AS organization_name,\n  COUNT(DISTINCT repo_name) AS repo_count\nFROM github_events\nWHERE repo_name LIKE 'orgname/%'\nGROUP BY organization_name\nORDER BY repo_count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    arrayElement(splitByChar('/', repo_name), 1) AS organization,\n    COUNT(DISTINCT arrayElement(splitByChar('/', repo_name), 2)) AS repo_count\nFROM github_events\nGROUP BY organization\nORDER BY repo_count DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT substring_index(repo_name, '/', 1) organization, uniqExact(repo_name) repo_count FROM github_events GROUP BY substring_index(repo_name, '/', 1) ORDER BY repo_count DESC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "org": "sindresorhus/",
          "repos": 438
        },
        {
          "org": "udacity/",
          "repos": 172
        },
        {
          "org": "spatie/",
          "repos": 147
        },
        {
          "org": "yahoo/",
          "repos": 117
        },
        {
          "org": "w3c/",
          "repos": 107
        },
        {
          "org": "tj/",
          "repos": 98
        },
        {
          "org": "square/",
          "repos": 94
        },
        {
          "org": "twitter/",
          "repos": 88
        },
        {
          "org": "uber/",
          "repos": 84
        },
        {
          "org": "spring-projects/",
          "repos": 84
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "repos",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.061594685,
        "rows_read": 7319235,
        "bytes_read": 21919077
      },
      "executionTime": 0.08,
      "requestId": "01JTN5N9CN7X4Y13GAWNPCN8ZK"
    }
  },
  "pipe_45.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() as pr_count,\n    uniq(actor_login) as unique_authors,\n    sum(additions) as total_adds,\n    sum(deletions) as total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY (total_adds + total_dels) DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS pr_count,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    SUM(additions) AS total_adds,\n    SUM(deletions) AS total_dels\nFROM github_events\nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY (total_adds + total_dels) DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count() AS pr_count,\n    uniq(actor_login) AS unique_authors,\n    sum(additions) AS total_additions,\n    sum(deletions) AS total_deletions\nFROM github_events\nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY (total_additions + total_deletions) DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "  \nSELECT  \n    repo_name,  \n    COUNT(*) AS pr_count,  \n    COUNT(DISTINCT actor_login) AS unique_authors,  \n    SUM(additions) AS total_additions,  \n    SUM(deletions) AS total_deletions  \nFROM github_events  \nWHERE  \n    event_type = 'PullRequestEvent'  \n    AND action = 'opened'  \n    AND additions < 10000  \n    AND deletions < 10000  \nGROUP BY repo_name  \nORDER BY (total_additions + total_deletions) DESC  \nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(DISTINCT number) AS pr_count,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    SUM(additions) AS total_additions,\n    SUM(deletions) AS total_deletions\nFROM github_events\nWHERE event_type = 'PullRequestEvent' \n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY (total_additions + total_deletions) DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS pr_count,\n    count(DISTINCT actor_login) AS unique_authors,\n    sum(additions) AS total_adds,\n    sum(deletions) AS total_dels\nFROM github_events\nWHERE\n    event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_adds + total_dels DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(DISTINCT number) AS pr_count,\n    uniqExact(actor_login) AS unique_authors,\n    sum(additions) AS total_adds,\n    sum(deletions) AS total_dels,\n    sum(additions) + sum(deletions) AS total_churn\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened' AND additions < 10000 AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_churn DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    count(*) as pr_count, \n    uniqExact(actor_login) as unique_authors, \n    sum(additions) as total_adds, \n    sum(deletions) as total_dels\nFROM \n    github_events\nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened' \n    AND additions < 10000 \n    AND deletions < 10000\nGROUP BY \n    repo_name\nORDER BY \n    total_adds + total_dels DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  github_events.repo_name AS repo,\n  COUNT(github_events.number) AS pr_count,\n  COUNT(DISTINCT github_events.actor_login) AS unique_authors,\n  SUM(github_events.additions) AS total_adds,\n  SUM(github_events.deletions) AS total_dels\nFROM \n  github_events\nWHERE \n  github_events.event_type = 'PullRequestEvent'\n  AND github_events.action = 'opened'\n  AND github_events.additions < 10000\n  AND github_events.deletions < 10000\nGROUP BY \n  github_events.repo_name\nORDER BY \n  total_adds + total_dels DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  count() as pr_count, \n  uniq(actor_login) as unique_authors, \n  sum(additions) as total_adds, \n  sum(deletions) as total_dels\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestEvent' \n  AND action = 'opened' \n  AND additions < 10000 \n  AND deletions < 10000\nGROUP BY \n  repo_name\nORDER BY \n  total_adds + total_dels DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0.0022750198994017116,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  repo_name,\n  COUNT(*) AS pr_count,\n  COUNT(DISTINCT creator_user_login) AS unique_authors,\n  SUM(additions) AS total_adds,\n  SUM(deletions) AS total_dels\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY\n  repo_name\nORDER BY\n  total_adds + total_dels DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name repo,\n  count() pr_count,\n  uniq(actor_login) unique_authors,\n  sum(additions) total_adds,\n  sum(deletions) total_dels\nFROM github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_adds + total_dels DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " SELECT\n  repo_name,\n  COUNT(DISTINCT number) AS pr_count,\n  COUNT(DISTINCT creator_user_login) AS unique_authors,\n  SUM(IF(commits > 0, additions, 0)) AS total_adds,\n  SUM(IF(commits > 0, deletions, 0)) AS total_dels\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY\n  repo_name\nORDER BY\n  total_adds + total_dels DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name,\n  count() pr_count,\n  uniq(actor_login) unique_authors,\n  sum(additions) total_adds,\n  sum(deletions) total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY (sum(additions) + sum(deletions)) DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.9424455926815917,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name AS repo,\n  count() AS pr_count,\n  countDistinct(member_login) AS unique_authors,\n  sum(additions) AS total_adds,\n  sum(deletions) AS total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo\nORDER BY (sum(additions) + sum(deletions)) DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name, \n    count() AS pr_count, \n    count(DISTINCT actor_login) AS unique_authors, \n    sum(additions) AS total_adds, \n    sum(deletions) AS total_dels \nFROM \n    github_events \nWHERE \n    event_type = 'PullRequestEvent' \n    AND action = 'opened' \n    AND additions < 10000 \n    AND deletions < 10000 \nGROUP BY \n    repo_name \nORDER BY \n    total_adds + total_dels DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name AS repo,\n  count() AS pr_count,\n  uniq(actor_login) AS unique_authors,\n  sum(additions) AS total_adds,\n  sum(deletions) AS total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY (total_adds + total_dels) DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo,\n  count() pr_count,\n  uniq(actor_login) unique_authors,\n  sum(additions) total_adds,\n  sum(deletions) total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY sum(additions) + sum(deletions) DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name AS repo,\n  count() AS pr_count,\n  uniqExact(actor_login) AS unique_authors,\n  sum(additions) AS total_adds,\n  sum(deletions) AS total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY sum(additions) + sum(deletions) DESC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    count(DISTINCT number) as pr_count,\n    count(DISTINCT actor_login) as unique_authors,\n    sum(additions) as total_adds,\n    sum(deletions) as total_dels,\n    sum(additions) + sum(deletions) as total_churn\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_churn DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8367030125422139,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    count(*) as pr_count,\n    uniq(actor_login) as unique_authors,\n    sum(additions) as total_adds,\n    sum(deletions) as total_dels,\n    sum(additions + deletions) as total_churn\nFROM github_events \nWHERE event_type = 'PullRequestEvent' \n    AND action = 'opened'\n    AND additions < 10000 \n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_churn DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8367030125422139,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count(number) AS pr_count,\n    uniq(actor_login) AS unique_authors,\n    sum(additions) AS total_adds,\n    sum(deletions) AS total_dels,\n    (sum(additions) + sum(deletions)) AS total_churn\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_churn DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    COUNT(*) AS pr_count,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    SUM(additions) AS total_adds,\n    SUM(deletions) AS total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY (total_adds + total_dels) DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  COUNT(*) AS pr_count,\n  COUNT(DISTINCT actor_login) AS unique_authors,\n  SUM(additions) AS total_adds,\n  SUM(deletions) AS total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY (SUM(additions) + SUM(deletions)) DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    count() AS pr_count,\n    uniq(actor_login) AS unique_authors,\n    sum(additions) AS total_adds,\n    sum(deletions) AS total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent' AND action = 'opened' AND additions < 10000 AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_adds + total_dels DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) as pr_count,\n    COUNT(DISTINCT actor_login) as unique_authors,\n    SUM(additions) as total_adds,\n    SUM(deletions) as total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY SUM(additions) + SUM(deletions) DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 0.8367030125422139,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    COUNT(*) AS pr_count,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    SUM(additions) AS total_adds,\n    SUM(deletions) AS total_dels,\n    SUM(additions) + SUM(deletions) AS total_churn\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n    AND action = 'opened'\n    AND additions < 10000\n    AND deletions < 10000\nGROUP BY repo_name\nORDER BY total_churn DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo,\n  count() pr_count,\n  uniqExact(actor_login) unique_authors,\n  sum(additions) total_adds,\n  sum(deletions) total_dels\nFROM github_events\nWHERE event_type = 'PullRequestEvent'\n  AND action = 'opened'\n  AND additions < 10000\n  AND deletions < 10000\nGROUP BY repo_name\nORDER BY (sum(additions) + sum(deletions)) DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "everypolitician/everypolitician-data",
          "prs": 12848,
          "authors": 3,
          "adds": 5215610,
          "dels": 5332897
        },
        {
          "repo_name": "shuyangzhou/liferay-portal",
          "prs": 2674,
          "authors": 41,
          "adds": 4593360,
          "dels": 2703679
        },
        {
          "repo_name": "github-api-test-org/jenkins",
          "prs": 687,
          "authors": 22,
          "adds": 5102557,
          "dels": 133042
        },
        {
          "repo_name": "jsdelivr/jsdelivr",
          "prs": 3772,
          "authors": 187,
          "adds": 4582518,
          "dels": 2122
        },
        {
          "repo_name": "quanzhanying/jdstore",
          "prs": 2206,
          "authors": 429,
          "adds": 3713698,
          "dels": 61341
        },
        {
          "repo_name": "sergiogonzalez/liferay-portal",
          "prs": 1696,
          "authors": 69,
          "adds": 2097746,
          "dels": 1234784
        },
        {
          "repo_name": "tensorflow/tensorflow",
          "prs": 4544,
          "authors": 715,
          "adds": 2308746,
          "dels": 847016
        },
        {
          "repo_name": "rust-lang/rust",
          "prs": 13344,
          "authors": 703,
          "adds": 1933149,
          "dels": 1153554
        },
        {
          "repo_name": "kubernetes/kubernetes",
          "prs": 11188,
          "authors": 1034,
          "adds": 1976945,
          "dels": 1014334
        },
        {
          "repo_name": "learn-co-students/tic-tac-toe-rb-v-000",
          "prs": 1190,
          "authors": 590,
          "adds": 2663818,
          "dels": 1516
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "prs",
          "type": "UInt64"
        },
        {
          "name": "authors",
          "type": "UInt64"
        },
        {
          "name": "adds",
          "type": "UInt64"
        },
        {
          "name": "dels",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.176928231,
        "rows_read": 18564759,
        "bytes_read": 256392615
      },
      "executionTime": 0.196,
      "requestId": "01JTN5NAEGTJNGG054RNXAR7A4"
    }
  },
  "pipe_46.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count(*) as total_comments,\n    count(DISTINCT repo_name) as unique_repos,\n    count(DISTINCT number) as unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\n    AND action = 'created'\nGROUP BY actor_login\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login AS author,\n    COUNT(*) AS total_comments,\n    COUNT(DISTINCT repo_name) AS unique_repos,\n    COUNT(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY author\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login AS author,\n    COUNT() AS total_comments,\n    COUNT(DISTINCT repo_name) AS unique_repositories,\n    COUNT(DISTINCT number) AS unique_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY author\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login AS author,\n    COUNT(*) AS total_comments,\n    COUNT(DISTINCT repo_name) AS unique_repos,\n    COUNT(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY author\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    creator_user_login AS author,\n    count(comment_id) AS total_comments,\n    count(DISTINCT repo_name) AS unique_repos,\n    count(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY author\nORDER BY total_comments DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS comments,\n    count(DISTINCT repo_name) AS repos,\n    count(DISTINCT number) AS prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY comments DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login AS author,\n    count() AS num_pull_request_comments,\n    uniqExact(repo_name) AS unique_repositories,\n    uniqExact(number) AS unique_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY num_pull_request_comments DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  actor_login author, \n  count() num_pr_comments, \n  uniqExact(repo_name) num_repos, \n  uniqExact(number) num_prs\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent' \n  AND action = 'created'\nGROUP BY \n  actor_login\nORDER BY \n  num_pr_comments DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 0.3095253817584935,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  actor_login AS author,\n  COUNT(DISTINCT CASE WHEN event_type = 'PullRequestReviewCommentEvent' THEN comment_id END) AS num_pull_request_comments,\n  COUNT(DISTINCT CASE WHEN event_type = 'PullRequestReviewCommentEvent' THEN repo_name END) AS num_unique_repos,\n  COUNT(DISTINCT CASE WHEN event_type = 'PullRequestReviewCommentEvent' THEN CONCAT(repo_name, '-', number) END) AS num_unique_prs\nFROM \n  github_events\nWHERE \n  event_type IN ('PullRequestReviewCommentEvent')\nGROUP BY \n  actor_login\nORDER BY \n  num_pull_request_comments DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  actor_login AS author,\n  count() AS num_pr_comments,\n  count(DISTINCT repo_name) AS unique_repos,\n  count(DISTINCT number) AS unique_prs\nFROM \n  github_events\nWHERE \n  event_type = 'PullRequestReviewCommentEvent'\nGROUP BY \n  actor_login\nORDER BY \n  num_pr_comments DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n  actor_login AS author,\n  COUNT(DISTINCT comment_id) AS total_comments,\n  COUNT(DISTINCT repo_name) AS unique_repos,\n  COUNT(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY total_comments DESC\nLIMIT 10\n"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login author,\n  count() pull_request_comments_created,\n  uniq(repo_name) unique_repositories,\n  uniq(number) unique_prs\nFROM\n  github_events\nWHERE\n  event_type = 'PullRequestReviewCommentEvent'\nGROUP BY\n  actor_login\nORDER BY\n  pull_request_comments_created DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS author,\n  COUNT(DISTINCT comment_id) AS total_comments,\n  COUNT(DISTINCT repo_name) AS unique_repos,\n  COUNT(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login author,\n  count() num_pull_request_comments,\n  uniq(repo_name) num_unique_repos,\n  uniq(number) num_unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY num_pull_request_comments DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 1,
        "sql": "SELECT\n  member_login AS author,\n  sum(review_comments) AS total_code_reviews,\n  countDistinct(repo_name) AS unique_repos,\n  countDistinct(number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY author\nORDER BY total_code_reviews DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login AS author, \n    COUNT(comment_id) AS pull_request_comments, \n    COUNT(DISTINCT repo_name) AS unique_repositories, \n    COUNT(DISTINCT number) AS unique_pull_requests \nFROM \n    github_events \nWHERE \n    event_type = 'PullRequestReviewCommentEvent' \nGROUP BY \n    actor_login \nORDER BY \n    pull_request_comments DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS author,\n  count(*) AS pull_request_comments,\n  uniqExact(repo_name) AS unique_repos,\n  uniqExact(number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY pull_request_comments DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS author,\n  count(*) AS total_comments,\n  uniq(repo_name) AS unique_repositories,\n  uniq(concat(repo_name, '-', toString(number))) AS unique_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\n  AND action = 'created'\nGROUP BY author\nORDER BY total_comments DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  actor_login author, \n  count() pull_request_comments, \n  uniq(repo_name) unique_repos, \n  uniq(number) unique_prs \nFROM github_events \nWHERE event_type = 'PullRequestReviewCommentEvent' \n  AND action = 'created' \nGROUP BY actor_login \nORDER BY pull_request_comments DESC \nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login as author,\n    count(*) as pull_request_comments,\n    uniqExact(repo_name) as unique_repositories,\n    uniqExact(number) as unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY pull_request_comments DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    actor_login as author,\n    count() as pr_comments_created,\n    uniq(repo_name) as unique_repositories,\n    uniq(number) as unique_prs\nFROM github_events \nWHERE event_type = 'PullRequestReviewCommentEvent' \n    AND action = 'created'\nGROUP BY actor_login \nORDER BY pr_comments_created DESC \nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login author,\n    COUNT(*) AS total_review_comments,\n    COUNT(DISTINCT repo_name) AS unique_repositories,\n    COUNT(DISTINCT number) AS unique_pull_requests\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent' AND action = 'created'\nGROUP BY author\nORDER BY total_review_comments DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login AS author,\n    COUNT(*) AS pr_comments_count,\n    COUNT(DISTINCT repo_name) AS unique_repos,\n    COUNT(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY pr_comments_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  actor_login AS author,\n  COUNT(*) AS number_of_comments,\n  COUNT(DISTINCT repo_name) AS unique_repositories,\n  COUNT(DISTINCT (repo_name, number)) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY number_of_comments DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login,\n    count() AS pr_comments,\n    uniq(repo_name) AS unique_repos,\n    uniq(number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY pr_comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login AS author,\n    COUNT(comment_id) AS num_comments,\n    COUNT(DISTINCT repo_name) AS unique_repos,\n    COUNT(DISTINCT number) AS unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\nGROUP BY actor_login\nORDER BY num_comments DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    actor_login AS author,\n    sum(IF(event_type = 'PullRequestReviewEvent', 1, 0)) AS number_of_reviews,\n    sum(IF(event_type = 'PullRequestReviewCommentEvent', 1, 0)) AS number_of_comments,\n    COUNT(DISTINCT IF(event_type = 'PullRequestReviewCommentEvent', repo_name, NULL)) AS unique_repositories,\n    COUNT(DISTINCT IF(event_type = 'PullRequestReviewCommentEvent', CRC32(repo_name) + number, NULL)) AS unique_prs\nFROM github_events\nGROUP BY actor_login\nORDER BY number_of_reviews DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    actor_login author,\n    count() pull_request_comments,\n    uniqExact(repo_name) unique_repos,\n    uniqExact(repo_name, number) unique_prs\nFROM github_events\nWHERE event_type = 'PullRequestReviewCommentEvent'\n  AND action = 'created'\nGROUP BY actor_login\nORDER BY pull_request_comments DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "actor_login": "houndci-bot",
          "count()": 62390,
          "repos": 530,
          "prs": 5115
        },
        {
          "actor_login": "houndci",
          "count()": 54995,
          "repos": 639,
          "prs": 5204
        },
        {
          "actor_login": "codacy-bot",
          "count()": 31784,
          "repos": 216,
          "prs": 1680
        },
        {
          "actor_login": "dieunb",
          "count()": 6265,
          "repos": 131,
          "prs": 1388
        },
        {
          "actor_login": "stephentoub",
          "count()": 5158,
          "repos": 9,
          "prs": 873
        },
        {
          "actor_login": "hound[bot]",
          "count()": 5041,
          "repos": 46,
          "prs": 389
        },
        {
          "actor_login": "codeschool-kiddo",
          "count()": 5005,
          "repos": 983,
          "prs": 4883
        },
        {
          "actor_login": "vaadin-bot",
          "count()": 4760,
          "repos": 37,
          "prs": 831
        },
        {
          "actor_login": "github-actions[bot]",
          "count()": 4721,
          "repos": 38,
          "prs": 227
        },
        {
          "actor_login": "timabbott",
          "count()": 4704,
          "repos": 10,
          "prs": 1095
        }
      ],
      "meta": [
        {
          "name": "actor_login",
          "type": "LowCardinality(String)"
        },
        {
          "name": "count()",
          "type": "UInt64"
        },
        {
          "name": "repos",
          "type": "UInt64"
        },
        {
          "name": "prs",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.058995494,
        "rows_read": 4172440,
        "bytes_read": 39109886
      },
      "executionTime": 0.079,
      "requestId": "01JTN5NBKY8NN8D0DS2ART5J38"
    }
  },
  "pipe_47.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    arrayJoin(labels) as label,\n    count() as times_used\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n    AND action IN ('created', 'opened', 'labeled')\n    AND label != ''\nGROUP BY label\nORDER BY times_used DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    label,\n    COUNT(*) AS count\nFROM github_events\nARRAY JOIN labels AS label\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n    AND action IN ('created', 'opened', 'labeled')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    label,\n    COUNT(*) as count\nFROM \n    github_events\nARRAY JOIN \n    labels as label\nWHERE \n    (\n        event_type = 'IssuesEvent' \n        AND action IN ('opened', 'labeled')\n    )\n    OR \n    (\n        event_type = 'PullRequestEvent' \n        AND action IN ('opened', 'labeled')\n    )\n    OR \n    (\n        event_type = 'IssueCommentEvent' \n        AND action = 'created'\n    )\nGROUP BY \n    label\nORDER BY \n    count DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    label,\n    COUNT(*) AS count\nFROM (\n    SELECT \n        arrayJoin(labels) AS label\n    FROM github_events\n    WHERE \n        (event_type = 'IssuesEvent' AND action = 'opened') OR\n        (event_type = 'PullRequestEvent' AND action = 'opened') OR\n        (event_type = 'IssueCommentEvent' AND action = 'created') OR\n        (event_type = 'IssuesEvent' AND action = 'labeled')\n) \nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT labels, COUNT(*) AS count FROM github_events WHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent') AND action IN ('opened', 'created', 'labeled') GROUP BY labels ORDER BY count DESC LIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    label,\n    count() AS total\nFROM github_events\nWHERE\n    event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent') AND action IN ('created', 'opened', 'labeled')\nARRAY JOIN labels AS label\nGROUP BY label\nORDER BY total DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    arrayJoin(labels) AS label,\n    count() AS count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent') AND action IN ('created', 'opened', 'labeled')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n  label, \n  count() as count\nFROM \n(\n  SELECT \n    arrayJoin(labels) as label\n  FROM \n    github_events\n  WHERE \n    event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n    AND action IN ('created', 'opened', 'labeled')\n)\nGROUP BY \n  label\nORDER BY \n  count DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    L, \n    SUM(cnt) as total_count\nFROM \n    (\n    SELECT \n        labels as L, \n        count(*) as cnt\n    FROM \n        github_events\n    WHERE \n        event_type in ('IssuesEvent', 'PullRequestEvent') \n        AND action in ('opened', 'labeled')\n    GROUP BY \n        labels\n    UNION ALL\n    SELECT \n        labels as L, \n        count(*) as cnt\n    FROM \n        github_events\n    WHERE \n        event_type = 'IssueCommentEvent' \n        AND action = 'created'\n    GROUP BY \n        labels\n) as subquery\nGROUP BY \n    L\nORDER BY \n    total_count DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  label,\n  sumIf(event_type = 7 AND action = 'opened', 1) AS issues,\n  sumIf(event_type = 10 AND action = 'opened', 1) AS pull_requests,\n  sumIf(event_type = 6 AND action IN ('created', 'edited', 'labeled'), 1) AS issue_comments\nFROM \n  github_events\nARRAY JOIN labels AS label\nWHERE \n  event_type IN (6, 7, 10) \n  AND action IN ('opened', 'created', 'edited', 'labeled')\nGROUP BY \n  label\nORDER BY \n  issues + pull_requests + issue_comments DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    labels,\n    COUNT(*) AS count\nFROM\n    github_events\nWHERE\n    event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\nGROUP BY\n    labels\nORDER BY\n    count DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "%\nSELECT\n  label,\n  count() as count\nFROM (\n  SELECT\n    label\n  FROM github_events\n  WHERE event_type = 'IssuesEvent'\n  AND action IN ('opened', 'created', 'labeled')\n  ARRAY JOIN labels as label\n  UNION ALL\n  SELECT\n    label\n  FROM github_events\n  WHERE event_type = 'PullRequestEvent'\n  AND action IN ('opened', 'created', 'labeled')\n  ARRAY JOIN labels as label\n  UNION ALL\n  SELECT\n    label\n  FROM github_events\n  WHERE event_type = 'IssueCommentEvent'\n  AND action IN ('created')\n  ARRAY JOIN labels as label\n) as labels\nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": " %\n\nSELECT\n  label,\n  COUNT(*) as total_uses\nFROM\n  github_events\nWHERE\n  (action = 'created' OR action = 'opened' OR action = 'labeled' OR action = 'closed')\n  AND labels IS NOT NULL\nGROUP BY\n  label\nORDER BY\n  total_uses DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT arrayJoin(labels) label, count() as usage_count\nFROM github_events\nWHERE (\n    (event_type IN ('IssuesEvent', 'PullRequestEvent') AND action IN ('opened', 'labeled', 'created'))\n    OR (event_type = 'IssueCommentEvent' AND action = 'created')\n)\nAND length(labels) > 0\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "% \nSELECT label, count() AS usage_count\nFROM (\n    SELECT arrayJoin(labels) AS label\n    FROM github_events\n    WHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n      AND (action IN ('opened', 'labeled') OR event_type IN ('IssuesEvent', 'PullRequestEvent'))\n)\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    arrayJoin(labels) AS label, \n    COUNT(*) AS label_count \nFROM \n    github_events \nWHERE \n    (event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')) \n    AND (action IN ('opened', 'labeled', 'created')) \nGROUP BY \n    label \nORDER BY \n    label_count DESC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  label AS label,\n  count(*) AS usage_count\nFROM github_events\nARRAY JOIN labels AS label\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n  AND action IN ('opened', 'labeled', 'created')\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  arrayJoin(labels) label,\n  count() usage_count\nFROM github_events\nWHERE\n  (\n    (event_type = 'IssuesEvent' AND action IN ('opened','labeled'))\n    OR\n    (event_type = 'PullRequestEvent' AND action IN ('opened','labeled'))\n    OR\n    (event_type = 'IssueCommentEvent' AND action = 'created')\n  )\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT arrayJoin(labels) AS label, count() AS count\nFROM github_events\nWHERE ((event_type IN ('IssuesEvent','PullRequestEvent') AND action IN ('opened','labeled'))\n   OR (event_type = 'IssueCommentEvent' AND action = 'created'))\nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    label,\n    count() as usage_count\nFROM github_events\nARRAY JOIN labels as label\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n    AND action IN ('created', 'opened', 'labeled')\n    AND label != ''\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    label,\n    count() AS usage_count\nFROM github_events\nARRAY JOIN labels AS label\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\n  AND action IN ('created', 'opened', 'labeled')\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT\n    unnest(labels) AS label,\n    COUNT(*) AS usage_count\nFROM github_events\nWHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent')\nAND action IN ('opened', 'created', 'labeled')\nAND label != ''\nGROUP BY label\nORDER BY usage_count DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT arrayJoin(labels) AS label, COUNT(*) AS count\nFROM github_events\nWHERE (event_type = 'IssuesEvent' AND action IN ('opened', 'created', 'labeled'))\n   OR (event_type = 'PullRequestEvent' AND action IN ('opened', 'created', 'labeled'))\n   OR (event_type = 'IssueCommentEvent' AND action = 'created')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    arrayJoin(labels) AS label,\n    count() AS count\nFROM github_events\nWHERE (event_type = 'IssuesEvent' AND action IN ('opened', 'labeled')) OR (event_type = 'PullRequestEvent' AND action IN ('opened', 'labeled')) OR (event_type = 'IssueCommentEvent' AND action = 'created')\nGROUP BY label\nORDER BY count DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    labels,\n    COUNT(*) as count\nFROM github_events\nWHERE\n    (action = 'opened' OR action = 'labeled' OR action = 'created' OR event_type = 'IssueCommentEvent')\n    AND (event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent'))\nGROUP BY labels\nORDER BY count DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Here's the corrected SQL query that should work in Tinybird/ClickHouse:\n\n\nSELECT label, count() AS usage_count FROM github_events ARRAY JOIN labels AS label WHERE event_type IN ('IssuesEvent', 'PullRequestEvent', 'IssueCommentEvent') AND action IN ('opened', 'created', 'labeled') GROUP BY label ORDER BY usage_count DESC LIMIT 10\n\n\nThis query:\n1. Selects from the github_events table\n2. Uses ARRAY JOIN to unnest the labels array\n3. Filters for the relevant event types and actions\n4. Counts occurrences of each label\n5. Orders by count in descending order\n6. Limits to the top 10 results\n\nThe key changes from previous attempts are:\n- Using a minimal query format with all clauses on one line to avoid any hidden formatting issues\n- Ensuring all string literals are properly quoted\n- Using the correct syntax for ARRAY JOIN according to ClickHouse documentation\n- Maintaining all the filtering and counting logic needed to answer the original question"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  label,\n  count() label_count\nFROM github_events\nARRAY JOIN labels AS label\nWHERE event_type IN ('IssuesEvent','PullRequestEvent','IssueCommentEvent')\n  AND (\n      (event_type IN ('IssuesEvent','PullRequestEvent') AND action IN ('opened','labeled'))\n      OR (event_type = 'IssueCommentEvent' AND action = 'created')\n  )\n  AND label != ''\nGROUP BY label\nORDER BY label_count DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "label": "enhancement",
          "c": 388865
        },
        {
          "label": "bug",
          "c": 343621
        },
        {
          "label": "FP: Pending Review",
          "c": 43256
        },
        {
          "label": "feature",
          "c": 43123
        },
        {
          "label": "question",
          "c": 41538
        },
        {
          "label": "help wanted",
          "c": 40516
        },
        {
          "label": "Bug",
          "c": 37575
        },
        {
          "label": "movie",
          "c": 34451
        },
        {
          "label": "Gitalk",
          "c": 33432
        },
        {
          "label": "Feature",
          "c": 32506
        }
      ],
      "meta": [
        {
          "name": "label",
          "type": "LowCardinality(String)"
        },
        {
          "name": "c",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 0.127032683,
        "rows_read": 34589909,
        "bytes_read": 359810736
      },
      "executionTime": 0.146,
      "requestId": "01JTN5NCNNPBW7CY7SCT25ZCMG"
    }
  },
  "pipe_48.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] as org_name,\n    uniq(actor_login) as total_unique_authors,\n    uniq(if(event_type = 'PullRequestEvent' AND action = 'opened', actor_login, null)) as unique_pr_authors,\n    uniq(if(event_type = 'IssuesEvent' AND action = 'opened', actor_login, null)) as unique_issue_authors,\n    uniq(if(event_type = 'IssueCommentEvent', actor_login, null)) as unique_issue_comment_authors,\n    uniq(if(event_type = 'PushEvent', actor_login, null)) as unique_push_authors\nFROM github_events\nWHERE repo_name LIKE '%/%'\nGROUP BY org_name\nORDER BY total_unique_authors DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    uniq(actor_login) AS unique_authors,\n    uniq(CASE WHEN event_type = 'PullRequestEvent' AND action = 'opened' THEN actor_login END) AS unique_pr_authors,\n    uniq(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN actor_login END) AS unique_issue_authors,\n    uniq(CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login END) AS unique_issue_comment_authors,\n    uniq(CASE WHEN event_type = 'PushEvent' THEN actor_login END) AS unique_push_authors\nFROM github_events\nWHERE splitByChar('/', repo_name)[1] != ''\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS organization,\n    count(DISTINCT actor_login) AS unique_authors,\n    count(DISTINCT if(event_type = 'PullRequestEvent' AND action = 'opened', actor_login, NULL)) AS unique_pr_authors,\n    count(DISTINCT if(event_type = 'IssuesEvent' AND action = 'opened', actor_login, NULL)) AS unique_issue_authors,\n    count(DISTINCT if(event_type = 'IssueCommentEvent', actor_login, NULL)) AS unique_issue_comment_authors,\n    count(DISTINCT if(event_type = 'PushEvent', actor_login, NULL)) AS unique_push_authors,\n    countIf(event_type = 'PushEvent') AS total_commits\nFROM github_events\nWHERE repo_name != ''\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] AS organization_name,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'PullRequestEvent' AND action = 'opened' THEN actor_login END) AS unique_pr_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN actor_login END) AS unique_issue_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login END) AS unique_issue_comment_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN actor_login END) AS unique_push_authors\nFROM github_events\nWHERE repo_name LIKE '%/%'\nGROUP BY organization_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    SUBSTRING_INDEX(repo_name, '/', 1) AS organization_name,\n    COUNT(DISTINCT actor_login) AS num_unique_authors,\n    COUNT(DISTINCT IF(event_type = 'PullRequestEvent', actor_login, NULL)) AS num_unique_pr_authors,\n    COUNT(DISTINCT IF(event_type = 'IssuesEvent', actor_login, NULL)) AS num_unique_issue_authors,\n    COUNT(DISTINCT IF(event_type = 'IssueCommentEvent', actor_login, NULL)) AS num_unique_issue_comment_authors,\n    COUNT(DISTINCT IF(event_type = 'PushEvent', actor_login, NULL)) AS num_unique_push_authors\nFROM github_events\nGROUP BY organization_name\nORDER BY num_unique_authors DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization_name,\n    count(DISTINCT actor_login) AS unique_authors,\n    count(DISTINCT IF(event_type = 'PullRequestEvent', actor_login, NULL)) AS unique_pull_request_authors,\n    count(DISTINCT IF(event_type = 'IssuesEvent', actor_login, NULL)) AS unique_issue_authors,\n    count(DISTINCT IF(event_type = 'IssueCommentEvent', actor_login, NULL)) AS unique_issue_comment_authors,\n    count(DISTINCT IF(event_type = 'PushEvent', actor_login, NULL)) AS unique_push_authors\nFROM github_events\nGROUP BY organization_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS org_name,\n    uniqExact(actor_login) AS unique_authors,\n    uniqExactIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') AS unique_pr_authors,\n    uniqExactIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') AS unique_issue_authors,\n    uniqExactIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n    uniqExactIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nGROUP BY org_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT \n  lower(splitByChar('/', repo_name)[1]) AS organization_name,\n  uniqExact(actor_login) AS unique_authors,\n  uniqExactIf(actor_login, event_type = 'PullRequestEvent') AS unique_pull_request_authors,\n  uniqExactIf(actor_login, event_type = 'IssuesEvent') AS unique_issue_authors,\n  uniqExactIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n  uniqExactIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM \n  github_events\nGROUP BY \n  organization_name\nORDER BY \n  unique_authors DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'PullRequestEvent' THEN actor_login END) AS unique_pull_request_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' THEN actor_login END) AS unique_issue_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login END) AS unique_issue_comment_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN actor_login END) AS unique_push_authors\nFROM \n    github_events\nWHERE \n    event_type IN ('PushEvent', 'PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent')\nGROUP BY \n    repo_name\nORDER BY \n    unique_authors DESC\nLIMIT 10\n"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "\nSELECT \n  splitByChar('/', repo_name)[1] AS organization_name,\n  count(DISTINCT actor_login) AS unique_authors,\n  count(DISTINCT IF(event_type = 10 AND action = 'opened', actor_login, NULL)) AS unique_pull_request_authors,\n  count(DISTINCT IF(event_type = 7 AND action = 'opened', actor_login, NULL)) AS unique_issue_authors,\n  count(DISTINCT IF(event_type = 6, actor_login, NULL)) AS unique_issue_comment_authors,\n  count(DISTINCT IF(event_type = 12, actor_login, NULL)) AS unique_push_authors\nFROM \n  github_events\nGROUP BY \n  organization_name\nORDER BY \n  unique_authors DESC\nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  count(DISTINCT actor_login) AS unique_authors,\n  count(DISTINCT case when action = 'opened' and event_type = 'PullRequestEvent' then actor_login end) AS unique_pr_authors,\n  count(DISTINCT case when action = 'opened' and event_type = 'IssuesEvent' then actor_login end) AS unique_issue_authors,\n  count(DISTINCT case when action = 'opened' and event_type = 'IssueCommentEvent' then actor_login end) AS unique_issue_comment_authors,\n  count(DISTINCT case when event_type = 'PushEvent' then actor_login end) AS unique_push_authors\nFROM github_events\nWHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PushEvent')\nGROUP BY repo_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  substringIndex(repo_name, '/', 1) organization_name,\n  uniq(actor_login) unique_authors,\n  uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') unique_pr_authors,\n  uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') unique_issue_authors,\n  uniqIf(actor_login, event_type = 'IssueCommentEvent') unique_issue_comment_authors,\n  uniqIf(actor_login, event_type = 'PushEvent') unique_push_authors\nFROM\n  github_events\nGROUP BY\n  organization_name\nORDER BY\n  unique_authors DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " %\n\nSELECT\n  repo_name AS organization_name,\n  COUNT(DISTINCT actor_login) AS unique_authors,\n  COUNT(DISTINCT CASE WHEN action = 'opened' AND event_type = 'PullRequestEvent' THEN actor_login END) AS unique_pr_authors,\n  COUNT(DISTINCT CASE WHEN action = 'opened' AND event_type = 'IssuesEvent' THEN actor_login END) AS unique_issue_authors,\n  COUNT(DISTINCT CASE WHEN action = 'created' AND event_type = 'IssueCommentEvent' THEN actor_login END) AS unique_issue_comment_authors,\n  COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN actor_login END) AS unique_push_authors\nFROM\n  github_events\nGROUP BY\n  repo_name\nORDER BY\n  unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization,\n    uniq(actor_login) AS unique_authors,\n    uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') AS unique_pr_authors,\n    uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') AS unique_issue_authors,\n    uniqIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n    uniqIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name AS organization_name,\n  countDistinct(actor_login) AS unique_authors,\n  countDistinctIf(actor_login, event_type = 'PullRequestEvent') AS unique_pull_request_authors,\n  countDistinctIf(actor_login, event_type = 'IssuesEvent') AS unique_issue_authors,\n  countDistinctIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n  countDistinctIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nWHERE event_type IN ('PullRequestEvent', 'IssuesEvent', 'IssueCommentEvent', 'PushEvent')\nGROUP BY organization_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name AS organization_name,\n    count(DISTINCT actor_login) AS unique_authors,\n    count(DISTINCT CASE WHEN event_type = 'PullRequestEvent' THEN actor_login END) AS unique_pull_request_authors,\n    count(DISTINCT CASE WHEN event_type = 'IssuesEvent' THEN actor_login END) AS unique_issue_authors,\n    count(DISTINCT CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login END) AS unique_issue_comment_authors,\n    count(DISTINCT CASE WHEN event_type = 'PushEvent' THEN actor_login END) AS unique_push_authors\nFROM github_events\nGROUP BY repo_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n  uniq(actor_login) AS unique_authors,\n  uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') AS unique_pr_authors,\n  uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') AS unique_issue_authors,\n  uniqIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n  uniqIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  SUBSTRING_INDEX(repo_name, '/', 1) organization,\n  uniqExact(actor_login) unique_authors,\n  uniqExactIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') pull_request_authors,\n  uniqExactIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') issue_authors,\n  uniqExactIf(actor_login, event_type = 'IssueCommentEvent') issue_comment_authors,\n  uniqExactIf(actor_login, event_type = 'PushEvent') push_authors\nFROM github_events\nWHERE repo_name LIKE '%/%'\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n  uniq(actor_login) AS unique_authors,\n  uniq(CASE WHEN event_type = 'PullRequestEvent' AND action = 'opened' THEN actor_login ELSE NULL END) AS unique_pr_authors,\n  uniq(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN actor_login ELSE NULL END) AS unique_issue_authors,\n  uniq(CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login ELSE NULL END) AS unique_issue_comment_authors,\n  uniq(CASE WHEN event_type = 'PushEvent' THEN actor_login ELSE NULL END) AS unique_push_authors\nFROM github_events\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "anthropic/claude-sonnet-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    splitByChar('/', repo_name)[1] as organization,\n    uniq(actor_login) as unique_authors,\n    uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') as unique_pr_authors,\n    uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') as unique_issue_authors,\n    uniqIf(actor_login, event_type = 'IssueCommentEvent') as unique_issue_comment_authors,\n    uniqIf(actor_login, event_type = 'PushEvent') as unique_push_authors\nFROM github_events\nWHERE repo_name != '' AND organization != ''\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS organization_name,\n    uniq(actor_login) AS unique_authors,\n    uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') AS unique_pull_request_authors,\n    uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') AS unique_issue_authors,\n    uniqIf(actor_login, event_type = 'IssueCommentEvent' AND action = 'created') AS unique_issue_comment_authors,\n    uniqIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nGROUP BY organization_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    splitByChar('/', repo_name)[1] AS org_name,\n    COUNT(DISTINCT actor_login) AS unique_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'PullRequestEvent' THEN actor_login END) AS unique_pr_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssuesEvent' THEN actor_login END) AS unique_issue_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login END) AS unique_issue_comment_authors,\n    COUNT(DISTINCT CASE WHEN event_type = 'PushEvent' THEN actor_login END) AS unique_push_authors\nFROM github_events\nGROUP BY org_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  SUBSTRING_INDEX(repo_name, '/', 1) AS organization,\n  COUNT(DISTINCT actor_login) AS unique_authors,\n  COUNT(DISTINCT IF(event_type = 'PullRequestEvent' AND action = 'opened', actor_login, NULL)) AS unique_pr_authors,\n  COUNT(DISTINCT IF(event_type = 'IssuesEvent' AND action = 'opened', actor_login, NULL)) AS unique_issue_authors,\n  COUNT(DISTINCT IF(event_type = 'IssueCommentEvent', actor_login, NULL)) AS unique_issue_comment_authors,\n  COUNT(DISTINCT IF(event_type = 'PushEvent', actor_login, NULL)) AS unique_push_authors\nFROM github_events\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    REGEXP_EXTRACT(repo_name, '^([^/]+)') AS organization_name,\n    uniq(actor_login) AS unique_authors,\n    uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') AS unique_pr_authors,\n    uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') AS unique_issue_authors,\n    uniqIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n    uniqIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nGROUP BY organization_name\nORDER BY unique_authors DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] as organization,\n    uniq(actor_login) as unique_authors,\n    uniq(if(event_type = 'PullRequestEvent' and action = 'opened', actor_login, NULL)) as unique_pr_authors,\n    uniq(if(event_type = 'IssuesEvent' and action = 'opened', actor_login, NULL)) as unique_issue_authors,\n    uniq(if(event_type = 'IssueCommentEvent', actor_login, NULL)) as unique_issue_comment_authors,\n    uniq(if(event_type = 'PushEvent', actor_login, NULL)) as unique_push_authors\nFROM github_events\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10\n"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    splitByChar('/', repo_name)[1] AS organization_name,\n    uniq(actor_login) AS unique_authors,\n    uniqIf(actor_login, event_type = 'PullRequestEvent' AND action = 'opened') AS unique_pr_authors,\n    uniqIf(actor_login, event_type = 'IssuesEvent' AND action = 'opened') AS unique_issue_authors,\n    uniqIf(actor_login, event_type = 'IssueCommentEvent') AS unique_issue_comment_authors,\n    uniqIf(actor_login, event_type = 'PushEvent') AS unique_push_authors\nFROM github_events\nGROUP BY organization_name\nORDER BY unique_authors DESC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    substring_index(repo_name,'/',1) organization,\n    uniqExact(actor_login) unique_authors,\n    uniqExact(CASE WHEN event_type = 'PullRequestEvent' AND action = 'opened' THEN actor_login ELSE NULL END) unique_pull_request_authors,\n    uniqExact(CASE WHEN event_type = 'IssuesEvent' AND action = 'opened' THEN actor_login ELSE NULL END) unique_issue_authors,\n    uniqExact(CASE WHEN event_type = 'IssueCommentEvent' THEN actor_login ELSE NULL END) unique_issue_comment_authors,\n    uniqExact(CASE WHEN event_type = 'PushEvent' THEN actor_login ELSE NULL END) unique_push_authors\nFROM github_events\nWHERE repo_name != ''\nGROUP BY organization\nORDER BY unique_authors DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "org": "/",
          "authors": 18767,
          "pr_authors": 632,
          "issue_authors": 867,
          "comment_authors": 0,
          "review_authors": 0,
          "push_authors": 18290
        },
        {
          "org": "facebook/",
          "authors": 14607,
          "pr_authors": 4376,
          "issue_authors": 10036,
          "comment_authors": 1017,
          "review_authors": 787,
          "push_authors": 274
        },
        {
          "org": "google/",
          "authors": 13049,
          "pr_authors": 4192,
          "issue_authors": 8176,
          "comment_authors": 0,
          "review_authors": 795,
          "push_authors": 1390
        },
        {
          "org": "learn-co-students/",
          "authors": 11499,
          "pr_authors": 11499,
          "issue_authors": 0,
          "comment_authors": 0,
          "review_authors": 0,
          "push_authors": 0
        },
        {
          "org": "tensorflow/",
          "authors": 9525,
          "pr_authors": 944,
          "issue_authors": 8218,
          "comment_authors": 0,
          "review_authors": 660,
          "push_authors": 0
        },
        {
          "org": "docker/",
          "authors": 7861,
          "pr_authors": 0,
          "issue_authors": 7480,
          "comment_authors": 0,
          "review_authors": 585,
          "push_authors": 0
        },
        {
          "org": "githubschool/",
          "authors": 7192,
          "pr_authors": 4548,
          "issue_authors": 1352,
          "comment_authors": 0,
          "review_authors": 62,
          "push_authors": 1311
        },
        {
          "org": "nextcloud/",
          "authors": 6179,
          "pr_authors": 548,
          "issue_authors": 5751,
          "comment_authors": 0,
          "review_authors": 0,
          "push_authors": 0
        },
        {
          "org": "jlord/",
          "authors": 5940,
          "pr_authors": 5848,
          "issue_authors": 88,
          "comment_authors": 0,
          "review_authors": 8,
          "push_authors": 0
        },
        {
          "org": "terraform-providers/",
          "authors": 5421,
          "pr_authors": 0,
          "issue_authors": 4985,
          "comment_authors": 0,
          "review_authors": 539,
          "push_authors": 0
        }
      ],
      "meta": [
        {
          "name": "org",
          "type": "String"
        },
        {
          "name": "authors",
          "type": "UInt64"
        },
        {
          "name": "pr_authors",
          "type": "UInt64"
        },
        {
          "name": "issue_authors",
          "type": "UInt64"
        },
        {
          "name": "comment_authors",
          "type": "UInt64"
        },
        {
          "name": "review_authors",
          "type": "UInt64"
        },
        {
          "name": "push_authors",
          "type": "UInt64"
        }
      ],
      "statistics": {
        "elapsed": 1.255305494,
        "rows_read": 113921805,
        "bytes_read": 561663376
      },
      "executionTime": 1.302,
      "requestId": "01JTN5NDT9109PACAXC370BPDG"
    }
  },
  "pipe_49.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    LENGTH(repo_name) as repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING COUNT(*) >= 1\nORDER BY repo_name_length DESC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    LENGTH(repo_name) AS repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING COUNT(*) >= 1\nORDER BY repo_name_length DESC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, length(repo_name) as name_length \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nHAVING count() >= 1\nORDER BY name_length DESC \nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "  \nSELECT  \n    repo_name,  \n    CHAR_LENGTH(repo_name) AS repo_name_length  \nFROM github_events  \nWHERE event_type = 'WatchEvent'  \nGROUP BY repo_name  \nORDER BY repo_name_length DESC  \nLIMIT 10"
      },
      "google/gemini-2.0-flash-001": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY repo_name_length DESC\nLIMIT 10\n"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, CHARACTER_LENGTH(repo_name) AS repo_name_length FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY repo_name_length DESC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    CHAR_LENGTH(repo_name) AS name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY name_length DESC\nLIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, length(repo_name) as repo_name_length \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nORDER BY repo_name_length DESC \nLIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name, \n  LENGTH(repo_name) AS repo_name_length\nFROM \n  github_events\nWHERE \n  event_type = 'WatchEvent'\nGROUP BY \n  repo_name\nORDER BY \n  repo_name_length DESC\nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, LENGTH(repo_name) AS repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY LENGTH(repo_name) DESC\nLIMIT 10"
      },
      "mistralai/ministral-8b": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  length(repo_name) AS repo_name_length\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  length(repo_name) DESC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo_name,\n  character_length(repo_name) repo_name_length\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  repo_name_length DESC\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  CHARACTER_LENGTH(repo_name) AS length\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  length DESC\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, length(repo_name) AS repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING count() >= 1\nORDER BY repo_name_length DESC\nLIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT\n  repo_name,\n  character_length(repo_name) AS name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND repo_name != ''\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, CHARACTER_LENGTH(repo_name) AS repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING COUNT(*) > 0\nORDER BY repo_name_length DESC\nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  CHAR_LENGTH(repo_name) AS repository_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY repository_name_length DESC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, char_length(repo_name) repository_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY repository_name_length DESC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  char_length(repo_name) repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY repo_name_length DESC, repo_name ASC\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT \n    repo_name,\n    length(repo_name) AS repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING count() >= 1\nORDER BY repo_name_length DESC\nLIMIT 10\n"
      },
      "anthropic/claude-sonnet-4": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name,\n    length(repo_name) as repo_name_length\nFROM github_events \nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY repo_name_length DESC\nLIMIT 10"
      },
      "openai/gpt-4.5-preview": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    CHAR_LENGTH(repo_name) repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY repo_name_length DESC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    CHARACTER_LENGTH(repo_name) AS name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING COUNT(*) >= 1\nORDER BY name_length DESC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name, CHAR_LENGTH(repo_name) AS name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY name_length DESC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n    repo_name,\n    CHAR_LENGTH(repo_name) AS repository_name_length\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\nGROUP BY\n    repo_name\nORDER BY\n    repository_name_length DESC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": true,
        "exactMatches": true,
        "numericMatches": true,
        "distance": {
          "exact": 0,
          "numeric": 0,
          "fScore": 1
        },
        "details": "Results match within exact threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name AS repository_name, length(repo_name) AS length\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING count() >= 1\nORDER BY length DESC\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "Here is the corrected SQL query to find the top 10 longest repository names with at least 1 star:\n\n\nSELECT repo_name, length(repo_name) AS repo_name_length FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY repo_name_length DESC LIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": true,
        "exactMatches": false,
        "numericMatches": true,
        "distance": {
          "exact": 0.18181818181818177,
          "numeric": 0,
          "fScore": 0.9
        },
        "details": "Results match within numeric threshold",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name,\n  CHARACTER_LENGTH(repo_name) repo_name_length\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND repo_name != ''\nGROUP BY repo_name\nORDER BY repo_name_length DESC\nLIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "vintagegamingsystems/Disk-Low-Level-Discovery-for-Physical-Disk-within-Windows-Performance-Monitoring-in-Zabbix-2.0",
          "name_length": 115
        },
        {
          "repo_name": "rajpalsinghus/Netgear-tech-support-number-1-844-234-9752-Netgear-Router-tech-support-phone-Number-for-phone-Netgea",
          "name_length": 114
        },
        {
          "repo_name": "shubham-singla01/All-basic-Computer-Science-knowledge-you-will-need-to-work-in-big-4---amazon-fb-google-microsoft",
          "name_length": 113
        },
        {
          "repo_name": "wanlonghenry/Facial-Emotion-Expression-Recognition-with-Developed-Convolutional-Neural-Networks-in-Representation",
          "name_length": 113
        },
        {
          "repo_name": "xy1377660586/Fine-tuning-a-pre-trained-CNN-for-first-year-sea-ice-and-multi-year-sea-ice-cp-imagery-classificatio",
          "name_length": 113
        },
        {
          "repo_name": "standardebooks/hermann-hesse_siddhartha_gunther-olesch_anke-dreher_amy-coulter_stefan-langer_semyon-chaichenets",
          "name_length": 111
        },
        {
          "repo_name": "ucdavis-bioinformatics-training/A-Primer-on-Using-the-Bioinformatics-Core-Administrated-Servers-and-Cluster-s-",
          "name_length": 110
        },
        {
          "repo_name": "wakayama-pref-org/s_social_security_physical_disability_certificate_issued_situation_national_health_insurance",
          "name_length": 110
        },
        {
          "repo_name": "ucdavis-bioinformatics-training/Bioinformatics-Genome-Assembly-and-Analysis-Workshop-Pac-Bio-and-10x-Genomics-",
          "name_length": 110
        },
        {
          "repo_name": "reevesangie/https-nid.naver.com-nidlogin.login-svctype-262144-url-http-3A-2F-2Fm.cafe.naver.com-2FSectionMyCaf",
          "name_length": 110
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        },
        {
          "name": "name_length",
          "type": "LowCardinality(UInt64)"
        }
      ],
      "statistics": {
        "elapsed": 0.041880371,
        "rows_read": 7319235,
        "bytes_read": 21919077
      },
      "executionTime": 0.061,
      "requestId": "01JTN5NG1HTMAQK3FH2B2ZBXNX"
    }
  },
  "pipe_50.pipe": {
    "models": {
      "anthropic/claude-3.5-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n    repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING count(*) >= 1\nORDER BY length(repo_name) ASC\nLIMIT 10"
      },
      "anthropic/claude-3.7-sonnet": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY length(repo_name) ASC\nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 1,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nHAVING COUNT(*) >= 1\nORDER BY length(repo_name) ASC \nLIMIT 10"
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8235294117647058,
          "numeric": 1,
          "fScore": 0.30000000000000004
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY LENGTH(repo_name) ASC\nLIMIT 10\n"
      },
      "google/gemini-2.0-flash-001": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY character_length(repo_name) ASC LIMIT 10"
      },
      "google/gemini-2.5-flash-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY length(repo_name) ASC LIMIT 10"
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name ORDER BY CHAR_LENGTH(repo_name) ASC LIMIT 10"
      },
      "meta-llama/llama-4-maverick": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING COUNT(*) >= 1 ORDER BY length(repo_name) LIMIT 10"
      },
      "meta-llama/llama-4-scout": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8235294117647058,
          "numeric": 1,
          "fScore": 0.30000000000000004
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT \n  repo_name \nFROM \n  github_events \nWHERE \n  event_type = 'WatchEvent' \nGROUP BY \n  repo_name \nORDER BY \n  LENGTH(repo_name) ASC \nLIMIT 10"
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nHAVING count(*) >= 1\nORDER BY LENGTH(repo_name) \nLIMIT 10\n"
      },
      "mistralai/ministral-8b": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.5714285714285714,
          "numeric": 1,
          "fScore": 0.6
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY LENGTH(repo_name) ASC\nLIMIT 10"
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name repo_name\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  character_length(repo_name)\nLIMIT 10"
      },
      "mistralai/mistral-nemo": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8888888888888888,
          "numeric": 1,
          "fScore": 0.20000000000000007
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": " %\n\nSELECT\n  repo_name\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  LENGTH(repo_name)\nLIMIT 10"
      },
      "openai/gpt-4.1": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8235294117647058,
          "numeric": 1,
          "fScore": 0.30000000000000004
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' GROUP BY repo_name HAVING count() >= 1 ORDER BY length(repo_name) ASC LIMIT 10"
      },
      "openai/gpt-4.1-nano": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "%\nSELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\n  AND length(repo_name) > 0\nGROUP BY repo_name\nHAVING count(*) >= 1\nORDER BY length(repo_name) ASC\nLIMIT 10"
      },
      "openai/gpt-4o-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name \nFROM github_events \nWHERE event_type = 'WatchEvent' \nGROUP BY repo_name \nHAVING count(*) > 0 \nORDER BY length(repo_name) ASC \nLIMIT 10"
      },
      "openai/o3-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY character_length(repo_name) ASC\nLIMIT 10"
      },
      "openai/o4-mini": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name\nFROM\n  github_events\nWHERE\n  event_type = 'WatchEvent'\nGROUP BY\n  repo_name\nORDER BY\n  char_length(repo_name) ASC,\n  repo_name ASC\nLIMIT 10"
      },
      "openai/o4-mini-high": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT\n  repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY char_length(repo_name), repo_name\nLIMIT 10"
      },
      "anthropic/claude-opus-4": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT DISTINCT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING count() >= 1\nORDER BY length(repo_name) ASC\nLIMIT 10\n"
      },
      "openai/gpt-4.5-preview": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT DISTINCT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nORDER BY CHAR_LENGTH(repo_name) ASC, repo_name ASC\nLIMIT 10"
      },
      "x-ai/grok-3-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nHAVING COUNT(*) >= 1\nORDER BY LENGTH(repo_name) ASC\nLIMIT 10"
      },
      "x-ai/grok-3-mini-beta": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.6666666666666667,
          "numeric": 1,
          "fScore": 0.5
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY CHAR_LENGTH(repo_name) ASC\nLIMIT 10"
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.8235294117647058,
          "numeric": 1,
          "fScore": 0.30000000000000004
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT DISTINCT\n    repo_name\nFROM github_events\nWHERE\n    event_type = 'WatchEvent'\nORDER BY CHAR_LENGTH(repo_name) ASC\nLIMIT 10"
      },
      "mistralai/magistral-small-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 1,
          "numeric": 1,
          "fScore": 0
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 0,
        "sql": "SELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent' AND action = 'opened'\nGROUP BY repo_name\nLIMIT 10"
      },
      "mistralai/magistral-medium-2506": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "\nSELECT repo_name\nFROM github_events\nWHERE event_type = 'WatchEvent'\nGROUP BY repo_name\nORDER BY CHARACTER_LENGTH(repo_name) ASC, repo_name ASC\nLIMIT 10\n"
      },
      "openai/o3-pro": {
        "matches": false,
        "exactMatches": false,
        "numericMatches": false,
        "distance": {
          "exact": 0.75,
          "numeric": 1,
          "fScore": 0.40000000000000013
        },
        "details": "Results don't match",
        "humanRowCount": 10,
        "llmRowCount": 10,
        "sql": "SELECT repo_name FROM github_events WHERE event_type = 'WatchEvent' AND repo_name != '' GROUP BY repo_name HAVING count() >= 1 ORDER BY char_length(repo_name) ASC, repo_name ASC LIMIT 10"
      }
    },
    "humanResults": {
      "success": true,
      "data": [
        {
          "repo_name": "tj/n"
        },
        {
          "repo_name": "wq/wq"
        },
        {
          "repo_name": "tj/co"
        },
        {
          "repo_name": "tj/go"
        },
        {
          "repo_name": "tj/v8"
        },
        {
          "repo_name": "z/kbx"
        },
        {
          "repo_name": "s4/s4"
        },
        {
          "repo_name": "sm/sm"
        },
        {
          "repo_name": "ry/v8"
        },
        {
          "repo_name": "xo/xo"
        }
      ],
      "meta": [
        {
          "name": "repo_name",
          "type": "LowCardinality(String)"
        }
      ],
      "statistics": {
        "elapsed": 0.050462826,
        "rows_read": 7319235,
        "bytes_read": 21919077
      },
      "executionTime": 0.069,
      "requestId": "01JTN5NH2R88N5BR8DPPC55KMQ"
    }
  },
  "_summary": {
    "totalQuestions": 50,
    "modelStats": {
      "anthropic/claude-3.5-sonnet": {
        "totalMatches": 29,
        "exactMatches": 22,
        "numericMatches": 28,
        "avgExactDistance": 0.49567099567099576,
        "avgNumericDistance": 0.42117172994698265,
        "avgFScore": 0.5159999999999999
      },
      "anthropic/claude-3.7-sonnet": {
        "totalMatches": 32,
        "exactMatches": 25,
        "numericMatches": 31,
        "avgExactDistance": 0.47006493506493513,
        "avgNumericDistance": 0.34976589615565923,
        "avgFScore": 0.5379999999999999
      },
      "deepseek/deepseek-chat-v3-0324": {
        "totalMatches": 28,
        "exactMatches": 21,
        "numericMatches": 28,
        "avgExactDistance": 0.5364790764790766,
        "avgNumericDistance": 0.4298907211002628,
        "avgFScore": 0.472
      },
      "deepseek/deepseek-chat-v3-0324:free": {
        "totalMatches": 26,
        "exactMatches": 21,
        "numericMatches": 26,
        "avgExactDistance": 0.4878991596638656,
        "avgNumericDistance": 0.37823888127034455,
        "avgFScore": 0.43800000000000006
      },
      "google/gemini-2.0-flash-001": {
        "totalMatches": 24,
        "exactMatches": 18,
        "numericMatches": 24,
        "avgExactDistance": 0.6107792207792209,
        "avgNumericDistance": 0.4898912046446721,
        "avgFScore": 0.3989999999999999
      },
      "google/gemini-2.5-flash-preview": {
        "totalMatches": 24,
        "exactMatches": 16,
        "numericMatches": 24,
        "avgExactDistance": 0.6412200956937798,
        "avgNumericDistance": 0.4830951919569827,
        "avgFScore": 0.36599999999999994
      },
      "google/gemini-2.5-pro-preview-05-06": {
        "totalMatches": 27,
        "exactMatches": 18,
        "numericMatches": 27,
        "avgExactDistance": 0.5753326498063341,
        "avgNumericDistance": 0.3664629112881234,
        "avgFScore": 0.4389999999999999
      },
      "meta-llama/llama-4-maverick": {
        "totalMatches": 26,
        "exactMatches": 19,
        "numericMatches": 26,
        "avgExactDistance": 0.542813852813853,
        "avgNumericDistance": 0.44653218224076563,
        "avgFScore": 0.4743333333333333
      },
      "meta-llama/llama-4-scout": {
        "totalMatches": 25,
        "exactMatches": 19,
        "numericMatches": 25,
        "avgExactDistance": 0.5776906839290741,
        "avgNumericDistance": 0.4723772453816769,
        "avgFScore": 0.43199999999999994
      },
      "meta-llama/llama-3.3-70b-instruct": {
        "totalMatches": 20,
        "exactMatches": 15,
        "numericMatches": 20,
        "avgExactDistance": 0.6602727272727271,
        "avgNumericDistance": 0.6000681647341327,
        "avgFScore": 0.3476363636363636
      },
      "mistralai/ministral-8b": {
        "totalMatches": 19,
        "exactMatches": 15,
        "numericMatches": 19,
        "avgExactDistance": 0.6700649350649351,
        "avgNumericDistance": 0.5986643579734569,
        "avgFScore": 0.338
      },
      "mistralai/mistral-small-3.1-24b-instruct": {
        "totalMatches": 24,
        "exactMatches": 18,
        "numericMatches": 24,
        "avgExactDistance": 0.5859090909090909,
        "avgNumericDistance": 0.4846865404885007,
        "avgFScore": 0.4219999999999999
      },
      "mistralai/mistral-nemo": {
        "totalMatches": 17,
        "exactMatches": 12,
        "numericMatches": 17,
        "avgExactDistance": 0.7256204906204906,
        "avgNumericDistance": 0.6276910313017943,
        "avgFScore": 0.286
      },
      "openai/gpt-4.1": {
        "totalMatches": 27,
        "exactMatches": 21,
        "numericMatches": 27,
        "avgExactDistance": 0.5185052202699262,
        "avgNumericDistance": 0.44575826627812254,
        "avgFScore": 0.49218181818181816
      },
      "openai/gpt-4.1-nano": {
        "totalMatches": 15,
        "exactMatches": 12,
        "numericMatches": 15,
        "avgExactDistance": 0.7369696969696968,
        "avgNumericDistance": 0.6737518853706291,
        "avgFScore": 0.268
      },
      "openai/gpt-4o-mini": {
        "totalMatches": 25,
        "exactMatches": 18,
        "numericMatches": 25,
        "avgExactDistance": 0.5792424242424243,
        "avgNumericDistance": 0.47358073432718095,
        "avgFScore": 0.43199999999999994
      },
      "openai/o3-mini": {
        "totalMatches": 31,
        "exactMatches": 24,
        "numericMatches": 31,
        "avgExactDistance": 0.48591706539074964,
        "avgNumericDistance": 0.3528922023223838,
        "avgFScore": 0.5233333333333333
      },
      "openai/o4-mini": {
        "totalMatches": 28,
        "exactMatches": 21,
        "numericMatches": 28,
        "avgExactDistance": 0.518189792663477,
        "avgNumericDistance": 0.3826843324975324,
        "avgFScore": 0.49399999999999994
      },
      "openai/o4-mini-high": {
        "totalMatches": 30,
        "exactMatches": 21,
        "numericMatches": 30,
        "avgExactDistance": 0.5412200956937799,
        "avgNumericDistance": 0.3688123300411849,
        "avgFScore": 0.46599999999999997
      },
      "anthropic/claude-opus-4": {
        "totalMatches": 21,
        "exactMatches": 15,
        "numericMatches": 21,
        "avgExactDistance": 0.3485052202699262,
        "avgNumericDistance": 0.27654262697232,
        "avgFScore": 0.364
      },
      "anthropic/claude-sonnet-4": {
        "totalMatches": 29,
        "exactMatches": 21,
        "numericMatches": 29,
        "avgExactDistance": 0.510909090909091,
        "avgNumericDistance": 0.36486428271910804,
        "avgFScore": 0.474
      },
      "openai/gpt-4.5-preview": {
        "totalMatches": 27,
        "exactMatches": 22,
        "numericMatches": 27,
        "avgExactDistance": 0.5126486671223514,
        "avgNumericDistance": 0.44582406226117705,
        "avgFScore": 0.498
      },
      "x-ai/grok-3-beta": {
        "totalMatches": 26,
        "exactMatches": 18,
        "numericMatches": 26,
        "avgExactDistance": 0.5873456368193211,
        "avgNumericDistance": 0.45383508924416405,
        "avgFScore": 0.428
      },
      "x-ai/grok-3-mini-beta": {
        "totalMatches": 29,
        "exactMatches": 21,
        "numericMatches": 29,
        "avgExactDistance": 0.5320346320346322,
        "avgNumericDistance": 0.3872057550988363,
        "avgFScore": 0.478
      },
      "google/gemini-2.5-pro-preview-06-05": {
        "totalMatches": 28,
        "exactMatches": 19,
        "numericMatches": 28,
        "avgExactDistance": 0.5663270475654377,
        "avgNumericDistance": 0.37149477554061816,
        "avgFScore": 0.44199999999999995
      },
      "mistralai/magistral-small-2506": {
        "totalMatches": 22,
        "exactMatches": 17,
        "numericMatches": 22,
        "avgExactDistance": 0.6206789701526545,
        "avgNumericDistance": 0.5045115586643873,
        "avgFScore": 0.392
      },
      "mistralai/magistral-medium-2506": {
        "totalMatches": 18,
        "exactMatches": 12,
        "numericMatches": 18,
        "avgExactDistance": 0.7514705882352942,
        "avgNumericDistance": 0.6191501422822612,
        "avgFScore": 0.254
      },
      "openai/o3-pro": {
        "totalMatches": 31,
        "exactMatches": 21,
        "numericMatches": 31,
        "avgExactDistance": 0.5192424242424244,
        "avgNumericDistance": 0.3433355291727472,
        "avgFScore": 0.4919999999999999
      }
    }
  }
}