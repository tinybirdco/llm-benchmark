DESCRIPTION > 
    event_type Enum('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4,'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22)

    action Enum('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20)

    ref_type Enum('none' = 0, 'branch' = 1, 'tag' = 2, 'repository' = 3, 'unknown' = 4)

    author_association Enum('NONE' = 0, 'CONTRIBUTOR' = 1, 'OWNER' = 2, 'COLLABORATOR' = 3, 'MEMBER' = 4, 'MANNEQUIN' = 5)

    mergeable_state Enum('unknown' = 0, 'dirty' = 1, 'clean' = 2, 'unstable' = 3, 'draft' = 4, 'blocked' = 5)

    review_state Enum('none' = 0, 'approved' = 1, 'changes_requested' = 2, 'commented' = 3, 'dismissed' = 4, 'pending' = 5)

SCHEMA >
    file_time DateTime `json:$.file_time`,
    event_type LowCardinality(String) `json:$.event_type`,
    actor_login LowCardinality(String) `json:$.actor_login` DEFAULT '',
    repo_name LowCardinality(String) `json:$.repo_name` DEFAULT '',
    created_at DateTime `json:$.created_at`,
    updated_at DateTime `json:$.updated_at`,
    action LowCardinality(String) `json:$.action`,
    comment_id UInt64 `json:$.comment_id`,
    body Nullable(String) `json:$.body`,
    path Nullable(String) `json:$.path`,
    position Int32 `json:$.position`,
    line Int32 `json:$.line`,
    ref Nullable(String) `json:$.ref`,
    ref_type LowCardinality(String) `json:$.ref_type`,
    creator_user_login Nullable(String) `json:$.creator_user_login`,
    number Int32 `json:$.number`,
    title Nullable(String) `json:$.title`,
    labels Array(LowCardinality(String)) `json:$.labels[:]`,
    state LowCardinality(String) `json:$.state`,
    locked UInt8 `json:$.locked`,
    assignee LowCardinality(String) `json:$.assignee`,
    assignees Array(LowCardinality(String)) `json:$.assignees[:]`,
    comments UInt32 `json:$.comments`,
    author_association LowCardinality(String) `json:$.author_association`,
    closed_at DateTime `json:$.closed_at`,
    merged_at DateTime `json:$.merged_at`,
    merge_commit_sha String `json:$.merge_commit_sha`,
    requested_reviewers Array(LowCardinality(String)) `json:$.requested_reviewers[:]`,
    requested_teams Array(LowCardinality(String)) `json:$.requested_teams[:]`,
    head_ref LowCardinality(String) `json:$.head_ref`,
    head_sha String `json:$.head_sha`,
    base_ref LowCardinality(String) `json:$.base_ref`,
    base_sha String `json:$.base_sha`,
    merged UInt8 `json:$.merged`,
    mergeable UInt8 `json:$.mergeable`,
    rebaseable UInt8 `json:$.rebaseable`,
    mergeable_state LowCardinality(String) `json:$.mergeable_state`,
    merged_by LowCardinality(String) `json:$.merged_by`,
    review_comments UInt32 `json:$.review_comments`,
    maintainer_can_modify UInt8 `json:$.maintainer_can_modify`,
    commits UInt32 `json:$.commits`,
    additions UInt32 `json:$.additions`,
    deletions UInt32 `json:$.deletions`,
    changed_files UInt32 `json:$.changed_files`,
    diff_hunk String `json:$.diff_hunk`,
    original_position UInt32 `json:$.original_position`,
    commit_id String `json:$.commit_id`,
    original_commit_id String `json:$.original_commit_id`,
    push_size UInt32 `json:$.push_size`,
    push_distinct_size UInt32 `json:$.push_distinct_size`,
    member_login LowCardinality(String) `json:$.member_login`,
    release_tag_name String `json:$.release_tag_name`,
    release_name String `json:$.release_name`,
    review_state LowCardinality(String) `json:$.review_state`

ENGINE "MergeTree"
ENGINE_PARTITION_KEY "toYear(created_at)"
ENGINE_SORTING_KEY "event_type, repo_name, created_at"
